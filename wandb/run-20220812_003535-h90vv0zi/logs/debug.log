2022-08-12 00:35:35,646 INFO    MainThread:36382 [wandb_setup.py:_flush():76] Configure stats pid to 36382
2022-08-12 00:35:35,646 INFO    MainThread:36382 [wandb_setup.py:_flush():76] Loading settings from /mmfs1/home/tjung2/.config/wandb/settings
2022-08-12 00:35:35,646 INFO    MainThread:36382 [wandb_setup.py:_flush():76] Loading settings from /mmfs1/gscratch/ark/tjung2/continual-knowledge-learning/wandb/settings
2022-08-12 00:35:35,647 INFO    MainThread:36382 [wandb_setup.py:_flush():76] Loading settings from environment variables: {}
2022-08-12 00:35:35,647 INFO    MainThread:36382 [wandb_setup.py:_flush():76] Inferring run settings from compute environment: {'program_relpath': 'run.py', 'program': 'run.py'}
2022-08-12 00:35:35,648 INFO    MainThread:36382 [wandb_init.py:_log_setup():461] Logging user logs to /mmfs1/gscratch/ark/tjung2/continual-knowledge-learning/wandb/run-20220812_003535-h90vv0zi/logs/debug.log
2022-08-12 00:35:35,648 INFO    MainThread:36382 [wandb_init.py:_log_setup():462] Logging internal logs to /mmfs1/gscratch/ark/tjung2/continual-knowledge-learning/wandb/run-20220812_003535-h90vv0zi/logs/debug-internal.log
2022-08-12 00:35:35,648 INFO    MainThread:36382 [wandb_init.py:init():495] calling init triggers
2022-08-12 00:35:35,648 INFO    MainThread:36382 [wandb_init.py:init():498] wandb.init called with sweep_config: {}
config: {}
2022-08-12 00:35:35,648 INFO    MainThread:36382 [wandb_init.py:init():548] starting backend
2022-08-12 00:35:35,648 INFO    MainThread:36382 [backend.py:_multiprocessing_setup():97] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
2022-08-12 00:35:35,712 INFO    MainThread:36382 [backend.py:ensure_launched():217] starting backend process...
2022-08-12 00:35:35,762 INFO    MainThread:36382 [backend.py:ensure_launched():222] started backend process with pid: 37712
2022-08-12 00:35:35,764 INFO    MainThread:36382 [wandb_init.py:init():558] backend started and connected
2022-08-12 00:35:35,768 INFO    MainThread:36382 [wandb_init.py:init():634] updated telemetry
2022-08-12 00:35:35,884 INFO    MainThread:36382 [wandb_init.py:init():665] communicating run to backend with 30 second timeout
2022-08-12 00:35:38,083 INFO    MainThread:36382 [wandb_run.py:_on_init():1919] communicating current version
2022-08-12 00:35:38,117 INFO    MainThread:36382 [wandb_run.py:_on_init():1923] got version response upgrade_message: "wandb version 0.13.1 is available!  To upgrade, please run:\n $ pip install wandb --upgrade"

2022-08-12 00:35:38,117 INFO    MainThread:36382 [wandb_init.py:init():700] starting run threads in backend
2022-08-12 00:35:41,872 INFO    MainThread:36382 [wandb_run.py:_console_start():1893] atexit reg
2022-08-12 00:35:41,873 INFO    MainThread:36382 [wandb_run.py:_redirect():1766] redirect: SettingsConsole.REDIRECT
2022-08-12 00:35:41,873 INFO    MainThread:36382 [wandb_run.py:_redirect():1771] Redirecting console.
2022-08-12 00:35:41,880 INFO    MainThread:36382 [wandb_run.py:_redirect():1827] Redirects installed.
2022-08-12 00:35:41,880 INFO    MainThread:36382 [wandb_init.py:init():732] run started, returning control to user process
2022-08-12 00:35:41,883 INFO    MainThread:36382 [wandb_run.py:_config_callback():1131] config_cb None None {'output_dir': 'outputs/T5_small_templama(2010)_lr.001_baseline', 'dataset': 'templama', 'dataset_version': '2010', 'prefix': True, 'split_num': 1, 'split': 0, 'model_name_or_path': 'google/t5-small-ssm', 'method': 'baseline', 'freeze_level': 0, 'mode': 'pretrain', 'tokenizer_name_or_path': 'google/t5-small-ssm', 'max_input_length': 50, 'max_output_length': 25, 'freeze_encoder': False, 'freeze_embeds': False, 'learning_rate': 0.001, 'weight_decay': 0.0, 'adam_epsilon': 1e-08, 'warmup_steps': 0, 'train_batch_size': 5, 'eval_batch_size': 5, 'num_train_epochs': 8, 'gradient_accumulation_steps': 3, 'n_gpu': 1, 'num_workers': 4, 'resume_from_checkpoint': 'None', 'use_lr_scheduling': True, 'val_check_interval': 1.0, 'n_val': -1, 'n_train': -1, 'n_test': -1, 'early_stop_callback': False, 'use_deepspeed': False, 'opt_level': 'O1', 'max_grad_norm': 0.5, 'seed': 42, 'check_validation_only': False, 'checkpoint_path': '', 'accelerator': 'ddp', 'output_log': 'None'}
2022-08-12 00:43:23,358 INFO    MainThread:36382 [wandb_run.py:_config_callback():1131] config_cb None None {'output_dir': 'outputs/T5_small_templama(2010)_lr.001_baseline', 'dataset': 'templama', 'dataset_version': '2010', 'prefix': True, 'split_num': 1, 'split': 0, 'model_name_or_path': 'google/t5-small-ssm', 'method': 'baseline', 'freeze_level': 0, 'mode': 'pretrain', 'tokenizer_name_or_path': 'google/t5-small-ssm', 'max_input_length': 50, 'max_output_length': 25, 'freeze_encoder': False, 'freeze_embeds': False, 'learning_rate': 0.001, 'weight_decay': 0.0, 'adam_epsilon': 1e-08, 'warmup_steps': 0, 'train_batch_size': 5, 'eval_batch_size': 5, 'num_train_epochs': 8, 'gradient_accumulation_steps': 3, 'n_gpu': 1, 'num_workers': 4, 'resume_from_checkpoint': 'None', 'use_lr_scheduling': True, 'val_check_interval': 1.0, 'n_val': -1, 'n_train': -1, 'n_test': -1, 'early_stop_callback': False, 'use_deepspeed': False, 'opt_level': 'O1', 'max_grad_norm': 0.5, 'seed': 42, 'check_validation_only': False, 'checkpoint_path': '', 'accelerator': 'ddp', 'output_log': 'None'}
2022-08-12 00:43:39,667 INFO    MainThread:36382 [wandb_run.py:_atexit_cleanup():1862] got exitcode: 0
2022-08-12 00:43:39,669 INFO    MainThread:36382 [wandb_run.py:_restore():1834] restore
2022-08-12 00:43:41,994 INFO    MainThread:36382 [wandb_run.py:_on_finish():1991] got exit ret: file_counts {
  wandb_count: 1
  media_count: 10
  artifact_count: 9
}
pusher_stats {
  uploaded_bytes: 874057
  total_bytes: 874057
}

2022-08-12 00:43:42,161 INFO    MainThread:36382 [wandb_run.py:_on_finish():1991] got exit ret: file_counts {
  wandb_count: 1
  media_count: 10
  artifact_count: 9
}
pusher_stats {
  uploaded_bytes: 874057
  total_bytes: 874057
}

2022-08-12 00:43:42,368 INFO    MainThread:36382 [wandb_run.py:_on_finish():1991] got exit ret: file_counts {
  wandb_count: 6
  media_count: 10
  artifact_count: 9
}
pusher_stats {
  uploaded_bytes: 874057
  total_bytes: 884639
}

2022-08-12 00:43:42,470 INFO    MainThread:36382 [wandb_run.py:_on_finish():1991] got exit ret: file_counts {
  wandb_count: 6
  media_count: 10
  artifact_count: 9
}
pusher_stats {
  uploaded_bytes: 874057
  total_bytes: 884639
}

2022-08-12 00:43:42,571 INFO    MainThread:36382 [wandb_run.py:_on_finish():1991] got exit ret: file_counts {
  wandb_count: 6
  media_count: 10
  artifact_count: 9
}
pusher_stats {
  uploaded_bytes: 884639
  total_bytes: 884639
}

2022-08-12 00:43:42,672 INFO    MainThread:36382 [wandb_run.py:_on_finish():1991] got exit ret: file_counts {
  wandb_count: 6
  media_count: 10
  artifact_count: 9
}
pusher_stats {
  uploaded_bytes: 884639
  total_bytes: 884639
}

2022-08-12 00:43:42,773 INFO    MainThread:36382 [wandb_run.py:_on_finish():1991] got exit ret: file_counts {
  wandb_count: 6
  media_count: 10
  artifact_count: 9
}
pusher_stats {
  uploaded_bytes: 884639
  total_bytes: 884639
}

2022-08-12 00:43:42,874 INFO    MainThread:36382 [wandb_run.py:_on_finish():1991] got exit ret: file_counts {
  wandb_count: 6
  media_count: 10
  artifact_count: 9
}
pusher_stats {
  uploaded_bytes: 884639
  total_bytes: 884639
}

2022-08-12 00:43:43,753 INFO    MainThread:36382 [wandb_run.py:_on_finish():1991] got exit ret: file_counts {
  wandb_count: 6
  media_count: 10
  artifact_count: 9
}
pusher_stats {
  uploaded_bytes: 884639
  total_bytes: 884639
}

2022-08-12 00:43:43,932 INFO    MainThread:36382 [wandb_run.py:_on_finish():1991] got exit ret: done: true
exit_result {
}
file_counts {
  wandb_count: 6
  media_count: 10
  artifact_count: 9
}
pusher_stats {
  uploaded_bytes: 884639
  total_bytes: 884639
}
local_info {
}

2022-08-12 00:43:45,036 INFO    MainThread:36382 [wandb_run.py:_footer_history_summary_info():3099] rendering history
2022-08-12 00:43:45,036 INFO    MainThread:36382 [wandb_run.py:_footer_history_summary_info():3131] rendering summary
2022-08-12 00:43:45,038 INFO    MainThread:36382 [wandb_run.py:_footer_sync_info():3055] logging synced files
