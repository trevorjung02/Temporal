#!/bin/bash
#SBATCH --job-name=data-proc
#SBATCH --partition=gpu-2080ti
#SBATCH --account=ark
#SBATCH --nodes=1
#SBATCH --cpus-per-task=8
#SBATCH --mem=32G
#SBATCH --gres=gpu:1
#SBATCH --time=12:00:00 
#SBATCH --mail-type=ALL
#SBATCH --mail-user=tjung2@uw.edu

# I use source to initialize conda into the right environment.
cat $0
echo "--------------------"

source ~/.bashrc
conda activate ckl

# python run.py --config configs/templama/training/t5_kadapters_yearly_2freeze.json -checkpoint_path outputs/wmtbaseline_full/epoch=0-f1_score=0.151-em_score=0.000.ckpt

# python run.py --config configs/wmt/training/t5_kadapters_yearly_2freeze.json -checkpoint_path outputs/wmtkadapter_2010_2freeze_158_128/epoch=8-f1_score=0.084-em_score=0.000.ckpt

# python preprocess_wmt_train_data.py 2016
# python preprocess_wmt_train_data.py 2017
# python preprocess_wmt_train_data.py 2018

# python run.py --config configs/templama/training/t5_kadapters_soft_full.json -checkpoint_path outputs/wmtkadapter_2010_2freeze_158_128/epoch=8-f1_score=0.084-em_score=0.000.ckpt

# python run.py --config configs/templama/evaluation/t5_baseline_full.json -val_data 2010

# python run.py --config configs/templama/evaluation/t5_kadapters_soft_full.json -val_data 2010

python test.py
--------------------
Read csv: 3.2009947910000003 seconds
Create sentences: 0.0009688380000003605 seconds
['ner']
Run spacy on sentences: 1.1567724539999986 seconds

[]
S2Fuc2FzOiBHb3Zlcm5vciBTaWducyBCYW4gb24gQmlhcyBCYXNlZCBvbiBTZXh1YWxpdHkKR292LiBLYXRobGVlbiBTZWJlbGl1cywgYSBEZW1vY3JhdCwgc2lnbmVkIGFuIGV4ZWN1dGl2ZSBvcmRlciBwcm9oaWJpdGluZyBtb3N0IHN0YXRlIGVtcGxveWVlcyBmcm9tIGRpc2NyaW1pbmF0aW9uIG9uIHRoZSBiYXNpcyBvZiBzZXh1YWwgb3JpZW50YXRpb24uClRoZSBvcmRlciByZXF1aXJlcyBhZ2VuY2llcyB1bmRlciB0aGUgZ292ZXJub3IncyBkaXJlY3QgY29udHJvbCB0byBlbnN1cmUgdGhleSBoYXZlIHByb2dyYW1zIHRvIHByZXZlbnQgaGFyYXNzbWVudCBhZ2FpbnN0IGdheSBtZW4sIGxlc2JpYW5zLCBiaXNleHVhbHMgYW5kIHBlb3BsZSB3aG8gaGF2ZSBoYWQgc3VyZ2VyeSBmb3Igc2V4IGNoYW5nZXMuCkl0IGNvdmVycyAyNSwwMDAgb2YgdGhlIDQxLDAwMCBzdGF0ZSBlbXBsb3llZXMuCg==
[]
SGFydmFyZCBNb25leSBNYW5hZ2VyIHRvIFJldHVybiB0byBQaW1jbwoxMSAoUmV1dGVycykgLSBNb2hhbWVkIEVsLUVyaWFuLCB3aG8gaGFzIG1hbmFnZWQgSGFydmFyZCBVbml2ZXJzaXR5wpJzICQzNC45IGJpbGxpb24gZW5kb3dtZW50IHNpbmNlIDIwMDYsIGlzIHJlc2lnbmluZyB0byByZXR1cm4gdG8gd29yayBhdCBQYWNpZmljIEludmVzdG1lbnQgTWFuYWdlbWVudCBDb21wYW55LgpNci4gRWwtRXJpYW4sIHdobyB0b29rIHRoZSBIYXJ2YXJkIGpvYiBhZnRlciBhIGxlbmd0aHkgc2VhcmNoLCB3aWxsIHJlam9pbiBQaW1jbywgb25lIG9mIHRoZSB3b3JsZMKScyBiaWdnZXN0IGZpeGVkIGluY29tZSBtYW5hZ2VycywgYXMgY28tY2hpZWYgZXhlY3V0aXZlIG9mZmljZXIgYW5kIGNvLWNoaWVmIGludmVzdG1lbnQgb2ZmaWNlciwgSGFydmFyZCBzYWlkIHRvZGF5LgpNci4gRWwtRXJpYW4gaXMgcmV0dXJuaW5nIHRvIFNvdXRoZXJuIENhbGlmb3JuaWEgdG8gYmUgY2xvc2VyIHRvIGhpcyBmYW1pbHkuCkhlIHdpbGwgc3RlcCBkb3duIGF0IHRoZSBlbmQgb2YgdGhlIHllYXIsIHRoZSB1bml2ZXJzaXR5IHNhaWQgaW4gYSBzdGF0ZW1lbnQuCkxhc3QgbW9udGgsIEhhcnZhcmQsIGFscmVhZHkgQW1lcmljYcKScyByaWNoZXN0IHVuaXZlcnNpdHksIHNhaWQgaXRzIGVuZG93bWVudCByZXR1cm5lZCAyMyBwZXJjZW50IGZvciB0aGUgeWVhciBlbmRlZCBpbiBKdW5lLCBzaWduaWZpY2FudGx5IGFib3ZlIHRoZSAxNi43IHBlcmNlbnQgZ2FpbiBwb3N0ZWQgZm9yIDIwMDYuCk1yLiBFbC1FcmlhbiBpcyBhIHdlbGwta25vd24gcmVzcGVjdGVkIGVtZXJnaW5nIG1hcmtldHMgc3BlY2lhbGlzdCBhbmQgSGFydmFyZMKScyBiZXRzIG9uIHRob3NlIG1hcmtldHMgd2VyZSBpbnN0cnVtZW50YWwgaW4gYm9vc3RpbmcgcmV0dXJucywgTXIuIEVsLUVyaWFuIHNhaWQgbGVzcyB0aGFuIGEgbW9udGggYWdvLgpIZSB0b29rIHRoZSBqb2IgYXQgSGFydmFyZCBpbiBlYXJseSAyMDA2IGFmdGVyIEphY2sgTWV5ZXIsIHdobyBoYWQgYmVlbiBIYXJ2YXJkwpJzIHRvcCBpbnZlc3RtZW50IG9mZmljZXIgZm9yIHJvdWdobHkgMTUgeWVhcnMgbGVmdCB0byBzdGFydCBhIGhlZGdlIGZ1bmQuCkZvciB5ZWFycyB0aGUgdW5pdmVyc2l0ecKScyBtb25leSBtYW5hZ2VtZW50IGFybSBoYWQgYmVlbiBkb2dnZWQgYnkgY29tcGxhaW50cyBhYm91dCB0aGUgbXVsdGltaWxsaW9uLWRvbGxhciBwYXkgcGFja2FnZXMgb2YgaXRzIG1hbmFnZXJzIGFuZCwgdGhpcyBzdW1tZXIsIG9uZSBvZiBpdHMgYmV0cyBzb3VyZWQgd2hlbiBTb3dvb2QgQ2FwaXRhbCwgYSBoZWRnZSBmdW5kIHRoZSBzY2hvb2wgaW52ZXN0ZWQgd2l0aCwgY29sbGFwc2VkLgo=
[]
QSBTd2VlcCBpbiBDaW5jaW5uYXRpIEVuZHMgdGhlIENhcmRpbmFscyIgMC03IFRyaXAKSm9leSBWb3R0byBoaXQgYSB0d28tcnVuIGRvdWJsZSBhbmQgRGF2aWQgUm9zcyBoYWQgYSB0d28tcnVuIGhvbWVyIHllc3RlcmRheSwgc2VuZGluZyB0aGUgQ2luY2lubmF0aSBSZWRzIHRvIGEgNS00IHZpY3RvcnkgdGhhdCBsZWZ0IHRoZSBTdC4gTG91aXMgQ2FyZGluYWxzIHdpbmxlc3Mgb24gdGhlaXIgc2V2ZW4tZ2FtZSB0cmlwLgpUaGUgQ2FyZGluYWxzIGVuZGVkIHRoZSB0cmlwIGJ5IGJlaW5nIHN3ZXB0IGluIGEgdGhyZWUtZ2FtZSBzZXJpZXMgaW4gQ2luY2lubmF0aSBmb3IgdGhlIGZpcnN0IHRpbWUgc2luY2UgSnVseSAxOTk4LgpJdCB3YXMgdGhlaXIgZmlyc3Qgd2lubGVzcyB0cmlwIG9mIGF0IGxlYXN0IHNldmVuIGdhbWVzIHNpbmNlIE1heSAxOTcyLCB3aGVuIHRoZXkgd2VudCAwLTcgaW4gQ2luY2lubmF0aSBhbmQgUGl0dHNidXJnaC4KVGhlIGxhdGVzdCBsb3NzIGRyb3BwZWQgU3QuIExvdWlzIGZvdXIgYW5kIGEgaGFsZiBnYW1lcyBiZWhpbmQgdGhlIE1pbHdhdWtlZSBCcmV3ZXJzIGFuZCB0aGUgQ2hpY2FnbyBDdWJzLCB3aG8gc2hhcmUgdGhlIE5hdGlvbmFsIExlYWd1ZSBDZW50cmFsIGxlYWQuCk9SSU9MRVMgMywgQU5HRUxTIDAgSm9uIExlaWNlc3RlciBhbmQgdGhyZWUgcmVsaWV2ZXJzIGNvbWJpbmVkIG9uIGEgZml2ZS1oaXR0ZXIgYW5kIFNjb3R0IE1vb3JlIGRyb3ZlIHR3byBydW5zIHRvIGxlYWQgQmFsdGltb3JlIGF0IGhvbWUuClRoZSBPcmlvbGVzIHdvbiB0aGUgZmluYWxlIG9mIHRoZSBzZXJpZXMgYWZ0ZXIgbG9zaW5nIHRoZSBmaXJzdCB0d28gZ2FtZXMgYnkgYSBjb21iaW5lZCBzY29yZSBvZiAyOC0xMS4KVGhleSB3b24gZm9yIGp1c3QgdGhlIGZvdXJ0aCB0aW1lIGluIHRoZWlyIHBhc3QgMjIgZ2FtZXMuCkhBTEwgSU5ESUNURUQgT04gU0VYIENIQVJHRVMgVGhlIGZvcm1lciBvdXRmaWVsZGVyIE1lbCBIYWxsIHdhcyBpbmRpY3RlZCBXZWRuZXNkYXkgb24gY2hhcmdlcyB0aGF0IGhlIHNleHVhbGx5IGFzc2F1bHRlZCB0d28gZ2lybHMgwpcgYWdlcyAxMiBhbmQgMTQgwpcgd2hvIHBsYXllZCBvbiBiYXNrZXRiYWxsIHRlYW1zIGhlIGNvYWNoZWQgaW4gdGhlIDE5OTBzLgpIYWxsLCA0NiwgY291bGQgZmFjZSBsaWZlIGluIHByaXNvbiBpZiBjb252aWN0ZWQsIHNhaWQgS2ltIETCkkF2aWdub24sIGFuIGFzc2lzdGFudCBkaXN0cmljdCBhdHRvcm5leSBpbiBUYXJyYW50IENvdW50eSwgVGV4LgpIYWxsIHdhcyBpbmRpY3RlZCBvbiB0aHJlZSBjb3VudHMgb2YgYWdncmF2YXRlZCBzZXh1YWwgYXNzYXVsdCBvZiBhIGNoaWxkLCB0d28gY291bnRzIG9mIHNleHVhbCBhc3NhdWx0IG9mIGEgY2hpbGQgYW5kIHR3byBjb3VudHMgb2YgaW5kZWNlbmN5L2ZvbmRsaW5nLgpIYWxsIHBsYXllZCBmb3IgdGhlIFlhbmtlZXMsIENoaWNhZ28gQ3VicywgQ2xldmVsYW5kIEluZGlhbnMgYW5kIFNhbiBGcmFuY2lzY28gR2lhbnRzIGluIGEgMTMteWVhciBjYXJlZXIuClNVU1BFTlNJT05TIEZPUiBUSEUgT1JJT0xFUyBCYWx0aW1vcmUgTWFuYWdlciBEYXZlIFRyZW1ibGV5IHdhcyBzdXNwZW5kZWQgZm9yIHRocmVlIGdhbWVzIGZvciBhbiBhbmltYXRlZCB0aXJhZGUgdGhhdCBmb2xsb3dlZCBhbiBlamVjdGlvbiBhZ2FpbnN0IHRoZSBMb3MgQW5nZWxlcyBBbmdlbHMgb24gV2VkbmVzZGF5LgpPcmlvbGVzIHBpdGNoZXIgRGFuaWVsIENhYnJlcmEgd2FzIHN1c3BlbmRlZCBmb3Igc2l4IGdhbWVzIGZvciBpbnRlbnRpb25hbGx5IHRocm93aW5nIGF0IHRoZSBoZWFkIG9mIEJvc3RvbsKScyBEdXN0aW4gUGVkcm9pYSBsYXN0IHdlZWsgYW5kIGhpcyBwYXJ0IGluIHRoZSBiZW5jaC1jbGVhcmluZyBpbmNpZGVudCB0aGF0IGZvbGxvd2VkLgpUcmVtYmxleSBiZWdhbiBzZXJ2aW5nIGhpcyBzdXNwZW5zaW9uIGxhc3QgbmlnaHQgYWdhaW5zdCB0aGUgQW5nZWxzLgpDYWJyZXJhIHdpbGwgYXBwZWFsIGhpcyBzdXNwZW5zaW9uIGFuZCB3aWxsIGJlIGFibGUgdG8gcGxheSB1bnRpbCB0aGUgYXBwZWFsIGlzIGFkZHJlc3NlZC4K
[(QSBTd2VlcCBpbiBDaW5jaW5uYXRpIEVuZHMgdGhlIENhcmRpbmFscyIgMC03IFRyaXAKSm9leSBWb3R0byBoaXQgYSB0d28tcnVuIGRvdWJsZSBhbmQgRGF2aWQgUm9zcyBoYWQgYSB0d28tcnVuIGhvbWVyIHllc3RlcmRheSwgc2VuZGluZyB0aGUgQ2luY2lubmF0aSBSZWRzIHRvIGEgNS00IHZpY3RvcnkgdGhhdCBsZWZ0IHRoZSBTdC4gTG91aXMgQ2FyZGluYWxzIHdpbmxlc3Mgb24gdGhlaXIgc2V2ZW4tZ2FtZSB0cmlwLgpUaGUgQ2FyZGluYWxzIGVuZGVkIHRoZSB0cmlwIGJ5IGJlaW5nIHN3ZXB0IGluIGEgdGhyZWUtZ2FtZSBzZXJpZXMgaW4gQ2luY2lubmF0aSBmb3IgdGhlIGZpcnN0IHRpbWUgc2luY2UgSnVseSAxOTk4LgpJdCB3YXMgdGhlaXIgZmlyc3Qgd2lubGVzcyB0cmlwIG9mIGF0IGxlYXN0IHNldmVuIGdhbWVzIHNpbmNlIE1heSAxOTcyLCB3aGVuIHRoZXkgd2VudCAwLTcgaW4gQ2luY2lubmF0aSBhbmQgUGl0dHNidXJnaC4KVGhlIGxhdGVzdCBsb3NzIGRyb3BwZWQgU3QuIExvdWlzIGZvdXIgYW5kIGEgaGFsZiBnYW1lcyBiZWhpbmQgdGhlIE1pbHdhdWtlZSBCcmV3ZXJzIGFuZCB0aGUgQ2hpY2FnbyBDdWJzLCB3aG8gc2hhcmUgdGhlIE5hdGlvbmFsIExlYWd1ZSBDZW50cmFsIGxlYWQuCk9SSU9MRVMgMywgQU5HRUxTIDAgSm9uIExlaWNlc3RlciBhbmQgdGhyZWUgcmVsaWV2ZXJzIGNvbWJpbmVkIG9uIGEgZml2ZS1oaXR0ZXIgYW5kIFNjb3R0IE1vb3JlIGRyb3ZlIHR3byBydW5zIHRvIGxlYWQgQmFsdGltb3JlIGF0IGhvbWUuClRoZSBPcmlvbGVzIHdvbiB0aGUgZmluYWxlIG9mIHRoZSBzZXJpZXMgYWZ0ZXIgbG9zaW5nIHRoZSBmaXJzdCB0d28gZ2FtZXMgYnkgYSBjb21iaW5lZCBzY29yZSBvZiAyOC0xMS4KVGhleSB3b24gZm9yIGp1c3QgdGhlIGZvdXJ0aCB0aW1lIGluIHRoZWlyIHBhc3QgMjIgZ2FtZXMuCkhBTEwgSU5ESUNURUQgT04gU0VYIENIQVJHRVMgVGhlIGZvcm1lciBvdXRmaWVsZGVyIE1lbCBIYWxsIHdhcyBpbmRpY3RlZCBXZWRuZXNkYXkgb24gY2hhcmdlcyB0aGF0IGhlIHNleHVhbGx5IGFzc2F1bHRlZCB0d28gZ2lybHMgwpcgYWdlcyAxMiBhbmQgMTQgwpcgd2hvIHBsYXllZCBvbiBiYXNrZXRiYWxsIHRlYW1zIGhlIGNvYWNoZWQgaW4gdGhlIDE5OTBzLgpIYWxsLCA0NiwgY291bGQgZmFjZSBsaWZlIGluIHByaXNvbiBpZiBjb252aWN0ZWQsIHNhaWQgS2ltIETCkkF2aWdub24sIGFuIGFzc2lzdGFudCBkaXN0cmljdCBhdHRvcm5leSBpbiBUYXJyYW50IENvdW50eSwgVGV4LgpIYWxsIHdhcyBpbmRpY3RlZCBvbiB0aHJlZSBjb3VudHMgb2YgYWdncmF2YXRlZCBzZXh1YWwgYXNzYXVsdCBvZiBhIGNoaWxkLCB0d28gY291bnRzIG9mIHNleHVhbCBhc3NhdWx0IG9mIGEgY2hpbGQgYW5kIHR3byBjb3VudHMgb2YgaW5kZWNlbmN5L2ZvbmRsaW5nLgpIYWxsIHBsYXllZCBmb3IgdGhlIFlhbmtlZXMsIENoaWNhZ28gQ3VicywgQ2xldmVsYW5kIEluZGlhbnMgYW5kIFNhbiBGcmFuY2lzY28gR2lhbnRzIGluIGEgMTMteWVhciBjYXJlZXIuClNVU1BFTlNJT05TIEZPUiBUSEUgT1JJT0xFUyBCYWx0aW1vcmUgTWFuYWdlciBEYXZlIFRyZW1ibGV5IHdhcyBzdXNwZW5kZWQgZm9yIHRocmVlIGdhbWVzIGZvciBhbiBhbmltYXRlZCB0aXJhZGUgdGhhdCBmb2xsb3dlZCBhbiBlamVjdGlvbiBhZ2FpbnN0IHRoZSBMb3MgQW5nZWxlcyBBbmdlbHMgb24gV2VkbmVzZGF5LgpPcmlvbGVzIHBpdGNoZXIgRGFuaWVsIENhYnJlcmEgd2FzIHN1c3BlbmRlZCBmb3Igc2l4IGdhbWVzIGZvciBpbnRlbnRpb25hbGx5IHRocm93aW5nIGF0IHRoZSBoZWFkIG9mIEJvc3RvbsKScyBEdXN0aW4gUGVkcm9pYSBsYXN0IHdlZWsgYW5kIGhpcyBwYXJ0IGluIHRoZSBiZW5jaC1jbGVhcmluZyBpbmNpZGVudCB0aGF0IGZvbGxvd2VkLgpUcmVtYmxleSBiZWdhbiBzZXJ2aW5nIGhpcyBzdXNwZW5zaW9uIGxhc3QgbmlnaHQgYWdhaW5zdCB0aGUgQW5nZWxzLgpDYWJyZXJhIHdpbGwgYXBwZWFsIGhpcyBzdXNwZW5zaW9uIGFuZCB3aWxsIGJlIGFibGUgdG8gcGxheSB1bnRpbCB0aGUgYXBwZWFsIGlzIGFkZHJlc3NlZC4K, 'PRODUCT')]
TWVyY3VyeSBGb3JjZXMgRGVjaWRpbmcgR2FtZSAtIE5ldyBZb3JrIFRpbWVzCjEzIChBUCkgwpcgQ2FwcGllIFBvbmRleHRlciBzY29yZWQgYSBnYW1lLWhpZ2ggMjYgcG9pbnRzLCBpbmNsdWRpbmcgYSBkcml2aW5nIGJhbmsgc2hvdCB3aXRoIDIxIHNlY29uZHMgdG8gcGxheSwgYW5kIHRoZSBQaG9lbml4IE1lcmN1cnkgZGVmZWF0ZWQgdGhlIERldHJvaXQgU2hvY2ssIDc3LTc2LCBvbiBUaHVyc2RheSBuaWdodCB0byBmb3JjZSBhIGRlY2lkaW5nIGZpZnRoIGdhbWUgaW4gdGhlIFcuTi5CLkEuIGZpbmFscy4KQWZ0ZXIgRGV0cm9pdMKScyBEZWFubmEgTm9sYW4gaGl0IGEgMTYtZm9vdGVyLCBQb25kZXh0ZXIgc2NvcmVkIHRvIGdpdmUgUGhvZW5peCBhIDc3LTc2IGxlYWQuCkEgbWlzcyBieSBEZXRyb2l0wpJzIFNoYW5ub24gSm9obnNvbiBhdCB0aGUgYnV6emVyIHNwYXJrZWQgYSB3aWxkIGNlbGVicmF0aW9uIGJ5IHRoZSBNZXJjdXJ5LgpHYW1lIDUgaXMgc2NoZWR1bGVkIGZvciBTdW5kYXkgaW4gRGV0cm9pdC4K
[(K, 'ORG')]

[(MSBMYWRpZXPCkiBEZXRlY3RpdmUgQWdlbmN5CkFTIEFsZXhhbmRlciBNY0NhbGwgU21pdGggd3JpdGVzIGluIHRoZSBvcGVuaW5nIG9mIGhpcyBiZXN0LXNlbGxpbmcgbm92ZWwgwpNUaGUgTm8uCjEgTGFkaWVzwpIgRGV0ZWN0aXZlIEFnZW5jeSzClCDCk01tYSBSYW1vdHN3ZSBoYWQgYSBkZXRlY3RpdmUgYWdlbmN5IGluIEJvdHN3YW5hLCBhdCB0aGUgZm9vdCBvZiBLZ2FsZSBIaWxsLsKUIFRob3VnaCBoZXIgY2FzZXMgdGVuZCB0byBkd2VsbCBvbiBzaW5zIGxpa2UgcGhpbGFuZGVyaW5nIGFuZCBsb3ctbGV2ZWwgaW5zdXJhbmNlIHNjYW1zLCBoZXIgZ3JlYXRlc3QgbXlzdGVyeSB0aGVzZSBkYXlzIGlzIHdoZXRoZXIgaGVyIHN0b3J5IGNhbiB0cmFuc2xhdGUgdG8gZmlsbS4KUHJlY2lvdXMgUmFtb3Rzd2UgaGFzIG5vIGJsdWUgc3RlZWwgcGlzdG9sLCBqdXN0IHR3byBkZXNrcywgdHdvIGNoYWlycywgYSB0ZWxlcGhvbmUgYW5kIGFuIG9sZCB0eXBld3JpdGVyLgpIZXIgdGlueSB3aGl0ZSB2YW4gaXMgaW5jYXBhYmxlIG9mIGhpZ2gtc3BlZWQgY2hhc2VzIGFuZCBmaWVyeSBzdHVudHMuClRoZW4gdGhlcmUgaXMgTW1hIFJhbW90c3dlIGhlcnNlbGYuCk1tYSBpcyBhIGxvY2FsIGhvbm9yaWZpYy4KRmlsbSBzbGV1dGhzIHVzdWFsbHkgZXh1ZGUgY2hpc2VsZWQgc2V4aW5lc3MgYW5kIGEgbm9pciBwZXJzb25hLgpCdXQgYXMgTXIuIE1jQ2FsbCBTbWl0aCBwdXRzIGl0LCBQcmVjaW91cyBSYW1vdHN3ZSBpcyDCk3RoZSBmYXQgbGFkeSBkZXRlY3RpdmXClDogcm91bmRlZCwgbm90IGNoaXNlbGVkOyBzb2Z0aGVhcnRlZCwgbm90IGRhcmsuCldvdWxkIGFueW9uZSB3YXRjaCBhIGZpbG0gYWJvdXQgYSDCk3RyYWRpdGlvbmFsbHkgYnVpbHTClCAoYXMgc2hlIHB1dHMgaXQpIHNoYW11cyB3aG9zZSBtYWluIHByZW9jY3VwYXRpb24gaXMgY29udGVtcGxhdGluZyBoZXIgY2FzZXMgdW5kZXIgYW4gYWNhY2lhIHRyZWU, 'PERSON')]

[(, 'ORG')]

[(, 'ORG')]
U3RhcnRpbmcgZm9yIFdlYmIsIE93aW5ncyBQdXRzIFN0b3AgdG8gQXJpem9uYSdzIFNraWQKTWljYWggT3dpbmdzIHN0YXJ0ZWQgaW4gcGxhY2Ugb2YgdGhlIGluanVyZWQgQnJhbmRvbiBXZWJiIG9uIHRoZSBtb3VuZCBmb3IgdmlzaXRpbmcgQXJpem9uYSB5ZXN0ZXJkYXkgYW5kIHdlbnQgNCBmb3IgNCB3aXRoIHRocmVlIGRvdWJsZXMgYW5kIHRocmVlIHJ1bnMgYmF0dGVkIGluIGFzIHRoZSBEaWFtb25kYmFja3MgYmVhdCB0aGUgUGl0dHNidXJnaCBQaXJhdGVzLCA4LTAsIHRvIHN0b3AgYSB0aHJlZS1nYW1lIGxvc2luZyBzdHJlYWsuCkdpdmVuIGFuIG9taW5vdXMgd2VhdGhlciBmb3JlY2FzdCwgTWFuYWdlciBCb2IgTWVsdmluIGRlY2lkZWQgbGVzcyB0aGFuIGFuIGhvdXIgYmVmb3JlIHRoZSBnYW1lIHRvIGhvbGQgYmFjayBXZWJiICgxNy0xMCkuCk93aW5ncyAoOC04KSBhbGxvd2VkIGZvdXIgaGl0cywgc3RydWNrIG91dCBmb3VyIGFuZCB3YWxrZWQgbm9uZSBpbiBzaXggYW5kIGEgdGhpcmQgaW5uaW5ncy4KVGhlIGZpcnN0LXBsYWNlIERpYW1vbmRiYWNrcywgd2hvIGxlYWQgU2FuIERpZWdvIGJ5IGEgZ2FtZSBpbiB0aGUgTmF0aW9uYWwgTGVhZ3VlIFdlc3QsIHdpbGwgb3BlbiBhIHRocmVlLWdhbWUgc2VyaWVzIHRvbmlnaHQgYXQgQ29sb3JhZG8gd2l0aCBXZWJiIG9uIHRoZSBtb3VuZC4KTUFSTElOUyA2LCBDVUJTIDQgQ2hpY2FnbyBzdHJhbmRlZCAxMCBydW5uZXJzIGFuZCBsb3N0IGF0IGxhc3QtcGxhY2UgRmxvcmlkYSBmb3IgdGhlIHRoaXJkIGdhbWUgaW4gYSByb3cuCkNoaWNhZ28gYmVnYW4gdGhlIGRheSB3aXRoIGEgdHdvLWdhbWUgbGVhZCBpbiB0aGUgZGl2aXNpb24gb3ZlciBzZWNvbmQtcGxhY2UgTWlsd2F1a2VlLCB3aGljaCBwbGF5ZWQgU2FuIERpZWdvIGxhc3QgbmlnaHQuClRoZSBDdWJzIiBtYWdpYyBudW1iZXIgZm9yIGNsaW5jaGluZyB0aGUgZGl2aXNpb24gcmVtYWluZWQgYXQgdGhyZWUuCkZsb3JpZGEgYmVhdCBDaGljYWdvIGZvciB0aGUgMTB0aCBjb25zZWN1dGl2ZSBnYW1lIG92ZXIgdGhlIHBhc3QgdHdvIHNlYXNvbnMuCkhhbmxleSBSYW3DrXJleiBoaXQgaGlzIDI5dGggaG9tZSBydW4sIGFuZCBKZXJlbXkgSGVybWlkYSBoYWQgdHdvIGhpdHMgYW5kIGZpbmlzaGVkIHRoZSBzZXJpZXMgNyBmb3IgMTIuCkFTVFJPUyA0LCBSRURTIDMgQ2FybG9zIExlZSdzIFIuQi5JLiBzaW5nbGUgaW4gdGhlIG5pbnRoIGlubmluZyBicm9rZSBhIHRpZSBhcyBIb3VzdG9uIGNvbXBsZXRlZCBhIHRocmVlLWdhbWUgc3dlZXAgYXQgQ2luY2lubmF0aS4KT1JJT0xFUyA4LCBCTFVFIEpBWVMgNSBMdWlzIEhlcm7DoW5kZXogaGl0IGhpcyBmaXJzdCBtYWpvciBsZWFndWUgaG9tZSBydW4gaW4gdGhlIHNpeHRoIGlubmluZywgYW5kIEJhbHRpbW9yZSBhdm9pZGVkIGEgdGhyZWUtZ2FtZSBzd2VlcCBhdCBob21lLgpXSElURSBTT1ggMTAsIFJPWUFMUyAwIExhbmNlIEJyb2Fkd2F5IGFsbG93ZWQgdHdvIGhpdHMgb3ZlciBzaXggaW5uaW5ncyBmb3IgaG9zdCBDaGljYWdvIHRvIGdldCBoaXMgZmlyc3QgbWFqb3IgbGVhZ3VlIHZpY3RvcnkuCk1FVFMgV0lOIENPSU4gRkxJUFMgV2l0aCB0aGUgTWV0cyIgYmlnIGxlYWQgZ29uZSBmb2xsb3dpbmcgMTAgbG9zc2VzIGluIDE0IGdhbWVzLCB0aGUgY29tbWlzc2lvbmVyJ3Mgb2ZmaWNlIGhlbGQgY29pbiBmbGlwcyBpbiBjYXNlIHRoZSBNZXRzIHdpbmQgdXAgaW4gYSB0aWUgZm9yIHRoZSBOLkwuIHdpbGQtY2FyZCBsZWFkLgpCUkFETEVZIEhBUyBLTkVFIFNVUkdFUlkgU2FuIERpZWdvIFBhZHJlcyBvdXRmaWVsZGVyIE1pbHRvbiBCcmFkbGV5IGhhZCBzdXJnZXJ5IGluIENpbmNpbm5hdGkgdG8gcmVwYWlyIGEgdG9ybiBhbnRlcmlvciBjcnVjaWF0ZSBsaWdhbWVudCBpbiBoaXMgcmlnaHQga25lZS4KQnJhZGxleSB3YXMgaHVydCB3aGVuIGhpcyBtYW5hZ2VyLCBCdWQgQmxhY2ssIHRyaWVkIHRvIGtlZXAgaGltIGZyb20gZ29pbmcgYWZ0ZXIgdGhlIHVtcGlyZSBNaWtlIFdpbnRlcnMgZHVyaW5nIGEgY29uZnJvbnRhdGlvbiBTdW5kYXkuCldpbnRlcnMgd2FzIHN1c3BlbmRlZCBmb3IgdGhlIHJlc3Qgb2YgdGhlIHNlYXNvbiBXZWRuZXNkYXkuClllc3RlcmRheSwgdGhlIHVuaW9uIGZvciBiYXNlYmFsbCB1bXBpcmVzIHNhaWQgaXQgd291bGQgbm90IGNvbnRlc3QgdGhlIHN1c3BlbnNpb24uCiJJJ3ZlIHNwb2tlbiB3aXRoIE1pa2UgV2ludGVycywgYW5kIGhlIHNpbmNlcmVseSByZWdyZXRzIHdoYXQgaGFwcGVuZWQgb24gdGhlIGZpZWxkIHRoYXQgZGF5LCIgdGhlIHVuaW9uIHNwb2tlc21hbiBMYW1lbGwgTWNNb3JyaXMgc2FpZC4KQVJPVU5EIFRIRSBNQUpPUlMgTWlsd2F1a2VlIHJlbGlldmVyIFNldGggTWNDbHVuZyB3YXMgc3VzcGVuZGVkIGZvciB0aHJlZSBnYW1lcyBhbmQgTWFuYWdlciBOZWQgWW9zdCBmb3Igb25lIGFmdGVyIHRoZSBjb21taXNzaW9uZXIncyBvZmZpY2UgcnVsZWQgTWNDbHVuZyBpbnRlbnRpb25hbGx5IGhpdCB0aGUgU3QuIExvdWlzIENhcmRpbmFscyIgQWxiZXJ0IFB1am9scyB3aXRoIGEgcGl0Y2ggV2VkbmVzZGF5IGFmdGVyIGEgd2FybmluZy4gLi4uClRoZSBTZWF0dGxlIE1hcmluZXJzIGFubm91bmNlZCB0aGF0IE1hbmFnZXIgSm9obiBNY0xhcmVuIGFuZCBHZW5lcmFsIE1hbmFnZXIgQmlsbCBCYXZhc2kgd291bGQgcmV0dXJuIG5leHQgc2Vhc29uLgo=
[(U3RhcnRpbmcgZm9yIFdlYmIsIE93aW5ncyBQdXRzIFN0b3AgdG8gQXJpem9uYSdzIFNraWQKTWljYWggT3dpbmdzIHN0YXJ0ZWQgaW4gcGxhY2Ugb2YgdGhlIGluanVyZWQgQnJhbmRvbiBXZWJiIG9uIHRoZSBtb3VuZCBmb3IgdmlzaXRpbmcgQXJpem9uYSB5ZXN0ZXJkYXkgYW5kIHdlbnQgNCBmb3IgNCB3aXRoIHRocmVlIGRvdWJsZXMgYW5kIHRocmVlIHJ1bnMgYmF0dGVkIGluIGFzIHRoZSBEaWFtb25kYmFja3MgYmVhdCB0aGUgUGl0dHNidXJnaCBQaXJhdGVzLCA4LTAsIHRvIHN0b3AgYSB0aHJlZS1nYW1lIGxvc2luZyBzdHJlYWsuCkdpdmVuIGFuIG9taW5vdXMgd2VhdGhlciBmb3JlY2FzdCwgTWFuYWdlciBCb2IgTWVsdmluIGRlY2lkZWQgbGVzcyB0aGFuIGFuIGhvdXIgYmVmb3JlIHRoZSBnYW1lIHRvIGhvbGQgYmFjayBXZWJiICgxNy0xMCkuCk93aW5ncyAoOC04KSBhbGxvd2VkIGZvdXIgaGl0cywgc3RydWNrIG91dCBmb3VyIGFuZCB3YWxrZWQgbm9uZSBpbiBzaXggYW5kIGEgdGhpcmQgaW5uaW5ncy4KVGhlIGZpcnN0LXBsYWNlIERpYW1vbmRiYWNrcywgd2hvIGxlYWQgU2FuIERpZWdvIGJ5IGEgZ2FtZSBpbiB0aGUgTmF0aW9uYWwgTGVhZ3VlIFdlc3QsIHdpbGwgb3BlbiBhIHRocmVlLWdhbWUgc2VyaWVzIHRvbmlnaHQgYXQgQ29sb3JhZG8gd2l0aCBXZWJiIG9uIHRoZSBtb3VuZC4KTUFSTElOUyA2LCBDVUJTIDQgQ2hpY2FnbyBzdHJhbmRlZCAxMCBydW5uZXJzIGFuZCBsb3N0IGF0IGxhc3QtcGxhY2UgRmxvcmlkYSBmb3IgdGhlIHRoaXJkIGdhbWUgaW4gYSByb3cuCkNoaWNhZ28gYmVnYW4gdGhlIGRheSB3aXRoIGEgdHdvLWdhbWUgbGVhZCBpbiB0aGUgZGl2aXNpb24gb3ZlciBzZWNvbmQtcGxhY2UgTWlsd2F1a2VlLCB3aGljaCBwbGF5ZWQgU2FuIERpZWdvIGxhc3QgbmlnaHQuClRoZSBDdWJzIiBtYWdpYyBudW1iZXIgZm9yIGNsaW5jaGluZyB0aGUgZGl2aXNpb24gcmVtYWluZWQgYXQgdGhyZWUuCkZsb3JpZGEgYmVhdCBDaGljYWdvIGZvciB0aGUgMTB0aCBjb25zZWN1dGl2ZSBnYW1lIG92ZXIgdGhlIHBhc3QgdHdvIHNlYXNvbnMuCkhhbmxleSBSYW3DrXJleiBoaXQgaGlzIDI5dGggaG9tZSBydW4sIGFuZCBKZXJlbXkgSGVybWlkYSBoYWQgdHdvIGhpdHMgYW5kIGZpbmlzaGVkIHRoZSBzZXJpZXMgNyBmb3IgMTIuCkFTVFJPUyA0LCBSRURTIDMgQ2FybG9zIExlZSdzIFIuQi5JLiBzaW5nbGUgaW4gdGhlIG5pbnRoIGlubmluZyBicm9rZSBhIHRpZSBhcyBIb3VzdG9uIGNvbXBsZXRlZCBhIHRocmVlLWdhbWUgc3dlZXAgYXQgQ2luY2lubmF0aS4KT1JJT0xFUyA4LCBCTFVFIEpBWVMgNSBMdWlzIEhlcm7DoW5kZXogaGl0IGhpcyBmaXJzdCBtYWpvciBsZWFndWUgaG9tZSBydW4gaW4gdGhlIHNpeHRoIGlubmluZywgYW5kIEJhbHRpbW9yZSBhdm9pZGVkIGEgdGhyZWUtZ2FtZSBzd2VlcCBhdCBob21lLgpXSElURSBTT1ggMTAsIFJPWUFMUyAwIExhbmNlIEJyb2Fkd2F5IGFsbG93ZWQgdHdvIGhpdHMgb3ZlciBzaXggaW5uaW5ncyBmb3IgaG9zdCBDaGljYWdvIHRvIGdldCBoaXMgZmlyc3QgbWFqb3IgbGVhZ3VlIHZpY3RvcnkuCk1FVFMgV0lOIENPSU4gRkxJUFMgV2l0aCB0aGUgTWV0cyIgYmlnIGxlYWQgZ29uZSBmb2xsb3dpbmcgMTAgbG9zc2VzIGluIDE0IGdhbWVzLCB0aGUgY29tbWlzc2lvbmVyJ3Mgb2ZmaWNlIGhlbGQgY29pbiBmbGlwcyBpbiBjYXNlIHRoZSBNZXRzIHdpbmQgdXAgaW4gYSB0aWUgZm9yIHRoZSBOLkwuIHdpbGQtY2FyZCBsZWFkLgpCUkFETEVZIEhBUyBLTkVFIFNVUkdFUlkgU2FuIERpZWdvIFBhZHJlcyBvdXRmaWVsZGVyIE1pbHRvbiBCcmFkbGV5IGhhZCBzdXJnZXJ5IGluIENpbmNpbm5hdGkgdG8gcmVwYWlyIGEgdG9ybiBhbnRlcmlvciBjcnVjaWF0ZSBsaWdhbWVudCBpbiBoaXMgcmlnaHQga25lZS4KQnJhZGxleSB3YXMgaHVydCB3aGVuIGhpcyBtYW5hZ2VyLCBCdWQgQmxhY2ssIHRyaWVkIHRvIGtlZXAgaGltIGZyb20gZ29pbmcgYWZ0ZXIgdGhlIHVtcGlyZSBNaWtlIFdpbnRlcnMgZHVyaW5nIGEgY29uZnJvbnRhdGlvbiBTdW5kYXkuCldpbnRlcnMgd2FzIHN1c3BlbmRlZCBmb3IgdGhlIHJlc3Qgb2YgdGhlIHNlYXNvbiBXZWRuZXNkYXkuClllc3RlcmRheSwgdGhlIHVuaW9uIGZvciBiYXNlYmFsbCB1bXBpcmVzIHNhaWQgaXQgd291bGQgbm90IGNvbnRlc3QgdGhlIHN1c3BlbnNpb24uCiJJJ3ZlIHNwb2tlbiB3aXRoIE1pa2UgV2ludGVycywgYW5kIGhlIHNpbmNlcmVseSByZWdyZXRzIHdoYXQgaGFwcGVuZWQgb24gdGhlIGZpZWxkIHRoYXQgZGF5LCIgdGhlIHVuaW9uIHNwb2tlc21hbiBMYW1lbGwgTWNNb3JyaXMgc2FpZC4KQVJPVU5EIFRIRSBNQUpPUlMgTWlsd2F1a2VlIHJlbGlldmVyIFNldGggTWNDbHVuZyB3YXMgc3VzcGVuZGVkIGZvciB0aHJlZSBnYW1lcyBhbmQgTWFuYWdlciBOZWQgWW9zdCBmb3Igb25lIGFmdGVyIHRoZSBjb21taXNzaW9uZXIncyBvZmZpY2UgcnVsZWQgTWNDbHVuZyBpbnRlbnRpb25hbGx5IGhpdCB0aGUgU3QuIExvdWlzIENhcmRpbmFscyIgQWxiZXJ0IFB1am9scyB3aXRoIGEgcGl0Y2ggV2VkbmVzZGF5IGFmdGVyIGEgd2FybmluZy4gLi4uClRoZSBTZWF0dGxlIE1hcmluZXJzIGFubm91bmNlZCB0aGF0IE1hbmFnZXIgSm9obiBNY0xhcmVuIGFuZCBHZW5lcmFsIE1hbmFnZXIgQmlsbCBCYXZhc2kgd291bGQgcmV0dXJuIG5leHQgc2Vhc29uLgo=, 'GPE')]

[(, 'GPE')]
SnVtcCAtIFJldmlldyAtIFRoZWF0ZXIgLSBOZXcgWW9yayBUaW1lcwpUaGUgVW5pb24gU3F1YXJlIFRoZWF0ZXIgaXMgY2FydmluZyBvdXQgYSBuaWNoZSBhcyBhIGhvbWUgZm9yIGEga2luZCBvZiBiYXJlbHkgdmVyYmFsIGZvcmVpZ24gaW1wb3J0IHRoYXQgaGFzIGJlY29tZSBhIHN0YW5kYXJkIGZlYXR1cmUgb2YgdGhlIE9mZiBCcm9hZHdheSBtZW51LgpUaGVzZSBoaWdoLWVuZXJneSBzcGVjdGFjbGVzIMKXIHRoZSBvZmZzcHJpbmcgb2YgaGl0cyBsaWtlIMKTU3RvbXDClCBhbmQgwpNCbHVlIE1hbiBHcm91cMKUIMKXIGFyZSBzb21ldGltZXMgY2FsbGVkIGV2ZW50cyBvciBleHBlcmllbmNlcywgYW5kIGF1ZGllbmNlcyBhcmUgdXN1YWxseSB0b2xkIHRoYXQgdGhlIHNob3dzIGFyZSBhIHNlbnNhdGlvbiBzb21ld2hlcmUgdmVyeSBmYXIgYXdheS4KVGhpcyB5ZWFyIGl0IHdhcyDCk0JlLMKUIGEgcmF0aGVyIGxvdWQgaGVhZGFjaGUgZnJvbSBJc3JhZWwgZmVhdHVyaW5nIGhhbGYtZHJlc3NlZCBhY3RvcnMgbGVhcGluZyBpbiB0aGUgYWlyLCBjbG93bmluZyBhcm91bmQgYW5kIGJhbmdpbmcgb24gdGhpbmdzLgpUaGUgbmV3IHRlbmFudCBpcyB0aGUgbG93YnJvdyBTb3V0aCBLb3JlYW4gZW50ZXJ0YWlubWVudCDCk0p1bXAswpQgb2ZmZXJpbmcgYW5vdGhlciBiYW5kIG9mIGhhbGYtZHJlc3NlZCBhY3RvcnMgbGVhcGluZyBhbmQgYmFuZ2luZyBhbmQgY2xvd25pbmcuClRoZXJlIGFyZSBkaWZmZXJlbmNlcywgb2YgY291cnNlLCBidXQgdGhleSBhcmVuwpJ0IG11Y2ggZ3JlYXRlciB0aGFuIHRob3NlIGJldHdlZW4gdGhlIG1lbnVzIGF0IE1jRG9uYWxkcyBpbiBTZW91bCBhbmQgVGVsIEF2aXYuCsKTSnVtcCzClCB3aGljaCB3YXMgZmlyc3QgcHJlc2VudGVkIGluIDIwMDMgYW5kIGhhcyBzaW5jZSB0b3VyZWQgdGhlIHdvcmxkLCBpcyBub3Qgd2l0aG91dCBjaGFybXMuCkl0IHRyaWVzIHRvIGJlIGEga2luZCBvZiBsaXZlLWFjdGlvbiBKYWNraWUgQ2hhbiBmaWxtLgpXZWFyaW5nIG1hcnRpYWwgYXJ0cyBvdXRmaXRzLCB0aGUgY2FzdCBvZiBhcmNoZXR5cGVzIGluY2x1ZGVzIGEgYmx1c2hpbmcgaW5nw6ludWUgKEhlZS1qZW9uZyBId2FuZyksIGEgZ29vZmJhbGwgdW5jbGUgKEhhbi1jaGFuZyBMaW0pIGFuZCBhIGRvZGRlcmluZyBvbGQgbWFuIChXb29uLXlvbmcgTGVlKSB3aG8ganVzdCBtYXkgYmUgdW5kZXJwbGF5aW5nIGhpcyBhdGhsZXRpYyBwcm93ZXNzLgpBIHNsaXZlciBvZiBhIHBsb3QgZW1lcmdlcyBmcm9tIHRoZSBzZXJpZXMgb2Ygc2tldGNoZXMgwpcgc29tZXRoaW5nIGFib3V0IGEgZmFtaWx5wpJzIGhvbWUgYmVpbmcgYnVyZ2xhcml6ZWQgwpcgYnV0IGl0wpJzIHJlYWxseSBpbmNpZGVudGFsIHRvIHRoZSBtYWluIGF0dHJhY3Rpb25zOiBjb21pYyBtdWdnaW5nIGFuZCBlbGFib3JhdGVseSBjaG9yZW9ncmFwaGVkIGZpZ2h0cy4KU29tZSBvZiB0aGUgcGVyZm9ybWVycywgbGlrZSBNci4gTGVlLCBhcmUgaW1wcmVzc2l2ZSBneW1uYXN0cywgZmxpcHBpbmcgYXJvdW5kIHRoZSBzdGFnZSBhbmQgZGlzcGxheWluZyByZW1hcmthYmxlIGJvZHkgY29udHJvbCwgc2VlbWluZ2x5IGRlZnlpbmcgc2V2ZXJhbCBsYXdzIG9mIHBoeXNpY3MuCldoZW4gdGhlIGFjdG9ycyBzdGljayB0byB0aGUgYWNyb2JhdGljcywgYXMgaW4gdGhlIHJvdXNpbmcgZmluYWxlLCBmZWF0dXJpbmcgdGhlIGNhc3QgbWVtYmVycyB0YWtpbmcgdHVybnMgcnVubmluZyB1cCB0aGUgc2lkZXMgb2YgY3VydmVkIHdhbGxzLCB0aGUgc2hvdyBoYXMgYSBjZXJ0YWluIGtpY2suClRoZSBlbmVyZ3kgZml6emxlcyBvdXQsIHRob3VnaCwgd2hlbiB0aGUga2lja3MgYW5kIHB1bmNoZXMgdHVybiB0byBjb21lZHkuCldpdGggZ2VuZXJvdXMgYW1vdW50cyBvZiBtdWdnaW5nLCBoYWNrbmV5ZWQgcGh5c2ljYWwgaHVtb3IgYW5kIGEgd2VpcmQgZml4YXRpb24gb24gdGhlIHJlYXIgZW5kLCB0aGUgY3JlYXRvcnMgb2YgdGhlIHNob3csIGluY2x1ZGluZyB0aGUgZGlyZWN0b3IgQ2h1bC1raSBDaG9pLCBhcHBlYXIgdG8gYmUgYWltaW5nIGZvciB0aGUgdG9kZGxlciBjcm93ZC4KQnV0IGFsbCB0aGlzIGhhbW1pbmcgcHJvdmVzLCBhbW9uZyBvdGhlciB0aGluZ3MsIHRoZSBvbGQgY2xpY2jDqSB0aGF0IGEgcHVuY2ggaW4gdGhlIGZhY2UgdHJhbnNsYXRlcyBtdWNoIGJldHRlciB0aGFuIGEgam9rZS4KIkp1bXAiIGlzIHBsYXlpbmcgYXQgdGhlIFVuaW9uIFNxdWFyZSBUaGVhdGVyLCAxMDAgRWFzdCAxN3RoIFN0cmVldCwgTWFuaGF0dGFuOyAoMjEyKSAzMDctNDEwMC4K
[]
QXMgRGVmYXVsdHMgUmlzZSwgV2FzaGluZ3RvbiBXb3JyaWVzCkR1cmluZyB0aGUgc3VtbWVywpJzIGNyZWRpdCBjcmlzaXMsIGludmVzdG9ycyBjb25jbHVkZWQgdGhhdCB0aGUgZGVmYXVsdCByYXRlcyBvbiBzdWJwcmltZSBtb3J0Z2FnZXMgbWFkZSBsYXN0IHllYXIgd291bGQgcHJvYmFibHkgcHJvdmUgdG8gYmUgdGhlIGhpZ2hlc3QgaW4gdGhlIGluZHVzdHJ5wpJzIGhpc3RvcnkuCkJ1dCB0aGVyZSBub3cgYXBwZWFycyB0byBiZSBhbm90aGVyIGNvbnRlbmRlciBmb3IgdGhhdCBkdWJpb3VzIGhvbm9yOiBsb2FucyBtYWRlIGluIHRoZSBmaXJzdCBoYWxmIG9mIHRoaXMgeWVhci4KQm9ycm93ZXJzIHdobyB0b29rIG91dCBsb2FucyBpbiB0aGUgZmlyc3Qgc2l4IG1vbnRocyBvZiAyMDA3IGFyZSBmYWxsaW5nIGJlaGluZCBvbiBwYXltZW50cyBmYXN0ZXIgdGhhbiBob21lb3duZXJzIHdobyB0b29rIG91dCBsb2FucyBsYXN0IHllYXIsIGFjY29yZGluZyB0byBhIHJlcG9ydCBieSBGcmllZG1hbiwgQmlsbGluZ3MsIFJhbXNleSwgYW4gaW52ZXN0bWVudCBiYW5rIGJhc2VkIGluIEFybGluZ3RvbiwgVmEuClRoZSBkYXRhIHN1Z2dlc3RlZCB0aGF0IG1vcmUgQW1lcmljYW5zIGNvdWxkIGxvc2UgdGhlaXIgaG9tZXMgYW5kIHRoYXQgdGhlIGhvdXNpbmcgbWFya2V0wpJzIHRyb3VibGVzIG1pZ2h0IHBlcnNpc3QgbG9uZ2VyIHRoYW4gbWFueSBhbmFseXN0cyBoYXZlIGJlZW4gcHJlZGljdGluZy4KVGhlIHJlcG9ydMKScyBhdXRob3IsIE1pY2hhZWwgRC4gWW91bmdibG9vZCwgYSBwb3J0Zm9saW8gbWFuYWdlciBhbmQgYW5hbHlzdCBhdCBGcmllZG1hbiwgQmlsbGluZ3MsIFJhbXNleSwgc2FpZCB0aGF0IG1vc3QgbW9ydGdhZ2UgY29tcGFuaWVzIGFuZCBiYW5rcyBoYWQgbm90IHRpZ2h0ZW5lZCBsZW5kaW5nIHN0YW5kYXJkcyBmb3IgYm9ycm93ZXJzIHdpdGggd2Vhaywgb3Igc3VicHJpbWUsIGNyZWRpdCB1bnRpbCBKdWx5IG9yIEF1Z3VzdCwgZXZlbiB0aG91Z2ggZWFybHkgdGhpcyB5ZWFyIHJlZ3VsYXRvcnMsIGFuYWx5c3RzIGFuZCBtb3J0Z2FnZSBpbnZlc3RvcnMga25ldyB0aGF0IHRoZSBlYXN5IGxlbmRpbmcgcG9saWNpZXMgb2YgMjAwNSBhbmQgMjAwNiB3ZXJlIHByb2R1Y2luZyBoaWdoIGRlZmF1bHQgcmF0ZXMuCsKTVGhlcmUgYXJlICQxMC42IHRyaWxsaW9uIG9mIG1vcnRnYWdlIGxvYW5zIG91dHN0YW5kaW5nIGluIHRoZSBVLlMuLCBhbmQgZXZlbiBpZiB0aGUgYnJha2VzIGhhZCBiZWVuIHNsYW1tZWQsIGl0IHdhcyBnb2luZyB0byB0YWtlIGEgbG9uZyB0aW1lIHRvIHNsb3cgdGhpcyBsb2NvbW90aXZlIGRvd24swpQgc2FpZCBNci4gWW91bmdibG9vZCwgd2hvIGhhcyByZXNlYXJjaGVkIGhvbWUgbGVuZGluZyBmb3IgbW9yZSB0aGFuIDIwIHllYXJzLiDCk0FuZCBJIGRvbsKSdCBzZWUgdGhhdCB0aGUgYnJha2VzIHdlcmUgc2xhbW1lZCBvbiBvciB0aGF0IHRoZSBlbmdpbmVlciBoYWQgYSBuZXcgdHJhY2sgdG8gZm9sbG93LgpUaGF0IHRyYWNrIG9ubHkgbm93IHNlZW1zIHRvIGJlIGFwcGVhcmluZy7ClApIZSBub3RlZCB0aGF0IENvdW50cnl3aWRlIEZpbmFuY2lhbCwgdGhlIG5hdGlvbsKScyBsYXJnZXN0IGxlbmRlciB3aG9zZSBwcmFjdGljZXMgYXJlIG9mdGVuIGVtdWxhdGVkIGJ5IHNtYWxsZXIgY29tcGFuaWVzLCBkaWQgbm90IHNpZ25pZmljYW50bHkgdGlnaHRlbiBzdGFuZGFyZHMgdW50aWwgQXVndXN0LgpBbmQgaXQgd2FzIG9ubHkgaW4gbWlkLUp1bHkgdGhhdCBNb29kecKScyBJbnZlc3RvcnMgU2VydmljZSBhbmQgU3RhbmRhcmQgJiBQb29ywpJzLCB0aGUgbGFyZ2UgcmF0aW5ncyBhZ2VuY2llcywgc2FpZCB0aGV5IHdvdWxkIG1ha2UgbWFqb3IgY2hhbmdlcyBpbiB0aGUgYXNzdW1wdGlvbnMgdGhhdCB0aGV5IHVzZSB0byBldmFsdWF0ZSBwb29scyBvZiBob21lIGxvYW5zIHNvbGQgdG8gaW52ZXN0b3JzLgpBcyBvZiBBdWd1c3QsIGRlZmF1bHQgcmF0ZXMgb24gYWRqdXN0YWJsZS1yYXRlIHN1YnByaW1lIG1vcnRnYWdlcyB3cml0dGVuIGluIDIwMDcgaGFkIHJlYWNoZWQgOC4wNSBwZXJjZW50LCB1cCBmcm9tIDUuNzcgcGVyY2VudCBpbiBKdWx5LCBhY2NvcmRpbmcgdG8gTXIuIFlvdW5nYmxvb2TCknMgYW5hbHlzaXMgb2YgcG9vbHMgb2YgaG9tZSBsb2FucyBwdXQgdG9nZXRoZXIgYnkgV2FsbCBTdHJlZXQgYmFua3MgYW5kIHNvbGQgdG8gaW52ZXN0b3JzLgpCeSBjb21wYXJpc29uLCBvbmx5IDUuMzYgcGVyY2VudCBvZiBzdWNoIGxvYW5zIG1hZGUgbGFzdCB5ZWFyIGhhZCBkZWZhdWx0ZWQgYnkgQXVndXN0IDIwMDYuCkRlZmF1bHQgcmF0ZXMgb24gZml4ZWQtcmF0ZSBzdWJwcmltZSBtb3J0Z2FnZXMgd2VyZSBsb3dlciwgYnV0IHdlcmUgcmlzaW5nIGF0IGEgc2ltaWxhciBwYWNlLgpEYXRhIGFuYWx5emVkIGJ5IE1vb2R5wpJzIGNvbmZpcm1zIHRoZSB0cmVuZCBNci4gWW91bmdibG9vZCBoYXMgaWRlbnRpZmllZC4KRXhlY3V0aXZlcyBhdCBNb29kecKScyBzYXkgdGhleSBhcmUgbW9uaXRvcmluZyB0aGUgcGVyZm9ybWFuY2Ugb2YgcmVjZW50IGxvYW5zLCBidXQgd2VyZSBub3QgeWV0IHJlYWR5IHRvIGRpc2N1c3MgdGhlaXIgY29uY2x1c2lvbnMuCkl0IGlzIHVuY2xlYXIgd2hldGhlciBsb2FucyBtYWRlIGluIHRoZSBsYXN0IGNvdXBsZSBvZiBtb250aHMgYXJlIHN0cm9uZ2VyLCBiZWNhdXNlIGxlbmRlcnMgd2VyZSBtYWtpbmcgYW5kIHNlY3VyaXRpemluZyBmYXIgZmV3ZXIgb2YgdGhlbSBhbmQgaW52ZXN0b3JzIGhhdmUgZ3Jvd24gd2FyeSBvZiBib25kcyBiYWNrZWQgYnkgc3VicHJpbWUgbW9ydGdhZ2VzLgrCk1lvdSBtYXkgbm90IGhlYXIgdGhhdCBtdWNoIGFib3V0IHRoYXQgc3R1ZmYsIGJlY2F1c2UgaXTCknMgbm90IHNlZWluZyB0aGUgbGlnaHQgb2YgZGF5LMKUIHNhaWQgRXZhbiBNaXRuaWNrLCBhIG1hbmFnaW5nIGRpcmVjdG9yIGF0IFdlc3R3b29kIENhcGl0YWwsIGEgYm91dGlxdWUgaW52ZXN0bWVudCBiYW5rIGluIE5ldyBZb3JrLgpJbiB0aGUgZmlyc3Qgc2l4IG1vbnRocyBvZiB0aGUgeWVhciwgV2FsbCBTdHJlZXQgc2VjdXJpdGl6ZWQgJDIxNSBiaWxsaW9uIGluIHN1YnByaW1lIGxvYW5zLCBkb3duIDIzIHBlcmNlbnQgZnJvbSB0aGUgY29tcGFyYWJsZSBwZXJpb2QgYSB5ZWFyIGVhcmxpZXIsIGFjY29yZGluZyB0byBGcmllZG1hbiwgQmlsbGluZ3MsIFJhbXNleS4KQnkgdGhlIGVuZCBvZiBBdWd1c3QsIHRoZSB0b3RhbCBoYWQgZHJvcHBlZCBieSAzMyBwZXJjZW50IGZyb20gdGhlIGNvbXBhcmFibGUgZWlnaHQgbW9udGhzIG9mIDIwMDYuClRoZSByZWNlbnQgd2Vha25lc3MgaW4gam9iIGdyb3d0aCBhbmQgZmFsbGluZyBob21lIHByaWNlcyBpbiBtYW55IHBhcnRzIG9mIHRoZSBjb3VudHJ5IGhhdmUgcHJvYmFibHkgY29udHJpYnV0ZWQgdG8gdGhlIGhpZ2hlciBkZWZhdWx0IHJhdGVzIG9uIGxvYW5zIGZyb20gZWFybHkgdGhpcyB5ZWFyLCBzcGVjaWFsaXN0cyBzYXkuCkpvYiBsb3NzZXMgaW4gdGhlIGhvdXNpbmcgaW5kdXN0cnkgaGF2ZSBwdXQgcHJlc3N1cmUgb24gdGhlIGVjb25vbWllcyBvZiBmb3JtZXJseSBmYXN0LWdyb3dpbmcgc3RhdGVzIGxpa2UgQXJpem9uYSBhbmQgRmxvcmlkYS4KQW5kIGRlY2xpbmluZyBob21lIHByaWNlcyBoYXZlIG1hZGUgaXQgaGFyZGVyIGZvciBib3Jyb3dlcnMgdG8gcmVmaW5hbmNlIGxvYW5zLCBlc3BlY2lhbGx5IGluIGNhc2VzIHdoZXJlIHRoZSBidXllcnMgY291bGQgYWZmb3JkIHRoZSBob21lcyBvbmx5IHdpdGggdGhlIGhlbHAgb2YgdGhlIGxvdyBpbnRyb2R1Y3RvcnkgcmF0ZXMgb24gYWRqdXN0YWJsZSBtb3J0Z2FnZXMuClRob3NlIGJvcnJvd2VycyBhcmUgZXhwZWN0ZWQgdG8gZW5jb3VudGVyIGZ1cnRoZXIgc3RyYWluIGluIHRoZSBtb250aHMgYW5kIHllYXJzIGFoZWFkIGFzIHRoZWlyIGxvYW5zIGFyZSByZXNldCB0byBoaWdoZXIgdmFyaWFibGUgcmF0ZXMuCldoZW4gdGhleSB0cnkgdG8gcmVmaW5hbmNlIHRoZWlyIG1vcnRnYWdlcywgbWFueSBvZiB0aGVtIHdpbGwgZmFjZSBzdHJpY3RlciBsZW5kaW5nIHN0YW5kYXJkcy4KTWFueSBsZW5kZXJzIGFyZSBub3cgcmVxdWlyaW5nIGJvcnJvd2VycyB0byBwcm92aWRlIGRvY3VtZW50YXRpb24gb2YgdGhlaXIgaW5jb21lcywgYW5kIHRoZXkgd2lsbCBub3QgbGVuZCBtb3JlIHRoYW4gODAgdG8gOTAgcGVyY2VudCBvZiBhIGhvdXNlwpJzIHZhbHVlLgpBIHN1cnZleSBvZiA1MDAgYm9ycm93ZXJzIHdpdGggYWRqdXN0YWJsZS1yYXRlIGxvYW5zIHJlbGVhc2VkIHllc3RlcmRheSBpbiBDbGV2ZWxhbmQgc2hvd2VkIHRoYXQgdGhlIHJlc2V0dGluZyBvZiByYXRlcyB3aWxsIHB1dCBhIHNpZ25pZmljYW50IHN0cmFpbiBvbiBob21lb3duZXJzLgpBbW9uZyBib3Jyb3dlcnMgd2hvc2UgcmF0ZXMgaGF2ZSBhbHJlYWR5IGJlZW4gcmVzZXQsIDQxIHBlcmNlbnQgc2FpZCB0aGV5IHdlcmUgd29ycmllZCBhYm91dCB0aGVpciBhYmlsaXR5IHRvIG1ha2UgcGF5bWVudHMsIGNvbXBhcmVkIHdpdGggMTggcGVyY2VudCBvZiBib3Jyb3dlcnMgd2hvc2UgcmF0ZXMgaGFkIG5vdCBiZWVuIHJlc2V0IHlldC4KTmVhcmx5IHRocmVlLXF1YXJ0ZXJzIG9mIGZhbWlsaWVzIHdpdGggaW5jb21lcyBsZXNzIHRoYW4gJDUwLDAwMCBhIHllYXIgc2FpZCB0aGF0IGFuIGluY3JlYXNlIGluIHRoZWlyIHJhdGVzIHdvdWxkIGh1cnQgdGhlbSwgY29tcGFyZWQgd2l0aCA0MCBwZXJjZW50IHdpdGggaW5jb21lcyBhYm92ZSAkNTAsMDAwLgpUaGUgc3VydmV5IHdhcyBjb25kdWN0ZWQgYnkgUGV0ZXIgRC4gSGFydCBSZXNlYXJjaCBBc3NvY2lhdGVzIG9uIGJlaGFsZiBvZiB0aGUgQS5GLkwuLUMuSS5PLiwgd2hpY2ggaXMgc2V0dGluZyB1cCBhIHRlbGVwaG9uZSBoZWxwIGxpbmUgZm9yIHRyb3VibGVkIGhvbWVvd25lcnMuCkZpbmFuY2luZyBob21lcyB3aXRoIGFkanVzdGFibGUgbW9ydGdhZ2VzIHdhcyBwb3B1bGFyIGR1cmluZyB0aGUgaG91c2luZyBib29tIGJlY2F1c2UgdGhlIGJvcnJvd2VycyBjb3VsZCBlbmpveSBsb3dlciByYXRlcyBpbiB0aGUgZmlyc3QgdHdvIG9yIHRocmVlIHllYXJzIGFuZCB0aGVuIHJlZmluYW5jZS4KVGhhdCB3b3JrZWQgd2hlbiBob3VzZSBwcmljZXMgd2VyZSByaXNpbmcgZmFzdCwgYnV0IG5vdyB0aGF0IHByaWNlcyBhcmUgZmxhdCBvciBmYWxsaW5nLCBpdCBpcyBwcm92aW5nIHVuc3VzdGFpbmFibGUsIHNhaWQgS2VpdGggRXJuc3QsIGEgc2VuaW9yIHBvbGljeSBjb3Vuc2VsIGF0IHRoZSBDZW50ZXIgZm9yIFJlc3BvbnNpYmxlIExlbmRpbmcuCsKTU3VicHJpbWUgbGVuZGluZyBoYWQgcHJvYmxlbXMgd2l0aCB1bmRlcndyaXRpbmcgZm9yIGEgd2hpbGUsIGFuZCBpdCB3YXMgZXZpZGVudCBpbiB3ZWFrIGhvdXNpbmcgbWFya2V0cyDClyBqdXN0IGFzayB0aGUgcGVvcGxlIGluIENsZXZlbGFuZCzClCBNci4gRXJuc3Qgc2FpZC4gwpNOb3cgdGhhdCB0aGUgd2Vha25lc3MgaXMgd2lkZXNwcmVhZCwgaXQgaGFzIHB1bGxlZCB0aGUgY292ZXJzIG9uIGFsbCBzdWJwcmltZSBsb2Fucy7ClAo=
[(QXMgRGVmYXVsdHMgUmlzZSwgV2FzaGluZ3RvbiBXb3JyaWVzCkR1cmluZyB0aGUgc3VtbWVywpJzIGNyZWRpdCBjcmlzaXMsIGludmVzdG9ycyBjb25jbHVkZWQgdGhhdCB0aGUgZGVmYXVsdCByYXRlcyBvbiBzdWJwcmltZSBtb3J0Z2FnZXMgbWFkZSBsYXN0IHllYXIgd291bGQgcHJvYmFibHkgcHJvdmUgdG8gYmUgdGhlIGhpZ2hlc3QgaW4gdGhlIGluZHVzdHJ5wpJzIGhpc3RvcnkuCkJ1dCB0aGVyZSBub3cgYXBwZWFycyB0byBiZSBhbm90aGVyIGNvbnRlbmRlciBmb3IgdGhhdCBkdWJpb3VzIGhvbm9yOiBsb2FucyBtYWRlIGluIHRoZSBmaXJzdCBoYWxmIG9mIHRoaXMgeWVhci4KQm9ycm93ZXJzIHdobyB0b29rIG91dCBsb2FucyBpbiB0aGUgZmlyc3Qgc2l4IG1vbnRocyBvZiAyMDA3IGFyZSBmYWxsaW5nIGJlaGluZCBvbiBwYXltZW50cyBmYXN0ZXIgdGhhbiBob21lb3duZXJzIHdobyB0b29rIG91dCBsb2FucyBsYXN0IHllYXIsIGFjY29yZGluZyB0byBhIHJlcG9ydCBieSBGcmllZG1hbiwgQmlsbGluZ3MsIFJhbXNleSwgYW4gaW52ZXN0bWVudCBiYW5rIGJhc2VkIGluIEFybGluZ3RvbiwgVmEuClRoZSBkYXRhIHN1Z2dlc3RlZCB0aGF0IG1vcmUgQW1lcmljYW5zIGNvdWxkIGxvc2UgdGhlaXIgaG9tZXMgYW5kIHRoYXQgdGhlIGhvdXNpbmcgbWFya2V0wpJzIHRyb3VibGVzIG1pZ2h0IHBlcnNpc3QgbG9uZ2VyIHRoYW4gbWFueSBhbmFseXN0cyBoYXZlIGJlZW4gcHJlZGljdGluZy4KVGhlIHJlcG9ydMKScyBhdXRob3IsIE1pY2hhZWwgRC4gWW91bmdibG9vZCwgYSBwb3J0Zm9saW8gbWFuYWdlciBhbmQgYW5hbHlzdCBhdCBGcmllZG1hbiwgQmlsbGluZ3MsIFJhbXNleSwgc2FpZCB0aGF0IG1vc3QgbW9ydGdhZ2UgY29tcGFuaWVzIGFuZCBiYW5rcyBoYWQgbm90IHRpZ2h0ZW5lZCBsZW5kaW5nIHN0YW5kYXJkcyBmb3IgYm9ycm93ZXJzIHdpdGggd2Vhaywgb3Igc3VicHJpbWUsIGNyZWRpdCB1bnRpbCBKdWx5IG9yIEF1Z3VzdCwgZXZlbiB0aG91Z2ggZWFybHkgdGhpcyB5ZWFyIHJlZ3VsYXRvcnMsIGFuYWx5c3RzIGFuZCBtb3J0Z2FnZSBpbnZlc3RvcnMga25ldyB0aGF0IHRoZSBlYXN5IGxlbmRpbmcgcG9saWNpZXMgb2YgMjAwNSBhbmQgMjAwNiB3ZXJlIHByb2R1Y2luZyBoaWdoIGRlZmF1bHQgcmF0ZXMuCsKTVGhlcmUgYXJlICQxMC42IHRyaWxsaW9uIG9mIG1vcnRnYWdlIGxvYW5zIG91dHN0YW5kaW5nIGluIHRoZSBVLlMuLCBhbmQgZXZlbiBpZiB0aGUgYnJha2VzIGhhZCBiZWVuIHNsYW1tZWQsIGl0IHdhcyBnb2luZyB0byB0YWtlIGEgbG9uZyB0aW1lIHRvIHNsb3cgdGhpcyBsb2NvbW90aXZlIGRvd24swpQgc2FpZCBNci4gWW91bmdibG9vZCwgd2hvIGhhcyByZXNlYXJjaGVkIGhvbWUgbGVuZGluZyBmb3IgbW9yZSB0aGFuIDIwIHllYXJzLiDCk0FuZCBJIGRvbsKSdCBzZWUgdGhhdCB0aGUgYnJha2VzIHdlcmUgc2xhbW1lZCBvbiBvciB0aGF0IHRoZSBlbmdpbmVlciBoYWQgYSBuZXcgdHJhY2sgdG8gZm9sbG93LgpUaGF0IHRyYWNrIG9ubHkgbm93IHNlZW1zIHRvIGJlIGFwcGVhcmluZy7ClApIZSBub3RlZCB0aGF0IENvdW50cnl3aWRlIEZpbmFuY2lhbCwgdGhlIG5hdGlvbsKScyBsYXJnZXN0IGxlbmRlciB3aG9zZSBwcmFjdGljZXMgYXJlIG9mdGVuIGVtdWxhdGVkIGJ5IHNtYWxsZXIgY29tcGFuaWVzLCBkaWQgbm90IHNpZ25pZmljYW50bHkgdGlnaHRlbiBzdGFuZGFyZHMgdW50aWwgQXVndXN0LgpBbmQgaXQgd2FzIG9ubHkgaW4gbWlkLUp1bHkgdGhhdCBNb29kecKScyBJbnZlc3RvcnMgU2VydmljZSBhbmQgU3RhbmRhcmQgJiBQb29ywpJzLCB0aGUgbGFyZ2UgcmF0aW5ncyBhZ2VuY2llcywgc2FpZCB0aGV5IHdvdWxkIG1ha2UgbWFqb3IgY2hhbmdlcyBpbiB0aGUgYXNzdW1wdGlvbnMgdGhhdCB0aGV5IHVzZSB0byBldmFsdWF0ZSBwb29scyBvZiBob21lIGxvYW5zIHNvbGQgdG8gaW52ZXN0b3JzLgpBcyBvZiBBdWd1c3QsIGRlZmF1bHQgcmF0ZXMgb24gYWRqdXN0YWJsZS1yYXRlIHN1YnByaW1lIG1vcnRnYWdlcyB3cml0dGVuIGluIDIwMDcgaGFkIHJlYWNoZWQgOC4wNSBwZXJjZW50LCB1cCBmcm9tIDUuNzcgcGVyY2VudCBpbiBKdWx5LCBhY2NvcmRpbmcgdG8gTXIuIFlvdW5nYmxvb2TCknMgYW5hbHlzaXMgb2YgcG9vbHMgb2YgaG9tZSBsb2FucyBwdXQgdG9nZXRoZXIgYnkgV2FsbCBTdHJlZXQgYmFua3MgYW5kIHNvbGQgdG8gaW52ZXN0b3JzLgpCeSBjb21wYXJpc29uLCBvbmx5IDUuMzYgcGVyY2VudCBvZiBzdWNoIGxvYW5zIG1hZGUgbGFzdCB5ZWFyIGhhZCBkZWZhdWx0ZWQgYnkgQXVndXN0IDIwMDYuCkRlZmF1bHQgcmF0ZXMgb24gZml4ZWQtcmF0ZSBzdWJwcmltZSBtb3J0Z2FnZXMgd2VyZSBsb3dlciwgYnV0IHdlcmUgcmlzaW5nIGF0IGEgc2ltaWxhciBwYWNlLgpEYXRhIGFuYWx5emVkIGJ5IE1vb2R5wpJzIGNvbmZpcm1zIHRoZSB0cmVuZCBNci4gWW91bmdibG9vZCBoYXMgaWRlbnRpZmllZC4KRXhlY3V0aXZlcyBhdCBNb29kecKScyBzYXkgdGhleSBhcmUgbW9uaXRvcmluZyB0aGUgcGVyZm9ybWFuY2Ugb2YgcmVjZW50IGxvYW5zLCBidXQgd2VyZSBub3QgeWV0IHJlYWR5IHRvIGRpc2N1c3MgdGhlaXIgY29uY2x1c2lvbnMuCkl0IGlzIHVuY2xlYXIgd2hldGhlciBsb2FucyBtYWRlIGluIHRoZSBsYXN0IGNvdXBsZSBvZiBtb250aHMgYXJlIHN0cm9uZ2VyLCBiZWNhdXNlIGxlbmRlcnMgd2VyZSBtYWtpbmcgYW5kIHNlY3VyaXRpemluZyBmYXIgZmV3ZXIgb2YgdGhlbSBhbmQgaW52ZXN0b3JzIGhhdmUgZ3Jvd24gd2FyeSBvZiBib25kcyBiYWNrZWQgYnkgc3VicHJpbWUgbW9ydGdhZ2VzLgrCk1lvdSBtYXkgbm90IGhlYXIgdGhhdCBtdWNoIGFib3V0IHRoYXQgc3R1ZmYsIGJlY2F1c2UgaXTCknMgbm90IHNlZWluZyB0aGUgbGlnaHQgb2YgZGF5LMKUIHNhaWQgRXZhbiBNaXRuaWNrLCBhIG1hbmFnaW5nIGRpcmVjdG9yIGF0IFdlc3R3b29kIENhcGl0YWwsIGEgYm91dGlxdWUgaW52ZXN0bWVudCBiYW5rIGluIE5ldyBZb3JrLgpJbiB0aGUgZmlyc3Qgc2l4IG1vbnRocyBvZiB0aGUgeWVhciwgV2FsbCBTdHJlZXQgc2VjdXJpdGl6ZWQgJDIxNSBiaWxsaW9uIGluIHN1YnByaW1lIGxvYW5zLCBkb3duIDIzIHBlcmNlbnQgZnJvbSB0aGUgY29tcGFyYWJsZSBwZXJpb2QgYSB5ZWFyIGVhcmxpZXIsIGFjY29yZGluZyB0byBGcmllZG1hbiwgQmlsbGluZ3MsIFJhbXNleS4KQnkgdGhlIGVuZCBvZiBBdWd1c3QsIHRoZSB0b3RhbCBoYWQgZHJvcHBlZCBieSAzMyBwZXJjZW50IGZyb20gdGhlIGNvbXBhcmFibGUgZWlnaHQgbW9udGhzIG9mIDIwMDYuClRoZSByZWNlbnQgd2Vha25lc3MgaW4gam9iIGdyb3d0aCBhbmQgZmFsbGluZyBob21lIHByaWNlcyBpbiBtYW55IHBhcnRzIG9mIHRoZSBjb3VudHJ5IGhhdmUgcHJvYmFibHkgY29udHJpYnV0ZWQgdG8gdGhlIGhpZ2hlciBkZWZhdWx0IHJhdGVzIG9uIGxvYW5zIGZyb20gZWFybHkgdGhpcyB5ZWFyLCBzcGVjaWFsaXN0cyBzYXkuCkpvYiBsb3NzZXMgaW4gdGhlIGhvdXNpbmcgaW5kdXN0cnkgaGF2ZSBwdXQgcHJlc3N1cmUgb24gdGhlIGVjb25vbWllcyBvZiBmb3JtZXJseSBmYXN0LWdyb3dpbmcgc3RhdGVzIGxpa2UgQXJpem9uYSBhbmQgRmxvcmlkYS4KQW5kIGRlY2xpbmluZyBob21lIHByaWNlcyBoYXZlIG1hZGUgaXQgaGFyZGVyIGZvciBib3Jyb3dlcnMgdG8gcmVmaW5hbmNlIGxvYW5zLCBlc3BlY2lhbGx5IGluIGNhc2VzIHdoZXJlIHRoZSBidXllcnMgY291bGQgYWZmb3JkIHRoZSBob21lcyBvbmx5IHdpdGggdGhlIGhlbHAgb2YgdGhlIGxvdyBpbnRyb2R1Y3RvcnkgcmF0ZXMgb24gYWRqdXN0YWJsZSBtb3J0Z2FnZXMuClRob3NlIGJvcnJvd2VycyBhcmUgZXhwZWN0ZWQgdG8gZW5jb3VudGVyIGZ1cnRoZXIgc3RyYWluIGluIHRoZSBtb250aHMgYW5kIHllYXJzIGFoZWFkIGFzIHRoZWlyIGxvYW5zIGFyZSByZXNldCB0byBoaWdoZXIgdmFyaWFibGUgcmF0ZXMuCldoZW4gdGhleSB0cnkgdG8gcmVmaW5hbmNlIHRoZWlyIG1vcnRnYWdlcywgbWFueSBvZiB0aGVtIHdpbGwgZmFjZSBzdHJpY3RlciBsZW5kaW5nIHN0YW5kYXJkcy4KTWFueSBsZW5kZXJzIGFyZSBub3cgcmVxdWlyaW5nIGJvcnJvd2VycyB0byBwcm92aWRlIGRvY3VtZW50YXRpb24gb2YgdGhlaXIgaW5jb21lcywgYW5kIHRoZXkgd2lsbCBub3QgbGVuZCBtb3JlIHRoYW4gODAgdG8gOTAgcGVyY2VudCBvZiBhIGhvdXNlwpJzIHZhbHVlLgpBIHN1cnZleSBvZiA1MDAgYm9ycm93ZXJzIHdpdGggYWRqdXN0YWJsZS1yYXRlIGxvYW5zIHJlbGVhc2VkIHllc3RlcmRheSBpbiBDbGV2ZWxhbmQgc2hvd2VkIHRoYXQgdGhlIHJlc2V0dGluZyBvZiByYXRlcyB3aWxsIHB1dCBhIHNpZ25pZmljYW50IHN0cmFpbiBvbiBob21lb3duZXJzLgpBbW9uZyBib3Jyb3dlcnMgd2hvc2UgcmF0ZXMgaGF2ZSBhbHJlYWR5IGJlZW4gcmVzZXQsIDQxIHBlcmNlbnQgc2FpZCB0aGV5IHdlcmUgd29ycmllZCBhYm91dCB0aGVpciBhYmlsaXR5IHRvIG1ha2UgcGF5bWVudHMsIGNvbXBhcmVkIHdpdGggMTggcGVyY2VudCBvZiBib3Jyb3dlcnMgd2hvc2UgcmF0ZXMgaGFkIG5vdCBiZWVuIHJlc2V0IHlldC4KTmVhcmx5IHRocmVlLXF1YXJ0ZXJzIG9mIGZhbWlsaWVzIHdpdGggaW5jb21lcyBsZXNzIHRoYW4gJDUwLDAwMCBhIHllYXIgc2FpZCB0aGF0IGFuIGluY3JlYXNlIGluIHRoZWlyIHJhdGVzIHdvdWxkIGh1cnQgdGhlbSwgY29tcGFyZWQgd2l0aCA0MCBwZXJjZW50IHdpdGggaW5jb21lcyBhYm92ZSAkNTAsMDAwLgpUaGUgc3VydmV5IHdhcyBjb25kdWN0ZWQgYnkgUGV0ZXIgRC4gSGFydCBSZXNlYXJjaCBBc3NvY2lhdGVzIG9uIGJlaGFsZiBvZiB0aGUgQS5GLkwuLUMuSS5PLiwgd2hpY2ggaXMgc2V0dGluZyB1cCBhIHRlbGVwaG9uZSBoZWxwIGxpbmUgZm9yIHRyb3VibGVkIGhvbWVvd25lcnMuCkZpbmFuY2luZyBob21lcyB3aXRoIGFkanVzdGFibGUgbW9ydGdhZ2VzIHdhcyBwb3B1bGFyIGR1cmluZyB0aGUgaG91c2luZyBib29tIGJlY2F1c2UgdGhlIGJvcnJvd2VycyBjb3VsZCBlbmpveSBsb3dlciByYXRlcyBpbiB0aGUgZmlyc3QgdHdvIG9yIHRocmVlIHllYXJzIGFuZCB0aGVuIHJlZmluYW5jZS4KVGhhdCB3b3JrZWQgd2hlbiBob3VzZSBwcmljZXMgd2VyZSByaXNpbmcgZmFzdCwgYnV0IG5vdyB0aGF0IHByaWNlcyBhcmUgZmxhdCBvciBmYWxsaW5nLCBpdCBpcyBwcm92aW5nIHVuc3VzdGFpbmFibGUsIHNhaWQgS2VpdGggRXJuc3QsIGEgc2VuaW9yIHBvbGljeSBjb3Vuc2VsIGF0IHRoZSBDZW50ZXIgZm9yIFJlc3BvbnNpYmxlIExlbmRpbmcuCsKTU3VicHJpbWUgbGVuZGluZyBoYWQgcHJvYmxlbXMgd2l0aCB1bmRlcndyaXRpbmcgZm9yIGEgd2hpbGUsIGFuZCBpdCB3YXMgZXZpZGVudCBpbiB3ZWFrIGhvdXNpbmcgbWFya2V0cyDClyBqdXN0IGFzayB0aGUgcGVvcGxlIGluIENsZXZlbGFuZCzClCBNci4gRXJuc3Qgc2FpZC4gwpNOb3cgdGhhdCB0aGUgd2Vha25lc3MgaXMgd2lkZXNwcmVhZCwgaXQgaGFzIHB1bGxlZCB0aGUgY292ZXJzIG9uIGFsbCBzdWJwcmltZSBsb2Fucy7ClAo=, 'ORG')]
RmFjZWJvb2sgQWdyZWVzIHRvIE9ic2Nlbml0eSBTYWZlZ3VhcmRzCkZpbGVkIGF0IDI6MDUgcC5tLgpORVcgWU9SSyAoQVApIC0tIE5ldyBZb3JrIEF0dG9ybmV5IEdlbmVyYWwgQW5kcmV3IEN1b21vIG9uIFR1ZXNkYXkgYW5ub3VuY2VkIGFuIGFncmVlbWVudCB3aXRoIHNvY2lhbCBuZXR3b3JraW5nIFdlYiBzaXRlIEZhY2Vib29rIHRvIGVuZm9yY2Ugc2FmZWd1YXJkcyBhZ2FpbnN0IG9ic2NlbmUgY29udGVudCBhbmQgc2V4dWFsIHByZWRhdG9ycyB1c2luZyB0aGUgc2l0ZS4KVGhlIGFncmVlbWVudCBjYWxscyBmb3IgRmFjZWJvb2sgdG8gcmVzcG9uZCBhbmQgYmVnaW4gYWRkcmVzc2luZyBjb21wbGFpbnRzIG9mIG51ZGl0eSBvciBwb3Jub2dyYXBoeSBvciB1bndlbGNvbWUgY29udGFjdCB3aXRoaW4gMjQgaG91cnMgb2YgcmVjZWl2aW5nIHRoZW0sIGFuZCB0byByZXBvcnQgdG8gdGhlIGNvbXBsYWluYW50IHdpdGhpbiA3MiBob3VycyBvbiBob3cgaXQgd2lsbCByZXNwb25kLgpJdCBhbHNvIGNhbGxzIGZvciBGYWNlYm9vaywgd2hpY2ggaGFzIGFib3V0IDQ3IG1pbGxpb24gdXNlcnMsIHRvIGFsbG93IHNvbWVvbmUgaW5kZXBlbmRlbnQgLS0gYW5kIGFwcHJvdmVkIGJ5IEN1b21vJ3Mgb2ZmaWNlIC0tIHRvIHJlcG9ydCBmb3IgdHdvIHllYXJzIG9uIGl0cyBjb21wbGlhbmNlIHdpdGggdGhlIG5ldyBzYWZlZ3VhcmRzLgpUaGVzZSBzb2NpYWwgbmV0d29ya2luZyBzaXRlcyBhcmUgYXR0cmFjdGl2ZS4KV2Ugd2FudCB0byBtYWtlIHN1cmUgdGhleSdyZSBzYWZlLCIgQ3VvbW8gc2FpZCBhdCBhIG5ld3MgY29uZmVyZW5jZS4KRmFjZWJvb2sgd2lsbCBoYXZlIHRoZSBzYWZlc3QgaW50ZXJhY3Rpb25zIG9mIGl0cyBraW5kIG9uIHRoZSBJbnRlcm5ldC4KVW5kZXIgdGhlIGFncmVlbWVudCwgdGhlIFBhbG8gQWx0bywgQ2FsaWYuLWJhc2VkIGNvbXBhbnkgd2lsbCBoYXZlIHRvIHBvc3QgdGhlIHNhZmV0eSBwcm9jZWR1cmVzIG9uIGl0cyBXZWIgc2l0ZS4KIldlIGNhcmUgZGVlcGx5IGFib3V0IG91ciBGYWNlYm9vayB1c2VycyBhbmQgdG9kYXkgd2UgcGxlZGdlIGEgc29sdXRpb24sIiBzYWlkIENocmlzIEtlbGx5LCB0aGUgY2hpZWYgcHJpdmFjeSBvZmZpY2VyIGZvciBGYWNlYm9vaywgd2hvIGpvaW5lZCBDdW9tbyBpbiBhbm5vdW5jaW5nIHRoZSBhZ3JlZW1lbnQuCldlIGJlbGlldmUgdGhhdCBzYWZldHkgaXMgYW4gb25nb2luZyBwcm9jZXNzLgpJbiByZXNwb25zZSB0byBhIHF1ZXN0aW9uLCBLZWxseSBzYWlkIEZhY2Vib29rIHJlY2VpdmVzIHRlbnMgb2YgdGhvdXNhbmRzIG9mIGNvbXBsYWludHMgYSBkYXksIG5vdCBhbGwgb2YgdGhlbSBhYm91dCBpbmFwcHJvcHJpYXRlIGNvbnRlbnQuCldpdGggdGhlIGFncmVlbWVudCwgaGUgc2FpZCwgY29tcGxhaW50cyBhYm91dCB1bndlbGNvbWUgY29udGVudCB3aWxsIGJlIHB1c2hlZCB0byB0aGUgdG9wIG9mIHRoZSBxdWV1ZS4KQ3VvbW8gc2FpZCBoZSBob3BlZCB0aGF0IG90aGVyIHNvY2lhbCBuZXR3b3JraW5nIHNpdGVzIHdvdWxkIGZvbGxvdyBGYWNlYm9vaydzIGxlYWQuCkhlIHNhaWQgaGlzIG9mZmljZSB3YXMgaW4gZGlzY3Vzc2lvbnMgd2l0aCBvdGhlciBzaXRlcywgYnV0IGhlIGRlY2xpbmVkIHRvIG5hbWUgdGhlbS4K
[(RmFjZWJvb2sgQWdyZWVzIHRvIE9ic2Nlbml0eSBTYWZlZ3VhcmRzCkZpbGVkIGF0IDI6MDUgcC5tLgpORVcgWU9SSyAoQVApIC0tIE5ldyBZb3JrIEF0dG9ybmV5IEdlbmVyYWwgQW5kcmV3IEN1b21vIG9uIFR1ZXNkYXkgYW5ub3VuY2VkIGFuIGFncmVlbWVudCB3aXRoIHNvY2lhbCBuZXR3b3JraW5nIFdlYiBzaXRlIEZhY2Vib29rIHRvIGVuZm9yY2Ugc2FmZWd1YXJkcyBhZ2FpbnN0IG9ic2NlbmUgY29udGVudCBhbmQgc2V4dWFsIHByZWRhdG9ycyB1c2luZyB0aGUgc2l0ZS4KVGhlIGFncmVlbWVudCBjYWxscyBmb3IgRmFjZWJvb2sgdG8gcmVzcG9uZCBhbmQgYmVnaW4gYWRkcmVzc2luZyBjb21wbGFpbnRzIG9mIG51ZGl0eSBvciBwb3Jub2dyYXBoeSBvciB1bndlbGNvbWUgY29udGFjdCB3aXRoaW4gMjQgaG91cnMgb2YgcmVjZWl2aW5nIHRoZW0sIGFuZCB0byByZXBvcnQgdG8gdGhlIGNvbXBsYWluYW50IHdpdGhpbiA3MiBob3VycyBvbiBob3cgaXQgd2lsbCByZXNwb25kLgpJdCBhbHNvIGNhbGxzIGZvciBGYWNlYm9vaywgd2hpY2ggaGFzIGFib3V0IDQ3IG1pbGxpb24gdXNlcnMsIHRvIGFsbG93IHNvbWVvbmUgaW5kZXBlbmRlbnQgLS0gYW5kIGFwcHJvdmVkIGJ5IEN1b21vJ3Mgb2ZmaWNlIC0tIHRvIHJlcG9ydCBmb3IgdHdvIHllYXJzIG9uIGl0cyBjb21wbGlhbmNlIHdpdGggdGhlIG5ldyBzYWZlZ3VhcmRzLgpUaGVzZSBzb2NpYWwgbmV0d29ya2luZyBzaXRlcyBhcmUgYXR0cmFjdGl2ZS4KV2Ugd2FudCB0byBtYWtlIHN1cmUgdGhleSdyZSBzYWZlLCIgQ3VvbW8gc2FpZCBhdCBhIG5ld3MgY29uZmVyZW5jZS4KRmFjZWJvb2sgd2lsbCBoYXZlIHRoZSBzYWZlc3QgaW50ZXJhY3Rpb25zIG9mIGl0cyBraW5kIG9uIHRoZSBJbnRlcm5ldC4KVW5kZXIgdGhlIGFncmVlbWVudCwgdGhlIFBhbG8gQWx0bywgQ2FsaWYuLWJhc2VkIGNvbXBhbnkgd2lsbCBoYXZlIHRvIHBvc3QgdGhlIHNhZmV0eSBwcm9jZWR1cmVzIG9uIGl0cyBXZWIgc2l0ZS4KIldlIGNhcmUgZGVlcGx5IGFib3V0IG91ciBGYWNlYm9vayB1c2VycyBhbmQgdG9kYXkgd2UgcGxlZGdlIGEgc29sdXRpb24sIiBzYWlkIENocmlzIEtlbGx5LCB0aGUgY2hpZWYgcHJpdmFjeSBvZmZpY2VyIGZvciBGYWNlYm9vaywgd2hvIGpvaW5lZCBDdW9tbyBpbiBhbm5vdW5jaW5nIHRoZSBhZ3JlZW1lbnQuCldlIGJlbGlldmUgdGhhdCBzYWZldHkgaXMgYW4gb25nb2luZyBwcm9jZXNzLgpJbiByZXNwb25zZSB0byBhIHF1ZXN0aW9uLCBLZWxseSBzYWlkIEZhY2Vib29rIHJlY2VpdmVzIHRlbnMgb2YgdGhvdXNhbmRzIG9mIGNvbXBsYWludHMgYSBkYXksIG5vdCBhbGwgb2YgdGhlbSBhYm91dCBpbmFwcHJvcHJpYXRlIGNvbnRlbnQuCldpdGggdGhlIGFncmVlbWVudCwgaGUgc2FpZCwgY29tcGxhaW50cyBhYm91dCB1bndlbGNvbWUgY29udGVudCB3aWxsIGJlIHB1c2hlZCB0byB0aGUgdG9wIG9mIHRoZSBxdWV1ZS4KQ3VvbW8gc2FpZCBoZSBob3BlZCB0aGF0IG90aGVyIHNvY2lhbCBuZXR3b3JraW5nIHNpdGVzIHdvdWxkIGZvbGxvdyBGYWNlYm9vaydzIGxlYWQuCkhlIHNhaWQgaGlzIG9mZmljZSB3YXMgaW4gZGlzY3Vzc2lvbnMgd2l0aCBvdGhlciBzaXRlcywgYnV0IGhlIGRlY2xpbmVkIHRvIG5hbWUgdGhlbS4K, 'PERSON')]
TWF0dXJpbmcgUm9iaW5zb24gTWF5IFNlZSBCaWdnZXIgUm9sZSBXaXRoIEtuaWNrcwpHUkVFTkJVUkdILCBOLlkuLCBPY3QuIDIzIMKXIEFzIGhpcyB0aGlyZCBOLkIuQS4gc2Vhc29uIGFwcHJvYWNoZXMsIE5hdGUgUm9iaW5zb24gYXBwZWFycyB0byBoYXZlIGZpbmFsbHkgbG9jYXRlZCB0aGUgc3dpdGNoIHRvIGhpcyBlbW90aW9ucy4KSGUgc2F5cyBoZSBjYW4gZmxpcCBpdCBhdCB3aWxsLCBhbiB1bm1pc3Rha2FibGUgc2lnbiBvZiBtYXR1cml0eS4KRXhoaWJpdCBBIGNhbWUgTW9uZGF5IG5pZ2h0LgpJbiB0aGUgZm91cnRoIHF1YXJ0ZXIgb2YgdGhlIEtuaWNrc8KSIDk0LTg3IGV4aGliaXRpb24gdmljdG9yeSBvdmVyIHRoZSBCb3N0b24gQ2VsdGljcywgUm9iaW5zb24gYW5kIFRvbnkgQWxsZW4gZ290IGludG8gYSB0aWZmIGFmdGVyIGNvbGxpZGluZyB3aGlsZSBjaGFzaW5nIGEgbG9vc2UgYmFsbC4KUm9iaW5zb24gd2FzIGFuaW1hdGVkIGF0IGZpcnN0IGJ1dCBxdWlja2x5IHR1cm5lZCBvZmYgdGhlIHN3aXRjaCwgd2Fsa2luZyBhd2F5LgpEdXJpbmcgaGlzIGZpcnN0IHR3byBzZWFzb25zLCBSb2JpbnNvbiB3YXMgaW1wZXR1b3VzLCB3aWxkIGFuZCB1bnByZWRpY3RhYmxlLgpIZSB3YXMgc3VzcGVuZGVkIGZvciAxMCBnYW1lcyBmb3IgYmVpbmcgYXQgdGhlIGVwaWNlbnRlciBvZiBhIGJyYXdsIHdpdGggdGhlIERlbnZlciBOdWdnZXRzIGxhc3QgRGVjLiAxNi4KQnV0IG5vdyB0aGF0IFJvYmluc29uLCAyMywgaGFzIGFkZGVkIGEgaGVhbHRoeSBkb3NlIG9mIHJlc3BvbnNpYmlsaXR5IHRvIGhpcyBnYW1lLCBoZSBzZWVtcyBwb2lzZWQgdG8gcGxheSBhIGxhcmdlciByb2xlIGluIHRoZSBLbmlja3PCkiByb3RhdGlvbiwgcGVyaGFwcyBhcyB0aGUgZmlyc3QgZ3VhcmQgb2ZmIHRoZSBiZW5jaC4KwpNJdCB3YXMgc3VjaCBhIHJ1c2gswpQgUm9iaW5zb24gc2FpZCBUdWVzZGF5IHdoZW4gYXNrZWQgYWJvdXQgaGlzIHJvb2tpZSBzZWFzb24uIMKTSSB3YXMganVzdCBzbyBoYXBweSB0byBiZSBoZXJlLgpJIGp1c3Qgd2FudGVkIHRvIHBsYXkgYW5kIGp1c3QgZ2V0IGV2ZXJ5Ym9keSBpbnZvbHZlZC4KSSB3YXMgbGlrZSBhIGxpdmUgd2lyZS4KTm93IEnCkm0gY29udHJvbGxpbmcgaXQuCkl0wpJzIG1lIGxlYXJuaW5nIGhvdyB0byB0dXJuIGl0IG9mZiBhbmQgb24uwpQKVGhlIEtuaWNrcyBzZWUgUm9iaW5zb24gYXMgYSBwb2ludCBndWFyZCB3aG8gY2FuIGRpc3RyaWJ1dGUgdGhlIGJhbGwgd2l0aG91dCBkYW1wZW5pbmcgaGlzIGV4cGxvc2l2ZSBzY29yaW5nIGFiaWxpdGllcy4KSGUgd2FzIGVmZmVjdGl2ZSBhZ2FpbnN0IHRoZSBDZWx0aWNzLCBmaW5pc2hpbmcgd2l0aCAyMCBwb2ludHMgYW5kIDQgYXNzaXN0cyBpbiAyOCBtaW51dGVzLgpIZSBncmFiYmVkIG5pbmUgcmVib3VuZHMsIGFuIGltcHJlc3NpdmUgZmVhdCBmb3Igc29tZW9uZSBsaXN0ZWQgYXQgNSBmZWV0IDkgaW5jaGVzLgrCk1RoYXTCknMgdGhlIHdheSB3ZSB3aW4gYmFza2V0YmFsbCBnYW1lcyzClCBDb2FjaCBJc2lhaCBUaG9tYXMgc2FpZCBvZiBSb2JpbnNvbsKScyByZWJvdW5kaW5nIHNraWxscy4gwpNXZSB3YW50IHRvIGNvbnRyb2wgdGhlIGdsYXNzLCB3ZSB3YW50IHRvIGdldCB0byB0aGUgZm91bCBsaW5lIGFuZCB3ZSB3YW50IHRvIGxpbWl0IHRoZSBvcHBvbmVudCB0byBvbmUgc2hvdC7ClApSb2JpbnNvbiwgd2hvIGF2ZXJhZ2VkIDEwLjEgcG9pbnRzIGxhc3Qgc2Vhc29uLCBpcyBzdGlsbCBsZWFybmluZyB0byBwbGF5IHRoZSBwb2ludDsgYXQgdGhlIFVuaXZlcnNpdHkgb2YgV2FzaGluZ3RvbiBoZSB3YXMgYSBzaG9vdGluZyBndWFyZC4KSGUgc2FpZCBoZSBkaWQgbm90IGhhdmUgYSBwcmVmZXJlbmNlIGZvciB3aGljaCBwb3NpdGlvbiBoZSBwbGF5ZWQsIGFkZGluZyB0aGF0IFRob21hcyBoYWQgbm90IGhpbnRlZCB3aGV0aGVyIGhlIHdvdWxkIGJlIHRoZSB0ZWFtwpJzIHRoaXJkIGd1YXJkLgpBdCB0aGUgZW5kIG9mIGxhc3Qgc2Vhc29uLCBUaG9tYXMgc2VlbWVkIHRvIGZhdm9yIE1hcmR5IENvbGxpbnMgb3ZlciBSb2JpbnNvbi4KQ29sbGlucyB3YXMgZXZlcnl0aGluZyBSb2JpbnNvbiB3YXMgbm90IMKXIGEgc3RlYWR5IHBsYXllciB3aG8gbWFkZSBzb2xpZCBkZWNpc2lvbnMuCkJ1dCBpbiB0aGUgb2ZmLXNlYXNvbiwgUm9iaW5zb24gd29ya2VkIGhhcmQgb24gY29udHJvbGxpbmcgaGlzIGVtb3Rpb25zIGFuZCBjaGFubmVsaW5nIGhpcyBlbmVyZ3kuCkhlIHdhcyBuYW1lZCB0aGUgbW9zdCB2YWx1YWJsZSBwbGF5ZXIgb2YgdGhlIE4uQi5BLsKScyBzdW1tZXIgbGVhZ3VlLgrCk0hlwpJzIGV4dHJlbWVseSBnaWZ0ZWQgYXRobGV0aWNhbGx5LMKUIFRob21hcyBzYWlkLiDCk0FuZCBub3cgaGXCknMgZ3Jhc3BpbmcgYW5kIHVuZGVyc3RhbmRpbmcgdGhlIHBybyBnYW1lLsKUCkR1cmluZyBhbiBpbXByZXNzaXZlIHRyYWluaW5nIGNhbXAgYW5kIHByZXNlYXNvbiwgUm9iaW5zb24gb3V0cGVyZm9ybWVkIHNvbWUgb2YgdGhlIGd1YXJkcyB3aG8gY291bGQgaGF2ZSBiZWVuIHBlcmNlaXZlZCBhcyBhIHRocmVhdCB0byBoaXMgcGxheWluZyB0aW1lLCBpbmNsdWRpbmcgQ29sbGlucywgdGhlIHNlY29uZC1yb3VuZCBwaWNrIERlbWV0cmlzIE5pY2hvbHMgYW5kIEZyZWQgSm9uZXMsIHdobyBjYW1lIHRvIHRoZSBLbmlja3MgZnJvbSBQb3J0bGFuZCBpbiB0aGUgWmFjaCBSYW5kb2xwaCB0cmFkZS4KUm9iaW5zb24gc2FpZCBoZSBpZG9saXplZCBhIGhhbmRmdWwgb2YgcGxheWVycyB3aGlsZSBncm93aW5nIHVwIGluIFNlYXR0bGUuClN0ZXZlIEZyYW5jaXMgYW5kIFN0ZXBob24gTWFyYnVyeSB0b3BwZWQgaGlzIGxpc3QuCkZyYW5jaXMgd2FzIHRyYWRlZCB0byBQb3J0bGFuZCBpbiB0aGUgb2ZmLXNlYXNvbiwgd2hpY2ggY3JlYXRlZCBhIG5lZWQgZm9yIGEgcmVsaWFibGUgYmFja3VwIHRvIE1hcmJ1cnkuClRoZSBLbmlja3Mgd2FudCBhIGd1YXJkIHdobyB3aWxsIG5vdCBnZXQgaW4gaGlzIG93biB3YXkuClJvYmluc29uIHNheXMgaGUgaXMgcmVhZHkgZm9yIHRoZSBjaGFsbGVuZ2UuCkFza2VkIGhvdyBoZSBoYWQgY2hhbmdlZCBmcm9tIHRoaXMgcG9pbnQgbGFzdCBzZWFzb24sIFJvYmluc29uIHdhcyBxdWljayB0byBhbnN3ZXIuCsKTScKSbSB3YXkgYmV0dGVyLMKUIGhlIHNhaWQuIMKTScKSbSBtb3JlIGZvY3VzZWQuCkV2ZXJ5dGhpbmfCknMgY29taW5nIHNvIG11Y2ggZWFzaWVyIHRvIG1lLgpJwpJtIGp1c3Qgc2xvd2luZyBldmVyeXRoaW5nIGRvd24uCkl0wpJzIGtpbmQgb2Ygd29ya2luZyBvdXQgZm9yIHRoZSBiZXN0LsKUCg==
[]
QWZnaGFuaXN0YW46IDIgTkFUTyBTb2xkaWVycyBLaWxsZWQKSW5zdXJnZW50cyBhbWJ1c2hlZCBOQVRPLWxlZCBmb3JjZXMgaW4gdGhlIG1vdW50YWlub3VzIEtvcmFuZ2FsIFZhbGxleSBpbiBlYXN0ZXJuIEt1bmFyIFByb3ZpbmNlIGxhdGUgVGh1cnNkYXksIGxlYXZpbmcgdHdvIGFsbGlhbmNlIHNvbGRpZXJzIGRlYWQgYW5kIHRocmVlIG90aGVycyB3b3VuZGVkLCBvZmZpY2lhbHMgc2FpZC4KTkFUTyBkaWQgbm90IGlkZW50aWZ5IHRoZWlyIG5hdGlvbmFsaXRpZXMuCg==
[]
UmFuZ2VycyBGaW5hbGx5IFB1dCBTb21lIEJpdGUgSW50byBUaGVpciBPZmZlbnNlClRoZSBSYW5nZXJzIGhhdmUgc3BlbnQgdGhlIGZpcnN0IHBhcnQgb2YgdGhlaXIgc2Vhc29uIGxvb2tpbmcgZm9yIHdoYXQgaGFzIGJlZW4gbWlzc2luZyBpbiB0aGVpciBnYW1lLCBidXQgbGFzdCBuaWdodCBhZ2FpbnN0IFRhbXBhIEJheSwgdGhlIG1vc3Qgbm90aWNlYWJsZSB0aGluZyBtaXNzaW5nIHdhcyBKYXJvbWlyIEphZ3LCknMgZnJvbnQgdGVldGguCkphZ3IsIHdobyB3YXMgaGl0IGluIHRoZSBtb3V0aCBieSBhIHN0cmF5IGhpZ2ggc3RpY2sgZWFybGllciBpbiB0aGUgZ2FtZSwgZ290IHRvIHNtaWxlIGhpcyBuZXcgY3Jvb2tlZCBzbWlsZSBhZnRlciBzY29yaW5nIHRoZSBnby1haGVhZCBnb2FsIDEwIG1pbnV0ZXMgNDUgc2Vjb25kcyBpbnRvIHRoZSB0aGlyZCBwZXJpb2QsIHNlbmRpbmcgdGhlIFJhbmdlcnMgdG8gYSAzLTEgdmljdG9yeSBhdCBNYWRpc29uIFNxdWFyZSBHYXJkZW4uCkphZ3LCknMgZ29hbCwgYSBzbGFwIHNob3QgZnJvbSBpbnNpZGUgdGhlIGJsdWUgbGluZSwgY2FtZSBvbiBhIHBvd2VyIHBsYXkgYW5kIGJyb2tlIGEgMS0xIHRpZS4KSXQgc2VlbWVkIHRvIHNuYXAgdGhlIFJhbmdlcnMgZnJvbSB0aGVpciBsb3ctc2NvcmluZyBtYWxhaXNlLCB0d28gZGF5cyBhZnRlciBhIGRlbW9yYWxpemluZyBkZWZlYXQgdG8gVG9yb250byBoZXJlLgpMZXNzIHRoYW4gdGhyZWUgbWludXRlcyBhZnRlciBKYWdywpJzIGdvYWwsIGFub3RoZXIgc2x1bXBpbmcgc2NvcmVyLCBCcmVuZGFuIFNoYW5haGFuLCBhZGRlZCBhIHBvd2VyLXBsYXkgZ29hbCwgaGlzIHNlY29uZCBvZiB0aGUgc2Vhc29uLgpUaGUgUmFuZ2VycyAoNC02LTEpIHdvbiBmb3Igb25seSB0aGUgc2Vjb25kIHRpbWUgaW4gc2V2ZW4gZ2FtZXMuClRhbXBhIEJheSBmZWxsIHRvIDUtNC0xLgpUaGUgUmFuZ2VycyB0b29rIGEgMS0wIGxlYWQgaW4gdGhlIGZpcnN0IHBlcmlvZCwgb24gYSBnb2FsIGJ5IHRoZSBoZXJvIG9mIHRoZSBSYW5nZXJzwpIgcHJldmlvdXMgdmljdG9yeSwgTmlnZWwgRGF3ZXMuCkhlIGRlZmxlY3RlZCBhIHNob3QgYnkgZGVmZW5zZW1hbiBQYXVsIE1hcmEgYmV0d2VlbiBoaXMgbGVncywgYW5kIHRoZSBwdWNrIHRyaWNrbGVkIHRocm91Z2ggdGhlIHBhZHMgb2YgVGFtcGEgQmF5IGdvYWxpZSBKb2hhbiBIb2xtcXZpc3QgNzo0MCBpbnRvIHRoZSBnYW1lLgpJdCB3YXMgRGF3ZXPCknMgdGhpcmQgZ29hbCBvZiB0aGUgc2Vhc29uLgpIZSBzY29yZWQgdHdpY2UgaW4gdGhlIFJhbmdlcnPCkiAyLTAgdmljdG9yeSBUaHVyc2RheSBhZ2FpbnN0IHRoZSBEZXZpbHMuClRoZSBSYW5nZXJzIHBsYXllZCB3ZWxsIHdpdGggdGhhdCBsZWFkIGZvciB0aGUgcmVzdCBvZiB0aGUgZmlyc3QgcGVyaW9kLCBidXQgdGhlIGdhbWUgYmVjYW1lIG1vcmUgd2lkZSBvcGVuIGluIHRoZSBzZWNvbmQuCkZpcnN0LCBnb2FsaWUgSGVucmlrIEx1bmRxdmlzdCBoYWQgdG8gdHVybiBhd2F5IGEgcG9pbnQtYmxhbmsgc2hvdCBieSBWYWNsYXYgUHJvc3BhbCAzOjQ1IGludG8gdGhlIHBlcmlvZC4KSmFnciBoYWQgYSBicmVha2F3YXkgb3Bwb3J0dW5pdHkgYWJvdXQgdHdvIG1pbnV0ZXMgbGF0ZXIsIGJ1dCBIb2xtcXZpc3QgbWFkZSB0aGUgc2F2ZSB3aGVuIEphZ3IgdHJpZWQgYSBmYWtlIHRvIGhpcyBiYWNraGFuZC4KVGhlIExpZ2h0bmluZyB0aGVuIGhhZCBhIGJyZWFrYXdheSBjaGFuY2UgYnkgVmluY2VudCBMZWNhdmFsaWVyLCB3aGljaCBMdW5kcXZpc3Qgc3RvcHBlZCwgYnV0IFJhbmdlcnMgZGVmZW5zZW1hbiBNYXJlayBNYWxpayB3YXMgY2FsbGVkIGZvciBob29raW5nIExlY2F2YWxpZXIgZnJvbSBiZWhpbmQgYW5kIExlY2F2YWxpZXIgd2FzIGF3YXJkZWQgYSBwZW5hbHR5IHNob3QuCldpdGggYSBmYWtlIGFuZCBhIGJhY2toYW5kIHNob3QgdGhhdCB3ZW50IHRocm91Z2ggTHVuZHF2aXN0wpJzIHBhZHMsIExlY2F2YWxpZXIgdGllZCB0aGUgc2NvcmUgYXQgNjoyOCBvZiB0aGUgc2Vjb25kLgpJdCB3YXMgb25seSB0aGUgc2Vjb25kIHBlbmFsdHkgc2hvdCBnb2FsIGFsbG93ZWQgYnkgTHVuZHF2aXN0IGluIGZpdmUgY2FyZWVyIGF0dGVtcHRzIGFnYWluc3QgaGltLgpMYXN0IFR1ZXNkYXksIGhlIHN0b3BwZWQgb25lIGJ5IFBpdHRzYnVyZ2jCknMgSm9yZGFuIFN0YWFsLgpUaGUgUmFuZ2VycyBoYWQgYSBnb2xkZW4gb3Bwb3J0dW5pdHkgdG8gcmVnYWluIHRoZSBsZWFkIHdpdGggYSBmaXZlLW9uLXRocmVlIHBvd2VyIHBsYXk7IHRoZSBMaWdodG5pbmcgd2FzIHBlbmFsaXplZCBmb3IgaGF2aW5nIHRvbyBtYW55IG1lbiBvbiB0aGUgaWNlIHdoaWxlIExlY2F2YWxpZXIgd2FzIGFscmVhZHkgaW4gdGhlIGJveCBmb3IgdHJpcHBpbmcuClRoZSBSYW5nZXJzIG11c3RlcmVkIHNldmVyYWwgc2hvdHMsIGJ1dCB0aGV5IGNvdWxkIG5vdCBzY29yZS4KVGhleSBoYWQgYSAyMy0xOCBhZHZhbnRhZ2UgaW4gc2hvdHMgYWZ0ZXIgdHdvIHBlcmlvZHMsIGNvbnRpbnVpbmcgdGhlaXIgcGF0dGVybiBvZiB0YWtpbmcgcGxlbnR5IG9mIHNob3RzIGJ1dCBub3QgdHVybmluZyB0aGVtIGludG8gZ29hbHMuClRoZSBSYW5nZXJzIGFjdHVhbGx5IGhhZCBhIHB1Y2sgZmFsbCBpbnRvIHRoZSBuZXQgODoyMyBpbnRvIHRoZSB0aGlyZCwgYnV0IGl0IGNhbWUgd2hlbiBDaHJpcyBEcnVyeSBoYWQgdHJpZWQgdG8gY2F0Y2ggYSBoaWdoIHBhc3MgYW5kIHB1dCBpdCBvbiB0aGUgaWNlIGFuZCBoZSBpbnN0ZWFkIGtub2NrZWQgaXQgaW50byB0aGUgbmV0LCBzbyBpdCBkaWQgbm90IGNvdW50LgpCdXQgSmFncsKScyBnb2FsLCBhIHNsYXAgc2hvdCB0aGF0IGxvb2tlZCBsaWtlIGl0IG1pZ2h0IGhhdmUgY2xpcHBlZCBvZmYgU2hhbmFoYW7CknMgc2thdGUsIGNoYW5nZWQgdGhlIFJhbmdlcnPCkiBsdWNrLgpKYWdyIGFsc28gc2V0IHVwIFNoYW5haGFuwpJzIGdvYWwsIGNhcnJ5aW5nIHRoZSBwdWNrIGJlaGluZCB0aGUgbmV0LCBhbmQgcGFzc2luZyB0byBEcnVyeSwgd2hvIHBhc3NlZCBpbiBmcm9udCB0byBTaGFuYWhhbiBmb3IgaGlzIGdvYWwgd2l0aCA2OjMxIGxlZnQuClJhbmdlcnMgZm9yd2FyZCBTZWFuIEF2ZXJ5IHdhcyBjbGVhcmVkIGZvciBjb250YWN0IGluIHByYWN0aWNlIHN0YXJ0aW5nIHRvZGF5LgpSYW5nZXJzIENvYWNoIFRvbSBSZW5uZXkgc2FpZCBBdmVyeSB3b3VsZCBiZSBjb25zaWRlcmVkIGRheS10by1kYXkgdG8gcmV0dXJuIGZyb20gdGhlIHNob3VsZGVyIHNlcGFyYXRpb24gdGhhdCBoYXMga2VwdCBoaW0gb3V0IG9mIHRoZSBwYXN0IG5pbmUgZ2FtZXMuCkF2ZXJ5IGhhcyBwZW5jaWxlZCBpbiBUaHVyc2RhecKScyBnYW1lIGFnYWluc3QgV2FzaGluZ3RvbiBmb3IgYSByZXR1cm4sIGJ1dCBSZW5uZXkgc2FpZCBTYXR1cmRheSBtaWdodCBiZSBtb3JlIHJlYWxpc3RpYy4gwpNIZcKScyBhbnhpb3VzIHRvIGdldCBnb2luZyzClCBSZW5uZXkgc2FpZC4gwpNIZcKScyBzdXJlIHdvcmtpbmcgaGFyZCwgdGhhdCBnaXZlcyB5b3UgYSBwcmV0dHkgZ29vZCBpZGVhIGhvdyBiYWQgaGUgd2FudHMgdG8gZ2V0IGJhY2sgdG9vLgpIZcKScyB3b3JraW5nIGFzIGhhcmQgYXMgYW55Ym9keSBJwpJ2ZSBzZWVuIHRocm91Z2ggdGhlc2UgdGhpbmdzLgpCdXQgd2Ugd2FudCB0byBiZSBzbWFydCBhYm91dCB0aGlzIGFuZCBtYWtlIHN1cmUgd2UgaGF2ZSBoaW0gZm9yIHRoZSBiYWxhbmNlIG9mIHRoZSB5ZWFyIGFuZCBub3QganVzdCBvbmUgZ2FtZSBiZWNhdXNlIHdlIGJyb3VnaHQgaGltIGJhY2sgdG9vIGVhcmx5LsKUIC4uLgpUaGUgUmFuZ2Vyc8KSIG5vcm1hbCBvZmYgZGF5IFN1bmRheSB3YXMgY2FuY2VsZWQgaW4gZmF2b3Igb2YgYSA0NS1taW51dGUgdGVhbSBtZWV0aW5nIGFuZCBzaG9ydCBwcmFjdGljZSBhZnRlciBTYXR1cmRhecKScyA0LTEgbG9zcyB0byBUb3JvbnRvLCB0aGVpciBmaWZ0aCBkZWZlYXQgaW4gdGhlIHBhc3Qgc2l4IGdhbWVzLiAuLi4KTGlnaHRuaW5nIGRlZmVuc2VtYW4gRGFuIEJveWxlIHBsYXllZCBoaXMgZmlyc3QgZ2FtZSBzaW5jZSBzdXN0YWluZWQgYSBzZXZlcmUgY3V0IG9uIGhpcyB3cmlzdCB3aGVuIGEgc2thdGUgZmVsbCBvbiBpdC4KQm95bGUgaGFkIGFuIG9wZXJhdGlvbiBvbiB0aGUgd3Jpc3QgU2VwdC4KSGUgcGxheWVkIG9ubHkgb24gcG93ZXIgcGxheXMuCg==
[]
VGhlIE5ldyBZb3JrIFRpbWVzID4gRWwgUXVpbnRvIFBpbm8gUmVzdGF1cmFudCBSZXZpZXcgPiBOZXcgWW9yayBDaXR5IFJlc3RhdXJhbnQgUmV2aWV3cwpNT1NUIG5ldyByZXN0YXVyYW50cyBvcGVuIGFsbCBlbGJvd3MgYW5kIGtuZWVzLCB3b2JibHkgYW5kIHVuY2VydGFpbiBvZiB0aGVtc2VsdmVzLgpUaGVuLCBvbmNlIGluIGEgd2hpbGUsIGEgcmVzdGF1cmFudCBsaWtlIEVsIFF1aW50byBQaW5vIHBvcHMgdXAgYW5kIGhpdHMgdGhlIGdyb3VuZCBydW5uaW5nLgpHcmFudGVkLCBpdCB0YWtlcyBubyByZXNlcnZhdGlvbnMgYW5kIGhhcyBubyB0YWJsZXMsIGp1c3QgYSBiYXIgYW5kIGEgbmFycm93IGNvdW50ZXIgdGhhdCByaW5ncyB0aGUgcm9vbS4KSXRzIDE2IHN0b29scyBhcmUgcGVycGV0dWFsbHkgb2NjdXBpZWQsIHNvIHlvdSB3aWxsIHByb2JhYmx5IGhhdmUgdG8gZWF0IG9uIHlvdXIgZmVldC4KSXQgd29uwpJ0IG1ha2UgYSBiaWQgZm9yIHlvdXIgZW50aXJlIG5pZ2h0OiB5b3Ugd2lsbCBzbmFjayBhdCBFbCBRdWludG8gUGlubyBhbmQgYWxtb3N0IGluZXZpdGFibHkgZWF0IG1vcmUgc29tZXdoZXJlIGVsc2UuCkJ1dCB0aG9zZSByZXN0cmljdGlvbnMsIHdoaWNoIG1heSBiZSBvZmYtcHV0dGluZyB0byBzb21lIGRpbmVycywgc2hvdWxkIGJlIGNvdW50ZWQgYXMgcG9pbnRzIGluIGl0cyBmYXZvci4KQWxvbmcgd2l0aCBzb21lIGRlYWQgc2ltcGxlIGFuZCByaW90b3VzbHkgZmxhdm9yZnVsIGRpc2hlcywgdGhleSBhZGQgdXAgdG8gRWwgUXVpbnRvIFBpbm/CknMgYmVpbmcgTmV3IFlvcmvCknMgYmVzdCwgYW5kIG1heWJlIG9ubHksIHRydWUgdGFwYXMgYmFyLgpQbGVudHkgb2YgcmVzdGF1cmFudHMgwpcgaW5jbHVkaW5nIGl0cyBvd25lcnPCkiBvdGhlciBwbGFjZSwgVMOtYSBQb2wgwpcgY2FsbCB0aGVtc2VsdmVzIHRhcGFzIGJhcnMsIGJ1dCBvbmx5IEVsIFF1aW50byBQaW5vIG5haWxzIHRoZSB2aWJlIGFuZCBtb2RlIG9mIHNlcnZpY2UgdGhhdCBtYWtlIHRyb2xsaW5nIGZvciB0YXBhcyBpbiBTcGFpbiBzdWNoIGFuIGFkZGljdGl2ZSBlbmRlYXZvci4KQW5kIGV2ZW4gaWYgSSB3b3VsZG7CknQgYXJndWUgdGhhdCBpdCBzZXJ2ZXMgdGhlIGJlc3QgU3BhbmlzaCBmb29kIGluIHRoZSBjaXR5LCBJIHdvbsKSdCBtaW5jZSB3b3JkcyBhYm91dCB0aGUgc2VhIHVyY2hpbiBzYW5kd2ljaCAoJDE1KSBmcm9tIHRoZSBjaGVmIGFuZCBwYXJ0bmVyLCBBbGV4IFJhaWo6IGl0wpJzIHRoZSBzYW5kd2ljaCBvZiB0aGUgeWVhci4KTWFpbmUgc2VhIHVyY2hpbiBpcyBtaXhlZCB3aXRoIHNwaWN5IEtvcmVhbiBtdXN0YXJkIG9pbCBhbmQgc3dlZXQgYnV0dGVyIGFuZCB0dWNrZWQgaW50byB0aGUgd2FybSBlbWJyYWNlIG9mIGEgdG9hc3RlZCBUb20gQ2F0IEJha2VyeSBmaWNlbGxlLgpJdCB0YXN0ZXMgYXMgaWYgdGhlIHNlYSBpdHNlbGYgY2h1cm5lZCBvdXQgdGhlIGZpbGxpbmc7IHRoZSBjb21iaW5hdGlvbiBpcyBzbyBzaW1wbGUsIHNvIGJhbGFuY2VkLCBzbyBhcnJlc3RpbmcsIGl0IGNvdWxkIGJlIGEgY2xhc3NpYyBsb3N0IHRvIHRpbWUsIHJlZGlzY292ZXJlZCBieSBNcy4gUmFpaiBpbiBhIHNlY2x1ZGVkIFNwYW5pc2ggY292ZS4KVGhlIHNlYWZvb2QgZGlzaGVzLCBhcyBhIHJ1bGUsIGFyZSB3aW5uZXJzLgpQZXJmZWN0IGJvcXVlcm9uZXMgwpcgd2hpdGUgYW5jaG92aWVzIMKXIGFyZSBtaW5pbWFsbHkgZ3Vzc2llZCB1cCB3aXRoIFNwYW5pc2ggb2xpdmUgb2lsIGFuZCBwYXJzbGV5LgpQYWxlLCB0ZW5kZXIgYmF0b25zIG9mIGZyaWVkIGNvZCAoJDcuNTApIGFyZSBhcyBtaWxkIGFuZCBhcHByb2FjaGFibGUgYXMgc3VwZXJzYWx0eSBCYXNxdWUgYW5jaG92aWVzICgkMTEpIGZyb20gT25kw6Fycm9hLCBTcGFpbiwgYXJlIGFzc2VydGl2ZSBhbmQgc3RhbmRvZmZpc2guClJlYWNoaW5nIGJleW9uZCB0aGUgU3BhbmlzaCBsYXJkZXIsIE1zLiBSYWlqIGVtcGxveXMgZ2luZ2VyIHRvIGFkZCBhbiBhbGx1cmluZyBhY2NlbnQgdG8gdGhlIHNhdXTDqWVkIHNocmltcCAoJDkpLCBhIHRhcGFzIGJhciBzdGFuZGJ5LCBtYWtpbmcgdGhlIGdhcmxpY2t5IG9pbCB0aGV5IGFyZSBjb29rZWQgYW5kIHNlcnZlZCBpbiB0aGF0IG11Y2ggYmV0dGVyIHRvIHNvcCB1cCB3aXRoIGJyZWFkIG9uY2UgdGhlIHNocmltcCBhcmUgZ29uZS4KSSBkaWRuwpJ0IGxvdmUgdGhlIHBpZ8KScyBlYXIgc2FsYWQgKCQ2KSwgd2hpY2ggd2FzIGNydW5jaHkgYW5kIHN0aWNreSBhbmQgaGFkIGEgZnVua3kgcGlnc2tpbiBmbGF2b3IsIG9yIHRoZSBlZ2dwbGFudCB3aXRoIGhvbmV5ICgkNy41MCksIGFsdGhvdWdoIG15IGNvbXBhbmlvbnMgdG9sZCBtZSBJIHdhcyBkZWFkIHdyb25nIGFib3V0IHRoYXQgb25lLgpCdXQgdGhlc2Ugd2VyZSBleGNlcHRpb25zIGluIGFuIG90aGVyd2lzZSBzaG9ydCBsaXN0IG9mIGNvbW1lbmRhYmxlIHNtYWxsIHBsYXRlcy4KVGhlIGNvY2t0YWlscyDClyBpbm5vdmF0aXZlLCBleGNlbGxlbnQsIHRob3VnaCBub3QgcGFydGljdWxhcmx5IFNwYW5pc2ggwpdhcmUgd29ydGggdmlzaXRpbmcsIGJ1dCB0aGUgZm9vZCBnb2VzIGJldHRlciB3aXRoIHRoZSB3aW5lcywgY2hvc2VuIGJ5IE1hbmkgRGF3ZXMsIGEgcGFydG5lciB3aG8gb3BlcmF0ZXMgdGhlIHdvcnRod2hpbGUgU3BhbmlzaCB3aW5lIHNob3AgVGludG8gRmlubyBpbiB0aGUgRWFzdCBWaWxsYWdlLgpPcHRpbmcgZm9yIGEgY291cGxlIG9mIGdsYXNzZXMgb2YgYSBzdGF0ZWx5IHdoaXRlIEJpZXJ6byBvciBhbiBpbmt5IE5ldyBXb3JsZC1zdHlsZSByZWQgd2luZSBmcm9tIEp1bWlsbGEgd2lsbCBtYWtlIGl0IHRoYXQgbXVjaCBlYXNpZXIgd2hlbiB5b3UgcGlsZSBvdXQgb2YgdGhpcyB3YXJtIGxpdHRsZSByZXN0YXVyYW50IG9udG8gMjR0aCBTdHJlZXQsIGJ1enppbmcgYW5kIGhhcHB5LCB0byBkZWNpZGUgd2hlcmUgdG8gZ28gZm9yIGRpbm5lci4KRWwgUXVpbnRvIFBpbm8KNDAxIFdlc3QgMjR0aCBTdHJlZXQsIENoZWxzZWE7ICgyMTIpIDIwNi02OTAwLgpCRVNUIERJU0hFUyBPbGl2ZXMsIHdoaXRlIGFuY2hvdmllcywgc2F1dMOpZWQgc2hyaW1wLCBzYXV0w6llZCBjaGlja3BlYXMsIHVuaSBwYW5pbmksIGZyaWVkIGNvZC4KSE9VUlMgNSBwLm0uIHRvIG1pZG5pZ2h0IFN1bmRheSB0aHJvdWdoIFRodXJzZGF5OyB0byAxIGEubS4KV0hFRUxDSEFJUiBBQ0NFU1MgVHdvIHN0ZXBzIGF0IHRoZSBkb29yOyB2ZXJ5IG5hcnJvdyByZXN0cm9vbS4K
[]

[(, 'ORG')]
TmV3cyBDb3JwIFByb2ZpdHMgUmlzZSAtIE5ldyBZb3JrIFRpbWVzCk5FVyBZT1JLIChSZXV0ZXJzKSAtIFJ1cGVydCBNdXJkb2NoJ3MgTmV3cyBDb3JwIHNhaWQgb24gV2VkbmVzZGF5IGl0cyBxdWFydGVybHkgb3BlcmF0aW5nIHByb2ZpdCByb3NlIDIzIHBlcmNlbnQgb24gc3Ryb25nIGJveCBvZmZpY2Ugc2FsZXMgb2YgIlRoZSBTaW1wc29ucyIgYW5kIGEgcmlzZSBpbiBGb3ggTmV3cyBhZCBzYWxlcyBhbmQgYWZmaWxpYXRlIHJldmVudWUuClRoZSBjb21wYW55LCB3aGljaCBpcyB3YWl0aW5nIHRvIGNsb3NlIGEgZGVhbCB0byBidXkgV2FsbCBTdHJlZXQgSm91cm5hbCBwdWJsaXNoZXIgRG93IEpvbmVzICYgQ28gSW5jLCBzYWlkIGZpc2NhbCBmaXJzdC1xdWFydGVyIG5ldCBpbmNvbWUgZmVsbCB0byAkNzMyIG1pbGxpb24sIG9yIDIzIGNlbnRzIHBlciBzaGFyZSwgZnJvbSAkODQzIG1pbGxpb24sIG9yIDI3IGNlbnRzIHBlciBzaGFyZSwgYSB5ZWFyIGVhcmxpZXIsIHdoZW4gaXQgbG9nZ2VkIGdhaW5zIGZyb20gdGhlIHNhbGUgb2Ygc3Rha2VzIGluIHRoZSBTa3kgQnJhc2lsIHNhdGVsbGl0ZSBUViBidXNpbmVzcyBhbmQgdGhlIFBob2VuaXggQ2hpbmVzZSBUViBjaGFubmVsLgpFeGNsdWRpbmcgaXRlbXMgaW4gYm90aCBxdWFydGVycywgaXQgcG9zdGVkIGEgcXVhcnRlcmx5IG9wZXJhdGluZyBwcm9maXQgb2YgJDEuMDUgYmlsbGlvbiwgdXAgZnJvbSAkODUxIG1pbGxpb24uClJldmVudWUgcm9zZSAxOSBwZXJjZW50IHRvICQ3LjEgYmlsbGlvbiwgYmVhdGluZyBXYWxsIFN0cmVldCBleHBlY3RhdGlvbnMgb2YgJDYuNiBiaWxsaW9uLCBhY2NvcmRpbmcgdG8gUmV1dGVycyBFc3RpbWF0ZXMuCg==
[]
SUJNIEdpdmVzIEF1dG9ub21pYyBDb21wdXRpbmcgYSBCcmFpbgpUbyBrZWVwIHVwIHdpdGggZ3Jvd2luZyBjb21wbGV4aXRpZXMgb2YgZGF0YSBjZW50ZXIgbWFpbnRlbmFuY2UsIElCTSBvbiBUaHVyc2RheSBhbm5vdW5jZWQgYSBuZXcgc2V0IG9mIHNlbGYtbWFuYWdlbWVudCB0b29scyB0aGF0IGNhbiByZWR1Y2UgdGhlIGNvc3QgYW5kIG1hbnBvd2VyIG5lZWRlZCB0byBydW4gZGF0YSBjZW50ZXJzLgpUaGUgdG9vbHMgcmVwcmVzZW50IHRoZSBuZXh0IHBoYXNlIGluIHRoZSBkZXZlbG9wbWVudCBvZiBJQk0ncyBBdXRvbm9taWMgQ29tcHV0aW5nIGVmZm9ydCwgYW4gdW1icmVsbGEgb2YgdG9vbHMgdXNlZCBpbiBJQk0ncyBoYXJkd2FyZSwgc29mdHdhcmUgYW5kIHNlcnZpY2VzIHRvIHJlZHVjZSBodW1hbiBpbnRlcnZlbnRpb24gYnkgbW9uaXRvcmluZyBhbmQgbWFuYWdpbmcgc3lzdGVtcyBhdXRvbm9taWNhbGx5LgpUaGUgcGFja2FnZSB3YXMgZmlyc3QgaW50cm9kdWNlZCBpbiAyMDAxLgpOZXcgdG9vbHMgaW5jbHVkZSB0aGUgSUJNIFN5c3RlbXMgRGlyZWN0b3IgQWN0aXZlIEVuZXJneSBNYW5hZ2VyLCBhbiBlbmVyZ3kgbWFuYWdlbWVudCBwYWNrYWdlIHRoYXQgbW9uaXRvcnMgcG93ZXIgY29uc3VtcHRpb24sIGFuZCBtYWtlcyBhZGp1c3RtZW50cyB0byBpbXByb3ZlIGVuZXJneSBlZmZpY2llbmN5IGFuZCByZWR1Y2UgcG93ZXIgY29uc3VtcHRpb24gY29zdHMsIHNhaWQgUmljIFRlbGZvcmQsIHZpY2UgcHJlc2lkZW50IGZvciBhdXRvbm9taWMgY29tcHV0aW5nIGF0IElCTS4KVGhlIHNvZnR3YXJlIGFsbG93cyBjdXN0b21lcnMgdG8gY2FwIHBvd2VyIHVzYWdlLCBwcmV2ZW50IGNvc3Qgb3ZlcnJ1bnMgYW5kIG1vbml0b3Igd29ya2xvYWQgdXNhZ2UgdHJlbmRzIHRvIGVuYWJsZSBiZXR0ZXIgcGxhbm5pbmcgYmVmb3JlIGRlcGxveWluZyB3b3JrbG9hZHMgYWNyb3NzIG11bHRpcGxlIHBsYXRmb3JtcyBpbiBkYXRhIGNlbnRlcnMsIFRlbGZvcmQgc2FpZC4KVXNlcnMgaGF2ZSB0aGUgb3B0aW9uIHRvIGRlc2lnbmF0ZSBpbXBvcnRhbnQgd29ya2xvYWRzIHRvIGdldCBtb3JlIHBvd2VyIGJhc2VkIG9uIHRoZSBpbmZvcm1hdGlvbiBwcm92aWRlZCwgaGUgc2FpZC4KQSBuZXcgcGxhdGZvcm0sIElCTSBUaXZvbGkgQ2hhbmdlIGFuZCBDb25maWd1cmF0aW9uIE1hbmFnZW1lbnQgRGF0YWJhc2UsIHByb3ZpZGVzIGFuIGludGVncmF0ZWQgcGxhY2UgZm9yIHN5c3RlbSBhZG1pbmlzdHJhdG9ycyB0byBzZWUgdGhlIGNoYXJhY3RlcmlzdGljcyBvZiBhc3NldHMgaW4gYW4gSVQgZW52aXJvbm1lbnQsIFRlbGZvcmQgc2FpZC4KSXQgYXV0b21hdGljYWxseSB0cmFja3MgSVQgaW5mb3JtYXRpb24gYWNyb3NzIG11bHRpcGxlIGNvbXB1dGVyIHN5c3RlbXMsIGluY2x1ZGluZyBzZXJ2ZXJzLCBzdG9yYWdlLCBuZXR3b3JrcyBhbmQgYXBwbGljYXRpb25zLgpUaGF0IGhlbHBzIElUIHN0YWZmIGJldHRlciB1bmRlcnN0YW5kIHRoZSByZWxhdGlvbnNoaXBzIGFuZCBkZXBlbmRlbmNpZXMgYW1vbmcgY29tcG9uZW50cywgVGVsZm9yZCBzYWlkLgpUaGlzIHBsYXRmb3JtIHdpbGwgYmUgZGVsaXZlcmVkIHRvIG90aGVyIHNlcnZpY2UgbWFuYWdlbWVudCBwcm9kdWN0cyBhY3Jvc3MgSUJNIGluIHRoZSBmdXR1cmUuClVwZGF0ZXMgaGF2ZSBhbHNvIGJlZW4gbWFkZSB0byBzb21lIGV4aXN0aW5nIHBhY2thZ2VzLgpJQk0gVGl2b2xpIFVzYWdlIGFuZCBBY2NvdW50aW5nIE1hbmFnZXIgZ2l2ZXMgaW5mb3JtYXRpb24gYXJvdW5kIHVzYWdlIG9mIGRpZmZlcmVudCByZXNvdXJjZXMsIGluY2x1ZGluZyBDUFUgdXRpbGl6YXRpb24sIGluIGEgZGF0YSBjZW50ZXIuCkJhc2VkIG9uIHVzZXIgYmVoYXZpb3IgZGF0YSwgZGVjaXNpb25zIG9uIHRoZSBhbGxvY2F0aW9uIG9mIElUIHJlc291cmNlcyBjYW4gYmUgbWFkZSwgVGVsZm9yZCBzYWlkLgoiVGhpcyBpbmZvcm1hdGlvbiBhbGxvd3MgeW91IHRvIGJlIG1vcmUgcHJvYWN0aXZlIHRvIHRoZSBuZWVkcyBvZiBhIGJ1c2luZXNzIHVuaXQgZ29pbmcgZm9yd2FyZCwiIGhlIHNhaWQuClRoZSB1cGRhdGUgYmV0dGVyIGFjY291bnRzIGZvciB0aGUgdXRpbGl6YXRpb24gb2YgQ1BVcyBhbmQgcmVzb3VyY2VzIGJ5IHZpcnR1YWwgbWFjaGluZXMgb24gU3lzdGVtIHAgYW5kIFN5c3RlbSB4IHNlcnZlcnMsIFRlbGZvcmQgc2FpZC4KQnkgYXV0b25vbW91c2x5IGFuYWx5emluZyBkYXRhIHRocm91Z2hvdXQgYW4gSVQgY2VudGVyLCB0aGUgVGl2b2xpIFNlY3VyaXR5IE9wZXJhdGlvbnMgTWFuYWdlciBkZXRlY3RzIHNlY3VyaXR5IHRocmVhdCBhbmQgYXV0b21hdGVzIHRoZSBwcm9jZXNzIG9mIGluY2lkZW50IHJlY29nbml0aW9uLCBpbnZlc3RpZ2F0aW9uIGFuZCByZXNwb25zZS4KRGF0YWNlbnRlcnMgd2lsbCBiZW5lZml0IGZyb20gdGhlIG5ldyB0b29scyBhcyBJVCBzeXN0ZW1zIGJlY29tZSBtb3JlIGV4cGVuc2l2ZSB0byBtYW5hZ2UsIFRlbGZvcmQgc2FpZC4KQSBtYWpvcml0eSBvZiBkYXRhIGNlbnRlciBjb3N0cyB3ZXJlIG9uIHB1cmNoYXNpbmcgaGFyZHdhcmUgYW5kIHNvZnR3YXJlLCBidXQgaXQncyBub3cgbW9yZSBvbiBtYW5wb3dlciwgVGVsZm9yZCBzYWlkLgpCeSBpbmNvcnBvcmF0aW5nIG9wZXJhdGlvbmFsIGludGVsbGlnZW5jZSwgYXV0b25vbWljIGNvbXB1dGluZyBjb3VsZCByZWR1Y2Ugc3VjaCBtYW5wb3dlciBjb3N0cywgVGVsZm9yZCBzYWlkLgo=
[]
RGF0YSBMZWFrIGluIEJyaXRhaW4gQWZmZWN0cyAyNSBNaWxsaW9uCkxPTkRPTiwgTm92LiAyMSDClyBUaGUgQnJpdGlzaCBnb3Zlcm5tZW50IHN0cnVnZ2xlZCBXZWRuZXNkYXkgdG8gZXhwbGFpbiBpdHMgbG9zcyBvZiBjb21wdXRlciBkaXNrcyBjb250YWluaW5nIGRldGFpbGVkIHBlcnNvbmFsIGluZm9ybWF0aW9uIG9uIDI1IG1pbGxpb24gQnJpdG9ucywgaW5jbHVkaW5nIGFuIHVua25vd24gbnVtYmVyIG9mIGJhbmsgYWNjb3VudCBpZGVudGlmaWVycywgaW4gd2hhdCBhbmFseXN0cyBkZXNjcmliZWQgYXMgcG90ZW50aWFsbHkgdGhlIG1vc3Qgc2lnbmlmaWNhbnQgcHJpdmFjeSBicmVhY2ggb2YgdGhlIGRpZ2l0YWwgZXJhLgpJdCBoYXMgZGVmZW5kZWQgaXRzIGRlY2lzaW9uIG5vdCB0byBkaXNjbG9zZSB0aGUgbG9zcyB1bnRpbCBUdWVzZGF5LCAxMCBkYXlzIGFmdGVyIGl0IGhhZCBiZWVuIGluZm9ybWVkLCBzYXlpbmcgYmFua3MgaGFkIGFza2VkIGZvciB0aW1lIHRvIHB1dCBoZWlnaHRlbmVkIHNlY3VyaXR5IG1lYXN1cmVzIGluIHBsYWNlIGZpcnN0LgpUaGUgZGF0YSB3ZW50IGFzdHJheSBpbiBPY3RvYmVyLCBhZnRlciB0d28gY29tcHV0ZXIgZGlza3MgdGhhdCBjb250YWluZWQgaW5mb3JtYXRpb24gb24gZmFtaWxpZXMgdGhhdCByZWNlaXZlIGdvdmVybm1lbnQgZmluYW5jaWFsIGJlbmVmaXRzIGZvciBjaGlsZHJlbiB3ZXJlIHNlbnQgb3V0IGZyb20gYSBnb3Zlcm5tZW50IHRheCBhZ2VuY3kgdW5yZWdpc3RlcmVkLCB2aWEgYSBwcml2YXRlIGRlbGl2ZXJ5IHNlcnZpY2UuClRoZSBlcGlzb2RlIGlzIG9uZSBvZiB0aHJlZSB0aGlzIHllYXIgaW4gd2hpY2ggdGhlIGFnZW5jeSBpbXByb3Blcmx5IGhhbmRsZWQgaXRzIHZhc3QgYXJjaGl2ZSBvZiBwZXJzb25hbCBkYXRhLCBhY2NvcmRpbmcgdG8gYW4gYWNjb3VudCBieSB0aGUgY2hhbmNlbGxvciBvZiB0aGUgRXhjaGVxdWVyIMKXIGluY2x1ZGluZyB0aGUgc2VuZGluZyBvZiBhIHNlY29uZCBzZXQgb2YgZGlza3Mgd2hlbiB0aGUgZmlyc3Qgc2V0IGRpZCBub3QgYXJyaXZlLgpJbiBzaGVlciBudW1iZXJzLCB0aGUgYnJlYWNoIHdhcyBzbWFsbGVyIHRoYW4gc2V2ZXJhbCBpbiB0aGUgVW5pdGVkIFN0YXRlcyBvdmVyIHRoZSBsYXN0IGZldyB5ZWFycy4KTGFzdCB5ZWFyLCBhIGNvbXB1dGVyIGFuZCBkZXRhY2hhYmxlIGhhcmQgZHJpdmUgd2l0aCB0aGUgbmFtZXMsIGJpcnRoIGRhdGVzIGFuZCBTb2NpYWwgU2VjdXJpdHkgbnVtYmVycyBvZiAyNi41IG1pbGxpb24gdmV0ZXJhbnMgYW5kIG1pbGl0YXJ5IHBlcnNvbm5lbCB3YXMgc3RvbGVuIGZyb20gdGhlIGhvbWUgb2YgYW4gYW5hbHlzdCwgYnV0IHJlY292ZXJlZCBhcHBhcmVudGx5IHdpdGhvdXQgYW55IGhhcm0uCkluIDIwMDMsIGEgZm9ybWVyIHNvZnR3YXJlIGVuZ2luZWVyIGF0IEFtZXJpY2EgT25saW5lIHBsZWFkZWQgZ3VpbHR5IHRvIHN0ZWFsaW5nIGFuZCBzZWxsaW5nIDkyIG1pbGxpb24gdXNlciBuYW1lcyBhbmQgZS1tYWlsIGFkZHJlc3Nlcywgc2V0dGluZyBvZmYgYW4gYXZhbGFuY2hlIG9mIHVwIHRvIHNldmVuIGJpbGxpb24gdW5zb2xpY2l0ZWQgZS1tYWlsIG1lc3NhZ2VzLgpCdXQgdGhlIGRpc2tzIGxvc3QgaW4gQnJpdGFpbiBjb250YWluZWQgZGV0YWlsZWQgcGVyc29uYWwgaW5mb3JtYXRpb24gb24gNDAgcGVyY2VudCBvZiB0aGUgcG9wdWxhdGlvbjogaW4gYWRkaXRpb24gdG8gdGhlIGJhbmsgYWNjb3VudCBudW1iZXJzLCB0aGVyZSB3ZXJlIG5hbWVzLCBhZGRyZXNzZXMgYW5kIG5hdGlvbmFsIGluc3VyYW5jZSBudW1iZXJzLCB0aGUgQnJpdGlzaCBlcXVpdmFsZW50IG9mIFNvY2lhbCBTZWN1cml0eSBudW1iZXJzLgpUaGV5IGFsc28gaGVsZCBkYXRhIG9uIGFsbW9zdCBldmVyeSBjaGlsZCB1bmRlciAxNi4KwpNUaGlzIHBhcnRpY3VsYXIgYnJlYWNoIHdvdWxkIGR3YXJmIGFueXRoaW5nIHdlwpJ2ZSBzZWVuIGluIHRoZSBVbml0ZWQgU3RhdGVzIGluIHRlcm1zIG9mIHBlcmNlbnRhZ2Ugb2YgdGhlIHBvcHVsYXRpb24gaW1wYWN0ZWQswpQgc2FpZCBQYXVsIFN0ZXBoZW5zLCBkaXJlY3RvciBvZiBwb2xpY3kgYW5kIGFkdm9jYWN5IGZvciB0aGUgUHJpdmFjeSBSaWdodHMgQ2xlYXJpbmdob3VzZSwgYSBub25wcm9maXQgY29uc3VtZXIgYWR2b2NhY3kgZ3JvdXAgYmFzZWQgaW4gQ2FsaWZvcm5pYS4KVGhlIGhlYWQgb2YgdGhlIHRheCBhZ2VuY3ksIFBhdWwgR3JheSwgcmVzaWduZWQgVHVlc2RheSwgYW5kIFByaW1lIE1pbmlzdGVyIEdvcmRvbiBCcm93biBhcG9sb2dpemVkIHRvIHRoZSBuYXRpb24gb24gV2VkbmVzZGF5IGFuZCBzYWlkIGhlIGhhZCBvcmRlcmVkIGEgcmV2aWV3IG9mIHRoZSBnb3Zlcm5tZW50wpJzIGhhbmRsaW5nIG9mIGFsbCBwcml2YXRlIGRhdGEuCkluIGFuIGFkZHJlc3MgdG8gdGhlIEhvdXNlIG9mIENvbW1vbnMsIGhlIHNhaWQsIMKTSSBwcm9mb3VuZGx5IHJlZ3JldCBhbmQgYXBvbG9naXplIGZvciB0aGUgaW5jb252ZW5pZW5jZSBhbmQgd29ycmllcyB0aGF0IGhhdmUgYmVlbiBjYXVzZWQgdG8gbWlsbGlvbnMgb2YgZmFtaWxpZXMgdGhhdCByZWNlaXZlIGNoaWxkIGJlbmVmaXRzLsKUClRoZSBkYXRhIGJyZWFjaCBvZmZlcmVkIHRoZSBvcHBvc2l0aW9uIG5ldyBhbW11bml0aW9uLgpEYXZpZCBDYW1lcm9uLCB0aGUgbGVhZGVyIG9mIHRoZSBvcHBvc2l0aW9uIENvbnNlcnZhdGl2ZSBQYXJ0eSwgc2FpZCBpbiBQYXJsaWFtZW50IHRoYXQgdGhlIGdvdmVybm1lbnQgaGFkIMKTZmFpbGVkIGluIGl0cyBmaXJzdCBkdXR5IMKXIHRvIHByb3RlY3QgdGhlIHB1YmxpYy7ClApCYW5rIG9mZmljaWFscyBzYWlkIHRoZXkgaGFkIHNjcnV0aW5pemVkIHRoZWlyIHJlY29yZHMgYmFjayB0byBPY3QuIDE4LCB3aGVuIHRoZSBkaXNrcyB3ZXJlIG1haWxlZCwgYnV0IGhhZCBkaXNjZXJuZWQgbm8gdW51c3VhbCBhY2NvdW50IGFjdGl2aXR5LCBhbmQgdGhlIGdvdmVybm1lbnQgcGxlZGdlZCB0aGF0IG5vIGluZGl2aWR1YWxzIHdvdWxkIGJlIHJlc3BvbnNpYmxlIGZvciBhbnkgbG9zc2VzIHJlbGF0ZWQgdG8gdGhlIHNlY3VyaXR5IGJyZWFjaC4KQnJpdGlzaCBmYW1pbGllcyBhcmUgZWxpZ2libGUgZm9yIGEgd2Vla2x5IHBheW1lbnQgb2YgJDM2LjMwIGZvciB0aGVpciBmaXJzdCBjaGlsZCwgYW5kICQyNSBwZXIgYWRkaXRpb25hbCBjaGlsZC4KVGhvc2Ugd2hvIGNob29zZSB0byBoYXZlIHRoZSBtb25leSBkZXBvc2l0ZWQgZGlyZWN0bHkgaW50byBiYW5rIGFjY291bnRzIG11c3QgcHJvdmlkZSB0aGlzIGluZm9ybWF0aW9uIHRvIHRoZSBnb3Zlcm5tZW50LgpUaGUgZGlza3Mgd2VyZSBwcm90ZWN0ZWQgYnkgYSBwYXNzd29yZCwgdGhlIGdvdmVybm1lbnQgc2FpZCwgYnV0IHdlcmUgbm90IGVuY3J5cHRlZC4KVGhleSB3ZXJlIHNlbnQgYnkgSGVyIE1hamVzdHnCknMgUmV2ZW51ZSBhbmQgQ3VzdG9tcywgdGhlIGNvdW50cnnCknMgdGF4IGNvbGxlY3Rpb24gYWdlbmN5LCB0byB0aGUgTmF0aW9uYWwgQXVkaXQgT2ZmaWNlLCB3aGljaCBtb25pdG9ycyBnb3Zlcm5tZW50IHNwZW5kaW5nLCB2aWEgYSBwYXJjZWwgZGVsaXZlcnkgY29tcGFueSwgVE5ULgpBY2NvcmRpbmcgdG8gdGhlIGNoYW5jZWxsb3Igb2YgdGhlIEV4Y2hlcXVlciwgQWxpc3RhaXIgRGFybGluZywgd2hvIGRlbGl2ZXJlZCBhIGxlbmd0aHkgZXhwbGFuYXRpb24gdG8gdGhlIEhvdXNlIG9mIENvbW1vbnMgb24gVHVlc2RheSwgYSDCk2p1bmlvcsKUIHN0YWZmIG1lbWJlciBzZW50IHRoZSBkaXNrcy4KVGhyZWUgd2Vla3MgbGF0ZXIsIHRoZSB0YXggYWdlbmN5wpJzIG1hbmFnZXJzIHdlcmUgaW5mb3JtZWQgdGhhdCB0aGUgZGlza3MgaGFkIG5vdCBhcnJpdmVkLgpNci4gRGFybGluZyBzYWlkIGhlIHdhcyB0b2xkIG9mIHRoZSBwcm9ibGVtIHR3byBkYXlzIGxhdGVyLCBidXQgZmlyc3QgaGFkIGxhdyBlbmZvcmNlbWVudCBvZmZpY2lhbHMgaHVudCBmb3IgdGhlIGRpc2tzIGFuZCB0aGVuIGFsZXJ0ZWQgYmFua3MuCsKTSW4gbWFraW5nIHRoaXMgc3RhdGVtZW50IHRvZGF5LMKUIGhlIHNhaWQsIMKTSSBoYXZlIGhhZCB0byBiYWxhbmNlIHRoZSBpbXBlcmF0aXZlIG9mIGluZm9ybWluZyB0aGUgSG91c2UgYW5kIHRoZSBwdWJsaWMgYXQgdGhlIGVhcmxpZXN0IG9wcG9ydHVuaXR5LCB3aGlsc3QgYXQgdGhlIHNhbWUgdGltZSBlbnN1cmluZyB0aGF0IHdoZW4gSSBkaWQgc28gdGhlIGFwcHJvcHJpYXRlIHNhZmVndWFyZHMgd2VyZSBpbiBwbGFjZSB0byBwcm90ZWN0IHRoZSBwdWJsaWMsIGluY2x1ZGluZyBpbiByZWxhdGlvbiB0byBiYW5rIGFjY291bnRzLgpJbmRlZWQgdGhlIGJhbmtzIHdlcmUgYWRhbWFudCB0aGF0IHRoZXkgd2FudGVkIGFzIG11Y2ggdGltZSBhcyBwb3NzaWJsZSB0byBwcmVwYXJlIGZvciB0aGlzIGFubm91bmNlbWVudC7ClApCdXQgb24gV2VkbmVzZGF5LCBhIHNwb2tlc3dvbWFuIGZvciB0aGUgQnJpdGlzaCBCYW5rZXJzIEFzc29jaWF0aW9uLCBMZXNsZXkgTWNMZW9kLCBzYWlkIHRoZSBncm91cCBoYWQgYmVlbiBpbmZvcm1lZCBvbmx5IG9uIEZyaWRheSwgYW5kIHRoYXQgaXRzIHNlY3VyaXR5IG1lYXN1cmVzIGhhZCBiZWVuIGNvbXBsZXRlZCBieSBNb25kYXkuCk1yLiBEYXJsaW5nIG5vdGVkIHR3byBvdGhlciBpbnN0YW5jZXMgaW4gd2hpY2ggdGhlIHRheCBhZ2VuY3kgaGFkIHNlbnQgZGVsaWNhdGUgaW5mb3JtYXRpb24gdG8gdGhlIE5hdGlvbmFsIEF1ZGl0IE9mZmljZSB0aGF0IHdlcmUgbm90IGluIGtlZXBpbmcgd2l0aCBzZWN1cml0eSBydWxlczogZmlyc3QgaW4gTWFyY2ggdGhpcyB5ZWFyLCBhbmQgdGhlbiBhIHNlY29uZCB0aW1lIGluIE9jdG9iZXIsIHdoZW4gdGhlIGF1ZGl0IG9mZmljZSBmaXJzdCB0b2xkIHRoZSB0YXggYWdlbmN5IHRoYXQgdGhlIHR3byBkaXNrcyBoYWQgbm90IGFycml2ZWQuClRob3NlLCBoZSBzYWlkLCB3ZXJlIHNlbnQgYnkgcmVnaXN0ZXJlZCBtYWlsLCBhbmQgZGlkIGFycml2ZS4KRXhwZXJ0cyBvbiBzZWN1cml0eSBkYXRhIHNhaWQgdGhlcmUgd2VyZSBzaWducyBvZiBzeXN0ZW1pYyBzZWN1cml0eSBwcm9ibGVtcy4KwpNJdCBzb3J0IG9mIGJlZ2dhcnMgYmVsaWVmIGhvdyBhbnlvbmUgY291bGQgaGF2ZSBhY2Nlc3MgdG8gdGhhdCBkYXRhLMKUIFNpbW9uIFppbW1vLCB0aGUgY29tbWVyY2lhbCBkaXJlY3RvciBmb3IgRXVyb3BlLCB0aGUgTWlkZGxlIEVhc3QgYW5kIEFmcmljYSBhdCBTZWN1cmlEYXRhLCBhIGRhdGEgc2VjdXJpdHkgc3BlY2lhbGlzdCBiYXNlZCBpbiBTY290bGFuZC4KRXhwZXJ0cyBzYWlkIHRoZSBpbmZvcm1hdGlvbiBjb3VsZCBhbGxvdyBjcmltZXMgYmV5b25kIGlkZW50aXR5IHRoZWZ0LgpTb21lIHBlb3BsZSB1c2UgdGhlIG5hbWUgb2YgYSBjaGlsZCBvciBwYXJ0IG9mIGFuIGFkZHJlc3MgYXMgYSBwYXNzd29yZCBvbiBhIGJhbmsgYWNjb3VudCwgc28gdGhlIGNvbWJpbmF0aW9uIG9mIHRoZXNlIGRldGFpbHMgY291bGQgYWxsb3cgc29tZW9uZSB0byBicmVhayB0aGVpciBjb2RlLgrCk1lvdSBjYW4gYmV0IHlvdXIgYm90dG9tIGRvbGxhciB0aGF0IHRoZXJlIHdpbGwgYmUgcGVvcGxlIG91dCB0aGVyZSBsb29raW5nIGZvciB0aG9zZSBkaXNrcywgYW5kIGl0wpJzIG5vdCBqdXN0IE1JNSB0cnlpbmcgdG8gZ2V0IHRoZW0gYmFjayzClCBzYWlkIE1pa2UgRGF2aXMsIGFuIGFuYWx5c3Qgd2l0aCB0aGUgT3Z1bSB0ZWNobm9sb2d5IGNvbnN1bHRpbmcgZmlybSBpbiBMb25kb24sIHJlZmVycmluZyB0byB0aGUgQnJpdGlzaCBkb21lc3RpYyBzZWN1cml0eSBzZXJ2aWNlcy4KTWF0dCBSaWNodGVsIGNvbnRyaWJ1dGVkIHJlcG9ydGluZyBmcm9tIE5ldyBZb3JrLgo=
[]
QWZ0ZXIgU3Ryb25nIFN0YXJ0LCBSZWRza2lucyBGYWRlIEF3YXkKQWZ0ZXIgU3Ryb25nIFN0YXJ0LCBSZWRza2lucyBGYWRlIEF3YXkgSmFndWFycyAzMSwgUmVkc2tpbnMgMTQKQXNzb2NpYXRlZCBQcmVzcyBUaHVyc2RheSwgQXVndXN0IDMwLCAyMDA3OyAxMDoyNCBQTQpKQUNLU09OVklMTEUsIEZsYS4gLS0gSmFzb24gQ2FtcGJlbGwgZ290IGEgbXVjaC1uZWVkZWQgdG91Y2hkb3duLgpNYXJrIEJydW5lbGwgZ290IGEgbG91ZCBvdmF0aW9uLgpBbmQgbW9zdCBvZiB0aGUgSmFja3NvbnZpbGxlIEphZ3VhcnMgZ290IGEgbmlnaHQgb2ZmLgpDYW1wYmVsbCByZXR1cm5lZCB0byB0aGUgc3RhcnRpbmcgbGluZXVwIGFmdGVyIG1pc3NpbmcgbGFzdCB3ZWVrJ3MgZ2FtZSB3aXRoIGEgYnJ1aXNlZCBsZWZ0IGtuZWUuCkhlIHdhcyA1LW9mLTUgcGFzc2luZyBmb3IgNTQgeWFyZHMgYW5kIGEgdG91Y2hkb3duIGluIFdhc2hpbmd0b24ncyAzMS0xNCBsb3NzIHRvIHRoZSBKYWd1YXJzIG9uIFRodXJzZGF5IG5pZ2h0IGluIHRoZSBwcmVzZWFzb24gZmluYWxlIGZvciBib3RoIHRlYW1zLgpDYW1wYmVsbCBwbGF5ZWQganVzdCBvbmUgc2VyaWVzLCBidXQgaXQgd2FzIGV4YWN0bHkgd2hhdCB0aGUgUmVkc2tpbnMgKDItMikgd2FudGVkIHRvIHNlZSBmcm9tIHRoZSB0aGlyZC15ZWFyIHByby4KQWx0aG91Z2ggaGUgZ290IGhpdCBvbmNlLCBoZSBoYWQgYW1wbGUgdGltZSBpbiB0aGUgcG9ja2V0IGFuZCBjYXBwZWQgdGhlIGRyaXZlIHdpdGggYSAyMy15YXJkIHN0cmlrZSBkb3duIHRoZSBzaWRlbGluZSB0byBBbnR3YWFuIFJhbmRsZSBFbC4KSXQgd2FzIENhbXBiZWxsJ3MgZmlyc3QgdG91Y2hkb3duIHBhc3Mgb2YgdGhlIHByZXNlYXNvbiwgYW4gZW5jb3VyYWdpbmcgc2lnbiBmb3IgYW4gb2ZmZW5zZSB0aGF0IHNjb3JlZCBqdXN0IDM3IHBvaW50cyBpbiBpdHMgZmlyc3QgdGhyZWUgZ2FtZXMuCkJydW5lbGwgdG9vayBvdmVyIGZyb20gdGhlcmUsIGdldHRpbmcgcGxlbnR5IG9mIHBsYXlpbmcgdGltZSBpbiBoaXMgZmlyc3QgZ2FtZSBpbiBKYWNrc29udmlsbGUgYXMgYW4gb3Bwb3NpbmcgcGxheWVyLgpUaGUgZmFjZSBvZiB0aGUgSmFndWFycyBmb3IgbmluZSB5ZWFycywgQnJ1bmVsbCBnb3QgYSB3YXJtIHdlbGNvbWUgYXMgaGUgam9nZ2VkIG9udG8gdGhlIGZpZWxkLgpIZSBkaWRuJ3QgZ2V0IHF1aXRlIHRoZSBzYW1lIHJlY2VwdGlvbiB3aGVuIGhlIHRocmV3IGEgMTQteWFyZCBURCBwYXNzIHRvIFJ5YW4gSG9hZyBsYXRlIGluIHRoZSBmaXJzdCBoYWxmIHRvIGdpdmUgdGhlIFJlZHNraW5zIGEgMTQtMyBsZWFkLgpCcnVuZWxsIHN0aWxsIGhhcyBhIGhvdXNlIGluIEphY2tzb252aWxsZSwgdmlzaXRzIGEgZmV3IHRpbWVzIGVhY2ggeWVhciBhbmQgd291bGQgbGlrZSB0byBtYWtlIGl0IGhpcyBmdWxsLXRpbWUgaG9tZSBhZ2FpbiBvbmNlIGhlJ3MgcmV0aXJlZC4KSGlzIG1haW4gY29uY2VybiBub3csIHRob3VnaCwgaXMgaG9sZGluZyBvZmYgVG9kZCBDb2xsaW5zIGZvciB0aGUgYmFja3VwIGpvYi4KQnJ1bmVsbCB0b29rIGEgYmlnIHN0ZXAgdG93YXJkIHRoYXQgZ29hbCBUaHVyc2RheSwgZmluaXNoaW5nIDUtb2YtNiBmb3IgNDcgeWFyZHMuCkNvbGxpbnMgZGlkIG5vdCBwbGF5LgpGb3VydGgtc3RyaW5nZXIgSm9yZGFuIFBhbG1lciB3YXMgMi1vZi04IGZvciAxMCB5YXJkcyB3aXRoIGFuIGludGVyY2VwdGlvbiwgd2hpY2ggcmVjZW50bHkgc2lnbmVkIGxpbmViYWNrZXIgUm95IE1hbm5pbmcgcmV0dXJuZWQgMjcgeWFyZHMgZm9yIGEgdG91Y2hkb3duIGFuZCBhIDI0LTE0IGxlYWQgaW4gdGhlIHRoaXJkLgpKYWNrc29udmlsbGUncyBxdWFydGVyYmFjayBzaXR1YXRpb24gaXMgY29uc2lkZXJhYmx5IGNsZWFyZXIuCkRlc3BpdGUgbWlzc2luZyAxMCBnYW1lcyBsYXN0IHNlYXNvbiwgQnlyb24gTGVmdHdpY2ggaXMgc28gZW50cmVuY2hlZCBhcyB0aGUgc3RhcnRlciB0aGF0IGhlIHdhcyBvbmUgb2YgMzAgcGxheWVycyB3aG8gZGlkbid0IGV2ZW4gZHJlc3MgZm9yIHRoZSBnYW1lLgpUaGUgSmFndWFycyAoMy0xKSBoYWQgMTEgcGxheWVycyBvbiB0aGUgaW5hY3RpdmUgbGlzdCwgYW5kIGNvYWNoIEphY2sgRGVsIFJpbyBhbGxvd2VkIGFub3RoZXIgMTkgdG8gY2hhbmdlIGludG8gc3RyZWV0IGNsb3RoZXMganVzdCBiZWZvcmUgdGhlIG9wZW5pbmcga2lja29mZi4KUnVubmluZyBiYWNrcyBGcmVkIFRheWxvciBhbmQgTWF1cmljZSBKb25lcy1EcmV3IGRpZCBub3QgcGxheS4KTmVpdGhlciBkaWQgZGVmZW5zaXZlIGxpbmVtZW4gTWFyY3VzIFN0cm91ZCwgSm9obiBIZW5kZXJzb24gYW5kIFJlZ2dpZSBIYXl3YXJkLgpFdmVuIHJvb2tpZSBsaW5lYmFja2VyIEp1c3RpbiBEdXJhbnQgZ290IHRoZSBuaWdodCBvZmYuClRoZSBvbmx5IHN0YXJ0ZXJzIHRvIHNlZSB0aGUgZmllbGQgd2VyZSByaWdodCB0YWNrbGUgVG9ueSBQYXNob3MsIHdobyBoYXMgc3RydWdnbGVkIGluIHRoZSBwcmVzZWFzb24sIGFuZCByZWNlaXZlciBEZW5uaXMgTm9ydGhjdXR0LCB3aG8gb25seSBwbGF5ZWQgYXMgYSBwdW50IHJldHVybmVyLgpCYWNrdXAgcXVhcnRlcmJhY2sgRGF2aWQgR2FycmFyZCBnb3QgdGhlIHN0YXJ0LCBnb2luZyA3LW9mLTEwIGZvciA3NyB5YXJkcywgd2hpbGUgdGhpcmQtdGVhbWVyIFF1aW5uIEdyYXkgcGxheWVkIGV4dGVuc2l2ZWx5LgpHcmF5LCB3aG8gbWlnaHQgYmUgY3V0IFNhdHVyZGF5IGlmIHRoZSBKYWdzIGRlY2lkZSB0byBrZWVwIGp1c3QgdHdvIHF1YXJ0ZXJiYWNrcywgd2FzIDE3LW9mLTIyIGZvciAxNzIgeWFyZHMgYW5kIHR3byB0b3VjaGRvd25zLgpIZSBoYWQgYSA0MC15YXJkIFREIHBhc3MgdG8gUmVnZ2llIFdpbGxpYW1zIHdpdGggMzYgc2Vjb25kcyByZW1haW5pbmcgaW4gdGhlIGZpcnN0IGhhbGYsIG1ha2luZyBpdCAxNC0xMC4KSmFja3NvbnZpbGxlIGhhZCB0aHJlZSBwb3NpdGlvbiBiYXR0bGVzIG9mIG5vdGUuCkxhQnJhbmRvbiBUb2VmaWVsZCBhbmQgQWx2aW4gUGVhcm1hbiBhcmUgdnlpbmcgZm9yIHRoZSBmaW5hbCBydW5uaW5nIGJhY2sgc3BvdC4KVG9lZmllbGQsIHRyeWluZyB0byBvdmVyY29tZSB0d28gcHJlc2Vhc29uIGZ1bWJsZXMsIHJhbiAxOSB0aW1lcyBmb3IgODQgeWFyZHMgYW5kIGhhZCBhIDEyLXlhcmQgVEQgcnVuLgpQZWFybWFuIGdhaW5lZCAyMSB5YXJkcyBvbiBuaW5lIGNhcnJpZXMgYW5kIGhhZCBhIDI4LXlhcmQgcHVudCByZXR1cm4uClRoZSBzaXh0aCByZWNlaXZlciBwb3NpdGlvbiBpcyBiZXR3ZWVuIENoYXJsZXMgU2hhcm9uIGFuZCByb29raWUgSm9obiBCcm91c3NhcmQuClNoYXJvbiBjYXVnaHQgZm91ciBwYXNzZXMgZm9yIDUxIHlhcmRzIHdoaWxlIEJyb3Vzc2FyZCwgYSBzcGVlZHkgc2V2ZW50aC1yb3VuZCBwaWNrIGZyb20gU2FuIEpvc2UgU3RhdGUsIGhhZCBmb3VyIHJlY2VwdGlvbnMgZm9yIDMwIHlhcmRzIGFuZCBtYWRlIGEgbGVhcGluZyBjYXRjaCBuZWFyIHRoZSBzaWRlbGluZS4KQW5kIEphY2tzb252aWxsZSdzIGZpbmFsIGNvcm5lcmJhY2sgc3BvdCBzZWVtaW5nbHkgd29ya2VkIGl0c2VsZiBvdXQuClNlY29uZC15ZWFyIHBsYXllciBEZWUgV2ViYiBhbmQgam91cm5leW1hbiBCcnVjZSBUaG9ybnRvbiBlbnRlcmVkIHRoZSBnYW1lIHRyeWluZyBzZWN1cmUgYSByb3N0ZXIgc3BvdC4KV2ViYiBnb3QgYmVhdCBvbiBSYW5kbGUgRWwncyBURCBjYXRjaCBhbmQgd2FzIGZsYWdnZWQgZm9yIHBhc3MgaW50ZXJmZXJlbmNlIG9uIHRoZSBwbGF5LgpIZSBnb3QgcGVuYWxpemVkIGFnYWluIGluIHRoZSBzZWNvbmQgcXVhcnRlciwgYW5vdGhlciBwYXNzIGludGVyZmVyZW5jZSBjYWxsIHRoYXQgbGVkIHRvIFdhc2hpbmd0b24ncyBzZWNvbmQgdG91Y2hkb3duLgpOb3RlczogQXMgZXhwZWN0ZWQsIFJlZHNraW5zIFJCIENsaW50b24gUG9ydGlzIChrbmVlKSwgTFQgQ2hyaXMgU2FtdWVscyAoa25lZSkgYW5kIExCIE1hcmN1cyBXYXNoaW5ndG9uIChlbGJvdykgZGlkIG5vdCBwbGF5LiAuLi4KTEcgUGV0ZSBLZW5kYWxsLCBhY3F1aXJlZCBpbiBhIHRyYWRlIHdpdGggdGhlIE5ldyBZb3JrIEpldHMgbGFzdCB3ZWVrLCBzdGFydGVkIGFuZCBwbGF5ZWQgd2VsbC4gLi4uCkphZ3MgVEUgSXNhYWMgU21vbGtvLCB3aG8gY2F1Z2h0IGEgVEQgcGFzcywgYWxzbyBwbGF5ZWQgbGluZWJhY2tlciBpbiB0aGUgc2Vjb25kIGhhbGYuIC4uLgpBIHN0ZWFkeSwgbGlnaHQgcmFpbiBmZWxsIGZvciBtdWNoIG9mIHRoZSBzZWNvbmQgaGFsZi4K
[(QWZ0ZXIgU3Ryb25nIFN0YXJ0LCBSZWRza2lucyBGYWRlIEF3YXkKQWZ0ZXIgU3Ryb25nIFN0YXJ0LCBSZWRza2lucyBGYWRlIEF3YXkgSmFndWFycyAzMSwgUmVkc2tpbnMgMTQKQXNzb2NpYXRlZCBQcmVzcyBUaHVyc2RheSwgQXVndXN0IDMwLCAyMDA3OyAxMDoyNCBQTQpKQUNLU09OVklMTEUsIEZsYS4gLS0gSmFzb24gQ2FtcGJlbGwgZ290IGEgbXVjaC1uZWVkZWQgdG91Y2hkb3duLgpNYXJrIEJydW5lbGwgZ290IGEgbG91ZCBvdmF0aW9uLgpBbmQgbW9zdCBvZiB0aGUgSmFja3NvbnZpbGxlIEphZ3VhcnMgZ290IGEgbmlnaHQgb2ZmLgpDYW1wYmVsbCByZXR1cm5lZCB0byB0aGUgc3RhcnRpbmcgbGluZXVwIGFmdGVyIG1pc3NpbmcgbGFzdCB3ZWVrJ3MgZ2FtZSB3aXRoIGEgYnJ1aXNlZCBsZWZ0IGtuZWUuCkhlIHdhcyA1LW9mLTUgcGFzc2luZyBmb3IgNTQgeWFyZHMgYW5kIGEgdG91Y2hkb3duIGluIFdhc2hpbmd0b24ncyAzMS0xNCBsb3NzIHRvIHRoZSBKYWd1YXJzIG9uIFRodXJzZGF5IG5pZ2h0IGluIHRoZSBwcmVzZWFzb24gZmluYWxlIGZvciBib3RoIHRlYW1zLgpDYW1wYmVsbCBwbGF5ZWQganVzdCBvbmUgc2VyaWVzLCBidXQgaXQgd2FzIGV4YWN0bHkgd2hhdCB0aGUgUmVkc2tpbnMgKDItMikgd2FudGVkIHRvIHNlZSBmcm9tIHRoZSB0aGlyZC15ZWFyIHByby4KQWx0aG91Z2ggaGUgZ290IGhpdCBvbmNlLCBoZSBoYWQgYW1wbGUgdGltZSBpbiB0aGUgcG9ja2V0IGFuZCBjYXBwZWQgdGhlIGRyaXZlIHdpdGggYSAyMy15YXJkIHN0cmlrZSBkb3duIHRoZSBzaWRlbGluZSB0byBBbnR3YWFuIFJhbmRsZSBFbC4KSXQgd2FzIENhbXBiZWxsJ3MgZmlyc3QgdG91Y2hkb3duIHBhc3Mgb2YgdGhlIHByZXNlYXNvbiwgYW4gZW5jb3VyYWdpbmcgc2lnbiBmb3IgYW4gb2ZmZW5zZSB0aGF0IHNjb3JlZCBqdXN0IDM3IHBvaW50cyBpbiBpdHMgZmlyc3QgdGhyZWUgZ2FtZXMuCkJydW5lbGwgdG9vayBvdmVyIGZyb20gdGhlcmUsIGdldHRpbmcgcGxlbnR5IG9mIHBsYXlpbmcgdGltZSBpbiBoaXMgZmlyc3QgZ2FtZSBpbiBKYWNrc29udmlsbGUgYXMgYW4gb3Bwb3NpbmcgcGxheWVyLgpUaGUgZmFjZSBvZiB0aGUgSmFndWFycyBmb3IgbmluZSB5ZWFycywgQnJ1bmVsbCBnb3QgYSB3YXJtIHdlbGNvbWUgYXMgaGUgam9nZ2VkIG9udG8gdGhlIGZpZWxkLgpIZSBkaWRuJ3QgZ2V0IHF1aXRlIHRoZSBzYW1lIHJlY2VwdGlvbiB3aGVuIGhlIHRocmV3IGEgMTQteWFyZCBURCBwYXNzIHRvIFJ5YW4gSG9hZyBsYXRlIGluIHRoZSBmaXJzdCBoYWxmIHRvIGdpdmUgdGhlIFJlZHNraW5zIGEgMTQtMyBsZWFkLgpCcnVuZWxsIHN0aWxsIGhhcyBhIGhvdXNlIGluIEphY2tzb252aWxsZSwgdmlzaXRzIGEgZmV3IHRpbWVzIGVhY2ggeWVhciBhbmQgd291bGQgbGlrZSB0byBtYWtlIGl0IGhpcyBmdWxsLXRpbWUgaG9tZSBhZ2FpbiBvbmNlIGhlJ3MgcmV0aXJlZC4KSGlzIG1haW4gY29uY2VybiBub3csIHRob3VnaCwgaXMgaG9sZGluZyBvZmYgVG9kZCBDb2xsaW5zIGZvciB0aGUgYmFja3VwIGpvYi4KQnJ1bmVsbCB0b29rIGEgYmlnIHN0ZXAgdG93YXJkIHRoYXQgZ29hbCBUaHVyc2RheSwgZmluaXNoaW5nIDUtb2YtNiBmb3IgNDcgeWFyZHMuCkNvbGxpbnMgZGlkIG5vdCBwbGF5LgpGb3VydGgtc3RyaW5nZXIgSm9yZGFuIFBhbG1lciB3YXMgMi1vZi04IGZvciAxMCB5YXJkcyB3aXRoIGFuIGludGVyY2VwdGlvbiwgd2hpY2ggcmVjZW50bHkgc2lnbmVkIGxpbmViYWNrZXIgUm95IE1hbm5pbmcgcmV0dXJuZWQgMjcgeWFyZHMgZm9yIGEgdG91Y2hkb3duIGFuZCBhIDI0LTE0IGxlYWQgaW4gdGhlIHRoaXJkLgpKYWNrc29udmlsbGUncyBxdWFydGVyYmFjayBzaXR1YXRpb24gaXMgY29uc2lkZXJhYmx5IGNsZWFyZXIuCkRlc3BpdGUgbWlzc2luZyAxMCBnYW1lcyBsYXN0IHNlYXNvbiwgQnlyb24gTGVmdHdpY2ggaXMgc28gZW50cmVuY2hlZCBhcyB0aGUgc3RhcnRlciB0aGF0IGhlIHdhcyBvbmUgb2YgMzAgcGxheWVycyB3aG8gZGlkbid0IGV2ZW4gZHJlc3MgZm9yIHRoZSBnYW1lLgpUaGUgSmFndWFycyAoMy0xKSBoYWQgMTEgcGxheWVycyBvbiB0aGUgaW5hY3RpdmUgbGlzdCwgYW5kIGNvYWNoIEphY2sgRGVsIFJpbyBhbGxvd2VkIGFub3RoZXIgMTkgdG8gY2hhbmdlIGludG8gc3RyZWV0IGNsb3RoZXMganVzdCBiZWZvcmUgdGhlIG9wZW5pbmcga2lja29mZi4KUnVubmluZyBiYWNrcyBGcmVkIFRheWxvciBhbmQgTWF1cmljZSBKb25lcy1EcmV3IGRpZCBub3QgcGxheS4KTmVpdGhlciBkaWQgZGVmZW5zaXZlIGxpbmVtZW4gTWFyY3VzIFN0cm91ZCwgSm9obiBIZW5kZXJzb24gYW5kIFJlZ2dpZSBIYXl3YXJkLgpFdmVuIHJvb2tpZSBsaW5lYmFja2VyIEp1c3RpbiBEdXJhbnQgZ290IHRoZSBuaWdodCBvZmYuClRoZSBvbmx5IHN0YXJ0ZXJzIHRvIHNlZSB0aGUgZmllbGQgd2VyZSByaWdodCB0YWNrbGUgVG9ueSBQYXNob3MsIHdobyBoYXMgc3RydWdnbGVkIGluIHRoZSBwcmVzZWFzb24sIGFuZCByZWNlaXZlciBEZW5uaXMgTm9ydGhjdXR0LCB3aG8gb25seSBwbGF5ZWQgYXMgYSBwdW50IHJldHVybmVyLgpCYWNrdXAgcXVhcnRlcmJhY2sgRGF2aWQgR2FycmFyZCBnb3QgdGhlIHN0YXJ0LCBnb2luZyA3LW9mLTEwIGZvciA3NyB5YXJkcywgd2hpbGUgdGhpcmQtdGVhbWVyIFF1aW5uIEdyYXkgcGxheWVkIGV4dGVuc2l2ZWx5LgpHcmF5LCB3aG8gbWlnaHQgYmUgY3V0IFNhdHVyZGF5IGlmIHRoZSBKYWdzIGRlY2lkZSB0byBrZWVwIGp1c3QgdHdvIHF1YXJ0ZXJiYWNrcywgd2FzIDE3LW9mLTIyIGZvciAxNzIgeWFyZHMgYW5kIHR3byB0b3VjaGRvd25zLgpIZSBoYWQgYSA0MC15YXJkIFREIHBhc3MgdG8gUmVnZ2llIFdpbGxpYW1zIHdpdGggMzYgc2Vjb25kcyByZW1haW5pbmcgaW4gdGhlIGZpcnN0IGhhbGYsIG1ha2luZyBpdCAxNC0xMC4KSmFja3NvbnZpbGxlIGhhZCB0aHJlZSBwb3NpdGlvbiBiYXR0bGVzIG9mIG5vdGUuCkxhQnJhbmRvbiBUb2VmaWVsZCBhbmQgQWx2aW4gUGVhcm1hbiBhcmUgdnlpbmcgZm9yIHRoZSBmaW5hbCBydW5uaW5nIGJhY2sgc3BvdC4KVG9lZmllbGQsIHRyeWluZyB0byBvdmVyY29tZSB0d28gcHJlc2Vhc29uIGZ1bWJsZXMsIHJhbiAxOSB0aW1lcyBmb3IgODQgeWFyZHMgYW5kIGhhZCBhIDEyLXlhcmQgVEQgcnVuLgpQZWFybWFuIGdhaW5lZCAyMSB5YXJkcyBvbiBuaW5lIGNhcnJpZXMgYW5kIGhhZCBhIDI4LXlhcmQgcHVudCByZXR1cm4uClRoZSBzaXh0aCByZWNlaXZlciBwb3NpdGlvbiBpcyBiZXR3ZWVuIENoYXJsZXMgU2hhcm9uIGFuZCByb29raWUgSm9obiBCcm91c3NhcmQuClNoYXJvbiBjYXVnaHQgZm91ciBwYXNzZXMgZm9yIDUxIHlhcmRzIHdoaWxlIEJyb3Vzc2FyZCwgYSBzcGVlZHkgc2V2ZW50aC1yb3VuZCBwaWNrIGZyb20gU2FuIEpvc2UgU3RhdGUsIGhhZCBmb3VyIHJlY2VwdGlvbnMgZm9yIDMwIHlhcmRzIGFuZCBtYWRlIGEgbGVhcGluZyBjYXRjaCBuZWFyIHRoZSBzaWRlbGluZS4KQW5kIEphY2tzb252aWxsZSdzIGZpbmFsIGNvcm5lcmJhY2sgc3BvdCBzZWVtaW5nbHkgd29ya2VkIGl0c2VsZiBvdXQuClNlY29uZC15ZWFyIHBsYXllciBEZWUgV2ViYiBhbmQgam91cm5leW1hbiBCcnVjZSBUaG9ybnRvbiBlbnRlcmVkIHRoZSBnYW1lIHRyeWluZyBzZWN1cmUgYSByb3N0ZXIgc3BvdC4KV2ViYiBnb3QgYmVhdCBvbiBSYW5kbGUgRWwncyBURCBjYXRjaCBhbmQgd2FzIGZsYWdnZWQgZm9yIHBhc3MgaW50ZXJmZXJlbmNlIG9uIHRoZSBwbGF5LgpIZSBnb3QgcGVuYWxpemVkIGFnYWluIGluIHRoZSBzZWNvbmQgcXVhcnRlciwgYW5vdGhlciBwYXNzIGludGVyZmVyZW5jZSBjYWxsIHRoYXQgbGVkIHRvIFdhc2hpbmd0b24ncyBzZWNvbmQgdG91Y2hkb3duLgpOb3RlczogQXMgZXhwZWN0ZWQsIFJlZHNraW5zIFJCIENsaW50b24gUG9ydGlzIChrbmVlKSwgTFQgQ2hyaXMgU2FtdWVscyAoa25lZSkgYW5kIExCIE1hcmN1cyBXYXNoaW5ndG9uIChlbGJvdykgZGlkIG5vdCBwbGF5LiAuLi4KTEcgUGV0ZSBLZW5kYWxsLCBhY3F1aXJlZCBpbiBhIHRyYWRlIHdpdGggdGhlIE5ldyBZb3JrIEpldHMgbGFzdCB3ZWVrLCBzdGFydGVkIGFuZCBwbGF5ZWQgd2VsbC4gLi4uCkphZ3MgVEUgSXNhYWMgU21vbGtvLCB3aG8gY2F1Z2h0IGEgVEQgcGFzcywgYWxzbyBwbGF5ZWQgbGluZWJhY2tlciBpbiB0aGUgc2Vjb25kIGhhbGYuIC4uLgpBIHN0ZWFkeSwgbGlnaHQgcmFpbiBmZWxsIGZvciBtdWNoIG9mIHRoZSBzZWNvbmQgaGFsZi4K, 'PERSON')]
QnJld2VycycgUGVuIEFsbG93cyBBc3Ryb3MgdG8gU3RlYWwgV2luCkJ5IENIUklTIEpFTktJTlMgVGhlIEFzc29jaWF0ZWQgUHJlc3MgTW9uZGF5LCBTZXB0ZW1iZXIgMywgMjAwNzsgNjowNCBQTQpNSUxXQVVLRUUgLS0gVGhlIE1pbHdhdWtlZSBCcmV3ZXJzJyBidWxscGVuIGNvdWdoZWQgdXAgYSB0aHJlZS1ydW4gbGVhZCBpbiB0aGUgZWlnaHRoIGlubmluZywgYWxsb3dpbmcgdGhlIEhvdXN0b24gQXN0cm9zIHRvIHN0ZWFsIGFuIDktNyB2aWN0b3J5IG9uIE1vbmRheS4KQXN0cm9zIHJvb2tpZSBIdW50ZXIgUGVuY2UgaGl0IGEga2V5IHR3by1ydW4gdHJpcGxlIGR1cmluZyB0aGUgcmFsbHksIGFuZCB0aGUgQnJld2Vycywgd2hvIGNhbWUgaW4gdG8gdGhlIGdhbWUgMSAxLzIgZ2FtZXMgYmVoaW5kIHRoZSBDaGljYWdvIEN1YnMgaW4gdGhlIE5MIENlbnRyYWwsIGhhZCBhIHRocmVlLWdhbWUgd2lubmluZyBzdHJlYWsgc25hcHBlZC4KV2l0aCBNaWx3YXVrZWUgbGVhZGluZyA3LTQsIEJyZXdlcnMgbWFuYWdlciBOZWQgWW9zdCBicm91Z2h0IGluIHJpZ2h0LWhhbmRlZCBzZXR1cCBtYW4gRGVycmljayBUdXJuYm93IHRvIHBpdGNoIHRoZSBlaWdodGguCkJ1dCBUdXJuYm93LCB3aG9zZSBzdHJ1Z2dsZXMgbGFzdCBzZWFzb24gY29zdCBoaW0gaGlzIHJvbGUgYXMgTWlsd2F1a2VlJ3MgY2xvc2VyLCBsb2FkZWQgdGhlIGJhc2VzIHdpdGggb25lIG91dCBhbmQgd2FzIHJlbW92ZWQgZm9yIGxlZnQtaGFuZGVyIEJyaWFuIFNob3VzZSwgd2hvIGFsbG93ZWQgYSBzYWNyaWZpY2UgZmx5IHRvIHBpbmNoLWhpdHRlciBDcmFpZyBCaWdnaW8gdG8gY3V0IHRoZSBCcmV3ZXJzJyBsZWFkIHRvIHR3byBydW5zLgpZb3N0IHRoZW4gYnJvdWdodCBpbiByaWdodHkgR3JlZyBBcXVpbm8gKDAtMSkgdG8gZmFjZSBQZW5jZSwgYSByaWdodC1oYW5kZWQgaGl0dGVyLCBhbmQgQXF1aW5vIHVuY29ya2VkIGEgd2lsZCBwaXRjaCB0byBnaXZlIHRoZSBBc3Ryb3MgcnVubmVycyBvbiBzZWNvbmQgYW5kIHRoaXJkIHdpdGggdHdvIG91dHMuClBlbmNlIHRoZW4gZHJvdmUgYSBiYWxsIHBhc3QgY2VudGVyIGZpZWxkZXIgQmlsbCBIYWxsIGZvciBhIGdhbWUtdHlpbmcgdHJpcGxlIF8gYW5kIHRoZSBBc3Ryb3MgdGhlbiB0b29rIHRoZSBsZWFkIG9uIGEgcGFzc2VkIGJhbGwgYnkgQnJld2VycyBjYXRjaGVyIEpvaG55IEVzdHJhZGEgdGhhdCB3ZW50IHRvIHRoZSBzY3JlZW4sIGFsbG93aW5nIFBlbmNlIHRvIHNjb3JlIGZyb20gdGhpcmQuCkRhdmUgQm9ya293c2tpICg0LTMpIGdvdCB0aGUgZmluYWwgdHdvIG91dHMgaW4gdGhlIHNldmVudGggYW5kIHRvb2sgdGhlIHZpY3RvcnkuCkNoYWQgUXVhbGxzIHJldGlyZWQgdHdvIGJhdHRlcnMgZm9yIGhpcyBmb3VydGggc2F2ZS4KSXQgd2FzIGFub3RoZXIgbWFkZGVuaW5nIGxhdGUtaW5uaW5nIG1lbHRkb3duIGJ5IHRoZSBCcmV3ZXJzJyBwaXRjaGluZyBzdGFmZiwgd2hpY2ggd2FzIGhvcGluZyB0byBlbmQgYW4gZXh0ZW5kZWQgc2x1bXAgd2l0aCB0aGUgcmV0dXJuIG9mIHN0YXJ0ZXIgQmVuIFNoZWV0cy4KSXQgd2FzIGEgaGFwcHkgaG9tZWNvbWluZyBmb3IgQXN0cm9zIGludGVyaW0gbWFuYWdlciBDZWNpbCBDb29wZXIsIHdobyB0b29rIG92ZXIgZm9yIGZpcmVkIG1hbmFnZXIgUGhpbCBHYXJuZXIgbGFzdCB3ZWVrLgpDb29wZXIgd2FzIGEgZml2ZS10aW1lIEFsbC1TdGFyIGluIDExIHNlYXNvbnMgd2l0aCB0aGUgQnJld2Vycy4KVGhlIEJyZXdlcnMgcHV0IHJ1bm5lcnMgb24gc2Vjb25kIGFuZCB0aGlyZCB3aXRoIG9uZSBvdXQgb2ZmIEFzdHJvcyByZWxpZXZlciBCcmFkIExpZGdlLCBidXQgSi5KLiBIYXJkeSBwb3BwZWQgb3V0IHRvIHRoZSBjYXRjaGVyIGFuZCBwaW5jaC1oaXR0ZXIgVmlubnkgUm90dGlubyBoaXQgYSBoYXJkIGdyb3VuZGVyIHRvIHNlY29uZCBiYXNlbWFuIE1hcmsgTG9yZXR0YSwgd2hvIHRocmV3IFJvdHRpbm8gb3V0IHRvIGVuZCB0aGUgaW5uaW5nLgpMYW5jZSBCZXJrbWFuIHRoZW4gaG9tZXJlZCBvZmYgTWlsd2F1a2VlIHJlbGlldmVyIENocmlzIFNwdXJsaW5nIGluIHRoZSBuaW50aCwgZ2l2aW5nIEhvdXN0b24gYSA5LTcgbGVhZC4KTWlsd2F1a2VlIGhhZCByYWxsaWVkIGZyb20gYSAzLTAgZGVmaWNpdCBlYXJsaWVyIGluIHRoZSBnYW1lLCBzY29yaW5nIHR3byBydW5zIGluIHRoZSBmb3VydGggYW5kIHRha2luZyB0aGUgbGVhZCBpbiB0aGUgc2l4dGggb24gYSBncm91bmQgYmFsbCBieSBDb3JleSBIYXJ0IHRoYXQgc2NvcmVkIFJ5YW4gQnJhdW4gYW5kIGEgdHdvLXJ1biB0cmlwbGUgYnkgQ3JhaWcgQ291bnNlbGwgdGhhdCBnYXZlIE1pbHdhdWtlZSBhIDUtMyBsZWFkLgpUaGUgQnJld2VycycgYmlnIHNpeHRoIGlubmluZyBjaGFzZWQgT3N3YWx0LCB3aG8gZ2F2ZSB1cCBmaXZlIHJ1bnMgYW5kIDEwIGhpdHMgaW4gNSAyLTMgaW5uaW5ncy4KT3N3YWx0IHdhcyA2LTAgaW4gaGlzIHByZXZpb3VzIHNldmVuIHN0YXJ0cywgd2l0aCBhIDEuMDAgRVJBIGR1cmluZyB0aGF0IHN0cmV0Y2guClNoZWV0cyBzdHJ1Z2dsZWQgd2l0aCBoaXMgY29udHJvbCBpbiBoaXMgc2Vjb25kIG91dGluZyBzaW5jZSBjb21pbmcgb2ZmIHRoZSBkaXNhYmxlZCBsaXN0IGxhc3Qgd2Vlay4KSGUgd2Fsa2VkIGEgY2FyZWVyLWhpZ2ggc2l4IGJhdHRlcnMgXyBpbmNsdWRpbmcgb25lIGludGVudGlvbmFsIHdhbGsgXyBhbmQgdGhyZXcgMTE4IHBpdGNoZXMgaW4gc2l4IGlubmluZ3MuClNoZWV0cyBnYXZlIHVwIG9ubHkgdGhyZWUgcnVucyBhbmQgZml2ZSBoaXRzLgpBZnRlciB0aGUgQXN0cm9zIHNjb3JlZCBhIHJ1biBpbiB0aGUgdG9wIG9mIHRoZSBzZXZlbnRoLCBCcmF1biBoaXQgYW4gUkJJIGRvdWJsZSBpbiB0aGUgYm90dG9tIG9mIHRoZSBpbm5pbmcgb2ZmIEFzdHJvcyByZWxpZXZlciBDaHJpc3RvcGhlciBTYW1wc29uIHRvIGdpdmUgTWlsd2F1a2VlIGEgNi00IGxlYWQuCkJpbGwgSGFsbCBsYXRlciBoaXQgYSBzYWNyaWZpY2UgZmx5IGRlZXAgdG8gcmlnaHQgdG8gc2NvcmUgQnJhdW4uCk5vdGVzOiBCcmV3ZXJzIHByaW5jaXBhbCBvd25lciBNYXJrIEF0dGFuYXNpbyBnYXZlIFlvc3QgYSB2b3RlIG9mIGNvbmZpZGVuY2UgYmVmb3JlIHRoZSBnYW1lLCBkZXNwaXRlIHRoZSB0ZWFtJ3MgcmVjZW50IHNsaWRlIGFuZCBtb3VudGluZyBmYW4gY3JpdGljaXNtLgoiVGhlcmUncyBjZXJ0YWlubHkgbm8gcmVhc29uIHRvIHRoaW5rIGhlIHdvbid0IGJlIGJhY2sgbmV4dCB5ZWFyLCIgQXR0YW5hc2lvIHNhaWQuIC4uLgpCcmV3ZXJzIGxlZnQgZmllbGRlciBHZW9mZiBKZW5raW5zIGJydXNpZWQgaGlzIGxlZnQgZm9vdCBpbiB0aGUgZm91cnRoIGlubmluZyBhbmQgd2FzIHJlcGxhY2VkIGJ5IHBpbmNoIHJ1bm5lciBIYWxsLgpKZW5raW5zJyBYLXJheXMgd2VyZSBuZWdhdGl2ZSBhbmQgaGUgaXMgZGF5LXRvLWRheS4K
[(QnJld2VycycgUGVuIEFsbG93cyBBc3Ryb3MgdG8gU3RlYWwgV2luCkJ5IENIUklTIEpFTktJTlMgVGhlIEFzc29jaWF0ZWQgUHJlc3MgTW9uZGF5LCBTZXB0ZW1iZXIgMywgMjAwNzsgNjowNCBQTQpNSUxXQVVLRUUgLS0gVGhlIE1pbHdhdWtlZSBCcmV3ZXJzJyBidWxscGVuIGNvdWdoZWQgdXAgYSB0aHJlZS1ydW4gbGVhZCBpbiB0aGUgZWlnaHRoIGlubmluZywgYWxsb3dpbmcgdGhlIEhvdXN0b24gQXN0cm9zIHRvIHN0ZWFsIGFuIDktNyB2aWN0b3J5IG9uIE1vbmRheS4KQXN0cm9zIHJvb2tpZSBIdW50ZXIgUGVuY2UgaGl0IGEga2V5IHR3by1ydW4gdHJpcGxlIGR1cmluZyB0aGUgcmFsbHksIGFuZCB0aGUgQnJld2Vycywgd2hvIGNhbWUgaW4gdG8gdGhlIGdhbWUgMSAxLzIgZ2FtZXMgYmVoaW5kIHRoZSBDaGljYWdvIEN1YnMgaW4gdGhlIE5MIENlbnRyYWwsIGhhZCBhIHRocmVlLWdhbWUgd2lubmluZyBzdHJlYWsgc25hcHBlZC4KV2l0aCBNaWx3YXVrZWUgbGVhZGluZyA3LTQsIEJyZXdlcnMgbWFuYWdlciBOZWQgWW9zdCBicm91Z2h0IGluIHJpZ2h0LWhhbmRlZCBzZXR1cCBtYW4gRGVycmljayBUdXJuYm93IHRvIHBpdGNoIHRoZSBlaWdodGguCkJ1dCBUdXJuYm93LCB3aG9zZSBzdHJ1Z2dsZXMgbGFzdCBzZWFzb24gY29zdCBoaW0gaGlzIHJvbGUgYXMgTWlsd2F1a2VlJ3MgY2xvc2VyLCBsb2FkZWQgdGhlIGJhc2VzIHdpdGggb25lIG91dCBhbmQgd2FzIHJlbW92ZWQgZm9yIGxlZnQtaGFuZGVyIEJyaWFuIFNob3VzZSwgd2hvIGFsbG93ZWQgYSBzYWNyaWZpY2UgZmx5IHRvIHBpbmNoLWhpdHRlciBDcmFpZyBCaWdnaW8gdG8gY3V0IHRoZSBCcmV3ZXJzJyBsZWFkIHRvIHR3byBydW5zLgpZb3N0IHRoZW4gYnJvdWdodCBpbiByaWdodHkgR3JlZyBBcXVpbm8gKDAtMSkgdG8gZmFjZSBQZW5jZSwgYSByaWdodC1oYW5kZWQgaGl0dGVyLCBhbmQgQXF1aW5vIHVuY29ya2VkIGEgd2lsZCBwaXRjaCB0byBnaXZlIHRoZSBBc3Ryb3MgcnVubmVycyBvbiBzZWNvbmQgYW5kIHRoaXJkIHdpdGggdHdvIG91dHMuClBlbmNlIHRoZW4gZHJvdmUgYSBiYWxsIHBhc3QgY2VudGVyIGZpZWxkZXIgQmlsbCBIYWxsIGZvciBhIGdhbWUtdHlpbmcgdHJpcGxlIF8gYW5kIHRoZSBBc3Ryb3MgdGhlbiB0b29rIHRoZSBsZWFkIG9uIGEgcGFzc2VkIGJhbGwgYnkgQnJld2VycyBjYXRjaGVyIEpvaG55IEVzdHJhZGEgdGhhdCB3ZW50IHRvIHRoZSBzY3JlZW4sIGFsbG93aW5nIFBlbmNlIHRvIHNjb3JlIGZyb20gdGhpcmQuCkRhdmUgQm9ya293c2tpICg0LTMpIGdvdCB0aGUgZmluYWwgdHdvIG91dHMgaW4gdGhlIHNldmVudGggYW5kIHRvb2sgdGhlIHZpY3RvcnkuCkNoYWQgUXVhbGxzIHJldGlyZWQgdHdvIGJhdHRlcnMgZm9yIGhpcyBmb3VydGggc2F2ZS4KSXQgd2FzIGFub3RoZXIgbWFkZGVuaW5nIGxhdGUtaW5uaW5nIG1lbHRkb3duIGJ5IHRoZSBCcmV3ZXJzJyBwaXRjaGluZyBzdGFmZiwgd2hpY2ggd2FzIGhvcGluZyB0byBlbmQgYW4gZXh0ZW5kZWQgc2x1bXAgd2l0aCB0aGUgcmV0dXJuIG9mIHN0YXJ0ZXIgQmVuIFNoZWV0cy4KSXQgd2FzIGEgaGFwcHkgaG9tZWNvbWluZyBmb3IgQXN0cm9zIGludGVyaW0gbWFuYWdlciBDZWNpbCBDb29wZXIsIHdobyB0b29rIG92ZXIgZm9yIGZpcmVkIG1hbmFnZXIgUGhpbCBHYXJuZXIgbGFzdCB3ZWVrLgpDb29wZXIgd2FzIGEgZml2ZS10aW1lIEFsbC1TdGFyIGluIDExIHNlYXNvbnMgd2l0aCB0aGUgQnJld2Vycy4KVGhlIEJyZXdlcnMgcHV0IHJ1bm5lcnMgb24gc2Vjb25kIGFuZCB0aGlyZCB3aXRoIG9uZSBvdXQgb2ZmIEFzdHJvcyByZWxpZXZlciBCcmFkIExpZGdlLCBidXQgSi5KLiBIYXJkeSBwb3BwZWQgb3V0IHRvIHRoZSBjYXRjaGVyIGFuZCBwaW5jaC1oaXR0ZXIgVmlubnkgUm90dGlubyBoaXQgYSBoYXJkIGdyb3VuZGVyIHRvIHNlY29uZCBiYXNlbWFuIE1hcmsgTG9yZXR0YSwgd2hvIHRocmV3IFJvdHRpbm8gb3V0IHRvIGVuZCB0aGUgaW5uaW5nLgpMYW5jZSBCZXJrbWFuIHRoZW4gaG9tZXJlZCBvZmYgTWlsd2F1a2VlIHJlbGlldmVyIENocmlzIFNwdXJsaW5nIGluIHRoZSBuaW50aCwgZ2l2aW5nIEhvdXN0b24gYSA5LTcgbGVhZC4KTWlsd2F1a2VlIGhhZCByYWxsaWVkIGZyb20gYSAzLTAgZGVmaWNpdCBlYXJsaWVyIGluIHRoZSBnYW1lLCBzY29yaW5nIHR3byBydW5zIGluIHRoZSBmb3VydGggYW5kIHRha2luZyB0aGUgbGVhZCBpbiB0aGUgc2l4dGggb24gYSBncm91bmQgYmFsbCBieSBDb3JleSBIYXJ0IHRoYXQgc2NvcmVkIFJ5YW4gQnJhdW4gYW5kIGEgdHdvLXJ1biB0cmlwbGUgYnkgQ3JhaWcgQ291bnNlbGwgdGhhdCBnYXZlIE1pbHdhdWtlZSBhIDUtMyBsZWFkLgpUaGUgQnJld2VycycgYmlnIHNpeHRoIGlubmluZyBjaGFzZWQgT3N3YWx0LCB3aG8gZ2F2ZSB1cCBmaXZlIHJ1bnMgYW5kIDEwIGhpdHMgaW4gNSAyLTMgaW5uaW5ncy4KT3N3YWx0IHdhcyA2LTAgaW4gaGlzIHByZXZpb3VzIHNldmVuIHN0YXJ0cywgd2l0aCBhIDEuMDAgRVJBIGR1cmluZyB0aGF0IHN0cmV0Y2guClNoZWV0cyBzdHJ1Z2dsZWQgd2l0aCBoaXMgY29udHJvbCBpbiBoaXMgc2Vjb25kIG91dGluZyBzaW5jZSBjb21pbmcgb2ZmIHRoZSBkaXNhYmxlZCBsaXN0IGxhc3Qgd2Vlay4KSGUgd2Fsa2VkIGEgY2FyZWVyLWhpZ2ggc2l4IGJhdHRlcnMgXyBpbmNsdWRpbmcgb25lIGludGVudGlvbmFsIHdhbGsgXyBhbmQgdGhyZXcgMTE4IHBpdGNoZXMgaW4gc2l4IGlubmluZ3MuClNoZWV0cyBnYXZlIHVwIG9ubHkgdGhyZWUgcnVucyBhbmQgZml2ZSBoaXRzLgpBZnRlciB0aGUgQXN0cm9zIHNjb3JlZCBhIHJ1biBpbiB0aGUgdG9wIG9mIHRoZSBzZXZlbnRoLCBCcmF1biBoaXQgYW4gUkJJIGRvdWJsZSBpbiB0aGUgYm90dG9tIG9mIHRoZSBpbm5pbmcgb2ZmIEFzdHJvcyByZWxpZXZlciBDaHJpc3RvcGhlciBTYW1wc29uIHRvIGdpdmUgTWlsd2F1a2VlIGEgNi00IGxlYWQuCkJpbGwgSGFsbCBsYXRlciBoaXQgYSBzYWNyaWZpY2UgZmx5IGRlZXAgdG8gcmlnaHQgdG8gc2NvcmUgQnJhdW4uCk5vdGVzOiBCcmV3ZXJzIHByaW5jaXBhbCBvd25lciBNYXJrIEF0dGFuYXNpbyBnYXZlIFlvc3QgYSB2b3RlIG9mIGNvbmZpZGVuY2UgYmVmb3JlIHRoZSBnYW1lLCBkZXNwaXRlIHRoZSB0ZWFtJ3MgcmVjZW50IHNsaWRlIGFuZCBtb3VudGluZyBmYW4gY3JpdGljaXNtLgoiVGhlcmUncyBjZXJ0YWlubHkgbm8gcmVhc29uIHRvIHRoaW5rIGhlIHdvbid0IGJlIGJhY2sgbmV4dCB5ZWFyLCIgQXR0YW5hc2lvIHNhaWQuIC4uLgpCcmV3ZXJzIGxlZnQgZmllbGRlciBHZW9mZiBKZW5raW5zIGJydXNpZWQgaGlzIGxlZnQgZm9vdCBpbiB0aGUgZm91cnRoIGlubmluZyBhbmQgd2FzIHJlcGxhY2VkIGJ5IHBpbmNoIHJ1bm5lciBIYWxsLgpKZW5raW5zJyBYLXJheXMgd2VyZSBuZWdhdGl2ZSBhbmQgaGUgaXMgZGF5LXRvLWRheS4K, 'PERSON')]
TkJBIEFsbG93cyBJbnN0YW50IFJlcGxheSB0byBSZXZpZXcgRmlnaHRzIGFuZCBTb21lIEZsYWdyYW50IEZvdWxzCkFzc29jaWF0ZWQgUHJlc3MgV2VkbmVzZGF5LCBTZXB0ZW1iZXIgNSwgMjAwNzsgMjo1MCBQTQpORVcgWU9SSyAtLSBOQkEgcmVmZXJlZXMgd2lsbCBiZSBhYmxlIHRvIHVzZSBpbnN0YW50IHJlcGxheSB0byByZXZpZXcgYWx0ZXJjYXRpb25zIGFuZCBzb21lIGZsYWdyYW50IGZvdWxzIHN0YXJ0aW5nIHRoaXMgc2Vhc29uLgpUaGUgTkJBIEJvYXJkIG9mIEdvdmVybm9ycyB2b3RlZCBsYXN0IHdlZWsgdG8gYXBwcm92ZSB0aGUgY2hhbmdlcyByZWNvbW1lbmRlZCBieSB0aGUgbGVhZ3VlJ3MgQ29tcGV0aXRpb24gQ29tbWl0dGVlLgpPZmZpY2lhbHMgd2lsbCBiZSBhbGxvd2VkIHRvIHVzZSByZXBsYXkgb24gdGhlIG1vcmUgc2V2ZXJlIHR5cGUgb2YgZmxhZ3JhbnQgZm91bCwga25vd24gYXMgdGhlIHBlbmFsdHkgMi4KQmVjYXVzZSBhIGZsYWdyYW50LTIgcmVzdWx0cyBpbiBhbiBlamVjdGlvbiwgdGhlIGNvbW1pdHRlZSBydWxlZCB0aGF0IHJldmlld2luZyBzdWNoIGluZnJhY3Rpb25zIHdhcyBhcHByb3ByaWF0ZS4KUmVmZXJlZXMgYWxzbyB3aWxsIGJlIGFibGUgdG8gdXNlIHJlcGxheSBhZnRlciBhbiBhbHRlcmNhdGlvbiB0byBlbnN1cmUgdGhhdCBubyBwdW5jaGVzIG9yIG90aGVyIHVuc3BvcnRzbWFubGlrZSBhY3Rpb25zIGFyZSBtaXNzZWQgaW4gZGV0ZXJtaW5pbmcgcGVuYWx0aWVzLgo=
[]

[]
VmljayBJbmRpY3RlZCBvbiBTdGF0ZSBDaGFyZ2VzClRoZSBBc3NvY2lhdGVkIFByZXNzIFR1ZXNkYXksIFNlcHRlbWJlciAyNSwgMjAwNzsgMTowMiBQTQpTVVNTRVgsIFZhLiAtLSBNaWNoYWVsIFZpY2sgYW5kIHRocmVlIGNvLWRlZmVuZGFudHMgd2VyZSBpbmRpY3RlZCBieSBhIGdyYW5kIGp1cnkgVHVlc2RheSBvbiBzdGF0ZSBjaGFyZ2VzIHJlbGF0ZWQgdG8gYSBkb2dmaWdodGluZyByaW5nIG9wZXJhdGVkIG9uIFZpY2sncyBWaXJnaW5pYSBwcm9wZXJ0eS4KVGhlIGdyYW5kIGp1cnkgcGFzc2VkIG9uIGluZGljdGluZyB0aGUgQXRsYW50YSBGYWxjb25zIHF1YXJ0ZXJiYWNrIGFuZCB0d28gb2YgY28tZGVmZW5kYW50cyBvbiBlaWdodCBjb3VudHMgb2YgYW5pbWFsIGNydWVsdHksIHdoaWNoIHdvdWxkIGhhdmUgZXhwb3NlZCB0aGVtIHRvIGFzIG1hbnkgYXMgNDAgeWVhcnMgaW4gcHJpc29uIGlmIGNvbnZpY3RlZC4KVmljaywgd2hvIGFscmVhZHkgcGxlYWRlZCBndWlsdHkgaW4gZmVkZXJhbCBjb3VydCB0byBhIGRvZ2ZpZ2h0aW5nIGNvbnNwaXJhY3kgY2hhcmdlIGFuZCBpcyBhd2FpdGluZyBzZW50ZW5jaW5nIG9uIERlYy4gMTAsIHdhcyBpbmRpY3RlZCBmb3IgYmVhdGluZyBvciBraWxsaW5nIG9yIGNhdXNpbmcgZG9ncyB0byBmaWdodCBvdGhlciBkb2dzIGFuZCBlbmdhZ2luZyBpbiBvciBwcm9tb3RpbmcgZG9nZmlnaHRpbmcuClRoZSBncmFuZCBqdXJ5IG1ldCBmb3IgbW9yZSB0aGFuIHRocmVlIGhvdXJzLgpUaGUgY2hhcmdlcyBhcmUgdGhlIGZpcnN0IGxldmVsZWQgYWdhaW5zdCBWaWNrIGluIHRoZSBjb3VudHkgd2hlcmUgaGUgYnVpbHQgYSBob21lIG9uIDE1IGFjcmVzIHRoYXQgd2FzIHRoZSBiYXNlIG9mIHRoZSBkb2dmaWdodGluZyBvcGVyYXRpb24uClN1cnJ5IENvdW50eSBDb21tb253ZWFsdGgncyBBdHRvcm5leSBHZXJhbGQgRy4gUG9pbmRleHRlciBhc2tlZCB0aGF0IHRoZSBmb3VyIGJlIGFycmFpZ25lZCBPY3QuIDMgYW5kIHJlcXVlc3RlZCB0aGF0IGVhY2ggYmUgcmVsZWFzZWQgb24gYSAkNTAsMDAwIHBlcnNvbmFsIHJlY29nbml6YW5jZSBib25kLgpOb25lIG9mIHRoZSBkZWZlbmRhbnRzIG5vciB0aGVpciBsYXd5ZXJzIHdlcmUgaW4gY291cnQuCg==
[]
TWVkaWNhcmUgUGFydCBCIFByZW1pdW1zJyBSaXNlIE1heSBCZSB0aGUgTG93ZXN0IGluIFNpeCBZZWFycwpFbGRlcmx5IGFuZCBkaXNhYmxlZCBwZW9wbGUgd2lsbCBzZWUgdGhlaXIgbW9udGhseSBNZWRpY2FyZSBQYXJ0IEIgcHJlbWl1bXMgcmlzZSAzLjEgcGVyY2VudCBuZXh0IHllYXIsIHRvICQ5Ni40MCwgdGhlIGxvd2VzdCBpbmNyZWFzZSBpbiBzaXggeWVhcnMsIGZlZGVyYWwgb2ZmaWNpYWxzIGFubm91bmNlZCB5ZXN0ZXJkYXkuCk9uZSBjYXZlYXQsIHRob3VnaDogVGhlIG5ld3MgaXMgYmFzZWQgb24gdGhlIHByZXN1bXB0aW9uIHRoYXQgcGh5c2ljaWFucyB3aWxsIHRha2UgYSAxMCBwZXJjZW50IGN1dCBpbiB0aGVpciByZWltYnVyc2VtZW50IHJhdGVzIG5leHQgeWVhci4KQ29uZ3Jlc3MgbWF5IGFjdCB0byBvZmZzZXQgc29tZSBvZiB0aGF0IHBheSBjdXQgb3IgdG8gZWxpbWluYXRlIGl0LCB3aGljaCB3b3VsZCBjYXVzZSBwcmVtaXVtcyBpbiBmdXR1cmUgeWVhcnMgdG8gZ28gdXAgdG8gcmVmbGVjdCB0aGUgYWRkaXRpb25hbCBleHBlbnNlLgpNZWRpY2FyZSBwYXlzIGZvciBtb3N0IG9mIHRoZSBoZWFsdGggY2FyZSByZWNlaXZlZCBieSBhYm91dCA0MyBtaWxsaW9uIGVsZGVybHkgYW5kIGRpc2FibGVkIHBlb3BsZS4KVGhlIHByb2dyYW0ncyBleHBlbnNlcyBoYXZlIHNvYXJlZCBpbiByZWNlbnQgeWVhcnMgYXMgaGVhbHRoLWNhcmUgY29zdHMgZ28gdXAgYW5kIGFzIG1vcmUgcGVvcGxlIGpvaW4gdGhlIHByb2dyYW0uCk1lZGljYXJlIFBhcnQgQiBjb3ZlcnMgc2VydmljZXMgcmVjZWl2ZWQgYXQgdGhlIGRvY3RvcidzIG9mZmljZSBhbmQgaW4gb3V0cGF0aWVudCBzZXR0aW5ncy4KVGhlIHByb2dyYW0gYWxzbyBwYXlzIGZvciBtZWRpY2FsIGVxdWlwbWVudCBzdWNoIGFzIHdoZWVsY2hhaXJzIGFuZCBveHlnZW4gdGFua3MuCldlYWx0aGllciBwYXJ0aWNpcGFudHMgd2lsbCBwYXkgbW9yZSB0aGFuIHRoZSAkOTYuNDAgbW9udGhseSBwcmVtaXVtLgpUaGUgZGVkdWN0aWJsZSBmb3IgTWVkaWNhcmUgUGFydCBBLCB3aGljaCBjb3ZlcnMgaW5wYXRpZW50IGhvc3BpdGFsIGFuZCBob3NwaWNlIGNhcmUgYXMgd2VsbCBhcyBzaG9ydCBzdGF5cyBpbiBudXJzaW5nIGhvbWVzLCB3aWxsIGluY3JlYXNlIGZyb20gJDk5MiB0byAkMSwwMjQgbmV4dCB5ZWFyLgpTZW5hdGUgQXBwcm92ZXMgRGVmZW5zZSBQb2xpY3kgQmlsbCBBdXRob3JpemluZyBXYXIgRnVuZHMsIE1pbGl0YXJ5IEdlYXIKVGhlIFNlbmF0ZSB2b3RlZCA5MiB0byAzIHRvIHBhc3MgYSBkZWZlbnNlIHBvbGljeSBiaWxsIGF1dGhvcml6aW5nIGFuIGFkZGl0aW9uYWwgJDE1MCBiaWxsaW9uIGZvciB0aGUgd2FycyBpbiBJcmFxIGFuZCBBZmdoYW5pc3Rhbi4KVGhlIG1vbmV5IGNvdmVycyBQcmVzaWRlbnQgQnVzaCdzIEZlYnJ1YXJ5IHJlcXVlc3QgZm9yIHRoZSB3YXJzLCBwbHVzICQyMyBiaWxsaW9uIG1vcmUgZm9yIHRoZSBwdXJjaGFzZSBvZiBib21iLXJlc2lzdGFudCB2ZWhpY2xlcy4KSXQgYWxzbyBhdXRob3JpemVzIG1vcmUgdGhhbiBoYWxmIGEgdHJpbGxpb24gZG9sbGFycyBpbiBhbm51YWwgbWlsaXRhcnkgcHJvZ3JhbXMsIGluY2x1ZGluZyBzdWNoIGJpZy10aWNrZXQgaXRlbXMgYXMgJDEwLjEgYmlsbGlvbiBmb3IgbWlzc2lsZSBkZWZlbnNlLgpCdXQgdGhlIHByZXNpZGVudCB3aWxsIGhhdmUgdG8gd2FpdCB1bnRpbCBDb25ncmVzcyBwYXNzZXMgYSBzZXBhcmF0ZSBhcHByb3ByaWF0aW9ucyBiaWxsIGJlZm9yZSB3YXIgZnVuZHMgYXJlIHRyYW5zZmVycmVkIHRvIG1pbGl0YXJ5IGNvZmZlcnMuClJlcHVibGljYW5zIHByZWRpY3QgdGhlIGJpbGwgaXMgb24gdHJhY2sgdG8gYmUgdmV0b2VkIGJ5IHRoZSBwcmVzaWRlbnQgYmVjYXVzZSBpdCBpbmNsdWRlcyBoYXRlLWNyaW1lcyBsZWdpc2xhdGlvbiBmcm9tIFNlbi4gRWR3YXJkIE0uIEtlbm5lZHkgKEQtTWFzcy4pLgpUaGUgV2hpdGUgSG91c2UgaGFzIHNhaWQgS2VubmVkeSdzIHByb3Bvc2FsLCB3aGljaCB3b3VsZCBsZXQgZmVkZXJhbCBsYXcgZW5mb3JjZW1lbnQgaGVscCBzdGF0ZXMgcHJvc2VjdXRlIGF0dGFja3Mgb24gZ2F5cywgaXMgdW5uZWNlc3NhcnkuClRoZSBIb3VzZSBpcyBleHBlY3RlZCB0byBhcHByb3ZlIHNlcGFyYXRlIGxlZ2lzbGF0aW9uIHRvZGF5IHRoYXQgcmVxdWlyZXMgQnVzaCB0byBnaXZlIENvbmdyZXNzIGEgcGxhbiBmb3IgZXZlbnR1YWwgdHJvb3Agd2l0aGRyYXdhbHMuCkRlbW9jcmF0cyBhcmUgcHVzaGluZyBmb3IgYSBiaWxsIHRoYXQgd291bGQgcmVxdWlyZSB0aGUgYWRtaW5pc3RyYXRpb24gdG8gcmVwb3J0IHRvIENvbmdyZXNzIGluIDYwIGRheXMgYW5kIGV2ZXJ5IDkwIGRheXMgdGhlcmVhZnRlciBvbiB0aGUgc3RhdHVzIG9mIHJlZGVwbG95bWVudCBwbGFucyBpbiBJcmFxLgpGcmVuY2ggYW5kIEdlcm1hbiBMZWFkZXJzIFRvIFZpc2l0IEJ1c2ggVGhpcyBGYWxsClByZXNpZGVudCBCdXNoIHdpbGwgaG9zdCBGcmVuY2ggUHJlc2lkZW50IE5pY29sYXMgU2Fya296eSBpbiBXYXNoaW5ndG9uIGluIE5vdmVtYmVyLgpUaGUgc3BlY2lmaWMgZGF0ZSBvZiB0aGUgdmlzaXQgaGFzIG5vdCBiZWVuIGFubm91bmNlZC4KQnVzaCBhbmQgaGlzIHdpZmUsIExhdXJhLCBhbHNvIHBsYW4gdG8gaG9zdCBHZXJtYW4gQ2hhbmNlbGxvciBBbmdlbGEgTWVya2VsIGluIENyYXdmb3JkLCBUZXguLCBvbiBOb3YuIDkgYW5kIDEwLgo=
[(TWVkaWNhcmUgUGFydCBCIFByZW1pdW1zJyBSaXNlIE1heSBCZSB0aGUgTG93ZXN0IGluIFNpeCBZZWFycwpFbGRlcmx5IGFuZCBkaXNhYmxlZCBwZW9wbGUgd2lsbCBzZWUgdGhlaXIgbW9udGhseSBNZWRpY2FyZSBQYXJ0IEIgcHJlbWl1bXMgcmlzZSAzLjEgcGVyY2VudCBuZXh0IHllYXIsIHRvICQ5Ni40MCwgdGhlIGxvd2VzdCBpbmNyZWFzZSBpbiBzaXggeWVhcnMsIGZlZGVyYWwgb2ZmaWNpYWxzIGFubm91bmNlZCB5ZXN0ZXJkYXkuCk9uZSBjYXZlYXQsIHRob3VnaDogVGhlIG5ld3MgaXMgYmFzZWQgb24gdGhlIHByZXN1bXB0aW9uIHRoYXQgcGh5c2ljaWFucyB3aWxsIHRha2UgYSAxMCBwZXJjZW50IGN1dCBpbiB0aGVpciByZWltYnVyc2VtZW50IHJhdGVzIG5leHQgeWVhci4KQ29uZ3Jlc3MgbWF5IGFjdCB0byBvZmZzZXQgc29tZSBvZiB0aGF0IHBheSBjdXQgb3IgdG8gZWxpbWluYXRlIGl0LCB3aGljaCB3b3VsZCBjYXVzZSBwcmVtaXVtcyBpbiBmdXR1cmUgeWVhcnMgdG8gZ28gdXAgdG8gcmVmbGVjdCB0aGUgYWRkaXRpb25hbCBleHBlbnNlLgpNZWRpY2FyZSBwYXlzIGZvciBtb3N0IG9mIHRoZSBoZWFsdGggY2FyZSByZWNlaXZlZCBieSBhYm91dCA0MyBtaWxsaW9uIGVsZGVybHkgYW5kIGRpc2FibGVkIHBlb3BsZS4KVGhlIHByb2dyYW0ncyBleHBlbnNlcyBoYXZlIHNvYXJlZCBpbiByZWNlbnQgeWVhcnMgYXMgaGVhbHRoLWNhcmUgY29zdHMgZ28gdXAgYW5kIGFzIG1vcmUgcGVvcGxlIGpvaW4gdGhlIHByb2dyYW0uCk1lZGljYXJlIFBhcnQgQiBjb3ZlcnMgc2VydmljZXMgcmVjZWl2ZWQgYXQgdGhlIGRvY3RvcidzIG9mZmljZSBhbmQgaW4gb3V0cGF0aWVudCBzZXR0aW5ncy4KVGhlIHByb2dyYW0gYWxzbyBwYXlzIGZvciBtZWRpY2FsIGVxdWlwbWVudCBzdWNoIGFzIHdoZWVsY2hhaXJzIGFuZCBveHlnZW4gdGFua3MuCldlYWx0aGllciBwYXJ0aWNpcGFudHMgd2lsbCBwYXkgbW9yZSB0aGFuIHRoZSAkOTYuNDAgbW9udGhseSBwcmVtaXVtLgpUaGUgZGVkdWN0aWJsZSBmb3IgTWVkaWNhcmUgUGFydCBBLCB3aGljaCBjb3ZlcnMgaW5wYXRpZW50IGhvc3BpdGFsIGFuZCBob3NwaWNlIGNhcmUgYXMgd2VsbCBhcyBzaG9ydCBzdGF5cyBpbiBudXJzaW5nIGhvbWVzLCB3aWxsIGluY3JlYXNlIGZyb20gJDk5MiB0byAkMSwwMjQgbmV4dCB5ZWFyLgpTZW5hdGUgQXBwcm92ZXMgRGVmZW5zZSBQb2xpY3kgQmlsbCBBdXRob3JpemluZyBXYXIgRnVuZHMsIE1pbGl0YXJ5IEdlYXIKVGhlIFNlbmF0ZSB2b3RlZCA5MiB0byAzIHRvIHBhc3MgYSBkZWZlbnNlIHBvbGljeSBiaWxsIGF1dGhvcml6aW5nIGFuIGFkZGl0aW9uYWwgJDE1MCBiaWxsaW9uIGZvciB0aGUgd2FycyBpbiBJcmFxIGFuZCBBZmdoYW5pc3Rhbi4KVGhlIG1vbmV5IGNvdmVycyBQcmVzaWRlbnQgQnVzaCdzIEZlYnJ1YXJ5IHJlcXVlc3QgZm9yIHRoZSB3YXJzLCBwbHVzICQyMyBiaWxsaW9uIG1vcmUgZm9yIHRoZSBwdXJjaGFzZSBvZiBib21iLXJlc2lzdGFudCB2ZWhpY2xlcy4KSXQgYWxzbyBhdXRob3JpemVzIG1vcmUgdGhhbiBoYWxmIGEgdHJpbGxpb24gZG9sbGFycyBpbiBhbm51YWwgbWlsaXRhcnkgcHJvZ3JhbXMsIGluY2x1ZGluZyBzdWNoIGJpZy10aWNrZXQgaXRlbXMgYXMgJDEwLjEgYmlsbGlvbiBmb3IgbWlzc2lsZSBkZWZlbnNlLgpCdXQgdGhlIHByZXNpZGVudCB3aWxsIGhhdmUgdG8gd2FpdCB1bnRpbCBDb25ncmVzcyBwYXNzZXMgYSBzZXBhcmF0ZSBhcHByb3ByaWF0aW9ucyBiaWxsIGJlZm9yZSB3YXIgZnVuZHMgYXJlIHRyYW5zZmVycmVkIHRvIG1pbGl0YXJ5IGNvZmZlcnMuClJlcHVibGljYW5zIHByZWRpY3QgdGhlIGJpbGwgaXMgb24gdHJhY2sgdG8gYmUgdmV0b2VkIGJ5IHRoZSBwcmVzaWRlbnQgYmVjYXVzZSBpdCBpbmNsdWRlcyBoYXRlLWNyaW1lcyBsZWdpc2xhdGlvbiBmcm9tIFNlbi4gRWR3YXJkIE0uIEtlbm5lZHkgKEQtTWFzcy4pLgpUaGUgV2hpdGUgSG91c2UgaGFzIHNhaWQgS2VubmVkeSdzIHByb3Bvc2FsLCB3aGljaCB3b3VsZCBsZXQgZmVkZXJhbCBsYXcgZW5mb3JjZW1lbnQgaGVscCBzdGF0ZXMgcHJvc2VjdXRlIGF0dGFja3Mgb24gZ2F5cywgaXMgdW5uZWNlc3NhcnkuClRoZSBIb3VzZSBpcyBleHBlY3RlZCB0byBhcHByb3ZlIHNlcGFyYXRlIGxlZ2lzbGF0aW9uIHRvZGF5IHRoYXQgcmVxdWlyZXMgQnVzaCB0byBnaXZlIENvbmdyZXNzIGEgcGxhbiBmb3IgZXZlbnR1YWwgdHJvb3Agd2l0aGRyYXdhbHMuCkRlbW9jcmF0cyBhcmUgcHVzaGluZyBmb3IgYSBiaWxsIHRoYXQgd291bGQgcmVxdWlyZSB0aGUgYWRtaW5pc3RyYXRpb24gdG8gcmVwb3J0IHRvIENvbmdyZXNzIGluIDYwIGRheXMgYW5kIGV2ZXJ5IDkwIGRheXMgdGhlcmVhZnRlciBvbiB0aGUgc3RhdHVzIG9mIHJlZGVwbG95bWVudCBwbGFucyBpbiBJcmFxLgpGcmVuY2ggYW5kIEdlcm1hbiBMZWFkZXJzIFRvIFZpc2l0IEJ1c2ggVGhpcyBGYWxsClByZXNpZGVudCBCdXNoIHdpbGwgaG9zdCBGcmVuY2ggUHJlc2lkZW50IE5pY29sYXMgU2Fya296eSBpbiBXYXNoaW5ndG9uIGluIE5vdmVtYmVyLgpUaGUgc3BlY2lmaWMgZGF0ZSBvZiB0aGUgdmlzaXQgaGFzIG5vdCBiZWVuIGFubm91bmNlZC4KQnVzaCBhbmQgaGlzIHdpZmUsIExhdXJhLCBhbHNvIHBsYW4gdG8gaG9zdCBHZXJtYW4gQ2hhbmNlbGxvciBBbmdlbGEgTWVya2VsIGluIENyYXdmb3JkLCBUZXguLCBvbiBOb3YuIDkgYW5kIDEwLgo=, 'GPE')]
UnVubmVyIEhhZCBQbGF5ZWQgb24gT2ZmaWNlIFRlYW1zCkJ5IEpvbmF0aGFuIE11bW1vbG8gV2FzaGluZ3RvbiBQb3N0IFN0YWZmIFdyaXRlciBUdWVzZGF5LCBPY3RvYmVyIDksIDIwMDc7IEIwMwpNaWNoYWVsIEJhbm5lciwgYSAyNS15ZWFyLW9sZCBGYWlyZmF4IHJlc2lkZW50IHdobyBkaWVkIFN1bmRheSBhZnRlciBjb2xsYXBzaW5nIG5lYXIgdGhlIGZpbmlzaCBsaW5lIG9mIHRoZSBBcm15IFRlbi1NaWxlciwgcGxheWVkIG9uIHNldmVyYWwgY29tcGFueSBzcG9ydHMgdGVhbXMgYW5kIHdhcyBrbm93biB0byBjb2xsZWFndWVzIGFzIGEgZGVkaWNhdGVkIGFuZCBhbWlhYmxlIHdvcmtlciB3aG8gbGlrZWQgdG8gam9rZSBhcm91bmQgaW4gdGhlIG9mZmljZSwgYSBjb21wYW55IGV4ZWN1dGl2ZSBzYWlkLgoiSXQncyBkaWZmaWN1bHQsIiBzYWlkIFNjb3R0IE1pbmdvbmV0LCB2aWNlIHByZXNpZGVudCBvZiBLaW1sZXktSG9ybiBhbmQgQXNzb2NpYXRlcyBpbiBIZXJuZG9uLCB3aG8gY29uZmlybWVkIEJhbm5lcidzIGRlYXRoLgpCYW5uZXIsIG9yaWdpbmFsbHkgZnJvbSBVcHN0YXRlIE5ldyBZb3JrLCBzdGFydGVkIHdvcmtpbmcgZm9yIHRoZSBlbmdpbmVlcmluZyBmaXJtIGluIEp1bHkgMjAwNS4KSGUgd2FzIGV4Y2VsbGVudCAtLSBJIG1lYW4gYSByZWFsIGdvLWdldHRlciwgYSByZWFsIHNlbnNlIG9mIHB1cnBvc2UgYWJvdXQgd2hhdCBoZSB3YW50ZWQgdG8gZG8uIC4gLiAuCldlIHdhbnQgdG8gdHJ1bHkgZXhwcmVzcyBvdXIgc3ltcGF0aHkgdG8gaGlzIGZhbWlseS4gLiAuIC4KSGlzIGltcGFjdCB3YXMgdHJlbWVuZG91cyBvbiBhbGwgb2Ygb3VyIGhlYXJ0cywgdG9vLgpCYW5uZXIgY29sbGFwc2VkIGFib3V0IDEwOjQwIGEubS4KU3VuZGF5IGFzIGhlIGFwcHJvYWNoZWQgdGhlIHJhY2UncyBmaW5pc2ggbGluZS4KSGUgd2FzIHRyZWF0ZWQgb24tc2l0ZSBhbmQgdGFrZW4gdG8gR2VvcmdlIFdhc2hpbmd0b24gVW5pdmVyc2l0eSBIb3NwaXRhbCwgd2hlcmUgaGUgd2FzIHByb25vdW5jZWQgZGVhZCwgc2FpZCBDb2wuIEppbSBZb250cywgYW4gQXJteSBzcG9rZXNtYW4uClRoZSBjYXVzZSBvZiBCYW5uZXIncyBkZWF0aCByZW1haW5lZCB1bmNsZWFyIHllc3RlcmRheSwgcGVuZGluZyByZXN1bHRzIG9mIGFuIGF1dG9wc3ksIHNhaWQgWW9udHMsIHdobyBub3RlZCB0aGF0IHRlbXBlcmF0dXJlcyBvZiA3MCBkZWdyZWVzIGFuZCBodW1pZGl0eSBvZiA5NCBwZXJjZW50IG1hZGUgZm9yIHVuc2Vhc29uYWJseSBob3QgY29uZGl0aW9ucyBjb21wYXJlZCB3aXRoIHBhc3QgcmFjZXMsIGluIHdoaWNoIGNvbXBldGl0b3JzIGhhdmUgaGFkIHRvIGZlbmQgb2ZmIGNvbGQgd2VhdGhlci4KIkhlIHdhcyB2ZXJ5IGNsb3NlIHRvIGZpbmlzaGluZyB0aGUgcmFjZSwgYSBsaXR0bGUgYml0IG92ZXIgMjAwIHlhcmRzIGZyb20gdGhlIGZpbmlzaCBsaW5lLCIgWW9udHMgc2FpZC4KV2hhdCBJJ3ZlIGJlZW4gdG9sZCBpcyAuIC4gLiBoZSB3ZW50IHRvIGEga25lZSBhbmQgaGUgcGFzc2VkIG91dC4KWW9udHMgc2FpZCB0aGF0IGFsdGhvdWdoIHJhY2Ugb3JnYW5pemVycyBhbnRpY2lwYXRlZCBhIGh1Z2Ugd2F0ZXIgZGVtYW5kIGZvciB0aGUgcmVjb3JkIDI2LDAwMCBydW5uZXJzIHJlZ2lzdGVyZWQgZm9yIHRoZSBhbm51YWwgZXZlbnQsIHdhdGVyIGFuZCBHYXRvcmFkZSByYW4gb3V0IGF0IHRoZSBzaXgtbWlsZSBtYXJrIHdhdGVyIHN0YXRpb24sIGFuZCBkZW1hbmQgYXQgdGhlIGVpZ2h0LW1pbGUgbWFyayBzdGF0aW9uIGF0IG9uZSBwb2ludCBvdXRwYWNlZCByYWNlIHdvcmtlcnMnIGFiaWxpdHkgdG8gcmVmaWxsIGN1cHMuCkFsc28gb24gU3VuZGF5LCBhIE1pY2hpZ2FuIG1hbiBkaWVkIGFuZCAyNTAgcGVvcGxlIHdlcmUgdGFrZW4gdG8gaG9zcGl0YWxzIGZvciBoZWF0LXJlbGF0ZWQgaWxsbmVzcyB3aGlsZSBydW5uaW5nIHRoZSBDaGljYWdvIE1hcmF0aG9uLCBhIDI2LjItbWlsZSByYWNlLgpPcmdhbml6ZXJzIHRoZXJlIHNodXQgZG93biB0aGUgY291cnNlIGR1cmluZyB0aGUgcmFjZSBiZWNhdXNlIG9mIHN0aWZsaW5nIGhlYXQgYW5kIGh1bWlkaXR5LgpCYW5uZXIsIGEgMjAwNSBncmFkdWF0ZSBvZiBSZW5zc2VsYWVyIFBvbHl0ZWNobmljIEluc3RpdHV0ZSBpbiBUcm95LCBOLlkuLCBhdmVyYWdlZCAxNiBtaW51dGVzIGEgbWlsZSBpbiB0aGUgMTAtbWlsZSByYWNlLCB3aGljaCBiZWdpbnMgYW5kIGVuZHMgYXQgdGhlIFBlbnRhZ29uIGFuZCB0cmF2ZXJzZXMgdGhlIHN0cmVldHMgb2YgV2FzaGluZ3Rvbi4KQW5nZWxhIFNlZ2dpbywgYSBmb3JtZXIgY2xhc3NtYXRlIG9mIEJhbm5lcidzIGF0IFJQSSwgc2FpZCB0aGUgZW5naW5lZXJpbmcgc3R1ZGVudCB3YXMgaW52b2x2ZWQgaW4gaW50cmFtdXJhbCBzcG9ydHMgYW5kIHN0dWRlbnQgZ292ZXJubWVudCBhbmQgd2FzIHBhcnQgb2YgYSB0aWdodGtuaXQgZ3JvdXAgb2YgY2xhc3NtYXRlcy4KIkhlIHdhcyB0aGUgb25lIHRvIGtlZXAgaW4gdG91Y2ggd2l0aCBldmVyeWJvZHksIiBzYWlkIFNlZ2dpbywgd2hvIGFsc28gc2FpZCBCYW5uZXIgd2FzIHN1cnZpdmVkIGJ5IGEgYnJvdGhlciBhbmQgYSBzaXN0ZXIuCkhlIGhhZCB0YWJzIG9uIHdobyB3YXMgZG9pbmcgd2hhdCBhbmQgcmVhbGx5IFtoZWxwZWQga2VlcF0gZXZlcnlvbmUgdG9nZXRoZXIuIC4gLiAuCldlJ3JlIGFsbCBzdGlsbCBpbiBzaG9jay4KWW91IHdvdWxkIG5ldmVyIGV4cGVjdCBzb21ldGhpbmcgbGlrZSB0aGlzIHRvIGhhcHBlbi4KTWluZ29uZXQgc2FpZCBCYW5uZXIsIHdobyB3b3JrZWQgb24gdHJhZmZpYyBpbXBhY3Qgc3R1ZGllcyBhbmQgdHJhbnNwb3J0YXRpb24gcGxhbm5pbmcsIHdhcyBhIFlhbmtlZXMgZmFuIC0tIGEgY29tbW9uIGZvY3VzIG9mIGdvb2QtbmF0dXJlZCB0ZWFzaW5nIGZyb20gZnJpZW5kcyBhdCB0aGUgb2ZmaWNlIC0tIGFuZCBwbGF5ZWQgb24gY29tcGFueSB0ZWFtcy4KTWluZ29uZXQgc2FpZCBoZSB3YXMgdW5zdXJlIHdoZXRoZXIgQmFubmVyIHdhcyBhIHJlZ3VsYXIgcnVubmVyIG9yIGhhZCBwYXJ0aWNpcGF0ZWQgaW4gb3RoZXIgcmFjZXMuCkNhbGxzIHRvIEJhbm5lcidzIGZhbWlseSB3ZXJlIG5vdCBpbW1lZGlhdGVseSByZXR1cm5lZC4KQmFubmVyIGlzIHRoZSBzZWNvbmQgcGVyc29uIHRvIGRpZSBpbiB0aGUgMjMteWVhciBoaXN0b3J5IG9mIHRoZSBldmVudDsgYSBydW5uZXIgZGllZCBpbiAxOTkwLgpUb2RkIE1vcnJlbGwsIGFuIGVtZXJnZW5jeSBwaHlzaWNpYW4gYXQgR2VvcmdldG93biBVbml2ZXJzaXR5IEhvc3BpdGFsLCBzYWlkIGhlYXQtcmVsYXRlZCBmYXRhbGl0aWVzIHVzdWFsbHkgb2NjdXIgaW4gdGhlIHN1bW1lciBhbW9uZyB0aGUgZWxkZXJseSwgYnV0IGEgY29tYmluYXRpb24gb2YgdW5mYXZvcmFibGUgd2VhdGhlciBhbmQgZXh0cmVtZSBleGVydGlvbiBjYW4gYWZmZWN0IGF0aGxldGVzIGxhdGVyIGluIHRoZSB5ZWFyIGFzIHdlbGwuCiJUaGUgaW5pdGlhbCBzeW1wdG9tcyBhcmUgZmF0aWd1ZSwgd2Vha25lc3MsIG5hdXNlYSwgaGVhZGFjaGVzLCBtdXNjbGUgY3JhbXBzLCBkaXp6aW5lc3MsIiBoZSBzYWlkLCBhZGRpbmcgdGhhdCBhdGhsZXRlcyBmb2N1c2VkIG9uIHRoZWlyIGFjdGl2aXR5IG1pZ2h0IG5vdCByZWNvZ25pemUgc3VjaCBzaWducyBhcyBiZWluZyBzZXZlcmUuCiJUaGV5IGNhbiBiZSBhIGxpdHRsZSBpbnNpZGlvdXMgaW4gdGhlaXIgb25zZXQsIiBoZSBzYWlkLgpSb2JlcnQgUGxhdHQsIFZpcmdpbmlhIHN0YXRlIHJlcHJlc2VudGF0aXZlIGZvciB0aGUgUm9hZCBSdW5uZXJzIENsdWIgb2YgQW1lcmljYSwgc2FpZCBoZWF0LXJlbGF0ZWQgZGVhdGhzIHRoaXMgbGF0ZSBpbiB0aGUgeWVhciBhcmUgbm90IHVuaGVhcmQgb2YgYnV0IHVzdWFsbHkgb2NjdXIgZHVyaW5nIGxvbmdlciBldmVudHMuCiJJdCdzIGxlc3MgY29tbW9uIGZvciBpdCB0byBoYXBwZW4gYXQgYSAxMC1taWxlIHJhY2UgdGhhbiBhIGZ1bGwtYmxvd24gbWFyYXRob24sIiBoZSBzYWlkLgo=
[(UnVubmVyIEhhZCBQbGF5ZWQgb24gT2ZmaWNlIFRlYW1zCkJ5IEpvbmF0aGFuIE11bW1vbG8gV2FzaGluZ3RvbiBQb3N0IFN0YWZmIFdyaXRlciBUdWVzZGF5LCBPY3RvYmVyIDksIDIwMDc7IEIwMwpNaWNoYWVsIEJhbm5lciwgYSAyNS15ZWFyLW9sZCBGYWlyZmF4IHJlc2lkZW50IHdobyBkaWVkIFN1bmRheSBhZnRlciBjb2xsYXBzaW5nIG5lYXIgdGhlIGZpbmlzaCBsaW5lIG9mIHRoZSBBcm15IFRlbi1NaWxlciwgcGxheWVkIG9uIHNldmVyYWwgY29tcGFueSBzcG9ydHMgdGVhbXMgYW5kIHdhcyBrbm93biB0byBjb2xsZWFndWVzIGFzIGEgZGVkaWNhdGVkIGFuZCBhbWlhYmxlIHdvcmtlciB3aG8gbGlrZWQgdG8gam9rZSBhcm91bmQgaW4gdGhlIG9mZmljZSwgYSBjb21wYW55IGV4ZWN1dGl2ZSBzYWlkLgoiSXQncyBkaWZmaWN1bHQsIiBzYWlkIFNjb3R0IE1pbmdvbmV0LCB2aWNlIHByZXNpZGVudCBvZiBLaW1sZXktSG9ybiBhbmQgQXNzb2NpYXRlcyBpbiBIZXJuZG9uLCB3aG8gY29uZmlybWVkIEJhbm5lcidzIGRlYXRoLgpCYW5uZXIsIG9yaWdpbmFsbHkgZnJvbSBVcHN0YXRlIE5ldyBZb3JrLCBzdGFydGVkIHdvcmtpbmcgZm9yIHRoZSBlbmdpbmVlcmluZyBmaXJtIGluIEp1bHkgMjAwNS4KSGUgd2FzIGV4Y2VsbGVudCAtLSBJIG1lYW4gYSByZWFsIGdvLWdldHRlciwgYSByZWFsIHNlbnNlIG9mIHB1cnBvc2UgYWJvdXQgd2hhdCBoZSB3YW50ZWQgdG8gZG8uIC4gLiAuCldlIHdhbnQgdG8gdHJ1bHkgZXhwcmVzcyBvdXIgc3ltcGF0aHkgdG8gaGlzIGZhbWlseS4gLiAuIC4KSGlzIGltcGFjdCB3YXMgdHJlbWVuZG91cyBvbiBhbGwgb2Ygb3VyIGhlYXJ0cywgdG9vLgpCYW5uZXIgY29sbGFwc2VkIGFib3V0IDEwOjQwIGEubS4KU3VuZGF5IGFzIGhlIGFwcHJvYWNoZWQgdGhlIHJhY2UncyBmaW5pc2ggbGluZS4KSGUgd2FzIHRyZWF0ZWQgb24tc2l0ZSBhbmQgdGFrZW4gdG8gR2VvcmdlIFdhc2hpbmd0b24gVW5pdmVyc2l0eSBIb3NwaXRhbCwgd2hlcmUgaGUgd2FzIHByb25vdW5jZWQgZGVhZCwgc2FpZCBDb2wuIEppbSBZb250cywgYW4gQXJteSBzcG9rZXNtYW4uClRoZSBjYXVzZSBvZiBCYW5uZXIncyBkZWF0aCByZW1haW5lZCB1bmNsZWFyIHllc3RlcmRheSwgcGVuZGluZyByZXN1bHRzIG9mIGFuIGF1dG9wc3ksIHNhaWQgWW9udHMsIHdobyBub3RlZCB0aGF0IHRlbXBlcmF0dXJlcyBvZiA3MCBkZWdyZWVzIGFuZCBodW1pZGl0eSBvZiA5NCBwZXJjZW50IG1hZGUgZm9yIHVuc2Vhc29uYWJseSBob3QgY29uZGl0aW9ucyBjb21wYXJlZCB3aXRoIHBhc3QgcmFjZXMsIGluIHdoaWNoIGNvbXBldGl0b3JzIGhhdmUgaGFkIHRvIGZlbmQgb2ZmIGNvbGQgd2VhdGhlci4KIkhlIHdhcyB2ZXJ5IGNsb3NlIHRvIGZpbmlzaGluZyB0aGUgcmFjZSwgYSBsaXR0bGUgYml0IG92ZXIgMjAwIHlhcmRzIGZyb20gdGhlIGZpbmlzaCBsaW5lLCIgWW9udHMgc2FpZC4KV2hhdCBJJ3ZlIGJlZW4gdG9sZCBpcyAuIC4gLiBoZSB3ZW50IHRvIGEga25lZSBhbmQgaGUgcGFzc2VkIG91dC4KWW9udHMgc2FpZCB0aGF0IGFsdGhvdWdoIHJhY2Ugb3JnYW5pemVycyBhbnRpY2lwYXRlZCBhIGh1Z2Ugd2F0ZXIgZGVtYW5kIGZvciB0aGUgcmVjb3JkIDI2LDAwMCBydW5uZXJzIHJlZ2lzdGVyZWQgZm9yIHRoZSBhbm51YWwgZXZlbnQsIHdhdGVyIGFuZCBHYXRvcmFkZSByYW4gb3V0IGF0IHRoZSBzaXgtbWlsZSBtYXJrIHdhdGVyIHN0YXRpb24sIGFuZCBkZW1hbmQgYXQgdGhlIGVpZ2h0LW1pbGUgbWFyayBzdGF0aW9uIGF0IG9uZSBwb2ludCBvdXRwYWNlZCByYWNlIHdvcmtlcnMnIGFiaWxpdHkgdG8gcmVmaWxsIGN1cHMuCkFsc28gb24gU3VuZGF5LCBhIE1pY2hpZ2FuIG1hbiBkaWVkIGFuZCAyNTAgcGVvcGxlIHdlcmUgdGFrZW4gdG8gaG9zcGl0YWxzIGZvciBoZWF0LXJlbGF0ZWQgaWxsbmVzcyB3aGlsZSBydW5uaW5nIHRoZSBDaGljYWdvIE1hcmF0aG9uLCBhIDI2LjItbWlsZSByYWNlLgpPcmdhbml6ZXJzIHRoZXJlIHNodXQgZG93biB0aGUgY291cnNlIGR1cmluZyB0aGUgcmFjZSBiZWNhdXNlIG9mIHN0aWZsaW5nIGhlYXQgYW5kIGh1bWlkaXR5LgpCYW5uZXIsIGEgMjAwNSBncmFkdWF0ZSBvZiBSZW5zc2VsYWVyIFBvbHl0ZWNobmljIEluc3RpdHV0ZSBpbiBUcm95LCBOLlkuLCBhdmVyYWdlZCAxNiBtaW51dGVzIGEgbWlsZSBpbiB0aGUgMTAtbWlsZSByYWNlLCB3aGljaCBiZWdpbnMgYW5kIGVuZHMgYXQgdGhlIFBlbnRhZ29uIGFuZCB0cmF2ZXJzZXMgdGhlIHN0cmVldHMgb2YgV2FzaGluZ3Rvbi4KQW5nZWxhIFNlZ2dpbywgYSBmb3JtZXIgY2xhc3NtYXRlIG9mIEJhbm5lcidzIGF0IFJQSSwgc2FpZCB0aGUgZW5naW5lZXJpbmcgc3R1ZGVudCB3YXMgaW52b2x2ZWQgaW4gaW50cmFtdXJhbCBzcG9ydHMgYW5kIHN0dWRlbnQgZ292ZXJubWVudCBhbmQgd2FzIHBhcnQgb2YgYSB0aWdodGtuaXQgZ3JvdXAgb2YgY2xhc3NtYXRlcy4KIkhlIHdhcyB0aGUgb25lIHRvIGtlZXAgaW4gdG91Y2ggd2l0aCBldmVyeWJvZHksIiBzYWlkIFNlZ2dpbywgd2hvIGFsc28gc2FpZCBCYW5uZXIgd2FzIHN1cnZpdmVkIGJ5IGEgYnJvdGhlciBhbmQgYSBzaXN0ZXIuCkhlIGhhZCB0YWJzIG9uIHdobyB3YXMgZG9pbmcgd2hhdCBhbmQgcmVhbGx5IFtoZWxwZWQga2VlcF0gZXZlcnlvbmUgdG9nZXRoZXIuIC4gLiAuCldlJ3JlIGFsbCBzdGlsbCBpbiBzaG9jay4KWW91IHdvdWxkIG5ldmVyIGV4cGVjdCBzb21ldGhpbmcgbGlrZSB0aGlzIHRvIGhhcHBlbi4KTWluZ29uZXQgc2FpZCBCYW5uZXIsIHdobyB3b3JrZWQgb24gdHJhZmZpYyBpbXBhY3Qgc3R1ZGllcyBhbmQgdHJhbnNwb3J0YXRpb24gcGxhbm5pbmcsIHdhcyBhIFlhbmtlZXMgZmFuIC0tIGEgY29tbW9uIGZvY3VzIG9mIGdvb2QtbmF0dXJlZCB0ZWFzaW5nIGZyb20gZnJpZW5kcyBhdCB0aGUgb2ZmaWNlIC0tIGFuZCBwbGF5ZWQgb24gY29tcGFueSB0ZWFtcy4KTWluZ29uZXQgc2FpZCBoZSB3YXMgdW5zdXJlIHdoZXRoZXIgQmFubmVyIHdhcyBhIHJlZ3VsYXIgcnVubmVyIG9yIGhhZCBwYXJ0aWNpcGF0ZWQgaW4gb3RoZXIgcmFjZXMuCkNhbGxzIHRvIEJhbm5lcidzIGZhbWlseSB3ZXJlIG5vdCBpbW1lZGlhdGVseSByZXR1cm5lZC4KQmFubmVyIGlzIHRoZSBzZWNvbmQgcGVyc29uIHRvIGRpZSBpbiB0aGUgMjMteWVhciBoaXN0b3J5IG9mIHRoZSBldmVudDsgYSBydW5uZXIgZGllZCBpbiAxOTkwLgpUb2RkIE1vcnJlbGwsIGFuIGVtZXJnZW5jeSBwaHlzaWNpYW4gYXQgR2VvcmdldG93biBVbml2ZXJzaXR5IEhvc3BpdGFsLCBzYWlkIGhlYXQtcmVsYXRlZCBmYXRhbGl0aWVzIHVzdWFsbHkgb2NjdXIgaW4gdGhlIHN1bW1lciBhbW9uZyB0aGUgZWxkZXJseSwgYnV0IGEgY29tYmluYXRpb24gb2YgdW5mYXZvcmFibGUgd2VhdGhlciBhbmQgZXh0cmVtZSBleGVydGlvbiBjYW4gYWZmZWN0IGF0aGxldGVzIGxhdGVyIGluIHRoZSB5ZWFyIGFzIHdlbGwuCiJUaGUgaW5pdGlhbCBzeW1wdG9tcyBhcmUgZmF0aWd1ZSwgd2Vha25lc3MsIG5hdXNlYSwgaGVhZGFjaGVzLCBtdXNjbGUgY3JhbXBzLCBkaXp6aW5lc3MsIiBoZSBzYWlkLCBhZGRpbmcgdGhhdCBhdGhsZXRlcyBmb2N1c2VkIG9uIHRoZWlyIGFjdGl2aXR5IG1pZ2h0IG5vdCByZWNvZ25pemUgc3VjaCBzaWducyBhcyBiZWluZyBzZXZlcmUuCiJUaGV5IGNhbiBiZSBhIGxpdHRsZSBpbnNpZGlvdXMgaW4gdGhlaXIgb25zZXQsIiBoZSBzYWlkLgpSb2JlcnQgUGxhdHQsIFZpcmdpbmlhIHN0YXRlIHJlcHJlc2VudGF0aXZlIGZvciB0aGUgUm9hZCBSdW5uZXJzIENsdWIgb2YgQW1lcmljYSwgc2FpZCBoZWF0LXJlbGF0ZWQgZGVhdGhzIHRoaXMgbGF0ZSBpbiB0aGUgeWVhciBhcmUgbm90IHVuaGVhcmQgb2YgYnV0IHVzdWFsbHkgb2NjdXIgZHVyaW5nIGxvbmdlciBldmVudHMuCiJJdCdzIGxlc3MgY29tbW9uIGZvciBpdCB0byBoYXBwZW4gYXQgYSAxMC1taWxlIHJhY2UgdGhhbiBhIGZ1bGwtYmxvd24gbWFyYXRob24sIiBoZSBzYWlkLgo=, 'GPE')]
Umlwa2VuIElzIFBpdGNoaW5nIFRoaXMgVGltZSwgYnV0IEhvdyBXaWxsIENoaW5lc2UgUmVjZWl2ZSBIaW0/CldoZW4gU2VjcmV0YXJ5IG9mIFN0YXRlIENvbmRvbGVlenphIFJpY2UgbmFtZWQgQ2FsIFJpcGtlbiBKci4gYSBzcGVjaWFsIHNwb3J0cyBlbnZveSBpbiBBdWd1c3QsIHRoZSBIYWxsIG9mIEZhbWUgaW5maWVsZGVyIHNhaWQgaGUgaG9wZWQgdG8gInBsYW50IGEgZmV3IHNlZWRzIGluIGRpZmZlcmVudCBwYXJ0cyBvZiB0aGUgd29ybGQgYW5kIHVzZSBiYXNlYmFsbCBhbmQgc3BvcnQgdG8gYWN0dWFsbHkgY3Jvc3Mgb3ZlciBjdWx0dXJhbCBsaW5lcy4iClBsYW50aW5nIHNlYXNvbiBiZWdpbnMgdGhpcyB3ZWVrOiBUaGUgZm9ybWVyIEJhbHRpbW9yZSBPcmlvbGUgbGVmdCB5ZXN0ZXJkYXkgZm9yIENoaW5hLCB3aGVyZSBpbiAxMCBkYXlzIGhlIGlzIHNjaGVkdWxlZCB0byB2aXNpdCBCZWlqaW5nLCBTaGFuZ2hhaSBhbmQgR3Vhbmd6aG91LgpSaXBrZW4gcGxhbnMgdG8gdmlzaXQgc2Nob29scyBhbmQgY2x1YnMsIHJ1biBiYXNlYmFsbC1za2lsbHMgY2xpbmljcyBhbmQgdGFsayBhYm91dCBoaXMgZXhwZXJpZW5jZXMuCkJ1dCB3aWxsIGhlIGhhdmUgYSByYXB0IGF1ZGllbmNlIGZvciBzdG9yaWVzIG9mIGhpcyByZWNvcmQtYnJlYWtpbmcgMiw2MzIgY29uc2VjdXRpdmUgbWFqb3IgbGVhZ3VlIGdhbWVzIGFuZCBoaXMgMTkgQWxsLVN0YXIgR2FtZXM/CldlIGFza2VkIEd1b3FpIFh1LCBwcm9mZXNzb3Igb2YgaGlzdG9yeSBhbmQgRWFzdCBBc2lhbiBhZmZhaXJzIGF0IEthbGFtYXpvbyBDb2xsZWdlIGFuZCBhdXRob3Igb2YgdGhlIGZvcnRoY29taW5nICJPbHltcGljIERyZWFtczogQ2hpbmEgYW5kIFNwb3J0cywgMTg5NS0yMDA4LCIgZm9yIGEgc2NvdXRpbmcgcmVwb3J0LgoiRmV3IENoaW5lc2UgdW5kZXJzdGFuZCB0aGUgcnVsZXMgb2YgYmFzZWJhbGwsIGFuZCBldmVuIGZld2VyIGFyZSBpbnRlcmVzdGVkIGluIGZvbGxvd2luZyBpdCwiIFh1IHNhaWQuCkNoaW5lc2UgdGVsZXZpc2lvbiByYXJlbHkgYnJvYWRjYXN0cyBiYXNlYmFsbCBnYW1lcy4KSW5zdGVhZCwgYmFza2V0YmFsbCBhbmQgc29jY2VyIGdldCBwbGVudHkgb2YgYWlydGltZS4KQ2hpbmVzZSBhcmUgb2JzZXNzZWQgd2l0aCBOQkEgZ2FtZXMsIHNvY2NlciBhbmQgbWFueSBvdGhlciB0eXBlcyBvZiBzcG9ydHMuCk1pY2hhZWwgSm9yZGFuIHVzZWQgdG8gYmUgYSBnb2QgaW4gQ2hpbmEsIiBYdSBhZGRlZC4KIkkgZG9uJ3QgdGhpbmsgdGhlICdJcm9uIE1hbicgY2FuIGFjY29tcGxpc2ggdmVyeSBtdWNoLCBlaXRoZXIgaW4gdGVybXMgb2YgaW5jcmVhc2luZyBwb3B1bGFyaXR5IG9mIHRoZSBiYXNlYmFsbCBnYW1lcyBvciBwb2xpc2hpbmcgQW1lcmljYW4gaW1hZ2UgaW4gQ2hpbmEsIiBYdSBzYWlkLgpJIGFtIGFmcmFpZCBmZXcgQ2hpbmVzZSBrbm93IHdobyBSaXBrZW4gaXMsIGFuZCBwZXJoYXBzIG5vdCB0b28gbWFueSBDaGluZXNlIHdpbGwgZXZlbiBib3RoZXIgdG8gbGVhcm4gYWJvdXQgaGltLgpTb21lIHByb21vdGlvbmFsIG11c2NsZSBmcm9tIE1ham9yIExlYWd1ZSBCYXNlYmFsbCBtaWdodCBoZWxwIGluIHRoZSB1cGhpbGwgYmF0dGxlIFh1IGRlc2NyaWJlZC4KTUxCIG9mZmljaWFscyBpbiBDaGluYSBhcmUgc2V0IHRvIGFjY29tcGFueSBSaXBrZW4gb24gcGFydCBvZiB0aGUgdHJpcCwgb25lIGFzcGVjdCBvZiBhIGJyb2FkZXIgYmFzZWJhbGwgcHJvZmlsZSB0aGlzIHllYXIgaW4gdGhlIGNvdW50cnkuCkZvdXIgQ2hpbmVzZSBwbGF5ZXJzIHdlcmUgc2lnbmVkIHRoaXMgeWVhciAodHdvIGJ5IHRoZSBOZXcgWW9yayBZYW5rZWVzIGFuZCB0d28gYnkgdGhlIFNlYXR0bGUgTWFyaW5lcnMpLCBhbmQgTWFqb3IgTGVhZ3VlIEJhc2ViYWxsIEludGVybmF0aW9uYWwgbGF1bmNoZWQgYSBwcm9ncmFtIGZvciBtb3JlIHRoYW4gMTAwLDAwMCBlbGVtZW50YXJ5IHNjaG9vbCBzdHVkZW50cyBhbmQgYSBiYXNlYmFsbCBhY2FkZW15IGZvciA2MCB0b3AtcmF0ZWQgeW91bmcgcGxheWVycy4KIkluIHRoZSB3b3JsZCdzIG1vc3QgcG9wdWxvdXMgY291bnRyeSwgdGhlcmUgYXJlIG1ham9yLWxlYWd1ZS1jYWxpYmVyIHBsYXllcnMganVzdCB3YWl0aW5nIHRvIGJlIGRpc2NvdmVyZWQgYW5kIGRldmVsb3BlZCwiIE1MQiBJbnRlcm5hdGlvbmFsJ3MgUGF1bCBBcmNoZXkgc2FpZC4KQnV0IGlmIENoaW5hIGN1bHRpdmF0ZXMgYSBnZW5lcmF0aW9uIG9mIGJhc2ViYWxsIGZhbnMgaW4gdGhlIHByb2Nlc3MsIE1MQiB3b24ndCBtaW5kLgpXaGlsZSBvdmVyc2VhcywgUmlwa2VuIGNvdWxkIGhhdmUgY2F1Z2h0IHRoZSBXb3JsZCBTZXJpZXMgaGFkIGhlIGFycml2ZWQgZWFybGllci4KVGhpcyB5ZWFyLCBpbiB3aGF0IE1ham9yIExlYWd1ZSBCYXNlYmFsbCBJbnRlcm5hdGlvbmFsIGNhbGxlZCBhICJmaXJzdC1vZi1pdHMta2luZCBlbmRlYXZvciwiIHRoZSB3aG9sZSBzZXJpZXMgd2FzIHNsYXRlZCBmb3IgYnJvYWRjYXN0IG9uIEdyZWF0IFNwb3J0cywgQ2hpbmEncyBsZWFkaW5nIGNhYmxlIFRWIHNwb3J0cyBjaGFubmVsLgpBbm90aGVyIHBhcnQgb2YgdGhhdCB0ZWxldmlzaW9uIHBhY2thZ2UgaW5jbHVkZXMgYSAiQ2hpbmEtc3BlY2lmaWMiIHZlcnNpb24gb2YgIlRoaXMgV2VlayBpbiBCYXNlYmFsbCwiIGZlYXR1cmluZyBhIHNlZ21lbnQgY2FsbGVkICJCYXNlYmFsbCBCYXNpY3MuIgpSaXBrZW4gbWF5IGluZGVlZCBoYXZlIGhpcyB3b3JrIGN1dCBvdXQgZm9yIGhpbS4K
[]
UG9sZXMgU29mdGVuIFRvd2FyZCBTdGFsaW4ncyBIdWxraW5nICdHaWZ0JwpQb2xlcyBTb2Z0ZW4gVG93YXJkIFN0YWxpbidzIEh1bGtpbmcgJ0dpZnQnIFBhbGFjZSBTZWVuIEVtYm9keWluZyBOYXRpb24ncyBQb3N0d2FyIEhpc3RvcnkKQnkgQ3JhaWcgV2hpdGxvY2sgV2FzaGluZ3RvbiBQb3N0IEZvcmVpZ24gU2VydmljZSBGcmlkYXksIE5vdmVtYmVyIDIsIDIwMDc7IEExNApXQVJTQVcgLS0gVGhpcyBib29taW5nIGNpdHkgaGFzIGJlZW4gdHJhbnNmb3JtZWQgaW4gcmVjZW50IHllYXJzIGJ5IHNreXNjcmFwZXJzIGFuZCBnbGl0enkgc3RlZWwtYW5kLWdsYXNzIHByb2plY3RzLgpCdXQgdGhlIHNreWxpbmUgaXMgc3RpbGwgZG9taW5hdGVkIGJ5IGFuIGltcHJvYmFibGUgcmVsaWMgb2YgUG9sYW5kJ3MgQ29sZCBXYXIgcGFzdDogdGhlIFBhbGFjZSBvZiBDdWx0dXJlIGFuZCBTY2llbmNlLCBhIGh1bGtpbmcsIGNvbG9ybGVzcyBtb251bWVudCB0byB0aGUgZ2xvcmllcyBvZiBjb21tdW5pc20uCkFmdGVyIGl0IHJvc2UgaW4gMTk1NSBmcm9tIHRoZSBydWJibGUgb2YgYSBydWluZWQgY2l0eSwgdGhlIDc1Ny1mb290LXRhbGwgYnVpbGRpbmcgY29tbW9ubHkga25vd24gYXMgU3RhbGluJ3MgR2lmdCB0byB0aGUgUG9saXNoIFBlb3BsZSB3YXMgZ3JlZXRlZCB3aXRoIHNuZWVycyBieSBtYW55IFBvbGVzLCB3aG8gc2F3IHRoZSBTb3ZpZXQtZGVzaWduZWQgdG93ZXIgYXMgYSB0aHVtYiBpbiB0aGVpciBjb2xsZWN0aXZlIGV5ZSBhbmQgYW4gdW5zdWJ0bGUgcmVtaW5kZXIgb2Ygd2hvIHJlYWxseSBydWxlZCB0aGUgY291bnRyeS4KSW4gdGhlIDE4IHllYXJzIHNpbmNlIHRoZSBmYWxsIG9mIGNvbW11bmlzbSwgaG93ZXZlciwgdGhlIHBhbGFjZSBoYXMgZ3JhZHVhbGx5IGZvdW5kIGEgcGxhY2UgaW4gdGhlIGhlYXJ0cyBvZiBXYXJzYXcncyBwZW9wbGUuCkNvbnNpZGVyZWQgdG9vIGJpZyB0byBrbm9jayBkb3duLCB0aGUgbGFuZG1hcmsgaXMgZW1icmFjZWQgdGhlc2UgZGF5cyBhcyBhIG5lY2Vzc2FyeSByZW1pbmRlciBvZiB3aGF0IFBvbGFuZCB3YXMgZm9yY2VkIHRvIGVuZHVyZSB1bmRlciBTb3ZpZXQgZG9taW5hdGlvbi4KWW91IGNhbid0IGJydXNoIG91dCBoaXN0b3J5LgpUaGlzIHdhcyBQb2xhbmQsIHRvbywiIHNhaWQgTWFydGEgQm9ndXNpZXdpY3osIDU0LCBhIEtyYWtvdyByZXNpZGVudCB3aG8gd2FuZGVyZWQgaW50byB0aGUgcGFsYWNlJ3MgY2F2ZXJub3VzIGxvYmJ5IHdoaWxlIHZpc2l0aW5nIFdhcnNhdyByZWNlbnRseS4KSXQncyBhIHN5bWJvbCBvZiB0aGUgcGFzdCwgYnV0IGl0IHNob3VsZCBzdGF5LgpUaGUgaGlzdG9yeSBvZiB0aGUgcGFsYWNlIGlzIGluIG1hbnkgd2F5cyBhIHJlZmxlY3Rpb24gb2YgcG9zdHdhciBQb2xhbmQsIGFuZCBub2JvZHkgaGFzIG1vcmUgc3RvcmllcyB0byB0ZWxsIGFib3V0IHRoZSBidWlsZGluZyB0aGFuIEhhbm5hIFN6Y3p1YmVsZWsuCkZvciA0NyB5ZWFycyBzaGUgaGFzIHNlcnZlZCBhcyB0aGUgb2ZmaWNpYWwgY2hyb25pY2xlciBvZiBhbGwgbWFqb3IgZXZlbnRzIGFuZCBWSVBzIHZpc2l0aW5nIHRoZSBsYW5kbWFyaywgZnJvbSB0aGUgU2hhaCBvZiBJcmFuIHRvIER1a2UgRWxsaW5ndG9uLgpJbiAxOTYwLCB3aGVuIFN6Y3p1YmVsZWsgd2FzIGFzc2lnbmVkIHRvIHdvcmsgYXMgYSBjbGVyayBhdCB0aGUgc2hpbnkgbmV3IHBhbGFjZSwgaGVyIGZyaWVuZHMgYW5kIGZhbWlseSB3ZXJlIHVuaW1wcmVzc2VkLgoiVGhleSBhbGwgc2FpZCwgJ0hvdyBjYW4geW91IHdvcmsgaW4gdGhpcyBkaXNndXN0aW5nIFNvdmlldCBidWlsZGluZz8nICIgc2hlIHJlY2FsbGVkLgpJIHRvbGQgdGhlbTogJ1doYXQncyB0aGUgZGlmZmVyZW5jZT8KQSBjbGVyaydzIHdvcmsgaXMgdGhlIHNhbWUgZXZlcnl3aGVyZS4nIApVbmRlciBjb21tdW5pc20sIHRoZSBwYWxhY2Ugc2VydmVkIGEgZHVhbCBwdXJwb3NlLgpJdHMgbWFzc2l2ZSB0aGVhdGVycyBhbmQgYXVkaXRvcml1bXMgd2VyZSB1c2VkIGZvciBlbnRlcnRhaW5tZW50IGFuZCBhY2FkZW1pYyBsZWN0dXJlcywgd2hpY2ggd2VyZSBtb3N0bHkgd2VsY29tZWQgYnkgYSBwdWJsaWMgbG9va2luZyBmb3IgcmVsaWVmIGZyb20gcG9saXRpY2FsIG9wcHJlc3Npb24gYW5kIGVjb25vbWljIG1pc2VyeS4KQnV0IG11Y2ggb2YgdGhlIGJ1aWxkaW5nIHdhcyByZXNlcnZlZCBmb3IgbGVzcyBwb3B1bGFyIGFjdGl2aXRpZXMsIHN1Y2ggYXMgcGxlbmFyeSBzZXNzaW9ucyBvZiB0aGUgQ2VudHJhbCBDb21taXR0ZWUgb2YgdGhlIFBvbGlzaCBDb21tdW5pc3QgUGFydHkuClRob3NlIG9jY2FzaW9ucyBhdHRyYWN0ZWQgaGlnaCBTb3ZpZXQgb2ZmaWNpYWxzLCB3aG9zZSBwcmVzZW5jZSB1c3VhbGx5IGxlZnQgUG9sZXMgcXVpZXRseSBzZWV0aGluZy4KV2UgaGFkIGxvYWRzIG9mIHRoZW0gY29tZSAtLSBtYXJzaGFscywgZ2VuZXJhbHMsIHRoZSBtYXlvciBvZiBNb3Njb3cuClRoZXkgY2FtZSBieSB0aGUgaHVuZHJlZHMsIiBTemN6dWJlbGVrIHNhaWQuCldlIG5ldmVyIGhhZCB3YXJtIGZlZWxpbmdzIHRvd2FyZCB0aGUgZGlnbml0YXJpZXMsIHRoYXQncyBmb3Igc3VyZS4KRXZlcnl0aGluZyB3YXMgYXJ0aWZpY2lhbCBhbmQgc3RpZmYuCkluIHByZXBhcmF0aW9uIGZvciBvbmUgdmlzaXQgYnkgU292aWV0IGxlYWRlciBMZW9uaWQgQnJlemhuZXYsIHNoZSByZWNhbGxlZCwgamFuaXRvcnMgYXQgdGhlIHBhbGFjZSBkZWZlY2F0ZWQgaW50byBmaXJlIGV4dGluZ3Vpc2hlcnMgYW5kIHNwcmF5ZWQgdGhlIGNvbnRlbnRzIG9uIHRoZSBwb3J0cmFpdHMgb2YgdGhlIFNvdmlldCBydWxlciB0aGF0IHdlcmUgZHJhcGVkIGFsbCBvdmVyIHRoZSBidWlsZGluZy4KIllvdSB3b3VsZG4ndCBiZWxpZXZlIHRoZSBpbnZlc3RpZ2F0aW9ucyB0aGF0IGhhcHBlbmVkIGFmdGVyIHRoYXQsIiBzaGUgc2FpZC4KT24gYW5vdGhlciBvY2Nhc2lvbiwgaW4gMTk2MSwgU3pjenViZWxlayBmb3VuZCBoZXJzZWxmIGluIGhvdCB3YXRlciBhZnRlciBzaGUgc2xpY2VkIHVwIGdpYW50IHBvc3RlcnMgb2YgVmxhZGltaXIgTGVuaW4gdGhhdCB3ZXJlIGJsb2NraW5nIHRoZSB3aW5kb3dzIG9mIGEgY29uZmVyZW5jZSByb29tLgpUaGUgdW5hdXRob3JpemVkIGFjdCBhdHRyYWN0ZWQgdGhlIGF0dGVudGlvbiBvZiB0b3AgY29tbXVuaXN0IG9mZmljaWFscywgYnV0IHNoZSB3YXMgc3BhcmVkIHB1bmlzaG1lbnQgYWZ0ZXIgdGhlIHBhbGFjZSBkaXJlY3RvciBpbnRlcnZlbmVkLgoiSSB3YXMgb25seSAyMSwiIHNoZSBzYWlkIHdpdGggYSBzaHJ1Zy4KVGhlIGJ1aWxkaW5nIHdhcyBjb21taXNzaW9uZWQgb24gSm9zZXBoIFN0YWxpbidzIG9yZGVycyBhcyBhICJnaWZ0IiBmcm9tIHRoZSBTb3ZpZXQgVW5pb24gdG8gdGhlIFBvbGlzaCBwZW9wbGUsIGFsdGhvdWdoIHRoZSBTb3ZpZXQgZGljdGF0b3IgZGllZCBpbiAxOTUzLCB0d28geWVhcnMgYmVmb3JlIGl0cyBjb21wbGV0aW9uLgpNb3JlIHRoYW4gMyw1MDAgU292aWV0IHdvcmtlcnMgd2VyZSBkaXNwYXRjaGVkIHRvIGNvbnN0cnVjdCB0aGUgcGFsYWNlOzE2IG9mIHRoZW0gZGllZCBvbiB0aGUgam9iLgpEZXNpZ25lZCBpbiB0aGUgc29jaWFsaXN0IHJlYWxpc3Qgc3R5bGUsIHRoZSBwYWxhY2UgcmVzZW1ibGVzIHRoZSBTdGFsaW5pc3Qgc2t5c2NyYXBlcnMgaW4gTW9zY293IGtub3duIGFzIHRoZSBTZXZlbiBTaXN0ZXJzIGFuZCB0aGUgRW1waXJlIFN0YXRlIEJ1aWxkaW5nIGluIE5ldyBZb3JrLgpJbiBmYWN0LCBpdHMgUnVzc2lhbi1ib3JuIGFyY2hpdGVjdCwgTC5XLiBSdWRuaWV3LCBzZW50ICJzcGllcyIgdG8gQW1lcmljYSB0byBtb2RlbCB0aGUgZGVzaWduIG9uIHRoZSBVLlMuIGxhbmRtYXJrLCBhY2NvcmRpbmcgdG8gTWlyb3NsYXcgU2llcnpwb3dza2ksIHRoZSBwYWxhY2UncyBkaXJlY3RvciBvZiBtYXJrZXRpbmcgYW5kIHByb21vdGlvbi4KQWZ0ZXIgdGhlIGZhbGwgb2YgY29tbXVuaXNtIGluIDE5ODksIHRoZXJlIHdhcyB0YWxrIGFib3V0IHJhemluZyB0aGUgcGFsYWNlLCBidXQgaXQgbmV2ZXIgZ290IHZlcnkgZmFyLgpUb2RheSwgdGhlIHBhbGFjZSByZW1haW5zIHRoZSB0YWxsZXN0IGJ1aWxkaW5nIGluIFBvbGFuZCAtLSBiYXJlbHkgdG9wcGluZyB0d28gbmVhcmJ5IGx1eHVyeSBob3RlbHMgLS0gYW5kIG9uZSBvZiB0aGUgYnVzaWVzdC4KQWJvdXQgMzAsMDAwIHBlb3BsZSBwYXNzIHRocm91Z2ggaXQgZWFjaCBkYXkuClN0YWxpbidzIEdpZnQgaXMgb3duZWQgYnkgdGhlIGNpdHkgb2YgV2Fyc2F3LCB3aGljaCBub3cgdHVybnMgYSBuaWNlIHByb2ZpdCByZW50aW5nIG91dCBpdHMgMzIgZmxvb3JzIGZvciBvZmZpY2VzLCByZXRhaWwgZW50ZXJwcmlzZXMgYW5kIGV4aGliaXRpb25zLgpNb3ZpZSB0aGVhdGVycyBmbGFuayB0aGUgbWFpbiB0b3dlciwgYW5kIGF1ZGl0b3JpdW1zIG9uY2UgdXNlZCBmb3IgQ2VudHJhbCBDb21taXR0ZWUgZ2F0aGVyaW5ncyBvZmZlciBjb25jZXJ0cyBhbmQgb3RoZXIgZW50ZXJ0YWlubWVudC4KIkl0J3MgYSB0cnVlIHB1YmxpYyBob3VzZSwiIFNpZXJ6cG93c2tpIHNhaWQgZHVyaW5nIGEgdG91ciBvZiB0aGUgYnVpbGRpbmcuClNwbGludGVyZWQgb2FrIGZsb29ycyBhbmQgbWFycmVkIG1hcmJsZSBzdXJmYWNlcyAtLSBvbmUgZ2lhbnQgY29sdW1uIGlzIHN0aWxsIHN0YWluZWQgcmVkIGZyb20gYW4gaW5lYnJpYXRlZCBiYW5xdWV0IGd1ZXN0IHdobyBjb3VsZG4ndCBob2xkIGhpcyB3aW5lIC0tIHVuZGVyc2NvcmUgdGhlIHBhbGFjZSdzIG5lZWQgZm9yIGEgZmFjZWxpZnQuCk90aGVyd2lzZSwgdGhlIGJ1aWxkaW5nIGFwcGVhcnMgbXVjaCBhcyBpdCBkaWQgb24gb3BlbmluZyBkYXkgbW9yZSB0aGFuIGhhbGYgYSBjZW50dXJ5IGFnby4KUGxhc3RlciBmcmllemVzIG9mIFBvbGlzaCBwZWFzYW50cyBpbiBjbGFzc2ljYWwgR3JlZWsgZ2FyYiBhZG9ybiB0aGUgdXBwZXIgcmVhY2hlcyBvZiB0aGUgbWFpbiBoYWxscy4KQmFzLXJlbGllZnMgb2YgRnJpZWRyaWNoIEVuZ2VscyBhbmQgb3RoZXIgTWFyeGlzdCBmaWd1cmVzIHN0YW5kIHRyaXVtcGhhbnRseSBhbG9uZ3NpZGUgdHdvIGVub3Jtb3VzIHN0YWlyY2FzZXMuClRoZSBvbW5pcHJlc2VudCBjb21tdW5pc3Qgc3ltYm9scyBjb250cmFzdCB3aXRoIGEgZmV3IG1vZGVybi1kYXkgdG91Y2hlcywgaW5jbHVkaW5nIGEgY2hlZWt5IGdyZWVuLWFuZC1ibHVlIHBhaW50aW5nLCBjaXJjYSAyMDA1LCBpbiB0aGUgbWFpbiBsb2JieS4KVGl0bGVkICJCaWcgQnJvdGhlcidzIEV5ZSwiIGl0IGRlcGljdHMgdGhlIHBhbGFjZSdzIGV4dGVyaW9yLCB3aXRoIGEgYmxpbmtpbmcgbGlnaHQgYXQgdGhlIHRvcCBvZiB0aGUgdG93ZXIuCk1vc3QgZGF5cywgdGhlIHBhbGFjZSBpcyBmaWxsZWQgd2l0aCBvZmZpY2Ugd29ya2VycywgY29udmVudGlvbi1nb2VycyBhbmQgdGVlbmFnZXJzIGxvb2tpbmcgZm9yIGEgd2FybSBwbGFjZSB0byBoYW5nIG91dC4KQnV0IG1hbnkgZWxkZXJseSBQb2xlcywgd2hvc2UgbWVtb3JpZXMgb2YgU3RhbGluIHJlbWFpbiBmcmVzaCwgc3RpbGwgZ2l2ZSBpdCBhIHdpZGUgYmVydGguCiJUaG9zZSBwZW9wbGUgZnJvbSB0aGUgdmVyeSBiZWdpbm5pbmcgaGF0ZWQgaXQsIGFuZCB0aGV5IHN0aWxsIGhhdGUgaXQsIiBzYWlkIFN6Y3p1YmVsZWssIHRoZSBvZmZpY2lhbCBoaXN0b3JpYW4uCkJ1dCBmb3IgdGhlIHlvdW5nIHBlb3BsZSwgaXQncyBhIHBsYWNlIG9mIGVkdWNhdGlvbi4KRm9yIHRoZWlyIGdlbmVyYXRpb24sIHRoZXJlIGlzIG5vIGlsbCB3aWxsIHRvd2FyZCB0aGUgUGFsYWNlIG9mIEN1bHR1cmUuCg==
[(UG9sZXMgU29mdGVuIFRvd2FyZCBTdGFsaW4ncyBIdWxraW5nICdHaWZ0JwpQb2xlcyBTb2Z0ZW4gVG93YXJkIFN0YWxpbidzIEh1bGtpbmcgJ0dpZnQnIFBhbGFjZSBTZWVuIEVtYm9keWluZyBOYXRpb24ncyBQb3N0d2FyIEhpc3RvcnkKQnkgQ3JhaWcgV2hpdGxvY2sgV2FzaGluZ3RvbiBQb3N0IEZvcmVpZ24gU2VydmljZSBGcmlkYXksIE5vdmVtYmVyIDIsIDIwMDc7IEExNApXQVJTQVcgLS0gVGhpcyBib29taW5nIGNpdHkgaGFzIGJlZW4gdHJhbnNmb3JtZWQgaW4gcmVjZW50IHllYXJzIGJ5IHNreXNjcmFwZXJzIGFuZCBnbGl0enkgc3RlZWwtYW5kLWdsYXNzIHByb2plY3RzLgpCdXQgdGhlIHNreWxpbmUgaXMgc3RpbGwgZG9taW5hdGVkIGJ5IGFuIGltcHJvYmFibGUgcmVsaWMgb2YgUG9sYW5kJ3MgQ29sZCBXYXIgcGFzdDogdGhlIFBhbGFjZSBvZiBDdWx0dXJlIGFuZCBTY2llbmNlLCBhIGh1bGtpbmcsIGNvbG9ybGVzcyBtb251bWVudCB0byB0aGUgZ2xvcmllcyBvZiBjb21tdW5pc20uCkFmdGVyIGl0IHJvc2UgaW4gMTk1NSBmcm9tIHRoZSBydWJibGUgb2YgYSBydWluZWQgY2l0eSwgdGhlIDc1Ny1mb290LXRhbGwgYnVpbGRpbmcgY29tbW9ubHkga25vd24gYXMgU3RhbGluJ3MgR2lmdCB0byB0aGUgUG9saXNoIFBlb3BsZSB3YXMgZ3JlZXRlZCB3aXRoIHNuZWVycyBieSBtYW55IFBvbGVzLCB3aG8gc2F3IHRoZSBTb3ZpZXQtZGVzaWduZWQgdG93ZXIgYXMgYSB0aHVtYiBpbiB0aGVpciBjb2xsZWN0aXZlIGV5ZSBhbmQgYW4gdW5zdWJ0bGUgcmVtaW5kZXIgb2Ygd2hvIHJlYWxseSBydWxlZCB0aGUgY291bnRyeS4KSW4gdGhlIDE4IHllYXJzIHNpbmNlIHRoZSBmYWxsIG9mIGNvbW11bmlzbSwgaG93ZXZlciwgdGhlIHBhbGFjZSBoYXMgZ3JhZHVhbGx5IGZvdW5kIGEgcGxhY2UgaW4gdGhlIGhlYXJ0cyBvZiBXYXJzYXcncyBwZW9wbGUuCkNvbnNpZGVyZWQgdG9vIGJpZyB0byBrbm9jayBkb3duLCB0aGUgbGFuZG1hcmsgaXMgZW1icmFjZWQgdGhlc2UgZGF5cyBhcyBhIG5lY2Vzc2FyeSByZW1pbmRlciBvZiB3aGF0IFBvbGFuZCB3YXMgZm9yY2VkIHRvIGVuZHVyZSB1bmRlciBTb3ZpZXQgZG9taW5hdGlvbi4KWW91IGNhbid0IGJydXNoIG91dCBoaXN0b3J5LgpUaGlzIHdhcyBQb2xhbmQsIHRvbywiIHNhaWQgTWFydGEgQm9ndXNpZXdpY3osIDU0LCBhIEtyYWtvdyByZXNpZGVudCB3aG8gd2FuZGVyZWQgaW50byB0aGUgcGFsYWNlJ3MgY2F2ZXJub3VzIGxvYmJ5IHdoaWxlIHZpc2l0aW5nIFdhcnNhdyByZWNlbnRseS4KSXQncyBhIHN5bWJvbCBvZiB0aGUgcGFzdCwgYnV0IGl0IHNob3VsZCBzdGF5LgpUaGUgaGlzdG9yeSBvZiB0aGUgcGFsYWNlIGlzIGluIG1hbnkgd2F5cyBhIHJlZmxlY3Rpb24gb2YgcG9zdHdhciBQb2xhbmQsIGFuZCBub2JvZHkgaGFzIG1vcmUgc3RvcmllcyB0byB0ZWxsIGFib3V0IHRoZSBidWlsZGluZyB0aGFuIEhhbm5hIFN6Y3p1YmVsZWsuCkZvciA0NyB5ZWFycyBzaGUgaGFzIHNlcnZlZCBhcyB0aGUgb2ZmaWNpYWwgY2hyb25pY2xlciBvZiBhbGwgbWFqb3IgZXZlbnRzIGFuZCBWSVBzIHZpc2l0aW5nIHRoZSBsYW5kbWFyaywgZnJvbSB0aGUgU2hhaCBvZiBJcmFuIHRvIER1a2UgRWxsaW5ndG9uLgpJbiAxOTYwLCB3aGVuIFN6Y3p1YmVsZWsgd2FzIGFzc2lnbmVkIHRvIHdvcmsgYXMgYSBjbGVyayBhdCB0aGUgc2hpbnkgbmV3IHBhbGFjZSwgaGVyIGZyaWVuZHMgYW5kIGZhbWlseSB3ZXJlIHVuaW1wcmVzc2VkLgoiVGhleSBhbGwgc2FpZCwgJ0hvdyBjYW4geW91IHdvcmsgaW4gdGhpcyBkaXNndXN0aW5nIFNvdmlldCBidWlsZGluZz8nICIgc2hlIHJlY2FsbGVkLgpJIHRvbGQgdGhlbTogJ1doYXQncyB0aGUgZGlmZmVyZW5jZT8KQSBjbGVyaydzIHdvcmsgaXMgdGhlIHNhbWUgZXZlcnl3aGVyZS4nIApVbmRlciBjb21tdW5pc20sIHRoZSBwYWxhY2Ugc2VydmVkIGEgZHVhbCBwdXJwb3NlLgpJdHMgbWFzc2l2ZSB0aGVhdGVycyBhbmQgYXVkaXRvcml1bXMgd2VyZSB1c2VkIGZvciBlbnRlcnRhaW5tZW50IGFuZCBhY2FkZW1pYyBsZWN0dXJlcywgd2hpY2ggd2VyZSBtb3N0bHkgd2VsY29tZWQgYnkgYSBwdWJsaWMgbG9va2luZyBmb3IgcmVsaWVmIGZyb20gcG9saXRpY2FsIG9wcHJlc3Npb24gYW5kIGVjb25vbWljIG1pc2VyeS4KQnV0IG11Y2ggb2YgdGhlIGJ1aWxkaW5nIHdhcyByZXNlcnZlZCBmb3IgbGVzcyBwb3B1bGFyIGFjdGl2aXRpZXMsIHN1Y2ggYXMgcGxlbmFyeSBzZXNzaW9ucyBvZiB0aGUgQ2VudHJhbCBDb21taXR0ZWUgb2YgdGhlIFBvbGlzaCBDb21tdW5pc3QgUGFydHkuClRob3NlIG9jY2FzaW9ucyBhdHRyYWN0ZWQgaGlnaCBTb3ZpZXQgb2ZmaWNpYWxzLCB3aG9zZSBwcmVzZW5jZSB1c3VhbGx5IGxlZnQgUG9sZXMgcXVpZXRseSBzZWV0aGluZy4KV2UgaGFkIGxvYWRzIG9mIHRoZW0gY29tZSAtLSBtYXJzaGFscywgZ2VuZXJhbHMsIHRoZSBtYXlvciBvZiBNb3Njb3cuClRoZXkgY2FtZSBieSB0aGUgaHVuZHJlZHMsIiBTemN6dWJlbGVrIHNhaWQuCldlIG5ldmVyIGhhZCB3YXJtIGZlZWxpbmdzIHRvd2FyZCB0aGUgZGlnbml0YXJpZXMsIHRoYXQncyBmb3Igc3VyZS4KRXZlcnl0aGluZyB3YXMgYXJ0aWZpY2lhbCBhbmQgc3RpZmYuCkluIHByZXBhcmF0aW9uIGZvciBvbmUgdmlzaXQgYnkgU292aWV0IGxlYWRlciBMZW9uaWQgQnJlemhuZXYsIHNoZSByZWNhbGxlZCwgamFuaXRvcnMgYXQgdGhlIHBhbGFjZSBkZWZlY2F0ZWQgaW50byBmaXJlIGV4dGluZ3Vpc2hlcnMgYW5kIHNwcmF5ZWQgdGhlIGNvbnRlbnRzIG9uIHRoZSBwb3J0cmFpdHMgb2YgdGhlIFNvdmlldCBydWxlciB0aGF0IHdlcmUgZHJhcGVkIGFsbCBvdmVyIHRoZSBidWlsZGluZy4KIllvdSB3b3VsZG4ndCBiZWxpZXZlIHRoZSBpbnZlc3RpZ2F0aW9ucyB0aGF0IGhhcHBlbmVkIGFmdGVyIHRoYXQsIiBzaGUgc2FpZC4KT24gYW5vdGhlciBvY2Nhc2lvbiwgaW4gMTk2MSwgU3pjenViZWxlayBmb3VuZCBoZXJzZWxmIGluIGhvdCB3YXRlciBhZnRlciBzaGUgc2xpY2VkIHVwIGdpYW50IHBvc3RlcnMgb2YgVmxhZGltaXIgTGVuaW4gdGhhdCB3ZXJlIGJsb2NraW5nIHRoZSB3aW5kb3dzIG9mIGEgY29uZmVyZW5jZSByb29tLgpUaGUgdW5hdXRob3JpemVkIGFjdCBhdHRyYWN0ZWQgdGhlIGF0dGVudGlvbiBvZiB0b3AgY29tbXVuaXN0IG9mZmljaWFscywgYnV0IHNoZSB3YXMgc3BhcmVkIHB1bmlzaG1lbnQgYWZ0ZXIgdGhlIHBhbGFjZSBkaXJlY3RvciBpbnRlcnZlbmVkLgoiSSB3YXMgb25seSAyMSwiIHNoZSBzYWlkIHdpdGggYSBzaHJ1Zy4KVGhlIGJ1aWxkaW5nIHdhcyBjb21taXNzaW9uZWQgb24gSm9zZXBoIFN0YWxpbidzIG9yZGVycyBhcyBhICJnaWZ0IiBmcm9tIHRoZSBTb3ZpZXQgVW5pb24gdG8gdGhlIFBvbGlzaCBwZW9wbGUsIGFsdGhvdWdoIHRoZSBTb3ZpZXQgZGljdGF0b3IgZGllZCBpbiAxOTUzLCB0d28geWVhcnMgYmVmb3JlIGl0cyBjb21wbGV0aW9uLgpNb3JlIHRoYW4gMyw1MDAgU292aWV0IHdvcmtlcnMgd2VyZSBkaXNwYXRjaGVkIHRvIGNvbnN0cnVjdCB0aGUgcGFsYWNlOzE2IG9mIHRoZW0gZGllZCBvbiB0aGUgam9iLgpEZXNpZ25lZCBpbiB0aGUgc29jaWFsaXN0IHJlYWxpc3Qgc3R5bGUsIHRoZSBwYWxhY2UgcmVzZW1ibGVzIHRoZSBTdGFsaW5pc3Qgc2t5c2NyYXBlcnMgaW4gTW9zY293IGtub3duIGFzIHRoZSBTZXZlbiBTaXN0ZXJzIGFuZCB0aGUgRW1waXJlIFN0YXRlIEJ1aWxkaW5nIGluIE5ldyBZb3JrLgpJbiBmYWN0LCBpdHMgUnVzc2lhbi1ib3JuIGFyY2hpdGVjdCwgTC5XLiBSdWRuaWV3LCBzZW50ICJzcGllcyIgdG8gQW1lcmljYSB0byBtb2RlbCB0aGUgZGVzaWduIG9uIHRoZSBVLlMuIGxhbmRtYXJrLCBhY2NvcmRpbmcgdG8gTWlyb3NsYXcgU2llcnpwb3dza2ksIHRoZSBwYWxhY2UncyBkaXJlY3RvciBvZiBtYXJrZXRpbmcgYW5kIHByb21vdGlvbi4KQWZ0ZXIgdGhlIGZhbGwgb2YgY29tbXVuaXNtIGluIDE5ODksIHRoZXJlIHdhcyB0YWxrIGFib3V0IHJhemluZyB0aGUgcGFsYWNlLCBidXQgaXQgbmV2ZXIgZ290IHZlcnkgZmFyLgpUb2RheSwgdGhlIHBhbGFjZSByZW1haW5zIHRoZSB0YWxsZXN0IGJ1aWxkaW5nIGluIFBvbGFuZCAtLSBiYXJlbHkgdG9wcGluZyB0d28gbmVhcmJ5IGx1eHVyeSBob3RlbHMgLS0gYW5kIG9uZSBvZiB0aGUgYnVzaWVzdC4KQWJvdXQgMzAsMDAwIHBlb3BsZSBwYXNzIHRocm91Z2ggaXQgZWFjaCBkYXkuClN0YWxpbidzIEdpZnQgaXMgb3duZWQgYnkgdGhlIGNpdHkgb2YgV2Fyc2F3LCB3aGljaCBub3cgdHVybnMgYSBuaWNlIHByb2ZpdCByZW50aW5nIG91dCBpdHMgMzIgZmxvb3JzIGZvciBvZmZpY2VzLCByZXRhaWwgZW50ZXJwcmlzZXMgYW5kIGV4aGliaXRpb25zLgpNb3ZpZSB0aGVhdGVycyBmbGFuayB0aGUgbWFpbiB0b3dlciwgYW5kIGF1ZGl0b3JpdW1zIG9uY2UgdXNlZCBmb3IgQ2VudHJhbCBDb21taXR0ZWUgZ2F0aGVyaW5ncyBvZmZlciBjb25jZXJ0cyBhbmQgb3RoZXIgZW50ZXJ0YWlubWVudC4KIkl0J3MgYSB0cnVlIHB1YmxpYyBob3VzZSwiIFNpZXJ6cG93c2tpIHNhaWQgZHVyaW5nIGEgdG91ciBvZiB0aGUgYnVpbGRpbmcuClNwbGludGVyZWQgb2FrIGZsb29ycyBhbmQgbWFycmVkIG1hcmJsZSBzdXJmYWNlcyAtLSBvbmUgZ2lhbnQgY29sdW1uIGlzIHN0aWxsIHN0YWluZWQgcmVkIGZyb20gYW4gaW5lYnJpYXRlZCBiYW5xdWV0IGd1ZXN0IHdobyBjb3VsZG4ndCBob2xkIGhpcyB3aW5lIC0tIHVuZGVyc2NvcmUgdGhlIHBhbGFjZSdzIG5lZWQgZm9yIGEgZmFjZWxpZnQuCk90aGVyd2lzZSwgdGhlIGJ1aWxkaW5nIGFwcGVhcnMgbXVjaCBhcyBpdCBkaWQgb24gb3BlbmluZyBkYXkgbW9yZSB0aGFuIGhhbGYgYSBjZW50dXJ5IGFnby4KUGxhc3RlciBmcmllemVzIG9mIFBvbGlzaCBwZWFzYW50cyBpbiBjbGFzc2ljYWwgR3JlZWsgZ2FyYiBhZG9ybiB0aGUgdXBwZXIgcmVhY2hlcyBvZiB0aGUgbWFpbiBoYWxscy4KQmFzLXJlbGllZnMgb2YgRnJpZWRyaWNoIEVuZ2VscyBhbmQgb3RoZXIgTWFyeGlzdCBmaWd1cmVzIHN0YW5kIHRyaXVtcGhhbnRseSBhbG9uZ3NpZGUgdHdvIGVub3Jtb3VzIHN0YWlyY2FzZXMuClRoZSBvbW5pcHJlc2VudCBjb21tdW5pc3Qgc3ltYm9scyBjb250cmFzdCB3aXRoIGEgZmV3IG1vZGVybi1kYXkgdG91Y2hlcywgaW5jbHVkaW5nIGEgY2hlZWt5IGdyZWVuLWFuZC1ibHVlIHBhaW50aW5nLCBjaXJjYSAyMDA1LCBpbiB0aGUgbWFpbiBsb2JieS4KVGl0bGVkICJCaWcgQnJvdGhlcidzIEV5ZSwiIGl0IGRlcGljdHMgdGhlIHBhbGFjZSdzIGV4dGVyaW9yLCB3aXRoIGEgYmxpbmtpbmcgbGlnaHQgYXQgdGhlIHRvcCBvZiB0aGUgdG93ZXIuCk1vc3QgZGF5cywgdGhlIHBhbGFjZSBpcyBmaWxsZWQgd2l0aCBvZmZpY2Ugd29ya2VycywgY29udmVudGlvbi1nb2VycyBhbmQgdGVlbmFnZXJzIGxvb2tpbmcgZm9yIGEgd2FybSBwbGFjZSB0byBoYW5nIG91dC4KQnV0IG1hbnkgZWxkZXJseSBQb2xlcywgd2hvc2UgbWVtb3JpZXMgb2YgU3RhbGluIHJlbWFpbiBmcmVzaCwgc3RpbGwgZ2l2ZSBpdCBhIHdpZGUgYmVydGguCiJUaG9zZSBwZW9wbGUgZnJvbSB0aGUgdmVyeSBiZWdpbm5pbmcgaGF0ZWQgaXQsIGFuZCB0aGV5IHN0aWxsIGhhdGUgaXQsIiBzYWlkIFN6Y3p1YmVsZWssIHRoZSBvZmZpY2lhbCBoaXN0b3JpYW4uCkJ1dCBmb3IgdGhlIHlvdW5nIHBlb3BsZSwgaXQncyBhIHBsYWNlIG9mIGVkdWNhdGlvbi4KRm9yIHRoZWlyIGdlbmVyYXRpb24sIHRoZXJlIGlzIG5vIGlsbCB3aWxsIHRvd2FyZCB0aGUgUGFsYWNlIG9mIEN1bHR1cmUuCg==, 'GPE')]
UXVhbGlmaWVkIENhbmRpZGF0ZSBUbyBQcm9tb3RlIERlbW9jcmFjeSBpbiBVemJla2lzdGFuCkhlbHAgV2FudGVkOiBRdWFsaWZpZWQgQ2FuZGlkYXRlIFRvIFByb21vdGUgRGVtb2NyYWN5IGluIFV6YmVraXN0YW4KQnkgV2FsdGVyIFBpbmN1cyBNb25kYXksIE5vdmVtYmVyIDUsIDIwMDc7IEExNwpJZiBVLlMuIGVmZm9ydHMgdG8gcHJvbW90ZSBkZW1vY3JhY3kgaW4gSXJhcSBhcmUgaGl0dGluZyBhIHNuYWcsIHRoZXJlJ3MgYWx3YXlzIFV6YmVraXN0YW4uClRoZSBVLlMuIEFnZW5jeSBmb3IgSW50ZXJuYXRpb25hbCBEZXZlbG9wbWVudCBoYXMgYmVlbiBsb29raW5nIGZvciBhICJEZXZlbG9wbWVudCBBc3Npc3RhbmNlIFNwZWNpYWxpc3QiIHdobywgZm9yIGEgc2FsYXJ5IG9mIHVwIHRvICQ4OCwwMDAgYSB5ZWFyLCB3b3VsZCBzcGVuZCB0d28geWVhcnMgaW4gdGhlIFV6YmVrIGNhcGl0YWwgb2YgVGFzaGtlbnQgbWFuYWdpbmcgaW5pdGlhdGl2ZXMgImluIHRoZSBhcmVhcyBvZiBQZWFjZSBhbmQgU2VjdXJpdHkgYW5kIEdvdmVybmluZyBKdXN0bHkgYW5kIERlbW9jcmF0aWNhbGx5LCIgYWNjb3JkaW5nIHRvIGEgVS5TLiBnb3Zlcm5tZW50IHBvc3RpbmcgbGFzdCBtb250aC4KSW4gdGhlIFN0YXRlIERlcGFydG1lbnQncyBtb3N0IHJlY2VudCBodW1hbiByaWdodHMgcmVwb3J0LCBVemJla2lzdGFuLCBhIG5hdGlvbiBvZiBhYm91dCAyNyBtaWxsaW9uIHBlb3BsZSwgd2FzIGRlc2NyaWJlZCBhcyAiYW4gYXV0aG9yaXRhcmlhbiBzdGF0ZSIgd2hlcmUgUHJlc2lkZW50IElzbGFtIEthcmltb3YgaGFzIGlnbm9yZWQgaGlzIGNvdW50cnkncyBjb25zdGl0dXRpb24gYW5kICJleGVyY2lzZWQgbmVhcmx5IGNvbXBsZXRlIGNvbnRyb2wgb3ZlciB0aGUgb3RoZXIgYnJhbmNoZXMiIG9mIGdvdmVybm1lbnQuClV6YmVraXN0YW4ncyBodW1hbiByaWdodHMgcmVjb3JkICJjb250aW51ZWQgdG8gd29yc2VuIGR1cmluZyB0aGUgeWVhciwiIHRoZSBTdGF0ZSBEZXBhcnRtZW50IHNhaWQgaW4gMjAwNi4KQ2l0aXplbnMgZGlkIG5vdCBoYXZlIHRoZSByaWdodCBpbiBwcmFjdGljZSB0byBjaGFuZ2UgdGhlaXIgZ292ZXJubWVudCB0aHJvdWdoIHBlYWNlZnVsIGFuZCBkZW1vY3JhdGljIG1lYW5zLgpTZWN1cml0eSBmb3JjZXMgcm91dGluZWx5IHRvcnR1cmVkLCBiZWF0LCBhbmQgb3RoZXJ3aXNlIG1pc3RyZWF0ZWQgZGV0YWluZWVzIHVuZGVyIGludGVycm9nYXRpb24gdG8gb2J0YWluIGNvbmZlc3Npb25zIG9yIGluY3JpbWluYXRpbmcgaW5mb3JtYXRpb24uCkluIHNldmVyYWwgY2FzZXMsIGF1dGhvcml0aWVzIHN1YmplY3RlZCBodW1hbi1yaWdodHMgYWN0aXZpc3RzIGFuZCBvdGhlciBjcml0aWNzIG9mIHRoZSByZWdpbWUgdG8gZm9yY2VkIHBzeWNoaWF0cmljIHRyZWF0bWVudC4KRGVzcGl0ZSB0aGF0IHJlY29yZCwgVVNBSUQgZGVzY3JpYmVzIFV6YmVraXN0YW4gYW5kIG5laWdoYm9yaW5nIENlbnRyYWwgQXNpYW4gcmVwdWJsaWNzIGFzICJvZiBjb25zaWRlcmFibGUgZ2VvcG9saXRpY2FsIGFuZCBzdHJhdGVnaWMgaW50ZXJlc3QgdG8gdGhlIFVuaXRlZCBTdGF0ZXMiIGJlY2F1c2Ugb2YgdGhlaXIgInN1YnN0YW50aWFsIG9pbCBhbmQgZ2FzIHJlc2VydmVzLiIKVGhlcmVmb3JlLCB0aGUgcGVyc29uIFVTQUlEIGlzIHNlZWtpbmcgdG8gcmVjcnVpdCAibXVzdCBiZSBhYmxlIHRvIHRoaW5rIGFuZCBvcGVyYXRlIHN0cmF0ZWdpY2FsbHkgYW5kIHByb2dyYW1tYXRpY2FsbHksIGFuYWx5emUgY29tcGxleCBzaXR1YXRpb25zIC4gLiAuIGFuZCBhc3Nlc3MgdGhlIGltcGFjdCBvZiBob3N0IGNvdW50cnkgcG9saWNpZXMgYW5kIHByYWN0aWNlcyBvbiBVU0FJRCBwcm9ncmFtLCIgYWNjb3JkaW5nIHRvIHRoZSBub3RpY2UuCkhlIG9yIHNoZSBtYXkgc3BlbmQgdXAgdG8gb25lLXRoaXJkIG9mIHRoZSB0aW1lIHRyYXZlbGluZyB0aHJvdWdob3V0IFV6YmVraXN0YW4sIG1vbml0b3JpbmcgZ3JhbnRzLCBjb2xsZWN0aW5nIGRhdGEsIGV2YWx1YXRpbmcgcHJvamVjdHMgYW5kIGNvbmR1Y3RpbmcgcG9saXRpY2FsIGFuYWx5c2VzLgpXaXRoaW4gVVNBSUQncyBjb3VudHJ5IG9mZmljZSBpbiBUYXNoa2VudCwgd2hpY2ggaGFzIGZvdXIgYWRkaXRpb25hbCBVLlMuIGVtcGxveWVlcyBoZWFkZWQgYnkgYSBjb3VudHJ5IHJlcHJlc2VudGF0aXZlLCB0aGUgbmV3IHNwZWNpYWxpc3Qgd291bGQgYmUgYSBtZW1iZXIgb2YgdGhlICJzZW5pb3IgbWFuYWdlbWVudCB0ZWFtLiIKVGhhdCBwZXJzb24gIm1heSBwcm92aWRlIHRlY2huaWNhbCBleHBlcnRpc2UgYW5kIG1hbmFnZW1lbnQgYXNzaXN0YW5jZSB0byB0aGUgQ291bnRyeSBSZXByZXNlbnRhdGl2ZSBhcyBuZWNlc3NhcnkuIgpJbiBmYWN0LCBoZSBvciBzaGUgIm1heSBzZXJ2ZSBhcyB0aGUgYWN0aW5nIENvdW50cnkgUmVwcmVzZW50YXRpdmUgd2hlbiB0aGUgQ291bnRyeSBSZXByZXNlbnRhdGl2ZSBpcyBhYnNlbnQuIgpJbiB0aGF0IGNhcGFjaXR5LCB0aGlzIHBlcnNvbiBjb3VsZCBzZXJ2ZSBvbiAiVS5TLiBFbWJhc3N5IGFuZCBvdGhlciBpbnRlcmFnZW5jeSBjb21taXR0ZWVzIiBhbmQgInJlcHJlc2VudCBVU0FJRCBpbiBkb25vciBhbmQgb3RoZXIgbWVldGluZ3MuIgpIZSBvciBzaGUgd291bGQgYWxzbyBiZSBleHBlY3RlZCB0byBjdWx0aXZhdGUgY29udGFjdHMgYW5kIGhhdmUgZGlhbG9ndWUgd2l0aCBsb2NhbCBjb3VudGVycGFydHMsIGluY2x1ZGluZyBub25nb3Zlcm5tZW50YWwgb3JnYW5pemF0aW9ucy4KSG93ZXZlciwgdGhhdCBwZXJzb24gIndpbGwgaGF2ZSBubyBpbmRlcGVuZGVudCBhdXRob3JpdHkgdG8gY29tbWl0IFUuUy4gR292ZXJubWVudCBtaXNzaW9uIGZ1bmRzIG9uIGJlaGFsZiBvZiBVU0FJRC4iCkFmdGVyIHRoZSAyMDAxIHRlcnJvcmlzdCBhdHRhY2tzLCB0aGUgVW5pdGVkIFN0YXRlcyBlc3RhYmxpc2hlZCBhIG1pbGl0YXJ5IGJhc2UgaW4gVXpiZWtpc3RhbiwgdXNpbmcgaXQgYXMgYSBodWIgZm9yIG1pbGl0YXJ5IGFuZCBodW1hbml0YXJpYW4gc2hpcG1lbnRzIHRvIEFmZ2hhbmlzdGFuLgpIb3dldmVyLCBqdXN0IGFzIG5lZ290aWF0aW9ucyB3ZXJlIHVuZGVyd2F5IGZvciBhIGxvbmctdGVybSBiYXNlIGFncmVlbWVudCBpbiAyMDA1LCBLYXJpbW92IHJldGFsaWF0ZWQgYWdhaW5zdCBXYXNoaW5ndG9uJ3Mgc3VwcG9ydCBvZiBhbiBpbnRlcm5hdGlvbmFsIGlucXVpcnkgaW50byBLYXJpbW92J3MgaGFuZGxpbmcgb2YgYW4gaW50ZXJuYWwgdXByaXNpbmcuClUuUy4gZm9yY2VzIHdlcmUgZ2l2ZW4gc2l4IG1vbnRocyB0byBsZWF2ZSwgYW5kIHVzZSBvZiB0aGUgYmFzZSBlbmRlZCBpbiBOb3ZlbWJlciAyMDA1LgpOZXZlcnRoZWxlc3MsIFVTQUlEJ3MgcHJvZ3JhbXMgaW4gVXpiZWtpc3RhbiB0aGlzIHllYXIgdG90YWxlZCAkMTMuMSBtaWxsaW9uLCB3aXRoIG1vcmUgdGhhbiA0MCBwZXJjZW50IG9mIHRoYXQgZGV2b3RlZCB0byBpbml0aWF0aXZlcyBvbiAiR292ZXJuaW5nIEp1c3RseSBhbmQgRGVtb2NyYXRpY2FsbHkuIgpFYXN0ZXJuIEtlbnR1Y2t5IFVuaXZlcnNpdHkgd2lsbCBhc3Npc3Qgd2l0aCBlZmZvcnRzIHRvIGltcHJvdmUgdGhlIHByb3RlY3Rpb24gb2YgaHVtYW4gcmlnaHRzLCB3aGlsZSB0aGUgV2FzaGluZ3Rvbi1iYXNlZCBOYXRpb25hbCBEZW1vY3JhdGljIEluc3RpdHV0ZSB3aWxsIHdvcmsgb24gcHJvZ3JhbXMgZGV2b3RlZCB0byBzdHJlbmd0aGVuaW5nIGNpdmlsIHNvY2lldHkuCldpdGggYSBwcmVzaWRlbnRpYWwgZWxlY3Rpb24gc2NoZWR1bGVkIGluIFV6YmVraXN0YW4gbmV4dCBtb250aCwgc3VjaCBlZmZvcnRzIGNvdWxkIGZhY2UgYW4gaW50ZXJlc3RpbmcgdGVzdDogSW4gdGhlIGNvdW50cnkncyBwcmV2aW91cyBwcmVzaWRlbnRpYWwgdm90ZSwgaW4gMjAwMCwgS2FyaW1vdiB3b24gbmVhcmx5IDkyIHBlcmNlbnQgb2YgdGhlIHZvdGUgLS0gYW4gZWxlY3Rpb24gdGhhdCBIdW1hbiBSaWdodHMgV2F0Y2ggcmVmZXJyZWQgdG8gYXMgImVtYmFycmFzc2luZ2x5IGlsbGVnaXRpbWF0ZS4iCkdpdmVuIHRoZSB0YXNrcyBhbmQgcmVzcG9uc2liaWxpdGllcywgdGhlIHBlcnNvbiBiZWluZyBzb3VnaHQgbXVzdCBwb3NzZXNzIG9yIGJlIGFibGUgdG8gb2J0YWluIGEgc2VjcmV0IHNlY3VyaXR5IGNsZWFyYW5jZSwgYmUgZmx1ZW50IGluIEVuZ2xpc2gsIGhhdmUgYSAiY29tcHJlaGVuc2l2ZSB3b3JraW5nIGtub3dsZWRnZSBvZiBzb2NpYWwgYW5kIHBvbGl0aWNhbCBpc3N1ZXMgaW4gQ2VudHJhbCBBc2lhIiBhbmQgYSAid29ya2luZyBrbm93bGVkZ2Ugb2YgUnVzc2lhbiBhbmQvb3IgVXpiZWsuIgpTZWxlY3Rpb24gb2YgdGhlIGx1Y2t5IHdpbm5lciBpcyBleHBlY3RlZCBubyBsYXRlciB0aGFuIE5vdi4gMjAsIHdpdGggdGhlIGluZGl2aWR1YWwgZXhwZWN0ZWQgdG8gcmVhY2ggVGFzaGtlbnQgYnkgSmFudWFyeS4KTmF0aW9uYWwgc2VjdXJpdHkgYW5kIGludGVsbGlnZW5jZSByZXBvcnRlciBXYWx0ZXIgUGluY3VzIHBvcmVzIG92ZXIgdGhlIHNwZWVjaGVzLCByZXBvcnRzLCB0cmFuc2NyaXB0cyBhbmQgb3RoZXIgZG9jdW1lbnRzIHRoYXQgZmxvb2QgV2FzaGluZ3RvbiBhbmQgZXZlcnkgd2VlayB1bmNvdmVycyB0aGUgZmluZSBwcmludCB0aGF0IHJhcmVseSBtYWtlcyBoZWFkbGluZXMgLS0gYnV0IHNob3VsZC4KSWYgeW91IGhhdmUgYW55IGl0ZW1zIHRoYXQgZml0IHRoZSBiaWxsLCBwbGVhc2Ugc2VuZCB0aGVtIHRvZmluZXByaW50QHdhc2hwb3N0LmNvbS4K
[(UXVhbGlmaWVkIENhbmRpZGF0ZSBUbyBQcm9tb3RlIERlbW9jcmFjeSBpbiBVemJla2lzdGFuCkhlbHAgV2FudGVkOiBRdWFsaWZpZWQgQ2FuZGlkYXRlIFRvIFByb21vdGUgRGVtb2NyYWN5IGluIFV6YmVraXN0YW4KQnkgV2FsdGVyIFBpbmN1cyBNb25kYXksIE5vdmVtYmVyIDUsIDIwMDc7IEExNwpJZiBVLlMuIGVmZm9ydHMgdG8gcHJvbW90ZSBkZW1vY3JhY3kgaW4gSXJhcSBhcmUgaGl0dGluZyBhIHNuYWcsIHRoZXJlJ3MgYWx3YXlzIFV6YmVraXN0YW4uClRoZSBVLlMuIEFnZW5jeSBmb3IgSW50ZXJuYXRpb25hbCBEZXZlbG9wbWVudCBoYXMgYmVlbiBsb29raW5nIGZvciBhICJEZXZlbG9wbWVudCBBc3Npc3RhbmNlIFNwZWNpYWxpc3QiIHdobywgZm9yIGEgc2FsYXJ5IG9mIHVwIHRvICQ4OCwwMDAgYSB5ZWFyLCB3b3VsZCBzcGVuZCB0d28geWVhcnMgaW4gdGhlIFV6YmVrIGNhcGl0YWwgb2YgVGFzaGtlbnQgbWFuYWdpbmcgaW5pdGlhdGl2ZXMgImluIHRoZSBhcmVhcyBvZiBQZWFjZSBhbmQgU2VjdXJpdHkgYW5kIEdvdmVybmluZyBKdXN0bHkgYW5kIERlbW9jcmF0aWNhbGx5LCIgYWNjb3JkaW5nIHRvIGEgVS5TLiBnb3Zlcm5tZW50IHBvc3RpbmcgbGFzdCBtb250aC4KSW4gdGhlIFN0YXRlIERlcGFydG1lbnQncyBtb3N0IHJlY2VudCBodW1hbiByaWdodHMgcmVwb3J0LCBVemJla2lzdGFuLCBhIG5hdGlvbiBvZiBhYm91dCAyNyBtaWxsaW9uIHBlb3BsZSwgd2FzIGRlc2NyaWJlZCBhcyAiYW4gYXV0aG9yaXRhcmlhbiBzdGF0ZSIgd2hlcmUgUHJlc2lkZW50IElzbGFtIEthcmltb3YgaGFzIGlnbm9yZWQgaGlzIGNvdW50cnkncyBjb25zdGl0dXRpb24gYW5kICJleGVyY2lzZWQgbmVhcmx5IGNvbXBsZXRlIGNvbnRyb2wgb3ZlciB0aGUgb3RoZXIgYnJhbmNoZXMiIG9mIGdvdmVybm1lbnQuClV6YmVraXN0YW4ncyBodW1hbiByaWdodHMgcmVjb3JkICJjb250aW51ZWQgdG8gd29yc2VuIGR1cmluZyB0aGUgeWVhciwiIHRoZSBTdGF0ZSBEZXBhcnRtZW50IHNhaWQgaW4gMjAwNi4KQ2l0aXplbnMgZGlkIG5vdCBoYXZlIHRoZSByaWdodCBpbiBwcmFjdGljZSB0byBjaGFuZ2UgdGhlaXIgZ292ZXJubWVudCB0aHJvdWdoIHBlYWNlZnVsIGFuZCBkZW1vY3JhdGljIG1lYW5zLgpTZWN1cml0eSBmb3JjZXMgcm91dGluZWx5IHRvcnR1cmVkLCBiZWF0LCBhbmQgb3RoZXJ3aXNlIG1pc3RyZWF0ZWQgZGV0YWluZWVzIHVuZGVyIGludGVycm9nYXRpb24gdG8gb2J0YWluIGNvbmZlc3Npb25zIG9yIGluY3JpbWluYXRpbmcgaW5mb3JtYXRpb24uCkluIHNldmVyYWwgY2FzZXMsIGF1dGhvcml0aWVzIHN1YmplY3RlZCBodW1hbi1yaWdodHMgYWN0aXZpc3RzIGFuZCBvdGhlciBjcml0aWNzIG9mIHRoZSByZWdpbWUgdG8gZm9yY2VkIHBzeWNoaWF0cmljIHRyZWF0bWVudC4KRGVzcGl0ZSB0aGF0IHJlY29yZCwgVVNBSUQgZGVzY3JpYmVzIFV6YmVraXN0YW4gYW5kIG5laWdoYm9yaW5nIENlbnRyYWwgQXNpYW4gcmVwdWJsaWNzIGFzICJvZiBjb25zaWRlcmFibGUgZ2VvcG9saXRpY2FsIGFuZCBzdHJhdGVnaWMgaW50ZXJlc3QgdG8gdGhlIFVuaXRlZCBTdGF0ZXMiIGJlY2F1c2Ugb2YgdGhlaXIgInN1YnN0YW50aWFsIG9pbCBhbmQgZ2FzIHJlc2VydmVzLiIKVGhlcmVmb3JlLCB0aGUgcGVyc29uIFVTQUlEIGlzIHNlZWtpbmcgdG8gcmVjcnVpdCAibXVzdCBiZSBhYmxlIHRvIHRoaW5rIGFuZCBvcGVyYXRlIHN0cmF0ZWdpY2FsbHkgYW5kIHByb2dyYW1tYXRpY2FsbHksIGFuYWx5emUgY29tcGxleCBzaXR1YXRpb25zIC4gLiAuIGFuZCBhc3Nlc3MgdGhlIGltcGFjdCBvZiBob3N0IGNvdW50cnkgcG9saWNpZXMgYW5kIHByYWN0aWNlcyBvbiBVU0FJRCBwcm9ncmFtLCIgYWNjb3JkaW5nIHRvIHRoZSBub3RpY2UuCkhlIG9yIHNoZSBtYXkgc3BlbmQgdXAgdG8gb25lLXRoaXJkIG9mIHRoZSB0aW1lIHRyYXZlbGluZyB0aHJvdWdob3V0IFV6YmVraXN0YW4sIG1vbml0b3JpbmcgZ3JhbnRzLCBjb2xsZWN0aW5nIGRhdGEsIGV2YWx1YXRpbmcgcHJvamVjdHMgYW5kIGNvbmR1Y3RpbmcgcG9saXRpY2FsIGFuYWx5c2VzLgpXaXRoaW4gVVNBSUQncyBjb3VudHJ5IG9mZmljZSBpbiBUYXNoa2VudCwgd2hpY2ggaGFzIGZvdXIgYWRkaXRpb25hbCBVLlMuIGVtcGxveWVlcyBoZWFkZWQgYnkgYSBjb3VudHJ5IHJlcHJlc2VudGF0aXZlLCB0aGUgbmV3IHNwZWNpYWxpc3Qgd291bGQgYmUgYSBtZW1iZXIgb2YgdGhlICJzZW5pb3IgbWFuYWdlbWVudCB0ZWFtLiIKVGhhdCBwZXJzb24gIm1heSBwcm92aWRlIHRlY2huaWNhbCBleHBlcnRpc2UgYW5kIG1hbmFnZW1lbnQgYXNzaXN0YW5jZSB0byB0aGUgQ291bnRyeSBSZXByZXNlbnRhdGl2ZSBhcyBuZWNlc3NhcnkuIgpJbiBmYWN0LCBoZSBvciBzaGUgIm1heSBzZXJ2ZSBhcyB0aGUgYWN0aW5nIENvdW50cnkgUmVwcmVzZW50YXRpdmUgd2hlbiB0aGUgQ291bnRyeSBSZXByZXNlbnRhdGl2ZSBpcyBhYnNlbnQuIgpJbiB0aGF0IGNhcGFjaXR5LCB0aGlzIHBlcnNvbiBjb3VsZCBzZXJ2ZSBvbiAiVS5TLiBFbWJhc3N5IGFuZCBvdGhlciBpbnRlcmFnZW5jeSBjb21taXR0ZWVzIiBhbmQgInJlcHJlc2VudCBVU0FJRCBpbiBkb25vciBhbmQgb3RoZXIgbWVldGluZ3MuIgpIZSBvciBzaGUgd291bGQgYWxzbyBiZSBleHBlY3RlZCB0byBjdWx0aXZhdGUgY29udGFjdHMgYW5kIGhhdmUgZGlhbG9ndWUgd2l0aCBsb2NhbCBjb3VudGVycGFydHMsIGluY2x1ZGluZyBub25nb3Zlcm5tZW50YWwgb3JnYW5pemF0aW9ucy4KSG93ZXZlciwgdGhhdCBwZXJzb24gIndpbGwgaGF2ZSBubyBpbmRlcGVuZGVudCBhdXRob3JpdHkgdG8gY29tbWl0IFUuUy4gR292ZXJubWVudCBtaXNzaW9uIGZ1bmRzIG9uIGJlaGFsZiBvZiBVU0FJRC4iCkFmdGVyIHRoZSAyMDAxIHRlcnJvcmlzdCBhdHRhY2tzLCB0aGUgVW5pdGVkIFN0YXRlcyBlc3RhYmxpc2hlZCBhIG1pbGl0YXJ5IGJhc2UgaW4gVXpiZWtpc3RhbiwgdXNpbmcgaXQgYXMgYSBodWIgZm9yIG1pbGl0YXJ5IGFuZCBodW1hbml0YXJpYW4gc2hpcG1lbnRzIHRvIEFmZ2hhbmlzdGFuLgpIb3dldmVyLCBqdXN0IGFzIG5lZ290aWF0aW9ucyB3ZXJlIHVuZGVyd2F5IGZvciBhIGxvbmctdGVybSBiYXNlIGFncmVlbWVudCBpbiAyMDA1LCBLYXJpbW92IHJldGFsaWF0ZWQgYWdhaW5zdCBXYXNoaW5ndG9uJ3Mgc3VwcG9ydCBvZiBhbiBpbnRlcm5hdGlvbmFsIGlucXVpcnkgaW50byBLYXJpbW92J3MgaGFuZGxpbmcgb2YgYW4gaW50ZXJuYWwgdXByaXNpbmcuClUuUy4gZm9yY2VzIHdlcmUgZ2l2ZW4gc2l4IG1vbnRocyB0byBsZWF2ZSwgYW5kIHVzZSBvZiB0aGUgYmFzZSBlbmRlZCBpbiBOb3ZlbWJlciAyMDA1LgpOZXZlcnRoZWxlc3MsIFVTQUlEJ3MgcHJvZ3JhbXMgaW4gVXpiZWtpc3RhbiB0aGlzIHllYXIgdG90YWxlZCAkMTMuMSBtaWxsaW9uLCB3aXRoIG1vcmUgdGhhbiA0MCBwZXJjZW50IG9mIHRoYXQgZGV2b3RlZCB0byBpbml0aWF0aXZlcyBvbiAiR292ZXJuaW5nIEp1c3RseSBhbmQgRGVtb2NyYXRpY2FsbHkuIgpFYXN0ZXJuIEtlbnR1Y2t5IFVuaXZlcnNpdHkgd2lsbCBhc3Npc3Qgd2l0aCBlZmZvcnRzIHRvIGltcHJvdmUgdGhlIHByb3RlY3Rpb24gb2YgaHVtYW4gcmlnaHRzLCB3aGlsZSB0aGUgV2FzaGluZ3Rvbi1iYXNlZCBOYXRpb25hbCBEZW1vY3JhdGljIEluc3RpdHV0ZSB3aWxsIHdvcmsgb24gcHJvZ3JhbXMgZGV2b3RlZCB0byBzdHJlbmd0aGVuaW5nIGNpdmlsIHNvY2lldHkuCldpdGggYSBwcmVzaWRlbnRpYWwgZWxlY3Rpb24gc2NoZWR1bGVkIGluIFV6YmVraXN0YW4gbmV4dCBtb250aCwgc3VjaCBlZmZvcnRzIGNvdWxkIGZhY2UgYW4gaW50ZXJlc3RpbmcgdGVzdDogSW4gdGhlIGNvdW50cnkncyBwcmV2aW91cyBwcmVzaWRlbnRpYWwgdm90ZSwgaW4gMjAwMCwgS2FyaW1vdiB3b24gbmVhcmx5IDkyIHBlcmNlbnQgb2YgdGhlIHZvdGUgLS0gYW4gZWxlY3Rpb24gdGhhdCBIdW1hbiBSaWdodHMgV2F0Y2ggcmVmZXJyZWQgdG8gYXMgImVtYmFycmFzc2luZ2x5IGlsbGVnaXRpbWF0ZS4iCkdpdmVuIHRoZSB0YXNrcyBhbmQgcmVzcG9uc2liaWxpdGllcywgdGhlIHBlcnNvbiBiZWluZyBzb3VnaHQgbXVzdCBwb3NzZXNzIG9yIGJlIGFibGUgdG8gb2J0YWluIGEgc2VjcmV0IHNlY3VyaXR5IGNsZWFyYW5jZSwgYmUgZmx1ZW50IGluIEVuZ2xpc2gsIGhhdmUgYSAiY29tcHJlaGVuc2l2ZSB3b3JraW5nIGtub3dsZWRnZSBvZiBzb2NpYWwgYW5kIHBvbGl0aWNhbCBpc3N1ZXMgaW4gQ2VudHJhbCBBc2lhIiBhbmQgYSAid29ya2luZyBrbm93bGVkZ2Ugb2YgUnVzc2lhbiBhbmQvb3IgVXpiZWsuIgpTZWxlY3Rpb24gb2YgdGhlIGx1Y2t5IHdpbm5lciBpcyBleHBlY3RlZCBubyBsYXRlciB0aGFuIE5vdi4gMjAsIHdpdGggdGhlIGluZGl2aWR1YWwgZXhwZWN0ZWQgdG8gcmVhY2ggVGFzaGtlbnQgYnkgSmFudWFyeS4KTmF0aW9uYWwgc2VjdXJpdHkgYW5kIGludGVsbGlnZW5jZSByZXBvcnRlciBXYWx0ZXIgUGluY3VzIHBvcmVzIG92ZXIgdGhlIHNwZWVjaGVzLCByZXBvcnRzLCB0cmFuc2NyaXB0cyBhbmQgb3RoZXIgZG9jdW1lbnRzIHRoYXQgZmxvb2QgV2FzaGluZ3RvbiBhbmQgZXZlcnkgd2VlayB1bmNvdmVycyB0aGUgZmluZSBwcmludCB0aGF0IHJhcmVseSBtYWtlcyBoZWFkbGluZXMgLS0gYnV0IHNob3VsZC4KSWYgeW91IGhhdmUgYW55IGl0ZW1zIHRoYXQgZml0IHRoZSBiaWxsLCBwbGVhc2Ugc2VuZCB0aGVtIHRvZmluZXByaW50QHdhc2hwb3N0LmNvbS4K, 'ORG')]

[(, 'GPE')]
U2x1Z2dpc2ggUmVwb3J0aW5nIG9mIFNvbWUgVm90ZSBUYWxsaWVzIEJsYW1lZCBvbiBOZXcgV2lyZWxlc3MgRXF1aXBtZW50IEJhbgpCeSBKZXJyeSBNYXJrb24gV2FzaGluZ3RvbiBQb3N0IFN0YWZmIFdyaXRlciBXZWRuZXNkYXksIE5vdmVtYmVyIDcsIDIwMDc7IEIwOQpBIG5ldyBzdGF0ZSBsYXcgc3BvbnNvcmVkIGJ5IHR3byBOb3J0aGVybiBWaXJnaW5pYSBsZWdpc2xhdG9ycyB0aGF0IHByZXZlbnRzIGVsZWN0aW9uIGJvYXJkcyBmcm9tIHVzaW5nIHdpcmVsZXNzIGVxdWlwbWVudCBjYXVzZWQgZGVsYXlzIGluIHRhbGx5aW5nIGVsZWN0aW9uIHJlc3VsdHMgYWZ0ZXIgcG9sbHMgY2xvc2VkIGluIEZhaXJmYXggQ291bnR5IGxhc3QgbmlnaHQsIGVsZWN0aW9uIG9mZmljaWFscyBzYWlkLgpJbiBwYXN0IHllYXJzLCB2b3RlcyB3ZXJlIHRhbGxpZWQgYXQgcHJlY2luY3RzIGFuZCBzZW50IGJ5IGNvbXB1dGVyIG1vZGVtIHRvIGVsZWN0b3JhbCBib2FyZHMsIHdoaWNoIG1lYW50IHRoZXkgY291bGQgYmUgcmVhZCBpbnN0YW50bHkgYW5kIHBvc3RlZCBvbiB0aGUgV2ViLCBzYWlkIE1hZ2dpIEx1Y2EsIHNlY3JldGFyeSBvZiB0aGUgRmFpcmZheCBDb3VudHkgRWxlY3RvcmFsIEJvYXJkLgpMYXN0IG5pZ2h0LCBzaGUgc2FpZCwgdm90ZSB0b3RhbHMgaGFkIHRvIGJlIGNhbGxlZCBpbiBmcm9tIHByZWNpbmN0cyBhbmQgdGhlbiBoYW5kLWVudGVyZWQgaW50byBjb21wdXRlcnMgYmVmb3JlIHRoZXkgd2VyZSByZWxlYXNlZCB0byB0aGUgcHVibGljLgoiSXQncyBhIG1ham9yIGNoYW5nZSBmcm9tIHdoYXQgd2UndmUgYmVlbiBhYmxlIHRvIGRvIGluIHRoZSBwYXN0LCIgTHVjYSBzYWlkLgpJdCdzIGxpa2UgdGhlIGdvb2Qgb2xkIGRheXMgd2hlbiB3ZSBoYWQgbGV2ZXIgbWFjaGluZXMuCkl0IGp1c3QgdGFrZXMgYSBsb3QgbG9uZ2VyLgpSZXN1bHRzIHdlcmUgcGFydGljdWxhcmx5IHNsb3cgaW4gRmFpcmZheCwgTG91ZG91biBhbmQgUHJpbmNlIFdpbGxpYW0gY291bnRpZXMsIHRocmVlIG9mIHRoZSBzdGF0ZSdzIGxhcmdlc3QganVyaXNkaWN0aW9ucy4KRGlhbmEgRHV0dG9uLCBhZG1pbmlzdHJhdGl2ZSBlbGVjdGlvbnMgbWFuYWdlciBmb3IgUHJpbmNlIFdpbGxpYW0gQ291bnR5LCBzYWlkIHRoZSBjb3VudHkgZGlkIG5vdCB1c2Ugd2lyZWxlc3MgZXF1aXBtZW50IHRvIHJlcG9ydCByZXN1bHRzIGV2ZW4gYmVmb3JlIHRoZSBuZXcgbGF3IHdhcyBwYXNzZWQuClNoZSB3YXMgdW5jZXJ0YWluIHdoYXQgY2F1c2VkIGxhc3QgbmlnaHQncyBkZWxheS4KIlRoZXkgaGF2ZSB0byBmaW5pc2ggdGhlaXIgcGFwZXJ3b3JrIGFuZCBjaGVjayB0aGVpciByZXN1bHRzIGJlZm9yZSB0aGV5IGNhbGwgdGhlIG51bWJlcnMgaW4sIiBzaGUgc2FpZC4KTWF5YmUgdGhleSdyZSBkb2luZyBpdCBtZXRob2RpY2FsbHkgYW5kIGNhcmVmdWxseS4KTG91ZG91biBDb3VudHkgZWxlY3Rpb24gb2ZmaWNpYWxzIGNvdWxkIG5vdCBiZSByZWFjaGVkLgpJbiBBcmxpbmd0b24gQ291bnR5LCBlbGVjdGlvbiB3b3JrZXJzIHR5cGVkIHJlc3VsdHMgaW50byB0aGUgY29tcHV0ZXIganVzdCBhcyB0aGV5IGhhdmUgYWx3YXlzIGRvbmUsIGFuZCB0aGVyZSB3ZXJlIG5vIHByb2JsZW1zLCBSZWdpc3RyYXIgTGluZGEgTGluZGJlcmcgc2FpZC4KIldlIGRlY2lkZWQgdGhlIG9sZC1mYXNoaW9uZWQgd2F5IHdhcyBlZmZpY2llbnQgZm9yIHVzLCBhbmQgaXQgd29ya2VkLCIgc2hlIHNhaWQuClRoZSBiaWxsIHRoYXQgY3JlYXRlZCB0aGUgbmV3IHN5c3RlbSB3YXMgcGFzc2VkIGJ5IHRoZSBWaXJnaW5pYSBHZW5lcmFsIEFzc2VtYmx5IHRoaXMgeWVhciBhbmQgdG9vayBlZmZlY3QgaW4gSnVseS4KSXQgcHJvaGliaXRlZCB0aGUgdXNlIG9mIGFueSB3aXJlbGVzcyBjb21tdW5pY2F0aW9uICJvbiBlbGVjdGlvbiBkYXksIHdoaWxlIHRoZSBwb2xscyBhcmUgb3BlbiwgYmV0d2VlbiBvciBhbW9uZyB2b3RpbmcgbWFjaGluZXMgd2l0aGluIHRoZSBwb2xsaW5nIHBsYWNlIG9yIGJldHdlZW4gYW55IHZvdGluZyBtYWNoaW5lIHdpdGhpbiB0aGUgcG9sbGluZyBwbGFjZSBhbmQgYW55IGVxdWlwbWVudCBvdXRzaWRlIHRoZSBwb2xsaW5nIHBsYWNlLCIgYWNjb3JkaW5nIHRvIGEgY29weSBvZiB0aGUgbGVnaXNsYXRpb24uClRoZSBiaWxsIHdhcyBzcG9uc29yZWQgYnkgRGVsLgpUaW1vdGh5IEQuIEh1Z28gKFItRmFpcmZheCkgYW5kIFNlbi4gSmVhbm5lbWFyaWUgRGV2b2xpdGVzIERhdmlzIChSLUZhaXJmYXgpLCB3aG8gcHVzaGVkIGZvciBjcmVhdGluZyBtb3JlIHBhcGVyIHJlY29yZHMgb2Ygdm90ZXMgY2FzdCB0byBlbnN1cmUgdm90aW5nIGFjY3VyYWN5Lgo=
[]
TmV3IEFkcyBCb29zdCBJcmFxIFdhciBmb3IgQnVzaApBIHNvcnQgb2Ygc2hhZG93IFdoaXRlIEhvdXNlIGNvbW11bmljYXRpb25zIHNob3AgaGFzIGVtZXJnZWQgdG8gaGVscCB0aGUgYmVsZWFndWVyZWQgcHJlc2lkZW50IHNlbGwgaGlzIHVucG9wdWxhciB3YXIgdG8gdGhlIEFtZXJpY2FuIHBlb3BsZS4KRnJlZWRvbSdzIFdhdGNoIHdhcyBmb3JtZWQgYnkgZm9ybWVyIFdoaXRlIEhvdXNlIGFuZCBCdXNoIGFkbWluaXN0cmF0aW9uIG9mZmljaWFscyBhbmQgZnVuZGVkIGJ5IFJlcHVibGljYW4gYmlnLW1vbmV5IGRvbm9ycy4KVG9kYXkgaXQgYmVnYW4gYWlyaW5nICQxNSBtaWxsaW9uIHdvcnRoIG9mIGFkcyAtLSBmZWF0dXJpbmcgdmV0ZXJhbnMgYW5kIHRoZWlyIGZhbWlsaWVzIC0tIGFpbWVkIGF0IGluZmx1ZW5jaW5nIHdhdmVyaW5nIG1lbWJlcnMgb2YgQ29uZ3Jlc3MuCllvdSBjYW4gc2VlIHRoZSBhZHMgSEVSRQoiSSBrbm93IHdoYXQgSSBsb3N0LCIgc2F5cyBvbmUgb2YgdGhvc2UgaW4gYSBUViBhZCwgdmV0ZXJhbiBKb2huIEtyaWVzZWwsIHdobyBsb3N0IGJvdGggbGVncyBpbiBhIGJsYXN0IG5lYXIgRmFsbHVqYWggbGFzdCBEZWNlbWJlci4KSSBhbHNvIGtub3cgaWYgd2UgcHVsbCBvdXQgbm93LCBldmVyeXRoaW5nIEkndmUgZ2l2ZW4gYW5kIHNhY3JpZmljZWQgd2lsbCBtZWFuIG5vdGhpbmcuCkluIGEgc2VwYXJhdGUgYWQsIHZldGVyYW4gQW5kcmV3IFJvYmluc29uLCB3aG8gbG9zdCB0aGUgdXNlIG9mIGJvdGggb2YgaGlzIGxlZ3MgYWZ0ZXIgYmVpbmcgd291bmRlZCBieSBhbiBJRUQgaW4gSnVuZSAyMDA2LCBzYXlzLCAiSSB3b3VsZCBnbyBiYWNrIHRvIElyYXEgaWYgSSBjb3VsZCwgaXQncyB0aGF0IGltcG9ydGFudCBiZWNhdXNlIGlmIElyYXEgaXNuJ3Qgc3RhYmxlIGl0IHdpbGwgYmUgYSBicmVlZGluZyBncm91bmQgZm9yIHRlcnJvcmlzdHMuIgpUaGUgYWRzIGFsc28gbGluayB0aGUgd2FyIHdpdGggU2VwdC4KMTEsIGRlc3BpdGUgbm8gcmVsaWFibGUgZXZpZGVuY2UgSXJhcSBwbGF5ZWQgYW55IHJvbGUgaW4gdGhvc2UgYXR0YWNrcy4KSW4gdGhlIGFkLCBLcmllc2VsIHNheXMsICJUaGV5IGF0dGFja2VkIHVzLCBhbmQgdGhleSB3aWxsIGFnYWluLgpUaGV5IHdvbid0IHN0b3AgaW4gSXJhcS4KTGF1cmEgWW91bmdibG9vZCBpcyBmZWF0dXJlZCBpbiBhbm90aGVyIGFkIC0tIHNoZSBsb3N0IGhlciB1bmNsZSBIZW5yeSwgYSBOZXcgWW9yayBDaXR5IGZpcmVtYW4sIG9uIFNlcHQuCjExLCBhbmQgaGVyIGh1c2JhbmQsIFRyYXZpcywgaW4gSXJhcS4KIkNvbmdyZXNzIGRpZCB0aGUgcmlnaHQgdGhpbmcgdm90aW5nIHRvIGRlZmVhdCB0ZXJyb3Jpc20gaW4gSXJhcSBhbmQgQWZnaGFuaXN0YW4sIiBzaGUgc2F5cyBpbiBhbiBhZC4KU3dpdGNoaW5nIHRoZWlyIHZvdGVzIG5vdywgZm9yIHBvbGl0aWNhbCByZWFzb25zLCBpdCB3aWxsIG1lYW4gbW9yZSBhdHRhY2tzIGluIEFtZXJpY2EuCkJyZWFraW5nIGEgJ0NvbnNlcnZhdGl2ZScgU2lsZW5jZQpGb3JtZXIgV2hpdGUgSG91c2Ugc3Bva2VzbWFuIEFyaSBGbGVpc2NoZXIsIG9uZSBvZiB0aGUgZ3JvdXAncyBib2FyZCBvZiBkaXJlY3RvcnMsIHNhaWQgdGhlIGdyb3VwIHdhcyBmb3JtZWQgdG8gcHJvdmlkZSBhIGNvdW50ZXItYXJndW1lbnQgdG8gdGhlIHN1Y2Nlc3NmdWwgYW50aS13YXIgdm9pY2VzLgoiVGhlcmUncyBiZWVuIGEgdGhyZWUteWVhciBzaWxlbmNlIGZyb20gY29uc2VydmF0aXZlcyBhbmQgb3RoZXJzIHdobyBiZWxpZXZlIGluIHBlYWNlIHRocm91Z2ggc3RyZW5ndGgsIiBGbGVpc2NoZXIgdG9sZCBBQkMgTmV3cy4KIlRoZSBjYXZhbHJ5IGlzIGNvbWluZywgd2UncmUgZ29pbmcgdG8gaGVscCB0byBnZXQgdGhhdCBtZXNzYWdlIG91dCwiIGhlIHNhaWQuClRoZSBuZXcgcHJvLXN1cmdlIGFkcyB3aWxsIGpvaW4gYSBiYXJyYWdlIG9mIG90aGVyIFRWIGFkcyBhYm91dCBJcmFxLCBtYW55IGFnYWluc3QgdGhlIHdhciwgYWxsIGFpbWVkIGF0IHNwZWNpZmljIG1lbWJlcnMgb2YgQ29uZ3Jlc3Mgd2hvIGFyZSBzdGlsbCBkZWNpZGluZyB3aGV0aGVyIHRvIGNvbnRpbnVlIHN1cHBvcnRpbmcgdGhlIHByZXNpZGVudC4KQXBwcm94aW1hdGVseSAyMCBjb25ncmVzc2lvbmFsIGRpc3RyaWN0cyBhcmUgdGFyZ2V0ZWQuCk9uZSBhbmFseXNpcyBvZiB0aGUgYWQgY2FtcGFpZ24gYnkgdGhlIGxpYmVyYWwgZ3JvdXAgTW92ZW9uLm9yZyBzZWVtcyB0byBpbmRpY2F0ZSBhIG1ham9yaXR5IG9mIHRoZSBhZHMgYXJlIHRhcmdldGVkIGF0IFJlcHVibGljYW5zLCB0aG91Z2ggQnJhZCBCbGFrZW1hbiwgcHJlc2lkZW50IG9mIEZyZWVkb20ncyBXYXRjaCwgZGlzcHV0ZXMgdGhhdCBhbmF5bHNpcy4KRWl0aGVyIHdheSwgTW92ZW9uLm9yZydzIHByZXNpZGVudCwgVG9tIE1hdHp6aWUsIHByZWRpY3RzIHRoZXNlIGFkcyBhbmQgdGhlaXIgaW1hZ2VzIG9mIHdpZG93cyBhbmQgd291bmRlZCB2ZXRlcmFucyB3aWxsIGJhY2tmaXJlIGJlY2F1c2UgdGhleSBhcmUgInJlbWluZGluZyB0aGUgcHVibGljIG9mIHRoZSBjb3N0IG9mIHRoZSB3YXIgaW4gSXJhcSIgYW5kIG5vdCB0aGUganVzdGlmaWNhdGlvbiBmb3IgdGhlIG1pbGl0YXJ5IHByZXNlbmNlLgoiVGhhdCdzIGJhZCBuZXdzIGZvciBSZXB1YmxpY2FucyB3aG8gYXJlIHN0aWxsIHN0aWNraW5nIHdpdGggQnVzaCBvbiB0aGUgd2FyLCIgTWF0enppZSBzYWlkLgpTZW4uIExhbWFyIEFsZXhhbmRlciwgUi1UZW5uLiwgd2hvIGp1c3QgcmV0dXJuZWQgZnJvbSBhIHRyaXAgdG8gSXJhcSwgaXMgb25lIG9mIHRob3NlIGJlaW5nIHRhcmdldGVkLCBidXQgZGlkIG5vdCBzZWVtIGNvbmNlcm5lZC4KIkl0J3MgcGVyZmVjdGx5IGFwcHJvcHJpYXRlIGZvciBNb3Zlb24ub3JnIHRvIHJ1biBhZHMgb24gb25lIHNpZGUgYW5kIGEgUmVwdWJsaWNhbiBncm91cCB0byBydW4gYWRzIG9uIHRoZSBvdGhlciwgYnV0IHRoYXQncyBub3Qgb3VyIGpvYiwiIGhlIHNhaWQuCk91ciBqb2IgaXMgdG8gc3RvcCBoYXZpbmcgcGFydGlzYW4gdm90ZXMgb24gSXJhcSBhbmQgc3RhcnQgc3BlYWtpbmcgd2l0aCBhIHNpbmdsZSB2b2ljZS4KQWxleGFuZGVyIHNhaWQgYWxsIHRoZSBwYXJ0aXNhbnNoaXAgYmFjayBoZXJlIGluIHRoZSBVbml0ZWQgU3RhdGVzIGlzIHByZXZlbnRpbmcgYW55IHJlYWwgc29sdXRpb24gb3ZlcnNlYXMuCiJJZiBhbGwgd2UgZG8gaXMgc2hvdXQgYXQgZWFjaCBvdGhlciB3ZSdyZSBubyBiZXR0ZXIgdGhhbiB0aGUgSXJhcWkgcGFybGlhbWVudCwiIGhlIHNhaWQuCkJ1dCB0aGUgc2hvdXRpbmcgaXMgb25seSBnZXR0aW5nIGxvdWRlci4KWi4gQnlyb24gV29sZiBhbmQgTWVhZ2hhbiBNLiBTdGFrZWxpbiBjb250cmlidXRlZCB0byB0aGlzIHJlcG9ydC4K
[(TmV3IEFkcyBCb29zdCBJcmFxIFdhciBmb3IgQnVzaApBIHNvcnQgb2Ygc2hhZG93IFdoaXRlIEhvdXNlIGNvbW11bmljYXRpb25zIHNob3AgaGFzIGVtZXJnZWQgdG8gaGVscCB0aGUgYmVsZWFndWVyZWQgcHJlc2lkZW50IHNlbGwgaGlzIHVucG9wdWxhciB3YXIgdG8gdGhlIEFtZXJpY2FuIHBlb3BsZS4KRnJlZWRvbSdzIFdhdGNoIHdhcyBmb3JtZWQgYnkgZm9ybWVyIFdoaXRlIEhvdXNlIGFuZCBCdXNoIGFkbWluaXN0cmF0aW9uIG9mZmljaWFscyBhbmQgZnVuZGVkIGJ5IFJlcHVibGljYW4gYmlnLW1vbmV5IGRvbm9ycy4KVG9kYXkgaXQgYmVnYW4gYWlyaW5nICQxNSBtaWxsaW9uIHdvcnRoIG9mIGFkcyAtLSBmZWF0dXJpbmcgdmV0ZXJhbnMgYW5kIHRoZWlyIGZhbWlsaWVzIC0tIGFpbWVkIGF0IGluZmx1ZW5jaW5nIHdhdmVyaW5nIG1lbWJlcnMgb2YgQ29uZ3Jlc3MuCllvdSBjYW4gc2VlIHRoZSBhZHMgSEVSRQoiSSBrbm93IHdoYXQgSSBsb3N0LCIgc2F5cyBvbmUgb2YgdGhvc2UgaW4gYSBUViBhZCwgdmV0ZXJhbiBKb2huIEtyaWVzZWwsIHdobyBsb3N0IGJvdGggbGVncyBpbiBhIGJsYXN0IG5lYXIgRmFsbHVqYWggbGFzdCBEZWNlbWJlci4KSSBhbHNvIGtub3cgaWYgd2UgcHVsbCBvdXQgbm93LCBldmVyeXRoaW5nIEkndmUgZ2l2ZW4gYW5kIHNhY3JpZmljZWQgd2lsbCBtZWFuIG5vdGhpbmcuCkluIGEgc2VwYXJhdGUgYWQsIHZldGVyYW4gQW5kcmV3IFJvYmluc29uLCB3aG8gbG9zdCB0aGUgdXNlIG9mIGJvdGggb2YgaGlzIGxlZ3MgYWZ0ZXIgYmVpbmcgd291bmRlZCBieSBhbiBJRUQgaW4gSnVuZSAyMDA2LCBzYXlzLCAiSSB3b3VsZCBnbyBiYWNrIHRvIElyYXEgaWYgSSBjb3VsZCwgaXQncyB0aGF0IGltcG9ydGFudCBiZWNhdXNlIGlmIElyYXEgaXNuJ3Qgc3RhYmxlIGl0IHdpbGwgYmUgYSBicmVlZGluZyBncm91bmQgZm9yIHRlcnJvcmlzdHMuIgpUaGUgYWRzIGFsc28gbGluayB0aGUgd2FyIHdpdGggU2VwdC4KMTEsIGRlc3BpdGUgbm8gcmVsaWFibGUgZXZpZGVuY2UgSXJhcSBwbGF5ZWQgYW55IHJvbGUgaW4gdGhvc2UgYXR0YWNrcy4KSW4gdGhlIGFkLCBLcmllc2VsIHNheXMsICJUaGV5IGF0dGFja2VkIHVzLCBhbmQgdGhleSB3aWxsIGFnYWluLgpUaGV5IHdvbid0IHN0b3AgaW4gSXJhcS4KTGF1cmEgWW91bmdibG9vZCBpcyBmZWF0dXJlZCBpbiBhbm90aGVyIGFkIC0tIHNoZSBsb3N0IGhlciB1bmNsZSBIZW5yeSwgYSBOZXcgWW9yayBDaXR5IGZpcmVtYW4sIG9uIFNlcHQuCjExLCBhbmQgaGVyIGh1c2JhbmQsIFRyYXZpcywgaW4gSXJhcS4KIkNvbmdyZXNzIGRpZCB0aGUgcmlnaHQgdGhpbmcgdm90aW5nIHRvIGRlZmVhdCB0ZXJyb3Jpc20gaW4gSXJhcSBhbmQgQWZnaGFuaXN0YW4sIiBzaGUgc2F5cyBpbiBhbiBhZC4KU3dpdGNoaW5nIHRoZWlyIHZvdGVzIG5vdywgZm9yIHBvbGl0aWNhbCByZWFzb25zLCBpdCB3aWxsIG1lYW4gbW9yZSBhdHRhY2tzIGluIEFtZXJpY2EuCkJyZWFraW5nIGEgJ0NvbnNlcnZhdGl2ZScgU2lsZW5jZQpGb3JtZXIgV2hpdGUgSG91c2Ugc3Bva2VzbWFuIEFyaSBGbGVpc2NoZXIsIG9uZSBvZiB0aGUgZ3JvdXAncyBib2FyZCBvZiBkaXJlY3RvcnMsIHNhaWQgdGhlIGdyb3VwIHdhcyBmb3JtZWQgdG8gcHJvdmlkZSBhIGNvdW50ZXItYXJndW1lbnQgdG8gdGhlIHN1Y2Nlc3NmdWwgYW50aS13YXIgdm9pY2VzLgoiVGhlcmUncyBiZWVuIGEgdGhyZWUteWVhciBzaWxlbmNlIGZyb20gY29uc2VydmF0aXZlcyBhbmQgb3RoZXJzIHdobyBiZWxpZXZlIGluIHBlYWNlIHRocm91Z2ggc3RyZW5ndGgsIiBGbGVpc2NoZXIgdG9sZCBBQkMgTmV3cy4KIlRoZSBjYXZhbHJ5IGlzIGNvbWluZywgd2UncmUgZ29pbmcgdG8gaGVscCB0byBnZXQgdGhhdCBtZXNzYWdlIG91dCwiIGhlIHNhaWQuClRoZSBuZXcgcHJvLXN1cmdlIGFkcyB3aWxsIGpvaW4gYSBiYXJyYWdlIG9mIG90aGVyIFRWIGFkcyBhYm91dCBJcmFxLCBtYW55IGFnYWluc3QgdGhlIHdhciwgYWxsIGFpbWVkIGF0IHNwZWNpZmljIG1lbWJlcnMgb2YgQ29uZ3Jlc3Mgd2hvIGFyZSBzdGlsbCBkZWNpZGluZyB3aGV0aGVyIHRvIGNvbnRpbnVlIHN1cHBvcnRpbmcgdGhlIHByZXNpZGVudC4KQXBwcm94aW1hdGVseSAyMCBjb25ncmVzc2lvbmFsIGRpc3RyaWN0cyBhcmUgdGFyZ2V0ZWQuCk9uZSBhbmFseXNpcyBvZiB0aGUgYWQgY2FtcGFpZ24gYnkgdGhlIGxpYmVyYWwgZ3JvdXAgTW92ZW9uLm9yZyBzZWVtcyB0byBpbmRpY2F0ZSBhIG1ham9yaXR5IG9mIHRoZSBhZHMgYXJlIHRhcmdldGVkIGF0IFJlcHVibGljYW5zLCB0aG91Z2ggQnJhZCBCbGFrZW1hbiwgcHJlc2lkZW50IG9mIEZyZWVkb20ncyBXYXRjaCwgZGlzcHV0ZXMgdGhhdCBhbmF5bHNpcy4KRWl0aGVyIHdheSwgTW92ZW9uLm9yZydzIHByZXNpZGVudCwgVG9tIE1hdHp6aWUsIHByZWRpY3RzIHRoZXNlIGFkcyBhbmQgdGhlaXIgaW1hZ2VzIG9mIHdpZG93cyBhbmQgd291bmRlZCB2ZXRlcmFucyB3aWxsIGJhY2tmaXJlIGJlY2F1c2UgdGhleSBhcmUgInJlbWluZGluZyB0aGUgcHVibGljIG9mIHRoZSBjb3N0IG9mIHRoZSB3YXIgaW4gSXJhcSIgYW5kIG5vdCB0aGUganVzdGlmaWNhdGlvbiBmb3IgdGhlIG1pbGl0YXJ5IHByZXNlbmNlLgoiVGhhdCdzIGJhZCBuZXdzIGZvciBSZXB1YmxpY2FucyB3aG8gYXJlIHN0aWxsIHN0aWNraW5nIHdpdGggQnVzaCBvbiB0aGUgd2FyLCIgTWF0enppZSBzYWlkLgpTZW4uIExhbWFyIEFsZXhhbmRlciwgUi1UZW5uLiwgd2hvIGp1c3QgcmV0dXJuZWQgZnJvbSBhIHRyaXAgdG8gSXJhcSwgaXMgb25lIG9mIHRob3NlIGJlaW5nIHRhcmdldGVkLCBidXQgZGlkIG5vdCBzZWVtIGNvbmNlcm5lZC4KIkl0J3MgcGVyZmVjdGx5IGFwcHJvcHJpYXRlIGZvciBNb3Zlb24ub3JnIHRvIHJ1biBhZHMgb24gb25lIHNpZGUgYW5kIGEgUmVwdWJsaWNhbiBncm91cCB0byBydW4gYWRzIG9uIHRoZSBvdGhlciwgYnV0IHRoYXQncyBub3Qgb3VyIGpvYiwiIGhlIHNhaWQuCk91ciBqb2IgaXMgdG8gc3RvcCBoYXZpbmcgcGFydGlzYW4gdm90ZXMgb24gSXJhcSBhbmQgc3RhcnQgc3BlYWtpbmcgd2l0aCBhIHNpbmdsZSB2b2ljZS4KQWxleGFuZGVyIHNhaWQgYWxsIHRoZSBwYXJ0aXNhbnNoaXAgYmFjayBoZXJlIGluIHRoZSBVbml0ZWQgU3RhdGVzIGlzIHByZXZlbnRpbmcgYW55IHJlYWwgc29sdXRpb24gb3ZlcnNlYXMuCiJJZiBhbGwgd2UgZG8gaXMgc2hvdXQgYXQgZWFjaCBvdGhlciB3ZSdyZSBubyBiZXR0ZXIgdGhhbiB0aGUgSXJhcWkgcGFybGlhbWVudCwiIGhlIHNhaWQuCkJ1dCB0aGUgc2hvdXRpbmcgaXMgb25seSBnZXR0aW5nIGxvdWRlci4KWi4gQnlyb24gV29sZiBhbmQgTWVhZ2hhbiBNLiBTdGFrZWxpbiBjb250cmlidXRlZCB0byB0aGlzIHJlcG9ydC4K, 'ORG')]
RmVsaXggQmVjb21lcyBDYXRlZ29yeSA1IEh1cnJpY2FuZQpPUkFOSkVTVEFELCBBcnViYSBGZWxpeCByYXBpZGx5IHN0cmVuZ3RoZW5lZCBpbnRvIGEgZGFuZ2Vyb3VzIENhdGVnb3J5IDUgaHVycmljYW5lIGFuZCBjaHVybmVkIHRocm91Z2ggdGhlIENhcmliYmVhbiBTZWEgb24gYSBwYXRoIHRvd2FyZCBDZW50cmFsIEFtZXJpY2EsIHdoZXJlIGZvcmVjYXN0ZXJzIHNhaWQgaXQgY291bGQgbWFrZSBsYW5kZmFsbCBhcyAicG90ZW50aWFsbHkgY2F0YXN0cm9waGljIiBzdG9ybS4KRmVsaXggd2FzIHBhY2tpbmcgd2luZHMgb2YgdXAgdG8gMTY1IG1waCBhcyBpdCBoZWFkZWQgd2VzdCwgYWNjb3JkaW5nIHRvIHRoZSBVLlMuIE5hdGlvbmFsIEh1cnJpY2FuZSBDZW50ZXIuCkl0IHdhcyBwcm9qZWN0ZWQgdG8gc2tpcnQgSG9uZHVyYXMnIGNvYXN0bGluZSBvbiBUdWVzZGF5IGJlZm9yZSBzbGFtbWluZyBpbnRvIEJlbGl6ZSBvbiBXZWRuZXNkYXkuCiJBcyBpdCBzdGFuZHMsIHdlJ3JlIHN0aWxsIHRoaW5raW5nIHRoYXQgaXQgd2lsbCBiZSBhIHBvdGVudGlhbGx5IGNhdGFzdHJvcGhpYyBzeXN0ZW0gaW4gdGhlIGVhcmx5IHBvcnRpb25zIG9mIHRoaXMgd2VlaywgVHVlc2RheSBldmVuaW5nLCBwb3NzaWJseSBhZmZlY3RpbmcgSG9uZHVyYXMgYW5kIHRoZW4gdG93YXJkIHRoZSBjb2FzdCBvZiBCZWxpemUsIiBzYWlkIERhdmUgUm9iZXJ0cywgYSBodXJyaWNhbmUgc3BlY2lhbGlzdCBhdCB0aGUgY2VudGVyIGluIE1pYW1pLgpBIGh1cnJpY2FuZSB3YXRjaCB3YXMgaXNzdWVkIGZvciBwYXJ0cyBvZiBIb25kdXJhcywgd2hlcmUgYXV0aG9yaXRpZXMgd2VyZSBrZWVwaW5nIGEgY2xvc2UgZXllIG9uIHRoZSBzdG9ybSBidXQgaGFkIG5vdCBiZWd1biBhbnkgZXZhY3VhdGlvbnMuCkFsb25nIHRoZSBub3J0aGVybiBjb2FzdGxpbmUsIGhvdGVsaWVycyBzYWlkLCB0b3VyaXN0cyB3ZXJlIHN0aWxsIGxvdW5naW5nIGJ5IHRoZSBwb29sIGFuZCBlbmpveWluZyB0aGUgc3VuLgpJbiBCZWxpemUsIHJlc2lkZW50cyBzdG9ja2VkIHVwIG9uIHdhdGVyIGFuZCBmb29kLCBhbmQgbmFpbGVkIGJvYXJkcyBvdmVyIHdpbmRvd3MgdG8gcHJvdGVjdCBhZ2FpbnN0IHRoZSBodXJyaWNhbmUncyBob3dsaW5nIHdpbmRzLgpNYW55IHdobyBsaXZlZCBpbiBsb3ctbHlpbmcgYXJlYXMgd2VyZSBzZWVraW5nIGhpZ2hlciBncm91bmQuCkVEVCBNb25kYXksIEZlbGl4IHdhcyBjZW50ZXJlZCBhYm91dCAyOTUgbWlsZXMgc291dGgtc291dGhlYXN0IG9mIEtpbmdzdG9uLCBKYW1haWNhLCBhbmQgNTU1IG1pbGVzIGVhc3Qgb2YgQ2FibyBHcmFjaWFzIGEgRGlvcyBvbiB0aGUgTmljYXJhZ3VhLUhvbmR1cmFzIGJvcmRlci4KSXQgd2FzIGhlYWRpbmcgd2VzdCBhdCBhYm91dCAyNCBtcGgsIHRoZSBodXJyaWNhbmUgY2VudGVyIHNhaWQuCk9uIFN1bmRheSwgRmVsaXggdG9wcGxlZCB0cmVlcyBhbmQgZmxvb2RlZCBzb21lIGhvbWVzIG9uIHRoZSBEdXRjaCBpc2xhbmRzIG9mIEFydWJhLCBDdXJhY2FvIGFuZCBCb25haXJlIGluIHRoZSBzb3V0aGVybiBDYXJpYmJlYW4uCkhlYXZ5IHJhaW5zIGFuZCB3aW5kcyBjYXVzZWQgc2NhdHRlcmVkIHBvd2VyIG91dGFnZXMgYW5kIGZvcmNlZCB0aG91c2FuZHMgb2YgdG91cmlzdHMgdG8gdGFrZSByZWZ1Z2UgaW4gaG90ZWxzLCBidXQgcmVzaWRlbnRzIGV4cHJlc3NlZCByZWxpZWYgaXQgZGlkIGZhciBsZXNzIGRhbWFnZSB0aGFuIGZlYXJlZCBhcyB0aGUgc3Rvcm0ncyBvdXRlciBiYW5kcyBncmF6ZWQgdGhlIHRpbnkgaXNsYW5kcy4KTXkgZG9nIHNsZXB0IHBlYWNlZnVsbHkgdGhyb3VnaCB0aGUgbmlnaHQsIiBzYWlkIEJvbmFpcmUgbWVkaWNhbCBhZG1pbmlzdHJhdG9yIFNpb21hcmEgQWxiZXJ0dXMsIHdobyB3YWl0ZWQgb3V0IHRoZSBzdG9ybSBpbiBoZXIgaG9tZSB3aXRoIGhlciBMYWJyYWRvciByZXRyaWV2ZXIuCk1hbnkgQm9uYWlyZSByZXNpZGVudHMgcHJlcGFyZWQgZm9yIHRoZSB3b3JzdCwgaW5zdGFsbGluZyBzdG9ybSBzaHV0dGVycyBhbmQgaGF1bGluZyB0aGVpciBib2F0cyBhc2hvcmUsIGJ1dCB3aW5kcyBmcm9tIEZlbGl4J3Mgb3V0ZXIgYmFuZHMgbGVmdCBsaXR0bGUgZGFtYWdlLgpJbiBDdXJhY2FvLCBzZXZlcmFsIGhvbWVzIGluIGEgbG93LWx5aW5nIGFyZWEgd2VyZSBmbG9vZGVkLgpJbiBBcnViYSwgdGhlcmUgd2FzIGFsc28gbGl0dGxlIHZpc2libGUgZGFtYWdlLCBhbHRob3VnaCBhdCBsZWFzdCBvbmUgY2F0YW1hcmFuIHNuYXBwZWQgb2ZmIGl0cyBtb29yaW5nLCBhIGhvdXNlIHdhcyBkYW1hZ2VkIGJ5IGEgZG93bmVkIHRyZWUgYW5kIHBvd2VyIHdhcyB0ZW1wb3JhcmlseSBrbm9ja2VkIG91dCBpbiBhIG5vcnRoZXJuIHRvd24uCkZlbGl4IGlzIHRoZSBzZWNvbmQgQXRsYW50aWMgaHVycmljYW5lIG9mIHRoZSBzZWFzb24gZm9sbG93aW5nIGxhc3QgbW9udGgncyBIdXJyaWNhbmUgRGVhbiwgd2hpY2gga2lsbGVkIGF0IGxlYXN0IDIwIGluIHRoZSBDYXJpYmJlYW4gYW5kIGNhcnZlZCBvdXQgYSBkZXN0cnVjdGl2ZSBzd2F0aCBzdHJldGNoaW5nIGZyb20gU3QuIEx1Y2lhIHRvIE1leGljby4KT24gU2F0dXJkYXksIEZlbGl4IGJyb3VnaHQgaGVhdnkgcmFpbnMgYW5kIHN0cm9uZyB3aW5kcyB0byBHcmVuYWRhIGFzIGEgdHJvcGljYWwgc3Rvcm0sIHJpcHBpbmcgcm9vZnMgb2ZmIGF0IGxlYXN0IHR3byBob21lcyBhbmQgZGVzdHJveWluZyBhIHBvcHVsYXIgY29uY2VydCB2ZW51ZS4KVHJvcGljYWwgc3Rvcm0gd2F0Y2hlcyB3ZXJlIGlzc3VlZCBmb3IgR3JhbmQgQ2F5bWFuIGFuZCBKYW1haWNhLCB3aGljaCB3YXMgYmF0dGVyZWQgYnkgRGVhbiBvbiBBdWcuIDE5LgpBIHdhdGNoIG1lYW5zIHRyb3BpY2FsIHN0b3JtIGNvbmRpdGlvbnMgY291bGQgYmVnaW4gYWZmZWN0aW5nIHRoZSBpc2xhbmQgd2l0aGluIDM2IGhvdXJzLgpPZmYgdGhlIFBhY2lmaWMgY29hc3Qgb2YgTWV4aWNvLCBtZWFud2hpbGUsIGZvcmVjYXN0ZXJzIHNhaWQgVHJvcGljYWwgU3Rvcm0gSGVucmlldHRlIGNvdWxkIHN0cmVuZ3RoZW4gdG8gYSBodXJyaWNhbmUgYnkgTW9uZGF5LCBhbmQgb2ZmaWNpYWxzIGlzc3VlZCBhIGh1cnJpY2FuZSB3YXRjaCBmb3IgdGhlIHJlc29ydC1zdHVkZGVkIHRpcCBvZiB0aGUgQmFqYSBDYWxpZm9ybmlhIHBlbmluc3VsYSwgYSB2YWNhdGlvbiBhcmVhIHBvcHVsYXIgd2l0aCBIb2xseXdvb2Qgc3RhcnMgYW5kIHNlYSBmaXNoaW5nIGVudGh1c2lhc3RzLgpIZW5yaWV0dGUgZHVtcGVkIGhlYXZ5IHJhaW4gb24gd2VzdGVybiBNZXhpY28uCkluIHRoZSByZXNvcnQgY2l0eSBvZiBBY2FwdWxjbywgdGhyZWUgcGVvcGxlIHdlcmUga2lsbGVkIHdoZW4gYSBnaWFudCBib3VsZGVyIGZlbGwgb24gdGhlaXIgaG9tZSwgYW5kIHRocmVlIG1vcmUgZGllZCB3aGVuIGEgbGFuZHNsaWRlIHNsYW1tZWQgaW50byB0aGVpciBob3VzZS4KUmViZWNjYSBXYWRkaW5ndG9uLCBhIG1ldGVvcm9sb2dpc3Qgd2l0aCB0aGUgaHVycmljYW5lIGNlbnRlciwgd2FybmVkIHRoYXQgYm90aCBGZWxpeCBhbmQgSGVucmlldHRlIGNvdWxkIHNoaWZ0IGNvdXJzZSBhbmQgc2FpZCBwZW9wbGUgaW4gdGhlIGdlbmVyYWwgYXJlYXMgc2hvdWxkIHJlbWFpbiBhbGVydCBldmVuIGlmIHRoZXkgYXJlbid0IGluIHRoZSBzdG9ybXMnIGRpcmVjdCBwYXRocy4KIkV2ZW4gaWYgdGhlIGZvcmVjYXN0IGlzIHBlcmZlY3QsIHRoYXQncyBvbmx5IGZvcmVjYXN0aW5nIHdoZXJlIHRoZSBjZW50ZXIgb2YgdGhlIHN0b3JtIGlzIGdvaW5nIHRvIGdvLCIgc2hlIHNhaWQuClNvIGV2ZXJ5b25lIGluIHRoZSBhcmVhIG5lZWRzIHRvIGJlIGF3YXJlIG9mIGl0LCBiZWNhdXNlIHRoZSBzdG9ybXMgYXJlIHF1aXRlIGxhcmdlLgpTaGUgYWR2aXNlZCBlbXBsb3llZXMgb2Ygb2lsIHBsYXRmb3JtcyBpbiB0aGUgR3VsZiBvZiBNZXhpY28gdG8gbW9uaXRvciBGZWxpeCdzIHByb2dyZXNzIGFuZCBzYWlkIGl0IGNvdWxkIHJlYWNoIHRoZSBhcmVhIGluIGEgZmV3IGRheXMuCkFzc29jaWF0ZWQgUHJlc3Mgd3JpdGVycyBTb2ZpYSBNYW5ub3MgaW4gV2FzaGluZ3RvbiwgTGluZGEgU3RyYWtlciBpbiBTdC4gR2VvcmdlJ3MsIEdyZW5hZGEsIGFuZCBEYXZpZCBNY0ZhZGRlbiBpbiBTYW4gSnVhbiwgUHVlcnRvIFJpY28sIGNvbnRyaWJ1dGVkIHRvIHRoaXMgcmVwb3J0Lgo=
[]

[]
RXVybyBIaXRzIE5ldyBIaWdoIEFnYWluc3QgRG9sbGFyClRoZSBldXJvIHNvYXJlZCB0byBpdHMgaGlnaGVzdC1ldmVyIGxldmVsIGFnYWluc3QgdGhlIGRvbGxhciBvbiBUaHVyc2RheSwgdHJhZGluZyBhYm92ZSAkMS40MCBmb3IgdGhlIGZpcnN0IHRpbWUgc2luY2UgdGhlIGN1cnJlbmN5IHdhcyBpbnRyb2R1Y2VkIGluIDE5OTkuCkJyZWFraW5nIHRoYXQgYmFycmllciBoYXMgbG9uZyBiZWVuIHZpZXdlZCBieSBhbmFseXN0cyBhbmQgbWFya2V0cyBhcyBhIGtleSB0dXJuaW5nIHBvaW50IGluIHNvbGlkaWZ5aW5nIHRoZSBldXJvJ3MgcG9zaXRpb24gaW4gZ2xvYmFsIGN1cnJlbmN5IG1hcmtldHMsIGFuZCB3aWxsIHByb3ZpZGUgbW9yZSBpbXBldHVzIGZvciBpdCB0byBiZSB0aGUgcmVzZXJ2ZSBjdXJyZW5jeSBvZiBjaG9pY2UgYSBwb3NpdGlvbiBsb25nIGhlbGQgYnkgdGhlIG5vdy13ZWFrZW5pbmcgVS5TLiBkb2xsYXIuClRoZSAxMy1uYXRpb24gZXVybyBib3VnaHQgYXMgbXVjaCBhcyAkMS40MDY0IGluIG1vcm5pbmcgdHJhZGluZyBpbiBFdXJvcGUgYmVmb3JlIGZhbGxpbmcgYmFjayBzbGlnaHRseSB0byAkMS40MDM1LCBhYm92ZSBpdHMgcHJldmlvdXMgaGlnaCBXZWRuZXNkYXkgbmlnaHQgb2YgJDEuMzk4NywgYW5kIG1vcmUgdGhhbiB0aGUgJDEuMzk2NCBpdCBib3VnaHQgaW4gbGF0ZSBOZXcgWW9yayB0cmFkaW5nLgpEYXZpZCBKb25lcywgY2hpZWYgbWFya2V0IGFuYWx5c3QgYXQgQ01DIE1hcmtldHMgaW4gTG9uZG9uLCBzYWlkIHRoZSBldXJvJ3MgcmlzZSBpcyBub3QgbGlrZWx5IHRvIGFiYXRlIGluIHRoZSBjb21pbmcgZGF5cywgcGFydGljdWxhcmx5IGxhdGVyIFRodXJzZGF5IHdoZW4gdHJhZGVycyB3YWl0IHRvIGhlYXIgd2hhdCBVLlMuIEZlZGVyYWwgUmVzZXJ2ZSBDaGFpcm1hbiBCZW4gQmVybmFua2UgYW5kIFUuUy4gVHJlYXN1cnkgU2VjcmV0YXJ5IEhlbnJ5IFBhdWxzb24gc2F5IGFib3V0IHRoZSBVLlMuIG1vcnRnYWdlIG1hcmtldCBpbiB0ZXN0aW1vbnkgYmVmb3JlIHRoZSBVLlMuIENvbmdyZXNzLgpCZXJuYW5rZSBjb3VsZCB1c2UgdGhlIGZvcnVtIGFzIGEgd2F5IHRvIGZpbmUtdHVuZSB0aGUgVS5TLiBjZW50cmFsIGJhbmsncyBlY29ub21pYyBvdXRsb29rLCBhZnRlciBhIGxhcmdlci10aGFuLWV4cGVjdGVkIGhhbGYtcG9pbnQgY3V0IGluIHRoZSBiZW5jaG1hcmsgaW50ZXJlc3QgcmF0ZSBlYXJsaWVyIHRoaXMgd2Vlay4KIkkgYW0gc3VyZSB3ZSdyZSBnb2luZyB0byBzZWUgYnV5ZXJzIG1vdmluZyBpbiBmb3IgdGhlIG5leHQgdGFyZ2V0LCIgSm9uZXMgc2FpZCwgYWRkaW5nIHRoYXQgaGUgYmVsaWV2ZXMgdGhlIGV1cm8gd2lsbCByaXNlIHRvICQxLjQyIHZlcnkgc29vbi4KIklmIG5vdCB0aGlzIHdlZWssIGl0IGNvdWxkIGJlIG5leHQgd2VlaywiIGhlIHNhaWQuClBlb3BsZSBhcmUgdXNpbmcgYW55IHdlYWtuZXNzIGFzIGEgYnV5aW5nIG9wcG9ydHVuaXR5IGZvciBldXJvcy4KVGhlIHJpc2luZyBldXJvIGhhcyB5ZXQgdG8gY2F1c2UgZ3JlYXQgY29uc3Rlcm5hdGlvbiBhbW9uZyBtb3N0IG9mIHRoZSAxMyBuYXRpb25zIHRoYXQgdXNlIHRoZSBjb21tb24gY3VycmVuY3ksIHNhdmUgZm9yIEZyYW5jZSwgd2hpY2ggaGFzIGNyaXRpY2l6ZWQgaXRzIGluY3JlYXNlLgpBcyB0aGUgZXVybyByaXNlcyBpdCBjb3VsZCBkYW1wZW4gZXhwb3J0cywgcGFydGljdWxhcmx5IHRvIHRoZSBVbml0ZWQgU3RhdGVzLCBtYWtpbmcgRXVyb3BlYW4tbWFkZSBwcm9kdWN0cyBmcm9tIGF1dG9tb2JpbGVzIHRvIGNvbnN1bWVyIGFwcGxpYW5jZXMgbW9yZSBleHBlbnNpdmUgZm9yIEFtZXJpY2FuIGJ1eWVycy4KT24gVGh1cnNkYXksIEdlcm1hbnkncyBmaW5hbmNlIG1pbmlzdHJ5IHNhaWQgdGhlIGV1cm8ncyBzdHJlbmd0aCBtZWFudCB0aGF0IGV4cG9ydCBncm93dGggaW4gRXVyb3BlJ3MgYmlnZ2VzdCBlY29ub215IGhhZCBsb3N0IHNvbWUgb2YgaXRzIHZpZ29yLgoiVGhlIGR5bmFtaXNtIG9mIGV4cG9ydHMgaXMgbm90aWNlYWJseSB3ZWFrZXIgdGhhbiBsYXN0IHllYXIsIiB0aGUgbWluaXN0cnkgc2FpZCBpbiBpdHMgU2VwdGVtYmVyIG1vbnRobHkgYnVsbGV0aW4sIGNpdGluZyB0aGUgZXVybydzIGFwcHJlY2lhdGlvbiBhZ2FpbnN0IHRoZSBkb2xsYXIgYXMgYSByZWFzb24uClRoZSBldXJvJ3MgbGF0ZXN0IHN1cmdlIGhhcyBjb21lIGFmdGVyIHRoZSBGZWQgbG93ZXJlZCBpdHMga2V5IGludGVyZXN0IHJhdGUgdG8gNC43NSBwZXJjZW50IGZyb20gNS4yNSBwZXJjZW50IGFzIGl0IHRyaWVzIHRvIGtlZXAgdGhlIFUuUy4gZWNvbm9teSBvbiB0cmFjayBkZXNwaXRlIG1hcmtldCB0dXJidWxlbmNlIGZyb20gdGhlIHN1YnByaW1lIGxlbmRpbmcgY3Jpc2lzLgpNb3N0IGFuYWx5c3RzIGhhZCBleHBlY3RlZCBhIHF1YXJ0ZXItcG9pbnQgY3V0LgpMb3dlciBpbnRlcmVzdCByYXRlcywgd2hpbGUgdXNlZCB0byBqdW1wLXN0YXJ0IHRoZSBlY29ub215LCBjYW4gYWxzbyB3ZWFrZW4gYSBjdXJyZW5jeSBieSBnaXZpbmcgaW52ZXN0b3JzIGxlc3MgcmV0dXJuIG9uIGludmVzdG1lbnRzIGRlbm9taW5hdGVkIGluIHRoZSBjdXJyZW5jeS4KVGhlIEV1cm9wZWFuIENlbnRyYWwgQmFuayBrZXB0IGl0cyBrZXkgcmF0ZSB1bmNoYW5nZWQgYXQgNCBwZXJjZW50IGVhcmxpZXIgdGhpcyBtb250aCwgYmFja2luZyBvZmYgYSBwbGFubmVkIGluY3JlYXNlIGluIGxpZ2h0IG9mIHRoZSBzdWJwcmltZSBjcmlzaXMgYW5kIG1hcmtldCB2b2xhdGlsaXR5LgpBbmFseXN0cyBhcmUgbWl4ZWQgb24gd2hldGhlciB0aGUgYmFuayB3aWxsIGxpZnQgdGhlIHJhdGUgaW4gT2N0b2Jlci4KVGhlIGRvbGxhciBhbHNvIGZlbGwgYWdhaW5zdCBvdGhlciBjdXJyZW5jaWVzLCBkaXBwaW5nIGFnYWluc3QgdGhlIEJyaXRpc2ggcG91bmQgdG8gJDIuMDA3MyBjb21wYXJlZCB3aXRoICQyLjAwMjUgbGF0ZSBXZWRuZXNkYXksIGFmdGVyIFUuSy4gcmV0YWlsIHNhbGVzIGluIEF1Z3VzdCByb3NlIGJ5IDAuNiBwZXJjZW50IGZyb20gSnVseS4KVGhlIGRvbGxhciBzbGlwcGVkIGFnYWluc3QgdGhlIEphcGFuZXNlIGN1cnJlbmN5IHRvIDExNS42MiB5ZW4gZnJvbSAxMTYuMDkgbGF0ZSBXZWRuZXNkYXkuCkFzc29jaWF0ZWQgUHJlc3Mgd3JpdGVyIE1lbGlzc2EgRWRkeSBpbiBCZXJsaW4gY29udHJpYnV0ZWQgdG8gdGhpcyByZXBvcnQuCg==
[]
VGlueSBKZW5hLCBMYS4gaXMgQ2VudGVyIG9mIFJhY2UgRGViYXRlClRob3VzYW5kcyBvZiBwcm90ZXN0ZXJzIGhhdmUgZGVzY2VuZGVkIG9uIHRoZSBzbWFsbCB0b3duIG9mIEplbmEsIExhLiwgZm9yIGEgbGFyZ2Utc2NhbGUgcmFsbHkgaW4gc3VwcG9ydCBvZiBzaXggYmxhY2sgc3R1ZGVudHMgY2hhcmdlZCBpbiB0aGUgYmVhdGluZyBvZiBhIHdoaXRlIGNsYXNzbWF0ZS4KVGhleSBhcmUgb3V0cmFnZWQgdGhhdCB0aGUgcHJvc2VjdXRvciBpbml0aWFsbHkgaGFkIHRyaWVkIHRvIHByb3NlY3V0ZSB0aGUgdGVlbnMgb24gYXR0ZW1wdGVkIG11cmRlciBjaGFyZ2VzLgpSb2FkcyB3ZXJlIGFscmVhZHkgamFtbWVkIHdpdGggdHJhZmZpYyBhcyBhIHJhbGx5IGJlZ2FuIGF0IHRoZSBjb3VydGhvdXNlLgpMYXRlciBvcmdhbml6ZXJzIHBsYW4gdG8gbWFyY2ggdG8gdGhlIGhpZ2ggc2Nob29sLgpDb2xsZWdlIHN0dWRlbnRzIGJvYXJkZWQgYnVzZXMgZnJvbSBhcyBmYXIgYXMgV2FzaGluZ3RvbiwgRC5DLiB0byB2b2ljZSB0aGVpciBhbmdlciBvdmVyIHdoYXQgdGhleSBiZWxpZXZlIGlzIGFuIGluanVzdGljZSBpbiB0aGUgY2FzZSBrbm93biBhcyB0aGUgSmVuYSBTaXguCiJJdCBhbHdheXMgc3RhcnRlZCB3aXRoIHlvdW5nIHBlb3BsZSwiIHNhaWQgQ2FyZXkgQXNoLCB0aGUgU291dGhlcm4gVW5pdmVyc2l0eSBzdHVkZW50IGdvdmVybm1lbnQgcHJlc2lkZW50LgpJdCdzIGFsd2F5cyBzdGFydGVkIHdpdGggY29sbGVnaWFucyAtLSBhbmQgdGhpcyBpcyBubyBkaWZmZXJlbnQuClRoZSBwYXJpc2ggaGFzIGRlY2xhcmVkIGFuIG9mZmljaWFsIHN0YXRlIG9mIGVtZXJnZW5jeSBhbmQgc2Nob29scyBhbmQgYnVzaW5lc3NlcyBhcmUgY2xvc2VkLgpJbiBmYWN0LCBwb2xpY2UgYXJlIG91dCBmcm9tIGFsbCBhY3Jvc3MgdGhlIHN0YXRlLCBhcyB0aGUgY29udHJvdmVyc2lhbCBjYXNlIGRyYXdpbmcgc28gbXVjaCBhdHRlbnRpb24gaGFzIHRvcm4gYWNyb3NzIHJhY2lhbCBsaW5lcyBpbiB0aGUgdG93biBhbmQgbmF0aW9ud2lkZS4KVGhyZWUgTm9vc2VzIExlZnQgaW4gYSBUcmVlCkFuZCBpdCBhbGwgc3RhcnRlZCB1bmRlciB0aGUgYnJhbmNoZXMgb2YgYSBoaWdoIHNjaG9vbCB0cmVlLgpUaGUgdHJlZSBpcyB3aGVyZSB3aGl0ZSBzdHVkZW50cyBnYXRoZXJlZCBhbmQgbGFzdCBTZXB0ZW1iZXIgYSBmZXcgYmxhY2sgc3R1ZGVudHMgZGVjaWRlZCB0byBjbGFpbSBhIHBsYWNlLCB0b28uClRoZSBmb2xsb3dpbmcgZGF5IGFmdGVyIHRoZSBibGFjayBzdHVkZW50cyBzYXQgYmVuZWF0aCB0aGUgdHJlZSwgc29tZW9uZSBodW5nIHRocmVlIG5vb3NlcyBmcm9tIGl0LgpGcm9tIHRoZXJlIHRlbnNpb25zIGF0IHRoZSBzY2hvb2wgYW5kIGluIHRoZSB0b3duIGVzY2FsYXRlZC4KQW5kIGluIE5vdmVtYmVyLCBhcnNvbmlzdHMgdG9yY2hlZCB0aGUgc2Nob29sLgpUaGUgYW54aWV0eSBjdWxtaW5hdGVkIERlYy4gNCwgMjAwNiwgd2hlbiBhIHdoaXRlIHN0dWRlbnQsIEp1c3RpbiBCYXJrZXIsIHdhcyBiZWF0ZW4gYW5kIGtub2NrZWQgdW5jb25zY2lvdXMgYnkgc2V2ZXJhbCBibGFjayBzdHVkZW50cy4KUG9saWNlIGFycmVzdGVkIHNpeCBibGFjayB0ZWVucywgYW5kIHRoZSBwcm9zZWN1dG9yIGluaXRpYWxseSBjaGFyZ2VkIHRoZW0gd2l0aCBhdHRlbXB0ZWQgbXVyZGVyLCB3aGljaCB3YXMgbGF0ZXIgcmVkdWNlZCB0byBiYXR0ZXJ5IGZvciBhbGwgYnV0IG9uZSBvZiB0aGUgdGVlbnMuCk15Q2hhbCBCZWxsLCB0aGUgb25seSBvbmUgb2YgdGhlIEplbmEgU2l4IHRvIGJlIHRyaWVkLCB3YXMgY29udmljdGVkIG9mIGFnZ3JhdmF0ZWQgc2Vjb25kLWRlZ3JlZSBiYXR0ZXJ5IGFuZCBmYWNlZCBhcyBtdWNoIGFzIDE1IHllYXJzIGluIGphaWwuCkJ1dCBsYXN0IHdlZWssIGEgc3RhdGUgYXBwZWFscyBjb3VydCB0aHJldyBvdXQgdGhlIGNvbnZpY3Rpb24sIGFyZ3VpbmcgQmVsbCBzaG91bGQgbmV2ZXIgaGF2ZSBiZWVuIHRyaWVkIGFzIGFuIGFkdWx0LgpIZSByZW1haW5zIGluIGphaWwsIGhvd2V2ZXIsIHVuYWJsZSB0byBtYWtlIGJhaWwgd2hpbGUgcHJvc2VjdXRvcnMgcHJlcGFyZSBhbiBhcHBlYWwuCkEgUXVlc3Rpb24gb2YgUmFjaWFsIEJpYXMKUHJvdGVzdGVycyBzYXkgdGhlIGF0dGVtcHRlZCBtdXJkZXIgY2hhcmdlcyBmb3IgdGhlIHVuYXJtZWQgdGVlbnMgd2VyZSB1bmZhaXIsIGFuZCB0aGF0IG5vIHdoaXRlIHN0dWRlbnRzIGV2ZXIgZmFjZWQgdGhvc2Uga2luZHMgb2YgY2hhcmdlcyBhZnRlciBvdGhlciwgc2ltaWxhciBicmF3bHMuCkJ1dCBXZWRuZXNkYXksIHRoZSBwcm9zZWN1dG9yIHJlamVjdGVkIGFjY3VzYXRpb25zIG9mIGJpYXMuCiJXaXRoIGFsbCBvZiB0aGUgZm9jdXMgb24gdGhlIGRlZmVuZGFudHMsIG1hbnkgcGVvcGxlIHNlZW0gdG8gaGF2ZSBmb3Jnb3R0ZW4gdGhlcmUgd2FzIGEgdmljdGltIGluIHRoaXMgY2FzZSwiIHNhaWQgTGFTYWxsZSBQYXJpc2ggZGlzdHJpY3QgYXR0b3JuZXkgUmVlZCBXYWx0ZXJzLgpNZWRpYSBBdHRlbnRpb24KTWFueSB3aGl0ZSByZXNpZGVudHMgYmVsaWV2ZSB0aGVpciB0b3duIGhhcyBiZWVuIHVuZmFpcmx5IHRyYXNoZWQgYnkgb3V0c2lkZXJzIGFuZCB0aGUgbWVkaWEuCiJXZSdyZSBub3QgdGhlIG1vc3QgcmFjaXN0IHRvd24gaW4gdGhlIHdvcmxkLCBldmVuIHRob3VnaCB3ZSd2ZSBiZWVuIHBhaW50ZWQgb3V0IHRvIGJlLCIgc2FpZCByZXNpZGVudCBCaWxsaWUgRm93bGVyLgpCdXQgVGhlIFJldi4gQWwgU2hhcnB0b24sIHdobyBoZWxwZWQgb3JnYW5pemUgdGhlIG1hcmNoLCBhcmd1ZWQgdGhhdCB3aXRob3V0IHRoZSBwcm90ZXN0cywganVzdGljZSB3b3VsZCBiZSBhdCByaXNrIGluIEplbmEgYW5kIHNhaWQgdGhhdCBjcml0aWNzIHdobyBhY2N1c2UgaGltIG9mIGZhbm5pbmcgdGhlIGZsYW1lcyBvZiByYWNpYWwgaGF0cmVkIGFyZSBpbmNvcnJlY3QuCiJJIGhlbHBlZCB0byBicmluZyB0aGUgbmF0aW9uYWwgYXR0ZW50aW9uLCIgaGUgc2FpZC4KSSBkaWRuJ3QgY29tZSByaWRpbmcgaW4gb24gdGhlIG5hdGlvbmFsIGF0dGVudGlvbi4KVGhlIGNhc2UgaGFzIGV2ZW4gaGFkIGltcGxpY2F0aW9ucyBmb3IgcHJlc2lkZW50aWFsIGhvcGVmdWxzLgpTZW4uIEhpbGxhcnkgQ2xpbnRvbiwgRC1OLlkuLCBzcG9rZSBNb25kYXkgaW4gQ2hhcmxlc3RvbiwgUy5DLiwgYXQgdGhlIE5BQUNQIEZyZWVkb20gRnVuZCBCZW5lZml0IGFuZCBwcmFpc2VkIGxhc3QgRnJpZGF5J3Mgc3RhdGUgY291cnQgZGVjaXNpb24gdG8gb3ZlcnR1cm4gdGhlIGNvbnZpY3Rpb24gb2YgQmVsbCdzIGNvbnZpY3Rpb24uCg==
[]
RnJlZGRpZSBNYWMgUGF5cyAkNTBNIHRvIFNldHRsZSBDaGFyZ2VzCk1vcnRnYWdlIGZpbmFuY2UgY29tcGFueSBGcmVkZGllIE1hYyB3aWxsIHBheSAkNTAgbWlsbGlvbiB0byBzZXR0bGUgZmVkZXJhbCBjaGFyZ2VzIHRoYXQgaXQgZnJhdWR1bGVudGx5IG1pc3N0YXRlZCBlYXJuaW5ncyBvdmVyIGEgZm91ci15ZWFyIHBlcmlvZC4KVGhlIFNlY3VyaXRpZXMgYW5kIEV4Y2hhbmdlIENvbW1pc3Npb24gYW5ub3VuY2VkIHRoZSBzZXR0bGVtZW50IFRodXJzZGF5LgpGcmVkZGllIE1hYyBuZWl0aGVyIGFkbWl0dGVkIG5vciBkZW5pZWQgd3Jvbmdkb2luZyBpbiB0aGUgYWNjb3JkIGJ1dCBkaWQgYWdyZWUgdG8gcmVmcmFpbiBmcm9tIGZ1dHVyZSB2aW9sYXRpb25zIG9mIHRoZSBzZWN1cml0aWVzIGxhd3MuClRocmVlIGZvcm1lciBGcmVkZGllIE1hYyBleGVjdXRpdmVzIHNldHRsZWQgdGhlIFNFQydzIG5lZ2xpZ2VudCBjb25kdWN0IGNoYXJnZXMgYnkgYWdyZWVpbmcgdG8gcGF5IGEgdG90YWwgb2YgJDI2NSwwMDAgaW4gY2l2aWwgZmluZXMgYW5kIHRvIG1ha2UgcmVzdGl0dXRpb24gdG90YWxpbmcgJDEyNSw1NDguCiJXZSB0YWtlIHRoZXNlIGNoYXJnZXMgc2VyaW91c2x5LCBhbmQgdGhhdCdzIHdoeSB0aGUgRnJlZGRpZSBNYWMgb2YgdG9kYXkgaXMgYSB2ZXJ5IGRpZmZlcmVudCBjb21wYW55IHRoYW4gdGhlIEZyZWRkaWUgTWFjIG9mIHRoZSBwYXN0LCIgc2FpZCBSaWNoYXJkIFN5cm9uLCBGcmVkZGllIE1hYydzIGNoYWlybWFuIGFuZCBjaGllZiBleGVjdXRpdmUgb2ZmaWNlci4KQW4gYWNjb3VudGluZyBzY2FuZGFsIGVydXB0ZWQgYXQgdGhlIGdvdmVybm1lbnQtc3BvbnNvcmVkIGNvbXBhbnkgaW4gSnVuZSAyMDAzIHdoZW4gaXQgZGlzY2xvc2VkIHRoYXQgaXQgaGFkIG1pc3N0YXRlZCBlYXJuaW5ncyBieSBzb21lICQ1IGJpbGxpb24gbW9zdGx5IHVuZGVycmVwb3J0ZWQgZm9yIDIwMDAtMjAwMiB0byBzbW9vdGggcXVhcnRlcmx5IHZvbGF0aWxpdHkgaW4gZWFybmluZ3MgYW5kIG1lZXQgV2FsbCBTdHJlZXQgZXhwZWN0YXRpb25zLgpUaGUgY29tcGFueSdzIHRvcCBleGVjdXRpdmVzIHdlcmUgb3VzdGVkLgpUaGUgZXZlbnRzIHNob2NrZWQgV2FsbCBTdHJlZXQsIHdoZXJlIEZyZWRkaWUgTWFjLCB0aGUgbmF0aW9uJ3Mgc2Vjb25kLWxhcmdlc3QgYnV5ZXIgYW5kIGd1YXJhbnRvciBvZiBob21lIG1vcnRnYWdlcywgbG9uZyBoYWQgZW5qb3llZCBhIHJlcHV0YXRpb24gYXMgYSBzdGVhZHkgcGVyZm9ybWVyIGFuZCByZWxpYWJsZSBjb3Jwb3JhdGUgcGxheWVyLgpGcmVkZGllIE1hYyBwYWlkIGEgdGhlbi1yZWNvcmQgJDEyNSBtaWxsaW9uIGNpdmlsIGZpbmUgaW4gMjAwMyBpbiBhIHNldHRsZW1lbnQgd2l0aCB0aGUgT2ZmaWNlIG9mIEZlZGVyYWwgSG91c2luZyBFbnRlcnByaXNlIE92ZXJzaWdodCwgd2hpY2ggYmxhbWVkIG1hbmFnZW1lbnQgbWlzY29uZHVjdCBmb3IgdGhlIGZhdWx0eSBhY2NvdW50aW5nLgpJbiBhIGxhd3N1aXQgZmlsZWQgaW4gZmVkZXJhbCBjb3VydCBpbiBXYXNoaW5ndG9uLCB0aGUgU0VDIHNhaWQgRnJlZGRpZSBNYWMgImVuZ2FnZWQgaW4gYSBmcmF1ZHVsZW50IHNjaGVtZSB0aGF0IGRlY2VpdmVkIGludmVzdG9ycyBhYm91dCBpdHMgdHJ1ZSBwZXJmb3JtYW5jZSwgcHJvZml0YWJpbGl0eSBhbmQgZ3Jvd3RoIHRyZW5kcy4iCiJBcyBoYXMgYmVlbiBzZWVuIGluIHNvIG1hbnkgY2FzZXMsIEZyZWRkaWUgTWFjJ3MgZGVwYXJ0dXJlIGZyb20gcHJvcGVyIGFjY291bnRpbmcgcHJhY3RpY2VzIHdhcyB0aGUgcmVzdWx0IG9mIGEgY29ycG9yYXRlIGN1bHR1cmUgdGhhdCBzb3VnaHQgc3RhYmxlIGVhcm5pbmdzIGdyb3d0aCBhdCBhbnkgY29zdCwiIFNFQyBFbmZvcmNlbWVudCBEaXJlY3RvciBMaW5kYSBUaG9tc2VuIHNhaWQgaW4gYSBzdGF0ZW1lbnQuClRoZSBTRUMgc2FpZCBUaHVyc2RheSB0aGF0IHRoZSAkNTAgbWlsbGlvbiBGcmVkZGllIE1hYyBhZ3JlZWQgdG8gcGF5IHdpbGwgYmUgZGlzdHJpYnV0ZWQgdG8gc2hhcmVob2xkZXJzIGluanVyZWQgYnkgdGhlIGFsbGVnZWQgYWNjb3VudGluZyBmcmF1ZC4KSW4gYWZ0ZXJub29uIHRyYWRpbmcsIHNoYXJlcyBvZiBGcmVkZGllIE1hYyByb3NlIDE4IGNlbnRzLCBvciAwLjMgcGVyY2VudCwgdG8gJDU5LjcxLgpPdmVyIHRoZSBwYXN0IDUyIHdlZWtzLCB0aGUgY29tcGFueSdzIHN0b2NrIGhhcyB0cmFkZWQgYmV0d2VlbiAkNTQuOTcgYW5kICQ3MS45Mi4KRnJlZGRpZSBNYWM6IGh0dHA6Ly93d3cuZnJlZGRpZW1hYy5jb20K
[]
Um9ja2llcyBUYWtlIDIgb24gVGl4ClRoZSBDb2xvcmFkbyBSb2NraWVzIHBsYW5uZWQgdG8gcmVsYXVuY2ggb25saW5lIHNhbGVzIG9mIFdvcmxkIFNlcmllcyB0aWNrZXRzIFR1ZXNkYXkgYWZ0ZXIgdGhlaXIgZmlyc3QgYXR0ZW1wdCB3YXMgc3RvcHBlZCBieSBhIGNvbXB1dGVyLXN5c3RlbSBjcmFzaCB0aGUgdGVhbSBibGFtZWQgb24gYW4gImV4dGVybmFsLCBtYWxpY2lvdXMgYXR0YWNrLiIKVGhlIFJvY2tpZXMgd2VyZSBmb3JjZWQgdG8gc3RvcCB0aGUgb25saW5lLW9ubHkgc2FsZSBvZiB0aWNrZXRzIGFmdGVyIGFib3V0IHR3byBob3VycyBNb25kYXkgYWZ0ZXIgOC41IG1pbGxpb24gaGl0cyBvdmVyd2hlbG1lZCB0aGUgc2VydmVycyBzZXQgdXAgdG8gdGFrZSB0aGUgb3JkZXJzLgpMYXRlciwgUm9ja2llcyBzcG9rZXNtYW4gSmF5IEFsdmVzIHNhaWQgdGhlIHRpY2tldCBzYWxlcyBXZWIgc2l0ZSBoYWQgY3Jhc2hlZCBiZWNhdXNlIG9mIGFuIGF0dGFjay4KSGUgb2ZmZXJlZCBubyBzcGVjaWZpY3MuCkFza2VkIGlmIHRoZSB0ZWFtIHdhcyBwcmVwYXJlZCBmb3IgcmVwZWF0LCBBbHZlcyBzYWlkOiAiV2UgYWJzb2x1dGVseSBoYXZlIGJhY2t1cCBwbGFucyBpbiBwbGFjZSwiIGJ1dCBoZSBkaWQgbm90IGVsYWJvcmF0ZS4KSGUgcmVmZXJyZWQgcXVlc3Rpb25zIGFib3V0IHRoZSBhdHRhY2sgdG8gSXJ2aW5lLCBDYWxpZi4tYmFzZWQgUGFjaW9sYW4gSW5jLiwgd2hpY2ggcnVucyB0aGUgY29tcHV0ZXJzIGZvciB0aGUgUm9ja2llcycgV29ybGQgU2VyaWVzIHRpY2tldCBzYWxlcy4KUGFjaW9sYW4gcmVwcmVzZW50YXRpdmVzIGRpZCBub3QgaW1tZWRpYXRlbHkgcmV0dXJuIHBob25lIG1lc3NhZ2VzLgpFYXJsaWVyLCB0aGUgY29tcGFueSBzYWlkIHRoZSBjcmFzaCB3YXNuJ3QgdGhlIFJvY2tpZXMnIGZhdWx0LgpNYXR0IEdvdWxkLCBhIHNwb2tlc21hbiBmb3IgTUxCLmNvbSwgTWFqb3IgTGVhZ3VlIEJhc2ViYWxsJ3MgV2ViIHNpdGUsIHNhaWQgaGUgaG9wZWQgdG8gaGF2ZSBhZGRpdGlvbmFsIGRldGFpbHMgVHVlc2RheS4KVGhlIFJvY2tpZXMgc2FpZCBmZXdlciB0aGFuIDUwMCB0aWNrZXRzIHdlcmUgc29sZCBNb25kYXkgYmVmb3JlIHRoZSBzYWxlIHdhcyBzaHV0IGRvd24uCkFsbCB0aG9zZSB0aWNrZXRzIHdpbGwgYmUgaG9ub3JlZCwgdGhlIHRlYW0gc2FpZC4KVGhyb3VnaG91dCB0aGUgZGF5IE1vbmRheSwgYW54aW91cyBmYW5zIGZvcm1lZCBsaW5lcyBhdCB0aGUgQ29vcnMgRmllbGQgYm94IG9mZmljZSBidXQgbGVmdCBkaXNhcHBvaW50ZWQgYWZ0ZXIgc2VjdXJpdHkgZ3VhcmRzIGluc2lzdGVkIG5vIHRpY2tldHMgd291bGQgYmUgc29sZCB0aGVyZS4KV2hlbiBBbHZlcyBzcG9rZSB0byByZXBvcnRlcnMgb3V0c2lkZSBDb29ycyBGaWVsZCBNb25kYXksIHNvbWUgZmFucyBib29lZCBvciBjaGFudGVkICJXZSB3YW50IHRpY2tldHMhIgoiV2UncmUgYXMgZnJ1c3RyYXRlZCBhbmQgZGlzYXBwb2ludGVkIGFzIHRoZXkgYXJlLCIgQWx2ZXMgc2FpZCBhdCB0aGUgdGltZS4KVGhlIFJvY2tpZXMgb3JpZ2luYWxseSBwbGFubmVkIHRvIHNlbGwgdGlja2V0cyBhdCBDb29ycyBGaWVsZCBhbmQgdGhlIHRlYW0ncyBEdWdvdXQgU3RvcmVzIGluIHRoZSBEZW52ZXIgYXJlYSBhcyB3ZWxsIGFzIG9ubGluZS4KVGhleSBhbm5vdW5jZWQgV2VkbmVzZGF5IGFsbCBzYWxlcyB3b3VsZCBiZSBvbmxpbmUsIHNheWluZyB0aGF0IHdvdWxkIGJlIG1vcmUgZmFpci4KVGhlIFJlZCBTb3ggaGVsZCBhIHJhbmRvbSBvbmxpbmUgZHJhd2luZyBmb3IgdGhlIHJpZ2h0IHRvIGJ1eSB0aWNrZXRzIHRvIEZlbndheSBQYXJrIGdhbWVzLCBzYWlkIFJvbiBCdW1nYXJuZXIsIHZpY2UgcHJlc2lkZW50IG9mIHRpY2tldGluZy4KVGhlIE9jdC4gMTUgZHJhd2luZyBhdHRyYWN0ZWQgbW9yZSB0aGFuIDM1MCwwMDAgZmFuczsgdGhlIHdpbm5lcnMgYm91Z2h0IHRpY2tldHMgYXQgYSBwcml2YXRlIHNhbGUuClRoZSB0ZWFtIGFsc28gaGFkIGEgdGVsZXBob25lIHNhbGUgZm9yIGZhbnMgd2l0aG91dCBjb21wdXRlciBhY2Nlc3MsIEJ1bWdhcm5lciBzYWlkLgoiSXQncyBvdXIgZ29hbCB0byB0cnkgdG8gbWFrZSBpdCBhcyBzbW9vdGggYW5kIGZhaXIgYW5kIGVmZmljaWVudCBhcyBwb3NzaWJsZSwiIGhlIHNhaWQuCkEgbGltaXRlZCBudW1iZXIgb2YgdGlja2V0cyB3aWxsIGFsc28gZ28gb24gc2FsZSBhdCBGZW53YXkgUGFyayBvbiBnYW1lIGRheSwgd2l0aCBmYW5zIGFsbG93ZWQgdG8gbGluZSB1cCBmaXZlIGhvdXJzIGJlZm9yZSBnYW1lIHRpbWUuCkFsdmVzIHNhaWQgaXQgd2FzIHRvbyBsYXRlIGZvciB0aGUgUm9ja2llcyB0byBpbXBsZW1lbnQgYSBzeXN0ZW0gbGlrZSBCb3N0b24ncy4KRmVud2F5IFBhcmsgdGlja2V0cyByYW5nZSBmcm9tICQ1MCB0byAkMjI1LgpDb29ycyBGaWVsZCB0aWNrZXRzIGFyZSAkNjUgdG8gJDI1MC4KVGhlIFJvY2tpZXMgc2FpZCBuZWFybHkgMTgsMDAwIHRpY2tldHMgd2VyZSBhdmFpbGFibGUgZm9yIGVhY2ggZ2FtZSBpbiBEZW52ZXIgbGVzcyB0aGFuIGhhbGYgb2YgQ29vcnMgRmllbGQncyA1MCw0NDkgc2VhdHMgd291bGQgYmUgYXZhaWxhYmxlIGZvciBnZW5lcmFsIHNhbGUgaW4gZWFjaCBXb3JsZCBTZXJpZXMgZ2FtZSBpbiBEZW52ZXIuClRoZSByZW1haW5pbmcgc2VhdHMgYXJlIGFsbG90dGVkIHRvIHNlYXNvbi10aWNrZXQgaG9sZGVycywgdGhlIHR3byB0ZWFtcyBhbmQgTWFqb3IgTGVhZ3VlIEJhc2ViYWxsLgpTZWFzb24gdGlja2V0IGhvbGRlcnMgd2VyZSBhbGxvd2VkIHRvIGJ1eSB0aWNrZXRzIG92ZXIgdGhlIHdlZWtlbmQuClBhY2lvbGFuIGVhcmxpZXIgc2FpZCB0aGUgY3Jhc2ggYWZmZWN0ZWQgdGhlIGNvbXBhbnkncyBlbnRpcmUgTm9ydGggQW1lcmljYW4gc3lzdGVtLgoiV2UgYXJlIHdvcmtpbmcgaGFyZCB0byBhZGRyZXNzIGl0LCIgUGFjaW9sYW4gQ0VPIERhdmUgQnV0bGVyIHNhaWQuCkFzc29jaWF0ZWQgUHJlc3MgV3JpdGVycyBDYXRoZXJpbmUgVHNhaSBhbmQgR2VvcmdlIE1lcnJpdHQgaW4gRGVudmVyIGFuZCBOYW5jeSBSYWJpbm93aXR6IGluIEJvc3RvbiBjb250cmlidXRlZCB0byB0aGlzIHJlcG9ydC4K
[(Um9ja2llcyBUYWtlIDIgb24gVGl4ClRoZSBDb2xvcmFkbyBSb2NraWVzIHBsYW5uZWQgdG8gcmVsYXVuY2ggb25saW5lIHNhbGVzIG9mIFdvcmxkIFNlcmllcyB0aWNrZXRzIFR1ZXNkYXkgYWZ0ZXIgdGhlaXIgZmlyc3QgYXR0ZW1wdCB3YXMgc3RvcHBlZCBieSBhIGNvbXB1dGVyLXN5c3RlbSBjcmFzaCB0aGUgdGVhbSBibGFtZWQgb24gYW4gImV4dGVybmFsLCBtYWxpY2lvdXMgYXR0YWNrLiIKVGhlIFJvY2tpZXMgd2VyZSBmb3JjZWQgdG8gc3RvcCB0aGUgb25saW5lLW9ubHkgc2FsZSBvZiB0aWNrZXRzIGFmdGVyIGFib3V0IHR3byBob3VycyBNb25kYXkgYWZ0ZXIgOC41IG1pbGxpb24gaGl0cyBvdmVyd2hlbG1lZCB0aGUgc2VydmVycyBzZXQgdXAgdG8gdGFrZSB0aGUgb3JkZXJzLgpMYXRlciwgUm9ja2llcyBzcG9rZXNtYW4gSmF5IEFsdmVzIHNhaWQgdGhlIHRpY2tldCBzYWxlcyBXZWIgc2l0ZSBoYWQgY3Jhc2hlZCBiZWNhdXNlIG9mIGFuIGF0dGFjay4KSGUgb2ZmZXJlZCBubyBzcGVjaWZpY3MuCkFza2VkIGlmIHRoZSB0ZWFtIHdhcyBwcmVwYXJlZCBmb3IgcmVwZWF0LCBBbHZlcyBzYWlkOiAiV2UgYWJzb2x1dGVseSBoYXZlIGJhY2t1cCBwbGFucyBpbiBwbGFjZSwiIGJ1dCBoZSBkaWQgbm90IGVsYWJvcmF0ZS4KSGUgcmVmZXJyZWQgcXVlc3Rpb25zIGFib3V0IHRoZSBhdHRhY2sgdG8gSXJ2aW5lLCBDYWxpZi4tYmFzZWQgUGFjaW9sYW4gSW5jLiwgd2hpY2ggcnVucyB0aGUgY29tcHV0ZXJzIGZvciB0aGUgUm9ja2llcycgV29ybGQgU2VyaWVzIHRpY2tldCBzYWxlcy4KUGFjaW9sYW4gcmVwcmVzZW50YXRpdmVzIGRpZCBub3QgaW1tZWRpYXRlbHkgcmV0dXJuIHBob25lIG1lc3NhZ2VzLgpFYXJsaWVyLCB0aGUgY29tcGFueSBzYWlkIHRoZSBjcmFzaCB3YXNuJ3QgdGhlIFJvY2tpZXMnIGZhdWx0LgpNYXR0IEdvdWxkLCBhIHNwb2tlc21hbiBmb3IgTUxCLmNvbSwgTWFqb3IgTGVhZ3VlIEJhc2ViYWxsJ3MgV2ViIHNpdGUsIHNhaWQgaGUgaG9wZWQgdG8gaGF2ZSBhZGRpdGlvbmFsIGRldGFpbHMgVHVlc2RheS4KVGhlIFJvY2tpZXMgc2FpZCBmZXdlciB0aGFuIDUwMCB0aWNrZXRzIHdlcmUgc29sZCBNb25kYXkgYmVmb3JlIHRoZSBzYWxlIHdhcyBzaHV0IGRvd24uCkFsbCB0aG9zZSB0aWNrZXRzIHdpbGwgYmUgaG9ub3JlZCwgdGhlIHRlYW0gc2FpZC4KVGhyb3VnaG91dCB0aGUgZGF5IE1vbmRheSwgYW54aW91cyBmYW5zIGZvcm1lZCBsaW5lcyBhdCB0aGUgQ29vcnMgRmllbGQgYm94IG9mZmljZSBidXQgbGVmdCBkaXNhcHBvaW50ZWQgYWZ0ZXIgc2VjdXJpdHkgZ3VhcmRzIGluc2lzdGVkIG5vIHRpY2tldHMgd291bGQgYmUgc29sZCB0aGVyZS4KV2hlbiBBbHZlcyBzcG9rZSB0byByZXBvcnRlcnMgb3V0c2lkZSBDb29ycyBGaWVsZCBNb25kYXksIHNvbWUgZmFucyBib29lZCBvciBjaGFudGVkICJXZSB3YW50IHRpY2tldHMhIgoiV2UncmUgYXMgZnJ1c3RyYXRlZCBhbmQgZGlzYXBwb2ludGVkIGFzIHRoZXkgYXJlLCIgQWx2ZXMgc2FpZCBhdCB0aGUgdGltZS4KVGhlIFJvY2tpZXMgb3JpZ2luYWxseSBwbGFubmVkIHRvIHNlbGwgdGlja2V0cyBhdCBDb29ycyBGaWVsZCBhbmQgdGhlIHRlYW0ncyBEdWdvdXQgU3RvcmVzIGluIHRoZSBEZW52ZXIgYXJlYSBhcyB3ZWxsIGFzIG9ubGluZS4KVGhleSBhbm5vdW5jZWQgV2VkbmVzZGF5IGFsbCBzYWxlcyB3b3VsZCBiZSBvbmxpbmUsIHNheWluZyB0aGF0IHdvdWxkIGJlIG1vcmUgZmFpci4KVGhlIFJlZCBTb3ggaGVsZCBhIHJhbmRvbSBvbmxpbmUgZHJhd2luZyBmb3IgdGhlIHJpZ2h0IHRvIGJ1eSB0aWNrZXRzIHRvIEZlbndheSBQYXJrIGdhbWVzLCBzYWlkIFJvbiBCdW1nYXJuZXIsIHZpY2UgcHJlc2lkZW50IG9mIHRpY2tldGluZy4KVGhlIE9jdC4gMTUgZHJhd2luZyBhdHRyYWN0ZWQgbW9yZSB0aGFuIDM1MCwwMDAgZmFuczsgdGhlIHdpbm5lcnMgYm91Z2h0IHRpY2tldHMgYXQgYSBwcml2YXRlIHNhbGUuClRoZSB0ZWFtIGFsc28gaGFkIGEgdGVsZXBob25lIHNhbGUgZm9yIGZhbnMgd2l0aG91dCBjb21wdXRlciBhY2Nlc3MsIEJ1bWdhcm5lciBzYWlkLgoiSXQncyBvdXIgZ29hbCB0byB0cnkgdG8gbWFrZSBpdCBhcyBzbW9vdGggYW5kIGZhaXIgYW5kIGVmZmljaWVudCBhcyBwb3NzaWJsZSwiIGhlIHNhaWQuCkEgbGltaXRlZCBudW1iZXIgb2YgdGlja2V0cyB3aWxsIGFsc28gZ28gb24gc2FsZSBhdCBGZW53YXkgUGFyayBvbiBnYW1lIGRheSwgd2l0aCBmYW5zIGFsbG93ZWQgdG8gbGluZSB1cCBmaXZlIGhvdXJzIGJlZm9yZSBnYW1lIHRpbWUuCkFsdmVzIHNhaWQgaXQgd2FzIHRvbyBsYXRlIGZvciB0aGUgUm9ja2llcyB0byBpbXBsZW1lbnQgYSBzeXN0ZW0gbGlrZSBCb3N0b24ncy4KRmVud2F5IFBhcmsgdGlja2V0cyByYW5nZSBmcm9tICQ1MCB0byAkMjI1LgpDb29ycyBGaWVsZCB0aWNrZXRzIGFyZSAkNjUgdG8gJDI1MC4KVGhlIFJvY2tpZXMgc2FpZCBuZWFybHkgMTgsMDAwIHRpY2tldHMgd2VyZSBhdmFpbGFibGUgZm9yIGVhY2ggZ2FtZSBpbiBEZW52ZXIgbGVzcyB0aGFuIGhhbGYgb2YgQ29vcnMgRmllbGQncyA1MCw0NDkgc2VhdHMgd291bGQgYmUgYXZhaWxhYmxlIGZvciBnZW5lcmFsIHNhbGUgaW4gZWFjaCBXb3JsZCBTZXJpZXMgZ2FtZSBpbiBEZW52ZXIuClRoZSByZW1haW5pbmcgc2VhdHMgYXJlIGFsbG90dGVkIHRvIHNlYXNvbi10aWNrZXQgaG9sZGVycywgdGhlIHR3byB0ZWFtcyBhbmQgTWFqb3IgTGVhZ3VlIEJhc2ViYWxsLgpTZWFzb24gdGlja2V0IGhvbGRlcnMgd2VyZSBhbGxvd2VkIHRvIGJ1eSB0aWNrZXRzIG92ZXIgdGhlIHdlZWtlbmQuClBhY2lvbGFuIGVhcmxpZXIgc2FpZCB0aGUgY3Jhc2ggYWZmZWN0ZWQgdGhlIGNvbXBhbnkncyBlbnRpcmUgTm9ydGggQW1lcmljYW4gc3lzdGVtLgoiV2UgYXJlIHdvcmtpbmcgaGFyZCB0byBhZGRyZXNzIGl0LCIgUGFjaW9sYW4gQ0VPIERhdmUgQnV0bGVyIHNhaWQuCkFzc29jaWF0ZWQgUHJlc3MgV3JpdGVycyBDYXRoZXJpbmUgVHNhaSBhbmQgR2VvcmdlIE1lcnJpdHQgaW4gRGVudmVyIGFuZCBOYW5jeSBSYWJpbm93aXR6IGluIEJvc3RvbiBjb250cmlidXRlZCB0byB0aGlzIHJlcG9ydC4K, 'PERSON')]
VGVlbiBBZG1pdHMgU3RvY2twaWxpbmcgV2VhcG9ucwpBIDE0LXllYXItb2xkIGJveSBhY2N1c2VkIG9mIHBsb3R0aW5nIGEgQ29sdW1iaW5lLXN0eWxlIGF0dGFjayBvbiBhIHN1YnVyYmFuIFBoaWxhZGVscGhpYSBoaWdoIHNjaG9vbCBhZG1pdHRlZCBpbiBjb3VydCBGcmlkYXkgdGhhdCBoZSBpbGxlZ2FsbHkgc3RvY2twaWxlZCB3ZWFwb25zLgpEaWxsb24gQ29zc2V5LCAxNCwgYWRtaXR0ZWQgdG8gdGhyZWUgY3JpbWVzIGNyaW1pbmFsIHNvbGljaXRhdGlvbiwgcmlza2luZyBhIGNhdGFzdHJvcGhlIGFuZCBwb3NzZXNzaW9uIG9mIGFuIGluc3RydW1lbnQgb2YgY3JpbWUgaW4gTW9udGdvbWVyeSBDb3VudHkganV2ZW5pbGUgY291cnQuCkNvc3NleSwgYSBob21lLXNjaG9vbGVkIHN0dWRlbnQgZnJvbSBQbHltb3V0aCBUb3duc2hpcCwgd2FzIGFycmVzdGVkIGVhcmxpZXIgdGhpcyBtb250aC4KSGUgdHJpZWQgdG8gcmVjcnVpdCBhbm90aGVyIGJveSBpbiB0aGUgcGxhbiwgd2hpY2ggaW5jbHVkZWQgY2hhaW5pbmcgc2h1dCB0aGUgZG9vcnMgYXQgUGx5bW91dGggV2hpdGVtYXJzaCBIaWdoIFNjaG9vbCwgTW9udGdvbWVyeSBDb3VudHkgRGlzdHJpY3QgQXR0b3JuZXkgQnJ1Y2UgTC4gQ2FzdG9yIEpyLiBzYWlkIEZyaWRheS4KSGUgaGFkIGFtYXNzZWQgYSBzdG9ja3BpbGUgb2Ygd2VhcG9ucywgaW5jbHVkaW5nIGEgOSBtbSBzZW1pYXV0b21hdGljIHJpZmxlLCBhYm91dCAzMCBhaXItcG93ZXJlZCBndW5zIG1vZGVsZWQgdG8gbG9vayBsaWtlIGhpZ2hlci1wb3dlcmVkIHdlYXBvbnMsIHN3b3Jkcywga25pdmVzLCBhIGJvbWItbWFraW5nIGJvb2ssIHZpZGVvcyBvZiB0aGUgMTk5OSBDb2x1bWJpbmUgaGlnaCBzY2hvb2wgYXR0YWNrIGluIENvbG9yYWRvIGFuZCB2aW9sZW5jZS1maWxsZWQgbm90ZWJvb2tzLCBhdXRob3JpdGllcyBzYWlkLgpUaGUgYm95IHdpbGwgYmUgcGxhY2VkIGluIGp1dmVuaWxlIGN1c3RvZHkuClRoZSBsb25nZXN0IGhlIGNhbiByZW1haW4gdGhlcmUgaXMgdW50aWwgaGlzIDIxc3QgYmlydGhkYXkuCkNvc3NleSB3aWxsIHJlY2VpdmUgcmVndWxhciBldmFsdWF0aW9ucyBieSB0aGUgSnVkZ2UgUGF1bCBUcmVzc2xlci4KIkknbSBnb2luZyB0byBtYWtlIGl0IGNsZWFyIHRvIHlvdSBhbmQgeW91ciBwYXJlbnRzLCBpZiB5b3UgZ2V0IHRvIHRoZSBwb2ludCB3aGVyZSB5b3UncmUgcmVhZHkgdG8gZ2V0IGhvbWUsIGJ1dCB0aGV5J3JlIG5vdCB3b3J0aHkgb2YgaGF2aW5nIHlvdSwgSSdsbCBzZW5kIHlvdSBzb21ld2hlcmUgZWxzZSIgc3VjaCBhcyB0byBhIHJlbGF0aXZlIG9yIGZvc3RlciBob21lLCBUcmVzc2xlciB0b2xkIENvc3NleS4KQXV0aG9yaXRpZXMgYWNjdXNlZCBDb3NzZXkncyBtb3RoZXIsIE1pY2hlbGUsIG9mIGhlbHBpbmcgaGltIGJ1aWxkIGhpcyB3ZWFwb25zIGNhY2hlLgpNaWNoZWxlIENvc3NleSwgNDYsIGlzIGNoYXJnZWQgd2l0aCBpbGxlZ2FsbHkgYnV5aW5nIGhlciBzb24gYSAuMjItY2FsaWJlciBoYW5kZ3VuLCBhIC4yMi1jYWxpYmVyIHJpZmxlIGFuZCBhIDkgbW0gc2VtaWF1dG9tYXRpYyByaWZsZSB3aXRoIGEgbGFzZXIgc2NvcGUuCkNvc3NleSB0b29rIHRoZSBzdGFuZCBkdXJpbmcgRnJpZGF5J3MgaGVhcmluZyBhbmQgYW5zd2VyZWQgeWVzIGFuZCBubyBxdWVzdGlvbnMuCkNvc3NleSBhZG1pdHRlZCB0byB0ZWxsaW5nIGEgZnJpZW5kIHRoYXQgaGUgd2FudGVkIHRvIHN0YWdlIGFuIGF0dGFjayBzaW1pbGFyIHRvIHRoZSAxOTk5IGFzc2F1bHQgb24gQ29sdW1iaW5lIEhpZ2ggU2Nob29sIGluIENvbG9yYWRvLCB0ZWxsaW5nIGhpbSwgIlRoZSB3b3JsZCB3b3VsZCBiZSBiZXR0ZXIgb2ZmIHdpdGhvdXQgYnVsbGllcywiIGFjY29yZGluZyB0byBDYXN0b3IuCkF1dGhvcml0aWVzIGRvIG5vdCBiZWxpZXZlIHRoZSB0ZWVuIHdhcyBjbG9zZSB0byBwdWxsaW5nIG9mZiBhbiBhdHRhY2s7IGhlIGhhZCBubyBhbW11bml0aW9uIGFuZCB0aGUgdGVlbiBoZSBhcHByb2FjaGVkIHdhcyB0aGUgZmlyc3QgaGUgaGFkIGFza2VkIGZvciBhc3Npc3RhbmNlLgo=
[(VGVlbiBBZG1pdHMgU3RvY2twaWxpbmcgV2VhcG9ucwpBIDE0LXllYXItb2xkIGJveSBhY2N1c2VkIG9mIHBsb3R0aW5nIGEgQ29sdW1iaW5lLXN0eWxlIGF0dGFjayBvbiBhIHN1YnVyYmFuIFBoaWxhZGVscGhpYSBoaWdoIHNjaG9vbCBhZG1pdHRlZCBpbiBjb3VydCBGcmlkYXkgdGhhdCBoZSBpbGxlZ2FsbHkgc3RvY2twaWxlZCB3ZWFwb25zLgpEaWxsb24gQ29zc2V5LCAxNCwgYWRtaXR0ZWQgdG8gdGhyZWUgY3JpbWVzIGNyaW1pbmFsIHNvbGljaXRhdGlvbiwgcmlza2luZyBhIGNhdGFzdHJvcGhlIGFuZCBwb3NzZXNzaW9uIG9mIGFuIGluc3RydW1lbnQgb2YgY3JpbWUgaW4gTW9udGdvbWVyeSBDb3VudHkganV2ZW5pbGUgY291cnQuCkNvc3NleSwgYSBob21lLXNjaG9vbGVkIHN0dWRlbnQgZnJvbSBQbHltb3V0aCBUb3duc2hpcCwgd2FzIGFycmVzdGVkIGVhcmxpZXIgdGhpcyBtb250aC4KSGUgdHJpZWQgdG8gcmVjcnVpdCBhbm90aGVyIGJveSBpbiB0aGUgcGxhbiwgd2hpY2ggaW5jbHVkZWQgY2hhaW5pbmcgc2h1dCB0aGUgZG9vcnMgYXQgUGx5bW91dGggV2hpdGVtYXJzaCBIaWdoIFNjaG9vbCwgTW9udGdvbWVyeSBDb3VudHkgRGlzdHJpY3QgQXR0b3JuZXkgQnJ1Y2UgTC4gQ2FzdG9yIEpyLiBzYWlkIEZyaWRheS4KSGUgaGFkIGFtYXNzZWQgYSBzdG9ja3BpbGUgb2Ygd2VhcG9ucywgaW5jbHVkaW5nIGEgOSBtbSBzZW1pYXV0b21hdGljIHJpZmxlLCBhYm91dCAzMCBhaXItcG93ZXJlZCBndW5zIG1vZGVsZWQgdG8gbG9vayBsaWtlIGhpZ2hlci1wb3dlcmVkIHdlYXBvbnMsIHN3b3Jkcywga25pdmVzLCBhIGJvbWItbWFraW5nIGJvb2ssIHZpZGVvcyBvZiB0aGUgMTk5OSBDb2x1bWJpbmUgaGlnaCBzY2hvb2wgYXR0YWNrIGluIENvbG9yYWRvIGFuZCB2aW9sZW5jZS1maWxsZWQgbm90ZWJvb2tzLCBhdXRob3JpdGllcyBzYWlkLgpUaGUgYm95IHdpbGwgYmUgcGxhY2VkIGluIGp1dmVuaWxlIGN1c3RvZHkuClRoZSBsb25nZXN0IGhlIGNhbiByZW1haW4gdGhlcmUgaXMgdW50aWwgaGlzIDIxc3QgYmlydGhkYXkuCkNvc3NleSB3aWxsIHJlY2VpdmUgcmVndWxhciBldmFsdWF0aW9ucyBieSB0aGUgSnVkZ2UgUGF1bCBUcmVzc2xlci4KIkknbSBnb2luZyB0byBtYWtlIGl0IGNsZWFyIHRvIHlvdSBhbmQgeW91ciBwYXJlbnRzLCBpZiB5b3UgZ2V0IHRvIHRoZSBwb2ludCB3aGVyZSB5b3UncmUgcmVhZHkgdG8gZ2V0IGhvbWUsIGJ1dCB0aGV5J3JlIG5vdCB3b3J0aHkgb2YgaGF2aW5nIHlvdSwgSSdsbCBzZW5kIHlvdSBzb21ld2hlcmUgZWxzZSIgc3VjaCBhcyB0byBhIHJlbGF0aXZlIG9yIGZvc3RlciBob21lLCBUcmVzc2xlciB0b2xkIENvc3NleS4KQXV0aG9yaXRpZXMgYWNjdXNlZCBDb3NzZXkncyBtb3RoZXIsIE1pY2hlbGUsIG9mIGhlbHBpbmcgaGltIGJ1aWxkIGhpcyB3ZWFwb25zIGNhY2hlLgpNaWNoZWxlIENvc3NleSwgNDYsIGlzIGNoYXJnZWQgd2l0aCBpbGxlZ2FsbHkgYnV5aW5nIGhlciBzb24gYSAuMjItY2FsaWJlciBoYW5kZ3VuLCBhIC4yMi1jYWxpYmVyIHJpZmxlIGFuZCBhIDkgbW0gc2VtaWF1dG9tYXRpYyByaWZsZSB3aXRoIGEgbGFzZXIgc2NvcGUuCkNvc3NleSB0b29rIHRoZSBzdGFuZCBkdXJpbmcgRnJpZGF5J3MgaGVhcmluZyBhbmQgYW5zd2VyZWQgeWVzIGFuZCBubyBxdWVzdGlvbnMuCkNvc3NleSBhZG1pdHRlZCB0byB0ZWxsaW5nIGEgZnJpZW5kIHRoYXQgaGUgd2FudGVkIHRvIHN0YWdlIGFuIGF0dGFjayBzaW1pbGFyIHRvIHRoZSAxOTk5IGFzc2F1bHQgb24gQ29sdW1iaW5lIEhpZ2ggU2Nob29sIGluIENvbG9yYWRvLCB0ZWxsaW5nIGhpbSwgIlRoZSB3b3JsZCB3b3VsZCBiZSBiZXR0ZXIgb2ZmIHdpdGhvdXQgYnVsbGllcywiIGFjY29yZGluZyB0byBDYXN0b3IuCkF1dGhvcml0aWVzIGRvIG5vdCBiZWxpZXZlIHRoZSB0ZWVuIHdhcyBjbG9zZSB0byBwdWxsaW5nIG9mZiBhbiBhdHRhY2s7IGhlIGhhZCBubyBhbW11bml0aW9uIGFuZCB0aGUgdGVlbiBoZSBhcHByb2FjaGVkIHdhcyB0aGUgZmlyc3QgaGUgaGFkIGFza2VkIGZvciBhc3Npc3RhbmNlLgo=, 'GPE')]

[]
U2lyaXVzIFNoYXJlaG9sZGVycyBBcHByb3ZlIFhNIERlYWwKU2hhcmVob2xkZXJzIG9mIFNpcml1cyBTYXRlbGxpdGUgUmFkaW8gSW5jLiBvbiBUdWVzZGF5IGFwcHJvdmVkIHRoZSBjb21wYW55J3MgJDUgYmlsbGlvbiBhY3F1aXNpdGlvbiBvZiByaXZhbCBYTSBTYXRlbGxpdGUgUmFkaW8gSG9sZGluZ3MgSW5jLgpUaGUgYXBwcm92YWwsIHdoaWNoIHdhcyBleHBlY3RlZCwgbm93IGxlYXZlcyB0aGUgdG91Z2hlciBvYnN0YWNsZXMgb2YgcmVndWxhdG9yeSBhc3NlbnQgYnkgdGhlIERlcGFydG1lbnQgb2YgSnVzdGljZSBhbmQgdGhlIEZlZGVyYWwgQ29tbXVuaWNhdGlvbnMgQ29tbWlzc2lvbi4KWE0ncyBzaGFyZWhvbGRlcnMgd2VyZSBhbHNvIHZvdGluZyBsYXRlciBUdWVzZGF5IG9uIHRoZSBkZWFsLgpTaXJpdXMgc2FpZCBpbiBhIHN0YXRlbWVudCB0aGF0IG1vcmUgdGhhbiA5NiBwZXJjZW50IG9mIHRoZSBzaGFyZWhvbGRlciB2b3RlcyBjYXN0IGFwcHJvdmVkIHRoZSBhY3F1aXNpdGlvbi4KVGhlIGNvbXBhbnkgc2FpZCBpdCBzdGlsbCBob3BlcyB0byBjb21wbGV0ZSB0aGUgZGVhbCBieSB0aGUgZW5kIG9mIHRoZSB5ZWFyLgpTaGFyZWhvbGRlciBhZHZpc29yeSBmaXJtcyBoYWQgZW5kb3JzZWQgdGhlIGRlYWwsIHdoaWNoIHdvdWxkIHNhdmUgY29zdHMgZm9yIGJvdGggY29tcGFuaWVzIG9uIGFjcXVpcmluZyBzdWJzY3JpYmVycywgcHJvZ3JhbW1pbmcgYW5kIGJyb2FkY2FzdGluZy4KVGhlIGRlYWwgc3RpbGwgZmFjZXMgY2xvc2Ugc2NydXRpbnkgYnkgcmVndWxhdG9ycyBpbiBXYXNoaW5ndG9uLCBob3dldmVyLCBhbmQgc29tZSBjb25zdW1lciBncm91cHMgaGF2ZSBvcHBvc2VkIHRoZSBjb21iaW5hdGlvbi4KVGhlIEZDQyBoYWQgb3JpZ2luYWxseSBzYWlkIHRoZSB0d28gc2F0ZWxsaXRlIHJhZGlvIGNvbXBhbmllcyBjb3VsZG4ndCBjb21iaW5lLCBidXQgdGhhdCBydWxlIGNhbiBiZSBjaGFuZ2VkLgpTaXJpdXMgYW5kIFhNIGhhdmUgYXJndWVkIHRoYXQgc2F0ZWxsaXRlIHJhZGlvIG5vdyBmYWNlcyBtb3JlIGNvbXBldGl0aW9uIGZvciBsaXN0ZW5lcnMgc2luY2UgdGhlIGJvb20gaW4gZGlnaXRhbCBsaXN0ZW5pbmcgZGV2aWNlcyBsaWtlIEFwcGxlIEluYy4ncyBpUG9kLCBJbnRlcm5ldCByYWRpbyBhbmQgY2VsbCBwaG9uZXMgdGhhdCBjYW4gcGxheSBtdXNpYy4KU2lyaXVzIGFuZCBYTSBoYXZlIHNhaWQgdGhhdCBhIGNvbWJpbmVkIGNvbXBhbnkgd291bGQgb2ZmZXIgbGlzdGVuZXJzIG1vcmUgcHJpY2luZyBvcHRpb25zIGFuZCBncmVhdGVyIGNob2ljZSBhbmQgZmxleGliaWxpdHkgaW4gdGhlIGNoYW5uZWwgbGluZXVwcyB0aGV5IHJlY2VpdmUuCkJvdGggU2lyaXVzIGFuZCBYTSBub3cgb2ZmZXIgcGFja2FnZXMgb2YgbXVzaWMsIHRhbGssIHNwb3J0cyBhbmQgb3RoZXIgcHJvZ3JhbW1pbmcgZm9yIGEgZml4ZWQgcmF0ZSBvZiAkMTIuOTUgYSBtb250aC4KTWFueSBvZiB0aGUgbXVzaWMgY2hhbm5lbHMgYXJlIGNvbW1lcmNpYWwtZnJlZSwgYW5kIHVubGlrZSB0ZXJyZXN0cmlhbCByYWRpbywgdGhlIHNpZ25hbHMgY2FuIGJlIHJlY2VpdmVkIGFueXdoZXJlIGluIHRoZSBVLlMuCklmIHRoZSBkZWFsIGlzIGFwcHJvdmVkLCB0aGUgY29tcGFuaWVzIGhhdmUgc2FpZCB0aGV5IHdvdWxkIG9mZmVyIHByaWNpbmcgcGxhbnMgcmFuZ2luZyBmcm9tICQ2Ljk5IHBlciBtb250aCwgZm9yIDUwIGNoYW5uZWxzIG9mZmVyZWQgYnkgb25lIHNlcnZpY2UsIHVwIHRvICQxNi45OSBhIG1vbnRoLCB3aGVyZSBzdWJzY3JpYmVycyB3b3VsZCBrZWVwIHRoZWlyIGV4aXN0aW5nIHNlcnZpY2UgcGx1cyBjaG9vc2UgY2hhbm5lbHMgb2ZmZXJlZCBieSB0aGUgb3RoZXIgc2VydmljZS4KSXQgaXNuJ3QgcG9zc2libGUgbm93IHRvIHBpY2sgY2hhbm5lbHMgb25lIGJ5IG9uZS4KVGhlIGRlYWwgY2FsbHMgZm9yIFhNIHNoYXJlaG9sZGVycyB0byByZWNlaXZlIDQuNiBzaGFyZXMgb2YgU2lyaXVzIGZvciBldmVyeSBzaGFyZSB0aGV5IG93biwgd2hpY2ggdmFsdWVzIFhNIGF0ICQxNi4xNSBhIHNoYXJlIG9yIGFib3V0ICQ1IGJpbGxpb24sIGJhc2VkIG9uIGN1cnJlbnQgc2hhcmUgcHJpY2VzLgpTaXJpdXMgc2hhcmVzIHJvc2UgMTAgY2VudHMgb3IgMyBwZXJjZW50IHRvICQzLjUxIGluIG1pZGRheSB0cmFkaW5nIFR1ZXNkYXksIHdoaWxlIFhNJ3Mgcm9zZSA2NiBjZW50cyBvciA0LjggcGVyY2VudCB0byAkMTQuMzkuCg==
[(U2lyaXVzIFNoYXJlaG9sZGVycyBBcHByb3ZlIFhNIERlYWwKU2hhcmVob2xkZXJzIG9mIFNpcml1cyBTYXRlbGxpdGUgUmFkaW8gSW5jLiBvbiBUdWVzZGF5IGFwcHJvdmVkIHRoZSBjb21wYW55J3MgJDUgYmlsbGlvbiBhY3F1aXNpdGlvbiBvZiByaXZhbCBYTSBTYXRlbGxpdGUgUmFkaW8gSG9sZGluZ3MgSW5jLgpUaGUgYXBwcm92YWwsIHdoaWNoIHdhcyBleHBlY3RlZCwgbm93IGxlYXZlcyB0aGUgdG91Z2hlciBvYnN0YWNsZXMgb2YgcmVndWxhdG9yeSBhc3NlbnQgYnkgdGhlIERlcGFydG1lbnQgb2YgSnVzdGljZSBhbmQgdGhlIEZlZGVyYWwgQ29tbXVuaWNhdGlvbnMgQ29tbWlzc2lvbi4KWE0ncyBzaGFyZWhvbGRlcnMgd2VyZSBhbHNvIHZvdGluZyBsYXRlciBUdWVzZGF5IG9uIHRoZSBkZWFsLgpTaXJpdXMgc2FpZCBpbiBhIHN0YXRlbWVudCB0aGF0IG1vcmUgdGhhbiA5NiBwZXJjZW50IG9mIHRoZSBzaGFyZWhvbGRlciB2b3RlcyBjYXN0IGFwcHJvdmVkIHRoZSBhY3F1aXNpdGlvbi4KVGhlIGNvbXBhbnkgc2FpZCBpdCBzdGlsbCBob3BlcyB0byBjb21wbGV0ZSB0aGUgZGVhbCBieSB0aGUgZW5kIG9mIHRoZSB5ZWFyLgpTaGFyZWhvbGRlciBhZHZpc29yeSBmaXJtcyBoYWQgZW5kb3JzZWQgdGhlIGRlYWwsIHdoaWNoIHdvdWxkIHNhdmUgY29zdHMgZm9yIGJvdGggY29tcGFuaWVzIG9uIGFjcXVpcmluZyBzdWJzY3JpYmVycywgcHJvZ3JhbW1pbmcgYW5kIGJyb2FkY2FzdGluZy4KVGhlIGRlYWwgc3RpbGwgZmFjZXMgY2xvc2Ugc2NydXRpbnkgYnkgcmVndWxhdG9ycyBpbiBXYXNoaW5ndG9uLCBob3dldmVyLCBhbmQgc29tZSBjb25zdW1lciBncm91cHMgaGF2ZSBvcHBvc2VkIHRoZSBjb21iaW5hdGlvbi4KVGhlIEZDQyBoYWQgb3JpZ2luYWxseSBzYWlkIHRoZSB0d28gc2F0ZWxsaXRlIHJhZGlvIGNvbXBhbmllcyBjb3VsZG4ndCBjb21iaW5lLCBidXQgdGhhdCBydWxlIGNhbiBiZSBjaGFuZ2VkLgpTaXJpdXMgYW5kIFhNIGhhdmUgYXJndWVkIHRoYXQgc2F0ZWxsaXRlIHJhZGlvIG5vdyBmYWNlcyBtb3JlIGNvbXBldGl0aW9uIGZvciBsaXN0ZW5lcnMgc2luY2UgdGhlIGJvb20gaW4gZGlnaXRhbCBsaXN0ZW5pbmcgZGV2aWNlcyBsaWtlIEFwcGxlIEluYy4ncyBpUG9kLCBJbnRlcm5ldCByYWRpbyBhbmQgY2VsbCBwaG9uZXMgdGhhdCBjYW4gcGxheSBtdXNpYy4KU2lyaXVzIGFuZCBYTSBoYXZlIHNhaWQgdGhhdCBhIGNvbWJpbmVkIGNvbXBhbnkgd291bGQgb2ZmZXIgbGlzdGVuZXJzIG1vcmUgcHJpY2luZyBvcHRpb25zIGFuZCBncmVhdGVyIGNob2ljZSBhbmQgZmxleGliaWxpdHkgaW4gdGhlIGNoYW5uZWwgbGluZXVwcyB0aGV5IHJlY2VpdmUuCkJvdGggU2lyaXVzIGFuZCBYTSBub3cgb2ZmZXIgcGFja2FnZXMgb2YgbXVzaWMsIHRhbGssIHNwb3J0cyBhbmQgb3RoZXIgcHJvZ3JhbW1pbmcgZm9yIGEgZml4ZWQgcmF0ZSBvZiAkMTIuOTUgYSBtb250aC4KTWFueSBvZiB0aGUgbXVzaWMgY2hhbm5lbHMgYXJlIGNvbW1lcmNpYWwtZnJlZSwgYW5kIHVubGlrZSB0ZXJyZXN0cmlhbCByYWRpbywgdGhlIHNpZ25hbHMgY2FuIGJlIHJlY2VpdmVkIGFueXdoZXJlIGluIHRoZSBVLlMuCklmIHRoZSBkZWFsIGlzIGFwcHJvdmVkLCB0aGUgY29tcGFuaWVzIGhhdmUgc2FpZCB0aGV5IHdvdWxkIG9mZmVyIHByaWNpbmcgcGxhbnMgcmFuZ2luZyBmcm9tICQ2Ljk5IHBlciBtb250aCwgZm9yIDUwIGNoYW5uZWxzIG9mZmVyZWQgYnkgb25lIHNlcnZpY2UsIHVwIHRvICQxNi45OSBhIG1vbnRoLCB3aGVyZSBzdWJzY3JpYmVycyB3b3VsZCBrZWVwIHRoZWlyIGV4aXN0aW5nIHNlcnZpY2UgcGx1cyBjaG9vc2UgY2hhbm5lbHMgb2ZmZXJlZCBieSB0aGUgb3RoZXIgc2VydmljZS4KSXQgaXNuJ3QgcG9zc2libGUgbm93IHRvIHBpY2sgY2hhbm5lbHMgb25lIGJ5IG9uZS4KVGhlIGRlYWwgY2FsbHMgZm9yIFhNIHNoYXJlaG9sZGVycyB0byByZWNlaXZlIDQuNiBzaGFyZXMgb2YgU2lyaXVzIGZvciBldmVyeSBzaGFyZSB0aGV5IG93biwgd2hpY2ggdmFsdWVzIFhNIGF0ICQxNi4xNSBhIHNoYXJlIG9yIGFib3V0ICQ1IGJpbGxpb24sIGJhc2VkIG9uIGN1cnJlbnQgc2hhcmUgcHJpY2VzLgpTaXJpdXMgc2hhcmVzIHJvc2UgMTAgY2VudHMgb3IgMyBwZXJjZW50IHRvICQzLjUxIGluIG1pZGRheSB0cmFkaW5nIFR1ZXNkYXksIHdoaWxlIFhNJ3Mgcm9zZSA2NiBjZW50cyBvciA0LjggcGVyY2VudCB0byAkMTQuMzkuCg==, 'ORG')]

[(, 'ORG')]
RGVtb2NyYXRzIExvc2UgQW5vdGhlciBJcmFxIFZvdGUsIFNlbmF0ZSBCbG9ja3MgQmlsbCBUbyBDdXQgT2ZmIE1vbmV5IEZvciBJcmFxIENvbWJhdCBCeSBKdW5lCihDQlMvQVApIFRoZSBTZW5hdGUgYmxvY2tlZCBsZWdpc2xhdGlvbiBUaHVyc2RheSB0aGF0IHdvdWxkIGhhdmUgY3V0IG9mZiBtb25leSBmb3IgY29tYmF0IGluIElyYXEgYnkgSnVuZS4KSXQgd2FzIGEgcHJlZGljdGFibGUgZGVmZWF0IGZvciBEZW1vY3JhdHMgc3RydWdnbGluZyB0byBwYXNzIGxlc3MgZGl2aXNpdmUgYW50aS13YXIgbWVhc3VyZXMuClRoZSAyOC03MCB2b3RlIHdhcyAzMiBzaG9ydCBvZiB0aGUgNjAgbmVlZGVkIHRvIGN1dCBvZmYgYSBHT1AgZmlsaWJ1c3Rlci4KVGhlIGxlZ2lzbGF0aW9uLCBzcG9uc29yZWQgYnkgU2VuYXRlIE1ham9yaXR5IExlYWRlciBIYXJyeSBSZWlkIGFuZCBTZW4uIFJ1c3MgRmVpbmdvbGQsIHdhcyBpbmRpY2F0aXZlIG9mIHRoZSBEZW1vY3JhdGljIGxlYWRlcnNoaXAncyBuZXcgaGFyZGxpbmUgc3RyYXRlZ3kuClVuYWJsZSB0byBhdHRyYWN0IGVub3VnaCBSZXB1YmxpY2FuIHN1cHBvcnQgb24gbGVzcyBjb250ZW50aW91cyBwcm9wb3NhbHMsIFJlaWQgaGFzIHNvdWdodCB2b3RlcyBvbiBzdHJvbmcgYW50aS13YXIgbWVhc3VyZXMgaW50ZW5kZWQgdG8gZm9yY2UgYSB3aXRoZHJhd2FsIG9mIHRyb29wcy4KQWxzbyBUaHVyc2RheSwgdGhlIFNlbmF0ZSB2b3RlZCA3Mi0yNSB0byBjb25kZW1uIGFuIGFkdmVydGlzZW1lbnQgYnkgdGhlIGxpYmVyYWwgYW50aS13YXIgZ3JvdXAgTW92ZU9uLm9yZyB0aGF0IGFjY3VzZWQgdGhlIHRvcCBtaWxpdGFyeSBjb21tYW5kZXIgaW4gSXJhcSBvZiBiZXRyYXlhbC4KVGhlIGZ1bGwtcGFnZSBhZCB0aGF0IGFwcGVhcmVkIGluIFRoZSBOZXcgWW9yayBUaW1lcyBsYXN0IHdlZWsgd2FzIGhlYWRsaW5lZDogIkdlbmVyYWwgUGV0cmFldXMgb3IgR2VuZXJhbCBCZXRyYXkgVXM/CkNvb2tpbmcgdGhlIGJvb2tzIGZvciB0aGUgV2hpdGUgSG91c2UuClNlbmF0ZSBEZW1vY3JhdHMnIGVmZm9ydHMgdG8gY2hhbGxlbmdlIFByZXNpZGVudCBCdXNoJ3MgSXJhcSBwb2xpY2llcyB3ZXJlIGRlYWx0IGEgZGVtb3JhbGl6aW5nIGJsb3cgV2VkbmVzZGF5IGFmdGVyIHRoZXkgZmFpbGVkIHRvIHNjcmFwZSB0b2dldGhlciBlbm91Z2ggc3VwcG9ydCB0byBndWFyYW50ZWUgdHJvb3BzIG1vcmUgdGltZSBhdCBob21lLgpUaGUgYmlsbCB3YXMgdGhlIHdlYWtlc3Qgb2YgdGhlIERlbW9jcmF0aWMgcHJvcG9zYWxzIGFuZCB0aGUgb25lIHRob3VnaHQgdG8gaGF2ZSB0aGUgbW9zdCBhcHBlYWwgdG8gcmVwdWJsaWNhbnMsIHJlcG9ydHMgQ0JTIE5ld3MgY29ycmVzcG9uZGVudCBCb2IgRnVzcy4KQnV0IGFmdGVyIFNlbi4gSm9obiBXYXJuZXIsIFItVmEuLCBzd2l0Y2hlZCBwb3NpdGlvbnMgZnJvbSBzdXBwb3J0aW5nIHRvIG9wcG9zaW5nIGl0LCBpdCdzIGZhdGUgd2FzIHNlYWxlZC4KVGhlIDU2LTQ0IHZvdGUgLSBmb3VyIHNob3J0IG9mIHJlYWNoaW5nIHRoZSA2MCBuZWVkZWQgdG8gYWR2YW5jZSAtIGFsbCBidXQgYXNzdXJlZCB0aGF0IERlbW9jcmF0cyB3b3VsZCBiZSB1bmFibGUgdG8gbXVzdGVyIHRoZSBzdXBwb3J0IG5lZWRlZCB0byBwYXNzIHRvdWdoIGFudGktd2FyIGxlZ2lzbGF0aW9uIGJ5IHllYXIncyBlbmQuClRoZSBsZWdpc2xhdGlvbiwgc3BvbnNvcmVkIGJ5IFNlbi4gSmltIFdlYmIsIEQtVmEuLCB3YXMgc2VlbiBhcyB0aGUgRGVtb2NyYXRzJyBiZXN0IHNob3QgYmVjYXVzZSBvZiBpdHMgcHJvLW1pbGl0YXJ5IHByZW1pc2UuCiJUaGUgaWRlYSBvZiB3aW5uaW5nIHRoZSB3YXIgaW4gSXJhcSBpcyBiZWdpbm5pbmcgdG8gZ2V0IGEgc2Vjb25kIGxvb2ssIiBzYWlkIFNlbi4gTGluZHNleSBHcmFoYW0sIFItUy5DLiwgd2hvIGxlZCBvcHBvc2l0aW9uIHRvIHRoZSBiaWxsIGFsb25nc2lkZSBTZW4uIEpvaG4gTWNDYWluLgpXZWJiJ3MgbGVnaXNsYXRpb24gd291bGQgaGF2ZSByZXF1aXJlZCB0aGF0IHRyb29wcyBzcGVuZCBhcyBtdWNoIHRpbWUgYXQgaG9tZSB0cmFpbmluZyB3aXRoIHRoZWlyIHVuaXRzIGFzIHRoZXkgc3BlbmQgZGVwbG95ZWQgaW4gSXJhcSBvciBBZmdoYW5pc3Rhbi4KIkluIGJsb2NraW5nIHRoaXMgYmlwYXJ0aXNhbiBiaWxsLCBSZXB1YmxpY2FucyBoYXZlIG9uY2UgYWdhaW4gZGVtb25zdHJhdGVkIHRoYXQgdGhleSBhcmUgbW9yZSBjb21taXR0ZWQgdG8gcHJvdGVjdGluZyB0aGUgcHJlc2lkZW50IHRoYW4gcHJvdGVjdGluZyBvdXIgdHJvb3BzLCIgc2FpZCBSZWlkLgpXZWRuZXNkYXkncyB2b3RlIHdhcyB0aGUgc2Vjb25kIHRpbWUgaW4gYXMgbWFueSBtb250aHMgdGhhdCBXZWJiJ3MgYmlsbCB3YXMgc2lkZXRyYWNrZWQuCkluIEp1bHksIGEgc2ltaWxhciBtZWFzdXJlIGFsc28gZmVsbCBmb3VyIHZvdGVzIHNob3J0IG9mIGFkdmFuY2luZy4K
[]
QmFnaGRhZCBzb3VwIGtpdGNoZW4gYW4gb2FzaXMgb2YgdG9sZXJhbmNlClN1bm5pIG1vc3F1ZSBmZWVkcyBTaGlpdGVzIGFuZCBTdW5uaXMgYWxpa2UgZHVyaW5nIGhvbHkgbW9udGggb2YgUmFtYWRhbgpCQUdIREFEIC0gSW4gYSBjaXR5IHJpdmVuIHdpdGggc2VjdGFyaWFuIGJsb29kc2hlZCwgd29ya2VycyBhdCBhIDEzdGggY2VudHVyeSBCYWdoZGFkIG1vc3F1ZSBtYXJrIHRoZSBNdXNsaW0gaG9seSBtb250aCBvZiBSYW1hZGFuIGJ5IGZlZWRpbmcgdGhlIHBvb3IgYW5kIHByZXNlcnZpbmcgYSBieWdvbmUgc3Bpcml0IG9mIGNvLWV4aXN0ZW5jZS4KVGhlIFN1bm5pIG1vc3F1ZSBvZiBBYmR1bCBRYWRpciBhbC1HYWlsYW5pIGZlZWRzIGh1bmRyZWRzIG9mIHBlb3BsZSBhIGRheSBkdXJpbmcgUmFtYWRhbiwgcHJvdmlkaW5nIGFuIGV2ZW5pbmcgbWVhbCBmb3Igb2JzZXJ2YW50IE11c2xpbXMgd2hvIGZhc3QgZnJvbSBkYXduIHRvIGR1c2suCkFuZCBhZnRlciBmb3VyIHllYXJzIG9mIGNvbW11bmFsIHZpb2xlbmNlIGluIHdoaWNoIHRlbnMgb2YgdGhvdXNhbmRzIG9mIFN1bm5pIGFuZCBTaGlpdGUgTXVzbGltcyBoYXZlIGJlZW4ga2lsbGVkLCB0aGUgbW9zcXVlJ3Mgc291cCBraXRjaGVuIHJlbWFpbnMgYW4gb2FzaXMgb2YgdG9sZXJhbmNlLgpJIGNhbid0IGxpdmUgYXdheSBmcm9tIHRoZSBraXRjaGVuLgpJdCdzIG15IHBlYWNlZnVsIHdvcmxkLgpXZSBTdW5uaXMsIFNoaWl0ZXMgYW5kIEt1cmRzLCBhcmUgYWxsIGxpdmluZyBhcyBicm90aGVycyBhbmQgbmV2ZXIgZGlzY3VzcyBvdXIgc2VjdC4KV2UgYXJlIGFsbCBJcmFxaXMsIiBzYWlkIEFidSBTYWlmLCBhIFNoaWl0ZSB3aG8gaGFzIHdvcmtlZCBhdCB0aGUgbW9zcXVlIGZvciBtb3JlIHRoYW4gMTcgeWVhcnMuCkFsb25nc2lkZSBoaW0gd2FzIEhhaiBIYW1lZWQsIGEgS3VyZCB3aG8gaGFzIGNvb2tlZCBpbiB0aGUga2l0Y2hlbiBmb3IgYSBxdWFydGVyIGNlbnR1cnksIGFuZCBTdW5uaSBBcmFiIGVtcGxveWVlIE1haG1vdWQgYWwtQmFyYXphbmNoaS4KVGhlIGRpdmVyc2l0eSBpbiB0aGUga2l0Y2hlbiBpcyBtYXRjaGVkIGluIHRoZSBjcm93ZCBvZiBTdW5uaXMgYW5kIFNoaWl0ZXMgd2hvIHF1ZXVlIG91dHNpZGUsIG1ldGFsIHBvdHMgaW4gdGhlaXIgaGFuZHMsIGZvciBhIGdlbmVyb3VzIHNlcnZpbmcgb2YgbGVudGlscywgY2hpY2tlbiBhbmQgcmljZS4KIkhlcmUsIGFuZCBvbmx5IGhlcmUiICJJdCdzIGhlcmUsIGFuZCBvbmx5IGhlcmUsIHRoYXQgbm8gb25lIHBheXMgYXR0ZW50aW9uIHRvIHdoZXRoZXIgd2UncmUgU3VubmlzIG9yIFNoaWl0ZXMsIiBBYnUgU2FpZiBzYWlkLCBicmVha2luZyBpbnRvIHRlYXJzIGF0IHRoZSBtZW50aW9uIG9mIElyYXEncyB2aW9sZW5jZS4KSSB3aXNoIG9uZSBkYXkgSSBjb3VsZCBzbGVlcCBhbmQgd2FrZSB0byBmaW5kIG15IGNvdW50cnkgYWN0aW5nIHRoZSBzYW1lLgpWaW9sZW5jZSBoYXMgcGxhZ3VlZCBJcmFxIHNpbmNlIHRoZSBVLlMuLWxlZCBpbnZhc2lvbiB0byB0b3BwbGUgU2FkZGFtIEh1c3NlaW4gaW4gMjAwMy4KQnV0IHRoZSBib21iaW5nIG9mIGEgcmV2ZXJlZCBTaGlpdGUgc2hyaW5lIGluIHRoZSBjaXR5IG9mIFNhbWFycmEgaW4gRmVicnVhcnkgMjAwNiBtYXJrZWQgYSB0dXJuaW5nIHBvaW50IGluIGNvbW11bmFsIHJlbGF0aW9ucywgaWduaXRpbmcgYSB3YXZlIG9mIGJsb29kbGV0dGluZyBiZXR3ZWVuIG1ham9yaXR5IFNoaWl0ZSBhbmQgbWlub3JpdHkgU3VubmkgQXJhYnMuClRoZSBkZXB0aCBvZiB0aGUgdmlvbGVuY2UgbGVhdmVzIHNvbWUgSXJhcWlzIG5vc3RhbGdpYyBmb3IgU2FkZGFtJ3MgZXJhIGRlc3BpdGUgdGhlIHdhcnMsIGVjb25vbWljIHNhbmN0aW9ucyBhbmQgYnJ1dGFsIGF1dGhvcml0YXJpYW5pc20gdGhleSBlbmR1cmVkIHVuZGVyIGhpcyBydWxlLgoiVGhlIGtpdGNoZW4gLi4uIGlzIGEgc21hbGwgSXJhcSBvZiBwZWFjZSBhbmQgaGFybW9ueSwiIEJhcmF6YW5jaGkgc2FpZC4KQmVmb3JlIDIwMDMgd2UgdXNlZCB0byBoYXZlIHdvbmRlcmZ1bCB0aW1lcyBpbiBSYW1hZGFuIHdoZW4gd2UgZ2F0aGVyZWQgaW4gdGhlIG1vc3F1ZSB0byB0YWtlIHRoZSBldmVuaW5nIG1lYWwgdG8gYnJlYWsgb3VyIGZhc3QuCkJ1dCBub3cgd2UgYXJlIGxvY2tlZCBpbnNpZGUgaG9tZXMganVzdCBsaWtlIHByaXNvbmVycy4KV2llbGRpbmcgYSBsb25nIHdvb2RlbiBzdGljaywgQmFyYXphbmNoaSBzdGlycmVkIGEgdGhpY2sgYnJvdGggb2YgbGVudGlscyBhbmQgY2hpY2tlbiwgY29va2luZyBpbiBhIGh1Z2UgcG90LgpEb25hdGlvbnMgZG93biBhZnRlciB3ZWFsdGh5IGRvbm9ycyBmbGVlIEluIHByZXZpb3VzIHllYXJzIHRoZSBtb3NxdWUgaGFkIHJlc291cmNlcyB0byBwcmVwYXJlIHR3aWNlIGFzIG11Y2ggZm9vZCwgQWJ1IFNhaWYgc2FpZCwgYnV0IGRvbmF0aW9ucyBoYXZlIGZhbGxlbiBhd2F5LgpXZWFsdGh5IGJ1c2luZXNzbWVuIHdobyB1c2VkIHRvIHN1cHBvcnQgdGhlIFJhbWFkYW4gc291cCBraXRjaGVuIGhhdmUgZmxlZCB0aGUgY291bnRyeSBhbmQgdGhlIG1vc3F1ZSByZWNlaXZlcyBubyBhaWQgZnJvbSB0aGUgZ292ZXJubWVudC4KSW4gYW5vdGhlciBjaGFuZ2UsIGZvb2QgZm9yIHRoZSBldmVuaW5nIG1lYWwgaXMgZGlzdHJpYnV0ZWQgYXQgMiBwLm0uLCBmaXZlIGhvdXJzIGJlZm9yZSB0aGUgcHJheWVycyB3aGljaCBtYXJrIHRoZSBlbmQgb2YgdGhlIGRhaWx5IGZhc3QsIGJlY2F1c2UgZmV3IHBlb3BsZSBmZWVsIHNhZmUgb24gdGhlIHN0cmVldHMgaW4gdGhlIGV2ZW5pbmcuCkJlZm9yZSwgUmFtYWRhbiB3YXMgZnVsbCBvZiBqb3kgYW5kIGJsZXNzaW5ncy4KV2UgdXNlZCB0byB0YWtlIGZvb2QgYW5kIGJyZWFrIHRoZSBmYXN0IGluc2lkZSB0aGUgbW9zcXVlIGluIGdyb3Vwcy4KQnV0IG5vdyB3ZSBmZWFyIGNhciBib21icyBhbmQga2lsbGluZyBhbmQgd2UgcnVzaCB0byB0YWtlIHRoZSBmb29kIGJhY2sgaG9tZSwiIHNhaWQgVW1tIE1vaGFtbWVkLCB3YWl0aW5nIHBhdGllbnRseSBpbiBsaW5lLgpUaGUgbW9zcXVlIGlzIGZhbWVkIGFzIHRoZSBidXJpYWwgcGxhY2Ugb2YgU3VmaSBTaGVpa2ggQWJkdWwgUWFkaXIgYWwtR2FpbGFuaSwgYW5kIGEgZG9tZSBidWlsdCBieSBPdHRvbWFuIFN1bHRhbiBTdWxlaW1hbiB0aGUgTWFnbmlmaWNlbnQgc3RpbGwgc3RhbmRzIGluIHRoZSBtb3NxdWUgY29tcGxleC4KQnV0IG91dHNpZGUsIHRoZSBtaW5hcmV0IGJlYXJzIHRoZSBzY2FycyBvZiBCYWdoZGFkJ3MgcmVjZW50IHR1cm1vaWwuClNjYWZmb2xkaW5nIGNvdmVycyBpdHMgdG9wIGFuZCBicm9rZW4gY29uY3JldGUgYW5kIHJ1YmJsZSBzdXJyb3VuZCB0aGUgYmFzZSwgc3RpbGwgbm90IHJlcGFpcmVkIGFmdGVyIGEgTWF5IHRydWNrIGJvbWJpbmcgb3V0c2lkZSB0aGUgbW9zcXVlIHdoaWNoIGtpbGxlZCAyNCBwZW9wbGUuCiJJZiB5b3UgYXNrIG1lIGFib3V0IFJhbWFkYW4gSSB3b3VsZCB0ZWxsIHlvdSB0aGUgZGFpbHkgdmlvbGVuY2UgaW4gSXJhcSBhbmQgdGhlIGJpdHRlcm5lc3Mgb2YgbG9zaW5nIGJlbG92ZWQgcGVvcGxlIG1hZGUgdXMgZm9yZ2V0IHRoZSB0YXN0ZSBvZiB0aGlzIG1vbnRoLCIgc2FpZCBBbGFhIEhhbXphLCBhIFNoaWl0ZSBhcyBoZSBxdWV1ZWQgZm9yIGZvb2QuCg==
[]
RGVwb3J0YXRpb24gcHJvY2VlZGluZ3Mgc3RhcnQgZm9yIGFjY3VzZWQgTmF6aQo4NS15ZWFyLW9sZCBzZXJ2ZWQgYXMgZ3VhcmQgaW4gY29uY2VudHJhdGlvbiBjYW1wcywgZmVkZXJhbCBhdXRob3JpdGllcyBzYXkKVXBkYXRlZDogNjo1OSBwLm0uCkxBV1JFTkNFVklMTEUsIEdhLiAtIEZlZGVyYWwgYXV0aG9yaXRpZXMgaGF2ZSBiZWd1biBkZXBvcnRhdGlvbiBwcm9jZWVkaW5ncyBhZ2FpbnN0IGFuIDg1LXllYXItb2xkIHN1YnVyYmFuIEF0bGFudGEgbWFuIHdobyB0aGV5IHNheSBzZXJ2ZWQgYXMgYSBOYXppIGd1YXJkIGFuZCB0cmFpbmVkIGFuZCBoYW5kbGVkIGF0dGFjayBkb2dzIGF0IHRoZSBEYWNoYXUgYW5kIEJ1Y2hlbndhbGQgY29uY2VudHJhdGlvbiBjYW1wcy4KVGhlIERlcGFydG1lbnQgb2YgSnVzdGljZSBhbmQgRGVwYXJ0bWVudCBvZiBIb21lbGFuZCBTZWN1cml0eSBhbGxlZ2UgUGF1bCBIZW5zcywgYSBHZXJtYW4gY2l0aXplbiB3aG8gbGl2ZXMgaW4gTGF3cmVuY2V2aWxsZSwgYWJvdXQgMzAgbWlsZXMgbm9ydGhlYXN0IG9mIEF0bGFudGEsIGVudGVyZWQgdGhlIFUuUy4gaW4gMTk1NSBhZnRlciBoaWRpbmcgaGlzIGNvbmNlbnRyYXRpb24gY2FtcCBzZXJ2aWNlLgpUaGUgRGVwYXJ0bWVudCBvZiBKdXN0aWNlIGFubm91bmNlZCB0aGUgYWN0aW9uIGFnYWluc3QgSGVuc3Mgb24gTW9uZGF5OyBmZWRlcmFsIGF1dGhvcml0aWVzIGZpbGVkIGFuIGltbWlncmF0aW9uIGRvY3VtZW50IG1ha2luZyB0aGUgYWxsZWdhdGlvbnMgU2VwdC4KT24gTW9uZGF5LCBpbiBoaXMgZHJpdmV3YXkgaW4gYSB0aWR5LCBtaWRkbGUtY2xhc3MgbmVpZ2hib3Job29kIHdoZXJlIHRoZSBzdHJlZXRzIGFyZSBuYW1lZCBhZnRlciB0ZW5uaXMgc3RhcnMsIEhlbnNzIHNhaWQgaGUgaGFkIGJlZW4gYW4gU1Mgc29sZGllciBhbmQgaGFkIHRyYWluZWQgR2VybWFuIHNoZXBoZXJkcyBhbmQgUm90dHdlaWxlcnMgZHVyaW5nIFdvcmxkIFdhciBJSSwgYnV0IGhlIGFuZ3JpbHkgZGVuaWVkIGJlaW5nIGEgd2FyIGNyaW1pbmFsLgoiSSBkaWRuJ3QgY29tbWl0IG5vIGNyaW1lcywiIEhlbnNzIHNhaWQgaW4gYSB0aGljayBHZXJtYW4gYWNjZW50LgpJIGRpZG4ndCBodXJ0IG5vYm9keS4KT3RoZXJ3aXNlIEkgd291bGRuJ3QgaGF2ZSBjb21lIHRvIHRoZSBVbml0ZWQgU3RhdGVzLgpIZW5zcyBjYWxsZWQgdGhlIEhvbG9jYXVzdCAiYSBjYXRhc3Ryb3BoZSIgYW5kIHNhaWQ6ICJFdmVyeWJvZHkgaW4gR2VybWFueSBrbm93cyB0aGF0IHdhc24ndCByaWdodC4iCkFjY29yZGluZyB0byBmZWRlcmFsIGF1dGhvcml0aWVzLCBIZW5zcyBqb2luZWQgdGhlIEhpdGxlciBZb3V0aCBvcmdhbml6YXRpb24gaW4gR2VybWFueSBpbiAxOTM0IGFzIGEgMTItIG9yIDEzLXllYXItb2xkIGJveSBhbmQgam9pbmVkIHRoZSBOYXppIFBhcnR5IGluIDE5NDAuCkhlIGVudGVyZWQgdGhlIFdhZmZlbiBTUyBpbiAxOTQxIGFuZCB2b2x1bnRlZXJlZCB0aGUgZm9sbG93aW5nIHllYXIgdG8gYmVjb21lIGFuIFNTIGRvZyBoYW5kbGVyLCBzZXJ2aW5nIGZyb20gMTk0MiB0byAxOTQ0IGF0IHRoZSBEYWNoYXUgYW5kIEJ1Y2hlbndhbGQgY29uY2VudHJhdGlvbiBjYW1wcyBpbiBHZXJtYW55LCB0aGUgaW1taWdyYXRpb24gZG9jdW1lbnQgc3RhdGVzLgpEb2dzIHRyYWluZWQgdG8gJ3RlYXIgcHJpc29uZXJzIHRvIHBpZWNlcycgVGhlcmUsIEhlbnNzIGluc3RydWN0ZWQgb3RoZXIgZ3VhcmRzIGluIHRoZSB1c2Ugb2YgdHJhaW5lZCBhdHRhY2sgZG9ncyB0byBndWFyZCBwcmlzb25lcnMgYW5kIHByZXZlbnQgdGhlaXIgZXNjYXBlLCBhbmQgcGVyc29uYWxseSBndWFyZGVkIHByaXNvbmVycyBhbmQgZm9yY2VkLWxhYm9yIGRldGFpbHMgdG8gcHJldmVudCBlc2NhcGVzLCBhdXRob3JpdGllcyBhbGxlZ2UuClNTIHJlZ3VsYXRpb25zIGR1cmluZyBIZW5zcycgdGltZSBvZiBzZXJ2aWNlIHNhaWQgZG9ncyB3ZXJlIHRvIGJlIHRyYWluZWQgInRvICdiaXRlIHdpdGhvdXQgbWVyY3knIGFuZCB0byBsaXRlcmFsbHkgdGVhciBwcmlzb25lcnMgdG8gcGllY2VzIGlmIHRoZXkgYXR0ZW1wdGVkIHRvIGVzY2FwZSwiIHRoZSBkb2N1bWVudCBzdGF0ZXMuCkhlbnNzIGFkbWl0dGVkIGluIGEgc3dvcm4gc3RhdGVtZW50IE1hcmNoIDEzIHRoYXQgaGUgc2VydmVkIGFzIGFuIFNTIGd1YXJkIGF0IERhY2hhdSBhbmQgQnVjaGVud2FsZCBmb3IgdHdvIHRvIHRocmVlIG1vbnRocyBlYWNoIGFzIGEgZG9nIGhhbmRsZXIsIGFjY29yZGluZyB0byB0aGUgY2hhcmdpbmcgZG9jdW1lbnQuCk9uIE1vbmRheSwgaGUgYWNrbm93bGVkZ2VkIHRyYWluaW5nIGRvZ3MgYnV0IHNhaWQgaGUgZm91Z2h0IGluIFJ1c3NpYSBhbmQgbmV2ZXIgc2V0IGZvb3QgaW5zaWRlIERhY2hhdSBvciBCdWNoZW53YWxkLgoiVGhlIHRyYWluaW5nIG9mIGRvZ3Mgd2FzIG5vIGNyaW1lLCIgSGVuc3Mgc2FpZCB3aXRoIGhpcyB3aWZlIHNvYmJpbmcgbmV4dCB0byBoaW0gb3V0c2lkZSB0aGVpciB3ZWxsLWtlcHQgb25lLXN0b3J5IGJyaWNrIGhvdXNlLgpJIHdhcyBub3QgdHJhaW5pbmcgdGhlbSB0byBodXJ0IHBlb3BsZS4KSGVuc3Mgc2FpZCB0aGF0IHdoZW4gaGUgY2FtZSB0byB0aGUgVS5TLiAzMyB5ZWFycyBhZ28sIGhlIGRpZCBub3QgdGVsbCBpbW1pZ3JhdGlvbiBvZmZpY2lhbHMgYWJvdXQgaGlzIG1pbGl0YXJ5IHNlcnZpY2UgaW4gR2VybWFueSBhbmQgd2FzIG5vdCBhc2tlZC4KIkkgZm9yZ290IGFib3V0IHRoZSB3YXIsIiBoZSBzYWlkLgpJIHdhbnRlZCB0byBsZWF2ZSB0aGUgd2FyIGJlaGluZCBtZS4KQWZ0ZXIgY29taW5nIHRvIEFtZXJpY2EsIGhlIHdvcmtlZCBpbiB0aGUgcGFja2luZyBpbmR1c3RyeSwgaGUgc2FpZC4KSGUgYWRkZWQgdGhhdCBoZSBkb2VzIG5vdCBrbm93IHdoeSBoaXMgd2FydGltZSBzZXJ2aWNlIGlzIGJlaW5nIHF1ZXN0aW9uZWQgbW9yZSB0aGFuIHNpeCBkZWNhZGVzIGxhdGVyLgpObyBnb3Zlcm5tZW50IGNoYXJnZXMgdG8gYmUgZmlsZWQgQSBtZXNzYWdlIGxlZnQgTW9uZGF5IGZvciBIZW5zcycgYXR0b3JuZXksIERvdWdsYXMgV2VpZ2xlLCB3YXMgbm90IGltbWVkaWF0ZWx5IHJldHVybmVkLgpUaGUgZGVwb3J0YXRpb24gY2FzZSB3YXMgZmlsZWQgYWZ0ZXIgYSByZXZpZXcgb2YgR2VybWFuIHJlY29yZHMsIHByb3NlY3V0b3JzIHNhaWQuCkphY2x5biBMZXNjaCwgYSBKdXN0aWNlIERlcGFydG1lbnQgc3Bva2Vzd29tYW4sIHNhaWQgdGhlIGdvdmVybm1lbnQgZG9lcyBub3QgcGxhbiB0byBmaWxlIGNyaW1pbmFsIGNoYXJnZXMgYWdhaW5zdCBIZW5zcy4KSGVuc3MgaXMgaGFyZCBvZiBoZWFyaW5nLCBoYXMgaGFkIHNvbWUgaGVhcnQgcHJvYmxlbXMgYW5kIHVzZXMgYSB3YWxrZXIuCkhlIHNhaWQgaGUgaGFzIGxpdmVkIGluIEdlb3JnaWEgZm9yIDEwIHllYXJzLgoiV2UgY291bGRuJ3QgZXZlbiBpbWFnaW5lIHRoYXQgTXIuIEhlbnNzIGNvdWxkIGRvIHRoYXQsIiBzYWlkIE51enp1IFN5ZWQsIHdobyBsaXZlcyB0d28gZG9vcnMgZG93bi4KVGhleSdyZSBzdWNoIGEgbmljZSwgZWxkZXJseSBjb3VwbGUuClRoZSBPZmZpY2Ugb2YgU3BlY2lhbCBJbnZlc3RpZ2F0aW9ucywgd2hpY2ggaGFuZGxlcyBjYXNlcyBhZ2FpbnN0IHBlb3BsZSBhY2N1c2VkIG9mIGJlaW5nIGZvcm1lciBOYXppcywgYmVnYW4gb3BlcmF0aW9ucyBpbiAxOTc5LgpBdXRob3JpdGllcyBzYWlkIGl0IGhhcyB3b24gY2FzZXMgYWdhaW5zdCAxMDYgcGFydGljaXBhbnRzIGluIE5hemkgY3JpbWVzLgpFZnJhaW0gWnVyb2ZmLCB0aGUgU2ltb24gV2llc2VudGhhbCBDZW50ZXIncyBjaGllZiBOYXppIGh1bnRlciwgc2FpZCBpbiBhIHRlbGVwaG9uZSBpbnRlcnZpZXcgZnJvbSBJc3JhZWwgdGhhdCBpdCBwcm9iYWJseSB0b29rIGRlY2FkZXMgdG8gaWRlbnRpZnkgSGVuc3MnIGFsbGVnZWQgY29ubmVjdGlvbiB0byB0aGUgTmF6aXMgYmVjYXVzZSBvZiB0aGUgdGltZSBuZWNlc3NhcnkgdG8gb2J0YWluIHJlY29yZHMuCiJUaGVyZSB3ZXJlIHNvIG1hbnkgcGVycGV0cmF0b3JzLCBzbyBtYW55IHBlb3BsZSB3aG8gcGxheWVkIGEgcm9sZSwgaXQgdGFrZXMgYSB2ZXJ5IGxvbmcgdGltZSB0byBjYXJyeSBvdXQgYSBjb21wcmVoZW5zaXZlIC4uLiByZWZlcmVuY2Ugb2YgYWxsIG9mIHRoZSBpbmRpdmlkdWFscyB3aG8gaW4gYW55IHdheSBwYXJ0aWNpcGF0ZWQgaW4gdGhlIGNyaW1lcyBvZiB0aGUgSG9sb2NhdXN0LCIgaGUgc2FpZC4K
[(RGVwb3J0YXRpb24gcHJvY2VlZGluZ3Mgc3RhcnQgZm9yIGFjY3VzZWQgTmF6aQo4NS15ZWFyLW9sZCBzZXJ2ZWQgYXMgZ3VhcmQgaW4gY29uY2VudHJhdGlvbiBjYW1wcywgZmVkZXJhbCBhdXRob3JpdGllcyBzYXkKVXBkYXRlZDogNjo1OSBwLm0uCkxBV1JFTkNFVklMTEUsIEdhLiAtIEZlZGVyYWwgYXV0aG9yaXRpZXMgaGF2ZSBiZWd1biBkZXBvcnRhdGlvbiBwcm9jZWVkaW5ncyBhZ2FpbnN0IGFuIDg1LXllYXItb2xkIHN1YnVyYmFuIEF0bGFudGEgbWFuIHdobyB0aGV5IHNheSBzZXJ2ZWQgYXMgYSBOYXppIGd1YXJkIGFuZCB0cmFpbmVkIGFuZCBoYW5kbGVkIGF0dGFjayBkb2dzIGF0IHRoZSBEYWNoYXUgYW5kIEJ1Y2hlbndhbGQgY29uY2VudHJhdGlvbiBjYW1wcy4KVGhlIERlcGFydG1lbnQgb2YgSnVzdGljZSBhbmQgRGVwYXJ0bWVudCBvZiBIb21lbGFuZCBTZWN1cml0eSBhbGxlZ2UgUGF1bCBIZW5zcywgYSBHZXJtYW4gY2l0aXplbiB3aG8gbGl2ZXMgaW4gTGF3cmVuY2V2aWxsZSwgYWJvdXQgMzAgbWlsZXMgbm9ydGhlYXN0IG9mIEF0bGFudGEsIGVudGVyZWQgdGhlIFUuUy4gaW4gMTk1NSBhZnRlciBoaWRpbmcgaGlzIGNvbmNlbnRyYXRpb24gY2FtcCBzZXJ2aWNlLgpUaGUgRGVwYXJ0bWVudCBvZiBKdXN0aWNlIGFubm91bmNlZCB0aGUgYWN0aW9uIGFnYWluc3QgSGVuc3Mgb24gTW9uZGF5OyBmZWRlcmFsIGF1dGhvcml0aWVzIGZpbGVkIGFuIGltbWlncmF0aW9uIGRvY3VtZW50IG1ha2luZyB0aGUgYWxsZWdhdGlvbnMgU2VwdC4KT24gTW9uZGF5LCBpbiBoaXMgZHJpdmV3YXkgaW4gYSB0aWR5LCBtaWRkbGUtY2xhc3MgbmVpZ2hib3Job29kIHdoZXJlIHRoZSBzdHJlZXRzIGFyZSBuYW1lZCBhZnRlciB0ZW5uaXMgc3RhcnMsIEhlbnNzIHNhaWQgaGUgaGFkIGJlZW4gYW4gU1Mgc29sZGllciBhbmQgaGFkIHRyYWluZWQgR2VybWFuIHNoZXBoZXJkcyBhbmQgUm90dHdlaWxlcnMgZHVyaW5nIFdvcmxkIFdhciBJSSwgYnV0IGhlIGFuZ3JpbHkgZGVuaWVkIGJlaW5nIGEgd2FyIGNyaW1pbmFsLgoiSSBkaWRuJ3QgY29tbWl0IG5vIGNyaW1lcywiIEhlbnNzIHNhaWQgaW4gYSB0aGljayBHZXJtYW4gYWNjZW50LgpJIGRpZG4ndCBodXJ0IG5vYm9keS4KT3RoZXJ3aXNlIEkgd291bGRuJ3QgaGF2ZSBjb21lIHRvIHRoZSBVbml0ZWQgU3RhdGVzLgpIZW5zcyBjYWxsZWQgdGhlIEhvbG9jYXVzdCAiYSBjYXRhc3Ryb3BoZSIgYW5kIHNhaWQ6ICJFdmVyeWJvZHkgaW4gR2VybWFueSBrbm93cyB0aGF0IHdhc24ndCByaWdodC4iCkFjY29yZGluZyB0byBmZWRlcmFsIGF1dGhvcml0aWVzLCBIZW5zcyBqb2luZWQgdGhlIEhpdGxlciBZb3V0aCBvcmdhbml6YXRpb24gaW4gR2VybWFueSBpbiAxOTM0IGFzIGEgMTItIG9yIDEzLXllYXItb2xkIGJveSBhbmQgam9pbmVkIHRoZSBOYXppIFBhcnR5IGluIDE5NDAuCkhlIGVudGVyZWQgdGhlIFdhZmZlbiBTUyBpbiAxOTQxIGFuZCB2b2x1bnRlZXJlZCB0aGUgZm9sbG93aW5nIHllYXIgdG8gYmVjb21lIGFuIFNTIGRvZyBoYW5kbGVyLCBzZXJ2aW5nIGZyb20gMTk0MiB0byAxOTQ0IGF0IHRoZSBEYWNoYXUgYW5kIEJ1Y2hlbndhbGQgY29uY2VudHJhdGlvbiBjYW1wcyBpbiBHZXJtYW55LCB0aGUgaW1taWdyYXRpb24gZG9jdW1lbnQgc3RhdGVzLgpEb2dzIHRyYWluZWQgdG8gJ3RlYXIgcHJpc29uZXJzIHRvIHBpZWNlcycgVGhlcmUsIEhlbnNzIGluc3RydWN0ZWQgb3RoZXIgZ3VhcmRzIGluIHRoZSB1c2Ugb2YgdHJhaW5lZCBhdHRhY2sgZG9ncyB0byBndWFyZCBwcmlzb25lcnMgYW5kIHByZXZlbnQgdGhlaXIgZXNjYXBlLCBhbmQgcGVyc29uYWxseSBndWFyZGVkIHByaXNvbmVycyBhbmQgZm9yY2VkLWxhYm9yIGRldGFpbHMgdG8gcHJldmVudCBlc2NhcGVzLCBhdXRob3JpdGllcyBhbGxlZ2UuClNTIHJlZ3VsYXRpb25zIGR1cmluZyBIZW5zcycgdGltZSBvZiBzZXJ2aWNlIHNhaWQgZG9ncyB3ZXJlIHRvIGJlIHRyYWluZWQgInRvICdiaXRlIHdpdGhvdXQgbWVyY3knIGFuZCB0byBsaXRlcmFsbHkgdGVhciBwcmlzb25lcnMgdG8gcGllY2VzIGlmIHRoZXkgYXR0ZW1wdGVkIHRvIGVzY2FwZSwiIHRoZSBkb2N1bWVudCBzdGF0ZXMuCkhlbnNzIGFkbWl0dGVkIGluIGEgc3dvcm4gc3RhdGVtZW50IE1hcmNoIDEzIHRoYXQgaGUgc2VydmVkIGFzIGFuIFNTIGd1YXJkIGF0IERhY2hhdSBhbmQgQnVjaGVud2FsZCBmb3IgdHdvIHRvIHRocmVlIG1vbnRocyBlYWNoIGFzIGEgZG9nIGhhbmRsZXIsIGFjY29yZGluZyB0byB0aGUgY2hhcmdpbmcgZG9jdW1lbnQuCk9uIE1vbmRheSwgaGUgYWNrbm93bGVkZ2VkIHRyYWluaW5nIGRvZ3MgYnV0IHNhaWQgaGUgZm91Z2h0IGluIFJ1c3NpYSBhbmQgbmV2ZXIgc2V0IGZvb3QgaW5zaWRlIERhY2hhdSBvciBCdWNoZW53YWxkLgoiVGhlIHRyYWluaW5nIG9mIGRvZ3Mgd2FzIG5vIGNyaW1lLCIgSGVuc3Mgc2FpZCB3aXRoIGhpcyB3aWZlIHNvYmJpbmcgbmV4dCB0byBoaW0gb3V0c2lkZSB0aGVpciB3ZWxsLWtlcHQgb25lLXN0b3J5IGJyaWNrIGhvdXNlLgpJIHdhcyBub3QgdHJhaW5pbmcgdGhlbSB0byBodXJ0IHBlb3BsZS4KSGVuc3Mgc2FpZCB0aGF0IHdoZW4gaGUgY2FtZSB0byB0aGUgVS5TLiAzMyB5ZWFycyBhZ28sIGhlIGRpZCBub3QgdGVsbCBpbW1pZ3JhdGlvbiBvZmZpY2lhbHMgYWJvdXQgaGlzIG1pbGl0YXJ5IHNlcnZpY2UgaW4gR2VybWFueSBhbmQgd2FzIG5vdCBhc2tlZC4KIkkgZm9yZ290IGFib3V0IHRoZSB3YXIsIiBoZSBzYWlkLgpJIHdhbnRlZCB0byBsZWF2ZSB0aGUgd2FyIGJlaGluZCBtZS4KQWZ0ZXIgY29taW5nIHRvIEFtZXJpY2EsIGhlIHdvcmtlZCBpbiB0aGUgcGFja2luZyBpbmR1c3RyeSwgaGUgc2FpZC4KSGUgYWRkZWQgdGhhdCBoZSBkb2VzIG5vdCBrbm93IHdoeSBoaXMgd2FydGltZSBzZXJ2aWNlIGlzIGJlaW5nIHF1ZXN0aW9uZWQgbW9yZSB0aGFuIHNpeCBkZWNhZGVzIGxhdGVyLgpObyBnb3Zlcm5tZW50IGNoYXJnZXMgdG8gYmUgZmlsZWQgQSBtZXNzYWdlIGxlZnQgTW9uZGF5IGZvciBIZW5zcycgYXR0b3JuZXksIERvdWdsYXMgV2VpZ2xlLCB3YXMgbm90IGltbWVkaWF0ZWx5IHJldHVybmVkLgpUaGUgZGVwb3J0YXRpb24gY2FzZSB3YXMgZmlsZWQgYWZ0ZXIgYSByZXZpZXcgb2YgR2VybWFuIHJlY29yZHMsIHByb3NlY3V0b3JzIHNhaWQuCkphY2x5biBMZXNjaCwgYSBKdXN0aWNlIERlcGFydG1lbnQgc3Bva2Vzd29tYW4sIHNhaWQgdGhlIGdvdmVybm1lbnQgZG9lcyBub3QgcGxhbiB0byBmaWxlIGNyaW1pbmFsIGNoYXJnZXMgYWdhaW5zdCBIZW5zcy4KSGVuc3MgaXMgaGFyZCBvZiBoZWFyaW5nLCBoYXMgaGFkIHNvbWUgaGVhcnQgcHJvYmxlbXMgYW5kIHVzZXMgYSB3YWxrZXIuCkhlIHNhaWQgaGUgaGFzIGxpdmVkIGluIEdlb3JnaWEgZm9yIDEwIHllYXJzLgoiV2UgY291bGRuJ3QgZXZlbiBpbWFnaW5lIHRoYXQgTXIuIEhlbnNzIGNvdWxkIGRvIHRoYXQsIiBzYWlkIE51enp1IFN5ZWQsIHdobyBsaXZlcyB0d28gZG9vcnMgZG93bi4KVGhleSdyZSBzdWNoIGEgbmljZSwgZWxkZXJseSBjb3VwbGUuClRoZSBPZmZpY2Ugb2YgU3BlY2lhbCBJbnZlc3RpZ2F0aW9ucywgd2hpY2ggaGFuZGxlcyBjYXNlcyBhZ2FpbnN0IHBlb3BsZSBhY2N1c2VkIG9mIGJlaW5nIGZvcm1lciBOYXppcywgYmVnYW4gb3BlcmF0aW9ucyBpbiAxOTc5LgpBdXRob3JpdGllcyBzYWlkIGl0IGhhcyB3b24gY2FzZXMgYWdhaW5zdCAxMDYgcGFydGljaXBhbnRzIGluIE5hemkgY3JpbWVzLgpFZnJhaW0gWnVyb2ZmLCB0aGUgU2ltb24gV2llc2VudGhhbCBDZW50ZXIncyBjaGllZiBOYXppIGh1bnRlciwgc2FpZCBpbiBhIHRlbGVwaG9uZSBpbnRlcnZpZXcgZnJvbSBJc3JhZWwgdGhhdCBpdCBwcm9iYWJseSB0b29rIGRlY2FkZXMgdG8gaWRlbnRpZnkgSGVuc3MnIGFsbGVnZWQgY29ubmVjdGlvbiB0byB0aGUgTmF6aXMgYmVjYXVzZSBvZiB0aGUgdGltZSBuZWNlc3NhcnkgdG8gb2J0YWluIHJlY29yZHMuCiJUaGVyZSB3ZXJlIHNvIG1hbnkgcGVycGV0cmF0b3JzLCBzbyBtYW55IHBlb3BsZSB3aG8gcGxheWVkIGEgcm9sZSwgaXQgdGFrZXMgYSB2ZXJ5IGxvbmcgdGltZSB0byBjYXJyeSBvdXQgYSBjb21wcmVoZW5zaXZlIC4uLiByZWZlcmVuY2Ugb2YgYWxsIG9mIHRoZSBpbmRpdmlkdWFscyB3aG8gaW4gYW55IHdheSBwYXJ0aWNpcGF0ZWQgaW4gdGhlIGNyaW1lcyBvZiB0aGUgSG9sb2NhdXN0LCIgaGUgc2FpZC4K, 'ORG')]
U2VuYXRvciB0cmVhdGVkIGZvciBpcnJlZ3VsYXIgaGVhcnRiZWF0ClZpcmdpbmlhIFJlcHVibGljYW4gd2lsbCByZXR1cm4gdG8gd29yayBuZXh0IHdlZWssIGhpcyBvZmZpY2Ugc2F5cwpVcGRhdGVkOiAxMDo1MyBwLm0uCldBU0hJTkdUT04gLSBTZW4uIEpvaG4gV2FybmVyIHdhcyBhZG1pdHRlZCB0byBhIGhvc3BpdGFsIFR1ZXNkYXkgdG8gY29ycmVjdCBhbiBpcnJlZ3VsYXIgaGVhcnRiZWF0LCBoaXMgb2ZmaWNlIHNhaWQuCldhcm5lciwgODAsIGhhZCBhIHByb2NlZHVyZSB0byBjb3JyZWN0IGFuIGF0cmlhbCBmaWJyaWxsYXRpb24gYXQgSW5vdmEgRmFpcmZheCBIb3NwaXRhbCBpbiBzdWJ1cmJhbiBWaXJnaW5pYSwgYWNjb3JkaW5nIHRvIGEgc3RhdGVtZW50IGlzc3VlZCBieSBoaXMgb2ZmaWNlLgpBIHNlY29uZCwgcm91dGluZSBwcm9jZWR1cmUgd2lsbCBiZSBwZXJmb3JtZWQgV2VkbmVzZGF5LCBhbmQgZG9jdG9ycyBleHBlY3QgV2FybmVyIHRvIGJlIGhvbWUgZm9yIHRoZSB3ZWVrZW5kIGFuZCByZXR1cm4gdG8gd29yayBuZXh0IHdlZWssIHRoZSBzdGF0ZW1lbnQgc2FpZC4KVGhlIFZpcmdpbmlhIFJlcHVibGljYW4gYW5ub3VuY2VkIEF1Zy4gMzEgdGhhdCBoZSB3aWxsIG5vdCBzZWVrIGEgc2l4dGggdGVybSBpbiAyMDA4LgpIZSBzYWlkIGF0IHRoZSB0aW1lIHRoYXQgaGUgc3RpbGwgZmVsdCBzcHJ5IGVub3VnaCB0byBoYW5kbGUgdGhlIHJpZ29ycyBvZiB0aGUgU2VuYXRlIGJ1dCB0aG91Z2h0IGl0IHdpc2Ugbm90IHRvIHB1c2ggaXQgYW5vdGhlciBzaXggeWVhcnMuCldhcm5lcidzIG9mZmljZSBzYWlkIHRoZSBzZW5hdG9yIGNhbWUgdG8gd29yayBUdWVzZGF5IGFuZCBoYW5kbGVkIHNvbWUgYXBwb2ludG1lbnRzIGJlZm9yZSBnb2luZyB0byB0aGUgQ2FwaXRvbCBwaHlzaWNpYW4ncyBvZmZpY2UuCkhlIHJldHVybmVkIHRvIGhpcyBvZmZpY2UgZm9yIGFkZGl0aW9uYWwgbWVldGluZ3MsIHRoZW4gbGVmdCBpbiB0aGUgYWZ0ZXJub29uIGZvciBhbiBhcHBvaW50bWVudCBhdCB0aGUgaG9zcGl0YWwuCkFjY29yZGluZyB0byB0aGUgQW1lcmljYW4gSGVhcnQgQXNzb2NpYXRpb24sIGFib3V0IDIuMiBtaWxsaW9uIEFtZXJpY2FucyBoYXZlIGF0cmlhbCBmaWJyaWxsYXRpb24sIGFuZCB0aGUgY2hhbmNlcyBvZiBnZXR0aW5nIHRoZSBoZWFydCBkaXNvcmRlciBpbmNyZWFzZSB3aXRoIGFnZS4K
[]
QnJpdG5leSBTcGVhcnMgdG8gYmUgYm9va2VkIGZvciBoaXQtYW5kLXJ1bgpQb3AgcHJpbmNlc3MgbXVzdCBzaG93IHByb29mIG9mIGJvb2tpbmcgYXQgT2N0LiAyNSBoZWFyaW5nClVwZGF0ZWQ6IDQ6NDQgcC5tLgpBIExvcyBBbmdlbGVzIENvdW50eSBqdWRnZSBoYXMgb3JkZXJlZCBCcml0bmV5IFNwZWFycyB0byBiZSBib29rIGZvciBzdXNwaWNpb24gb2YgaGl0LWFuZC1ydW4gYmVmb3JlIGEgc2NoZWR1bGVkIE9jdC4gMjUgY291cnQgYXBwZWFyYW5jZSwgYWNjb3JkaW5nIHRvIFRNWi5jb20uCkFjY29yZGluZyB0byBOQkMgTmV3cywgU3BlYXJzJyBhdHRvcm5leSB3aWxsIGhhdmUgdG8gc2hvdyBwcm9vZiBvZiB0aGUgYm9va2luZyBhdCB0aGUgT2N0LiAyNSBoZWFyaW5nLgpTcGVhcnMgZG9lcyBub3QgbmVlZCB0byBiZSBwcmVzZW50IGZvciB0aGlzIGFycmFpZ25tZW50LgpTcGVhcnMgd2FzIGNoYXJnZWQgd2l0aCBvbmUgY291bnQgb2YgaGl0LWFuZC1ydW4gYW5kIG9uZSBjb3VudCBvZiBkcml2aW5nIHdpdGggYSBzdXNwZW5kZWQgbGljZW5zZSBvbiBTZXB0LgpCb3RoIGFyZSBtaXNkZW1lYW5vciBjaGFyZ2VzLCBlYWNoIG9mIHdoaWNoIGNhcnJpZXMgYSBtYXhpbXVtIHNpeC1tb250aCBqYWlsIHNlbnRlbmNlLgpUaGUgY2hhcmdlcyBzdGVtIGZyb20gYW4gQXVndXN0IGluY2lkZW50IGluIHdoaWNoIFNwZWFycyBoaXQgYSBwYXJrZWQgY2FyLgpDYW1lcmFtZW4gZnJvbSBzZXZlcmFsIGNlbGVicml0eSBXZWIgc2l0ZXMgc2hvdCB2aWRlbyBvZiBTcGVhcnMgaGl0dGluZyB0aGUgY2FyIGFuZCB0aGVuIGxlYXZpbmcgdGhlIHNjZW5lIHdpdGhvdXQgbGVhdmluZyBhIG5vdGUgb3IgbWFraW5nIGFuIGF0dGVtcHQgdG8gY29udGFjdCB0aGUgZHJpdmVyLgpUTVogaXMgcmVwb3J0aW5nIFR1ZXNkYXkgdGhhdCBTcGVhcnMgaXMgbWFraW5nIGFuIGF0dGVtcHQgdG8gcmVhY2ggYSBzZXR0bGVtZW50IHdpdGggdGhlIGRyaXZlciBvZiB0aGUgcGFya2VkIGNhci4KTWVhbndoaWxlLCB0aGUgY3VzdG9keSBoZWFyaW5nIGZvciBTcGVhcnMgYW5kIGV4LWh1c2JhbmQgS2V2aW4gRmVkZXJsaW5lIGlzIHN0aWxsIHNldCBmb3IgT2N0LiAyNi4KU2hlIGhhcyBvcmRlcmVkIHRvIGJlIHByZXNlbnQgZm9yIHRoaXMgY291cnQgZGF0ZS4K
[(QnJpdG5leSBTcGVhcnMgdG8gYmUgYm9va2VkIGZvciBoaXQtYW5kLXJ1bgpQb3AgcHJpbmNlc3MgbXVzdCBzaG93IHByb29mIG9mIGJvb2tpbmcgYXQgT2N0LiAyNSBoZWFyaW5nClVwZGF0ZWQ6IDQ6NDQgcC5tLgpBIExvcyBBbmdlbGVzIENvdW50eSBqdWRnZSBoYXMgb3JkZXJlZCBCcml0bmV5IFNwZWFycyB0byBiZSBib29rIGZvciBzdXNwaWNpb24gb2YgaGl0LWFuZC1ydW4gYmVmb3JlIGEgc2NoZWR1bGVkIE9jdC4gMjUgY291cnQgYXBwZWFyYW5jZSwgYWNjb3JkaW5nIHRvIFRNWi5jb20uCkFjY29yZGluZyB0byBOQkMgTmV3cywgU3BlYXJzJyBhdHRvcm5leSB3aWxsIGhhdmUgdG8gc2hvdyBwcm9vZiBvZiB0aGUgYm9va2luZyBhdCB0aGUgT2N0LiAyNSBoZWFyaW5nLgpTcGVhcnMgZG9lcyBub3QgbmVlZCB0byBiZSBwcmVzZW50IGZvciB0aGlzIGFycmFpZ25tZW50LgpTcGVhcnMgd2FzIGNoYXJnZWQgd2l0aCBvbmUgY291bnQgb2YgaGl0LWFuZC1ydW4gYW5kIG9uZSBjb3VudCBvZiBkcml2aW5nIHdpdGggYSBzdXNwZW5kZWQgbGljZW5zZSBvbiBTZXB0LgpCb3RoIGFyZSBtaXNkZW1lYW5vciBjaGFyZ2VzLCBlYWNoIG9mIHdoaWNoIGNhcnJpZXMgYSBtYXhpbXVtIHNpeC1tb250aCBqYWlsIHNlbnRlbmNlLgpUaGUgY2hhcmdlcyBzdGVtIGZyb20gYW4gQXVndXN0IGluY2lkZW50IGluIHdoaWNoIFNwZWFycyBoaXQgYSBwYXJrZWQgY2FyLgpDYW1lcmFtZW4gZnJvbSBzZXZlcmFsIGNlbGVicml0eSBXZWIgc2l0ZXMgc2hvdCB2aWRlbyBvZiBTcGVhcnMgaGl0dGluZyB0aGUgY2FyIGFuZCB0aGVuIGxlYXZpbmcgdGhlIHNjZW5lIHdpdGhvdXQgbGVhdmluZyBhIG5vdGUgb3IgbWFraW5nIGFuIGF0dGVtcHQgdG8gY29udGFjdCB0aGUgZHJpdmVyLgpUTVogaXMgcmVwb3J0aW5nIFR1ZXNkYXkgdGhhdCBTcGVhcnMgaXMgbWFraW5nIGFuIGF0dGVtcHQgdG8gcmVhY2ggYSBzZXR0bGVtZW50IHdpdGggdGhlIGRyaXZlciBvZiB0aGUgcGFya2VkIGNhci4KTWVhbndoaWxlLCB0aGUgY3VzdG9keSBoZWFyaW5nIGZvciBTcGVhcnMgYW5kIGV4LWh1c2JhbmQgS2V2aW4gRmVkZXJsaW5lIGlzIHN0aWxsIHNldCBmb3IgT2N0LiAyNi4KU2hlIGhhcyBvcmRlcmVkIHRvIGJlIHByZXNlbnQgZm9yIHRoaXMgY291cnQgZGF0ZS4K, 'ORG')]
T3BpbmlvbjogSXQncyBubyBmbHVrZSwgdGhlc2UgSW5kaWFucyBhcmUgdGhlIHJlYWwgdGhpbmcKQ2x1YiBvbmUgc3RlcCBjbG9zZXIgdG8gZmlyc3QgV29ybGQgU2VyaWVzIGNoYW1waW9uc2hpcCBzaW5jZSAxOTQ4CkJ5IFRvbXkgTWFzc2Fyb3R0aQpVcGRhdGVkOiAxOjAyIGEubS4KQ0xFVkVMQU5EIC0gTGVzdCBhbnlvbmUgdGhpbmssIHRoaXMgaXMgYSBmbHVrZSwgdXBzZXQgb3IgY2FzZSBvZiB0ZW1wb3JhcnkgaW5zYW5pdHksIHdlJ3ZlIGdvdCBuZXdzIGZvciB5b3U6IFRoZSBDbGV2ZWxhbmQgSW5kaWFucyBhcmUgdGhlIHJlYWwgdGhpbmcuCldoZXRoZXIgdGhlIEluZGlhbnMgZmluaXNoIHRoZSBqb2Igbm93IGFuZCBkZWZlYXQgdGhlIEJvc3RvbiBSZWQgU294IGluIHRoZSBBbWVyaWNhbiBMZWFndWUgQ2hhbXBpb25zaGlwIHJlbWFpbnMgdG8gYmUgc2VlbiwgYnV0IHRoZSByZWFsaXR5IGlzIHRoYXQgdGhlIEluZGlhbnMgYXJlIG5vdyBoYWxmd2F5IHRoZXJlIGZvbGxvd2luZyBhIDQtMiBkZWZlYXQgb2YgdGhlIFJlZCBTb3ggaW4gR2FtZSAzIG9mIHRoZSBBTENTIGF0IEphY29icyBGaWVsZCBvbiBNb25kYXkgbmlnaHQuClNpbmNlIHRoZSBzaXh0aCBpbm5pbmcgb2YgR2FtZSAyIGluIHRoaXMgc2VyaWVzIC0gYSBzcGFuIGNvdmVyaW5nIDE0IGlubmluZ3MgLSBDbGV2ZWxhbmQgaGFzIG91dHNjb3JlZCBCb3N0b24sIDExLTIsIHRvIG1vdmUgb25lIHN0ZXAgY2xvc2VyIHRvIHRoZSBjaXR5J3MgZmlyc3QgV29ybGQgU2VyaWVzIGNoYW1waW9uc2hpcCBzaW5jZSAxOTQ4LgoiVGhhdCB3YXMgYSBjbG9zZSBnYW1lIHRocm91Z2hvdXQsIiBzYWlkIENsZXZlbGFuZCBtYW5hZ2VyIEVyaWMgV2VkZ2UsIGEgZm9ybWVyIFJlZCBTb3ggcHJvc3BlY3QgYW5kIHBsYXllciB3aG8gaXMgYSBsZWFkaW5nIGNhbmRpZGF0ZSBmb3IgdGhlIEFMIE1hbmFnZXIgb2YgdGhlIFllYXIgQXdhcmQuCkl0IHdhcyBhIGdvb2QgYmFzZWJhbGwgZ2FtZS4KSXQgd2FzIGNsb3NlLgpZb3UgbmVlZGVkIHRvIG1ha2UgcGl0Y2hlcywgeW91IG5lZWRlZCB0byBtYWtlIHBsYXlzLCB5b3UgbmVlZGVkIHRvIGdldCB0d28tb3V0IGhpdHMuCldoaWNoIGlzIHByZWNpc2VseSB3aGF0IHRoZSBJbmRpYW5zIGRpZC4KTGVzdCBhbnlvbmUgdGhpbmsgdGhhdCBDbGV2ZWxhbmQgaGFzIGJlZW4gbWVyZWx5IGJ1aWxkaW5nIHRvd2FyZCBzb21ldGhpbmcgaW4gdGhlIGxhc3QgZmV3IHNlYXNvbnMsIHRoaW5rIGFnYWluLgpUaGUgcHJvamVjdCB3YXMgbmVhcmx5IGNvbXBsZXRlIHR3byB5ZWFycyBhZ28uClRoZSAyMDA1IENsZXZlbGFuZCBJbmRpYW5zIHdlcmUgb25lIG9mIHRoZSBiZXN0IHRlYW1zIGluIHRoZSBBbWVyaWNhbiBMZWFndWUgYW5kIGEgcHJvYmFibGUgcGxheW9mZiB0ZWFtLCByaWdodCB1cCB1bnRpbCB0aGUgZmluYWwgd2VlayBvciBzbywgd2hlbiBhIHlvdW5nIGFuZCBpbmV4cGVyaWVuY2VkIHRlYW0gY3J1bWJsZWQgZG93biB0aGUgc3RyZXRjaC4KQ2xldmVsYW5kIGVuZGVkIHVwIHdpdGggOTMgd2lucywgdHdvIGdhbWVzIGJlaGluZCB0aGUgUmVkIFNveCBmb3IgdGhlIEFMIHdpbGRjYXJkIGJlcnRoLCBzaXggZ2FtZXMgYmVoaW5kIHRoZSBldmVudHVhbCBBTCBDZW50cmFsIERpdmlzaW9uIGFuZCB3b3JsZCBjaGFtcGlvbiBDaGljYWdvIFdoaXRlIFNveC4KTGFzdCB5ZWFyPwpUaGF0IHdhcyB0aGUgYWJlcnJhdGlvbi4KVGhlIEluZGlhbnMgbG9zdCBzdGFydGVyIEMuQy4gU2FiYXRoaWEgdG8gYW4gaW5qdXJ5IGVhcmx5IGluIHRoZSBzZWFzb24gYW5kIGhhZCBhIHRydWx5IHdyZXRjaGVkIGJ1bGxwZW4gdGhhdCBib3JkZXJlZCBvbiBiZWluZyByYWRpb2FjdGl2ZS4KSW4gYSBkaXZpc2lvbiBsaWtlIHRoZSBBTCBDZW50cmFsLCB3aGVyZSB0ZWFtcyBsaWtlIHRoZSBUaWdlcnMgYW5kIE1pbm5lc290YSBUd2lucyByZXNpZGUsIHRoYXQgd2FzIGEgcmVjaXBlIGZvciBkaXNhcHBvaW50bWVudCwgd2hpY2ggaXMgcHJlY2lzZWx5IHdoYXQgdGhlIDIwMDYgY2FtcGFpZ24gd2FzLgpPdmVyIHRoZSB3aW50ZXIsIENsZXZlbGFuZCBnZW5lcmFsIG1hbmFnZXIgTWFyayBTaGFwaXJvIHBsYWNlZCBjb25zaWRlcmFibHkgZW1waGFzaXMgb24gdGhlIEluZGlhbnMgYnVsbHBlbiwgc2lnbmluZyBib3RoIEpvZSBCb3Jvd3NraSBhbmQgS2VpdGggRm91bGtlIHRvIG9uZS15ZWFyIGNvbnRyYWN0cy4KU3VjaCBpcyB0aGUgcmVhbGl0eSBvZiBiZWluZyB0aGUgR00gb2YgYSB0ZWFtIHdpdGggYSAkNjUgbWlsbGlvbiBwYXlyb2xsLgpGb3Vsa2Ugc3Vic2VxdWVudGx5IGhhZCBlbGJvdyBwcm9ibGVtcyBiZWZvcmUgc3ByaW5nIHRyYWluaW5nIGV2ZW4gYmVnYW4gYW5kIHNpbXBseSByZXRpcmVkLCB1bmRvdWJ0ZWRseSBsZWFkaW5nIEluZGlhbnMgZm9sbG93ZXJzIHRvIHdvbmRlciB3aGV0aGVyIHRoZXkgd2VyZSBkdWUgZm9yIGFub3RoZXIgcmVzdGxlc3Mgc3VtbWVyIHNhYm90YWdlIGJ5IGEgcmVja2xlc3MgcmVsaWVmIGNvcnBzLgpBcyBpdCB0dXJuZWQgb3V0LCBCb3Jvd3NraSBzYXZlZCA0NSBnYW1lcywgbW9zdCBpbiB0aGUgQW1lcmljYW4gTGVhZ3VlLgpBbG9uZyB0aGUgd2F5LCBoZXJlIGlzIHdoYXQgZWxzZSBoYXBwZW5lZCBmb3IgdGhlIEluZGlhbnM6IExlYWRvZmYgbWFuIGFuZCBjZW50ZXIgZmllbGRlciBHcmFkeSBTaXplbW9yZSBjb250aW51ZWQgdG8gZGV2ZWxvcCBpbnRvIG9uZSBvZiB0aGUgbW9zdCBkeW5hbWljIHBsYXllcnMgaW4gdGhlIGdhbWU7IGNhdGNoZXIgVmljdG9yIE1hcnRpbmV6IGJlY2FtZSB0aGUgZ2FtZSdzIHByZW1pZXIgcnVuIHByb2R1Y2VyIGF0IGhpcyBwb3NpdGlvbjsgU2FiYXRoaWEgc3RheWVkIGhlYWx0aHkgYW5kIGJlY2FtZSBhIGxlYWRpbmcgY2FuZGlkYXRlIGZvciB0aGUgQUwgQ3kgWW91bmcgQXdhcmQgYW5kIHJpZ2h0LWhhbmRlciBGYXVzdG8gQ2FybW9uYSBlbWVyZ2VkIGFzIGxlZ2l0aW1hdGUsIGJvaW5hIGZpZGUgYmlnIGxlYWd1ZSB3aW5uZXIuCkEgeWVhciBhZ28sIENhcm1vbmEgd2VudCAxLTEwIHdoaWxlIGJlaW5nIG1pc2Nhc3QgYXMgYSBjbG9zZXIuClRoaXMgeWVhciwgaGUgd29uIDE5IGdhbWVzIGFuZCBmaW5pc2hlZCBzZWNvbmQgaW4gdGhlIGxlYWd1ZSBpbiBFUkEgYmVoaW5kIG9ubHkgcmlnaHQtaGFuZGVyIEpvaG4gbGFja2V5IG9mIHRoZSBMb3MgQW5nZWxlcyBBbmdlbHMuCklmIHlvdSBzZWVtIHRvIGJlIGRldGVjdGluZyBhIHBhdHRlcm4gaGVyZSwgeW91J3JlIHJpZ2h0LgpJdCdzIGNhbGxlZCB0aGUgYmVuZWZpdCBvZiBleHBlcmllbmNlLgpDYXJtb25hIG1heSBoYXZlIHN1ZmZlcmVkIGxhc3Qgc2Vhc29uLCBidXQgaGUncyBhIHN0dWQgbm93LgpTYWJhdGhpYSBsZWFybmVkIHRvIHRha2UgYmV0dGVyIGNhcmUgb2YgaGltc2VsZi4KQWxvbmcgdGhlIHdheSwgcGxheWVycyBsaWtlIE1hcnRpbmV6IGFuZCBzaG9ydHN0b3AgSmhvbm55IFBlcmFsdGEgbGVhcm5lZCB3aGF0IGl0IHRha2VzIHRvIGJlIGNvbnNpc3RlbnQgYW5kIHByb2R1Y3RpdmUgcGxheWVycyBpbiB0aGUgbWFqb3IgbGVhZ3VlcywgYW5kIHRoZSBzYW1lIEluZGlhbnMgd2hvIGZvbGRlZCBkb3duIHRoZSBzdHJldGNoIGluIDIwMDUgcGxheWVkIHRoZWlyIGJlc3QgYmFzZWJhbGwgb2YgdGhlIHNlYXNvbiBhZnRlciBBdWd1c3QgMSwgZHVzdGluZyB0aGUgVGlnZXJzIGluIHRoZSBmaW5hbCB3ZWVrcyBhbmQgd2lubmluZyB0aGUgQUwgQ2VudHJhbCBnb2luZyBhd2F5LgpBbmQgc28gbm93IHRoZSBJbmRpYW5zIGhhdmUgYSAyLTEgc2VyaWVzIGFkdmFudGFnZSBvdmVyIHRoZSBSZWQgU294IGluIHRoZSBBTENTLCBhbmQgdGhlcmUgaXMgc29tZSBzeW1ib2xpc20gaW4gdGhhdCwgdG9vLgpBZnRlciBiZWF0aW5nIHRoZSByZWlnbmluZyAoZm9yIG5vdykgQUwgY2hhbXBpb24gVGlnZXJzIGluIHRoZSBkaXZpc2lvbmFsIHJhY2UsIHRoZSBJbmRpYW5zIGtub2NrZWQgb2ZmIHRoZSBmYXZvcmVkIE5ldyBZb3JrIFlhbmtlZXMgaW4gZm91ciBnYW1lcyBvZiB0aGUgQUwgRGl2aXNpb24gU2VyaWVzLgpOZXcgWW9yayBhbmQgQm9zdG9uIC0gaW4gdGhhdCBvcmRlciAtIGhhdmUgdGhlIGhpZ2hlc3QgdHdvIHBheXJvbGxzIGluIGJhc2ViYWxsLCBwbGF5ZXIgc2FsYXJpZXMgdG90YWxpbmcgaW4gdGhlIHZpY2luaXR5IG9mICQzNzUgbWlsbGlvbi4KWWV0IGJvdGggaGF2ZSBiZWVuIGdpdmVuIGV2ZXJ5dGhpbmcgdGhleSBjYW4gaGFuZGxlIGJ5IGFuIEluZGlhbnMgY2x1YiB0aGF0IGlzIHlvdW5nZXIgYW5kLCBzZWVtaW5nbHksIGh1bmdyaWVyLgpFdmVuIGJldHRlciBuZXdzIGZvciB0aGUgcGVvcGxlIG9mIENsZXZlbGFuZD8KQnkgYWxsIGluZGljYXRpb25zLCB0aGVzZSBJbmRpYW5zIGFyZSBnb2luZyB0byBiZSB0b2dldGhlciBhIHdoaWxlLgpSb3VnaGx5IDEwIHllYXJzIGFmdGVyIGZvcm1lciBJbmRpYW5zIEdNIEpvaG4gSGFydCBsb2NrZWQgdXAgYSB0YWxlbnRlZCBDbGV2ZWxhbmQgbnVjbGV1cyB0aGF0IGluY2x1ZGVkLCBhbW9uZyBvdGhlcnMsIE1hbm55IFJhbWlyZXosIE9tYXIgVml6cXVlbCwgQWxiZXJ0IEJlbGxlIGFuZCBKaW0gVGhvbWUsIENsZXZlbGFuZCBoYXMgYSBuZXcgY29sbGVjdGlvbiBvZiB5b3VuZyBtZW4gc2lnbmVkIGZvciB0aGUgbG9uZyB0ZXJtLCB0aG91Z2ggU2FiYXRoaWEgY291bGQgYmUgYSBmcmVlIGFnZW50IGFmdGVyIG5leHQgeWVhci4KIkkgdGhpbmsgdGhlc2UgZ3V5cyBhcmUgKGhhdmluZyBmdW4pLCIgc2FpZCBub21hZGljIG91dGZpZWxkZXIgS2VubnkgTG9mdG9uLCBoaW1zZWxmIGEgbWVtYmVyIG9mIHRoZSB0YWxlbnRlZCBUcmliZSB0ZWFtcyBvZiB0aGUgbGF0ZSAxOTkwcy4KSSBmZWVsIGxpa2UgSSdtIGdsYWQgdG8gYmUgdGhlIGd1eSBnb2luZyBvdXQgdGhlcmUgdGhhdCdzIGJlZW4gdGhyb3VnaCB0aGlzIGJlZm9yZSBhbmQgYWJsZSB0byB0ZWxsIHRoZXNlIGd1eXMgd2hhdCBpdCB0YWtlcy4KQ2VydGFpbmx5LCBnb29kIGFkdmljZSBuZXZlciBodXJ0cy4KQnV0IHNvbWV0aGluZyBzdWdnZXN0cyB0aGVzZSBJbmRpYW5zIGhhdmUgbGVhcm5lZCBpdCBvbiB0aGVpciBvd24uCg==
[]
U1VYIHRvIGJlIHRoaXMgSW93YSBhaXJwb3J0ClNpb3V4IENpdHkgZW5kcyBmaWdodCB0byByZXBsYWNlIGNvZGUsIGVtYnJhY2VzIGl0IGluIG1hcmtldGluZyBjYW1wYWlnbgpVcGRhdGVkOiAxMTowNiBwLm0uClNJT1VYIENJVFksIElvd2EgLSBDaXR5IGxlYWRlcnMgaGF2ZSBzY3JhcHBlZCBwbGFucyB0byBkbyBhd2F5IHdpdGggdGhlIFNpb3V4IEdhdGV3YXkgQWlycG9ydCdzIHVuZmxhdHRlcmluZyB0aHJlZS1sZXR0ZXIgaWRlbnRpZmllciAtIFNVWCAtIGFuZCBpbnN0ZWFkIGhhdmUgbWFkZSBpdCB0aGUgY2VudGVycGllY2Ugb2YgdGhlIGFpcnBvcnQncyBuZXcgbWFya2V0aW5nIGNhbXBhaWduLgpUaGUgY29kZSwgdXNlZCBieSBwaWxvdHMgYW5kIGFpcnBvcnRzIHdvcmxkd2lkZSBhbmQgcHJpbnRlZCBvbiB0aWNrZXRzIGFuZCBsdWdnYWdlIHRhZ3MsIHdpbGwgYmUgdXNlZCBvbiBULXNoaXJ0cyBhbmQgY2FwcyBzcG9ydGluZyB0aGUgYWlycG9ydCdzIG5ldyBzbG9nYW4sICJGTFkgU1VYLiIKSXQgYWxzbyBmb3JtcyB0aGUgYWRkcmVzcyBvZiB0aGUgYWlycG9ydCdzIHJlZGVzaWduZWQgV2ViIHNpdGUgLSB3d3cuZmx5c3V4LmNvbS4KU2lvdXggQ2l0eSBvZmZpY2lhbHMgcGV0aXRpb25lZCB0aGUgRmVkZXJhbCBBdmlhdGlvbiBBZG1pbmlzdHJhdGlvbiB0byBjaGFuZ2UgdGhlIGNvZGUgaW4gMTk4OCBhbmQgMjAwMi4KQXQgb25lIHBvaW50LCB0aGUgRkFBIG9mZmVyZWQgdGhlIGNpdHkgZml2ZSBhbHRlcm5hdGl2ZXMgLSBHV1UsIEdZTywgR1lULCBTR1YgYW5kIEdBWSAtIGJ1dCBhaXJwb3J0IHRydXN0ZWVzIHR1cm5lZCB0aGVtIGRvd24uCkFpcnBvcnQgYm9hcmQgbWVtYmVyIERhdmUgQmVybnN0ZWluIHByb3Bvc2VkIGVtYnJhY2luZyB0aGUgaWRlbnRpZmllci4KIkxldCdzIG1ha2UgdGhlIGJlc3Qgb2YgaXQsIiBCZXJuc3RlaW4gc2FpZC4KSSB0aGluayB3ZSBoYXZlIHRoZSBvcHBvcnR1bml0eSB0byB0dXJuIGl0IGludG8gYSBwb3NpdGl2ZS4KSGUgbm90ZWQgdGhhdCBtYW55IGFpcnBvcnRzLCBpbmNsdWRpbmcgc29tZSBvZiB0aGUgYnVzaWVzdCwgaGF2ZSBmb3JnZXR0YWJsZSB0aHJlZS1sZXR0ZXIgY29kZXMuCiJJJ3ZlIGdvdCBidWRkaWVzIHRoYXQgSSB3ZW50IHRvIGNvbGxlZ2Ugd2l0aCBpbiBkaWZmZXJlbnQgY2l0aWVzIHRoYXQgY2FuJ3QgZXZlbiByZW1lbWJlciB0aGVpciBvd24gYmlydGhkYXlzLCBidXQgdGhleSBhbGwga25vdyB0aGUgU2lvdXggQ2l0eSBkZXNpZ25hdG9yIC0gU1VYLCIgaGUgc2FpZC4KTWF5b3IgQ3JhaWcgQmVyZW5zdGVpbiwgd2hvIGluIDIwMDIgZGVzY3JpYmVkIFNVWCBhcyBhbiAiZW1iYXJyYXNzbWVudCIgdG8gdGhlIGNpdHksIHNhaWQgaGUgdmlld3MgdGhlIG5ldyBzbG9nYW4gYXMgYSAiY3V0ZSBsaXR0bGUgd2F5IiB0byBtYWtlIGxpZ2h0IG9mIHRoZSBzaXR1YXRpb24uCg==
[(U1VYIHRvIGJlIHRoaXMgSW93YSBhaXJwb3J0ClNpb3V4IENpdHkgZW5kcyBmaWdodCB0byByZXBsYWNlIGNvZGUsIGVtYnJhY2VzIGl0IGluIG1hcmtldGluZyBjYW1wYWlnbgpVcGRhdGVkOiAxMTowNiBwLm0uClNJT1VYIENJVFksIElvd2EgLSBDaXR5IGxlYWRlcnMgaGF2ZSBzY3JhcHBlZCBwbGFucyB0byBkbyBhd2F5IHdpdGggdGhlIFNpb3V4IEdhdGV3YXkgQWlycG9ydCdzIHVuZmxhdHRlcmluZyB0aHJlZS1sZXR0ZXIgaWRlbnRpZmllciAtIFNVWCAtIGFuZCBpbnN0ZWFkIGhhdmUgbWFkZSBpdCB0aGUgY2VudGVycGllY2Ugb2YgdGhlIGFpcnBvcnQncyBuZXcgbWFya2V0aW5nIGNhbXBhaWduLgpUaGUgY29kZSwgdXNlZCBieSBwaWxvdHMgYW5kIGFpcnBvcnRzIHdvcmxkd2lkZSBhbmQgcHJpbnRlZCBvbiB0aWNrZXRzIGFuZCBsdWdnYWdlIHRhZ3MsIHdpbGwgYmUgdXNlZCBvbiBULXNoaXJ0cyBhbmQgY2FwcyBzcG9ydGluZyB0aGUgYWlycG9ydCdzIG5ldyBzbG9nYW4sICJGTFkgU1VYLiIKSXQgYWxzbyBmb3JtcyB0aGUgYWRkcmVzcyBvZiB0aGUgYWlycG9ydCdzIHJlZGVzaWduZWQgV2ViIHNpdGUgLSB3d3cuZmx5c3V4LmNvbS4KU2lvdXggQ2l0eSBvZmZpY2lhbHMgcGV0aXRpb25lZCB0aGUgRmVkZXJhbCBBdmlhdGlvbiBBZG1pbmlzdHJhdGlvbiB0byBjaGFuZ2UgdGhlIGNvZGUgaW4gMTk4OCBhbmQgMjAwMi4KQXQgb25lIHBvaW50LCB0aGUgRkFBIG9mZmVyZWQgdGhlIGNpdHkgZml2ZSBhbHRlcm5hdGl2ZXMgLSBHV1UsIEdZTywgR1lULCBTR1YgYW5kIEdBWSAtIGJ1dCBhaXJwb3J0IHRydXN0ZWVzIHR1cm5lZCB0aGVtIGRvd24uCkFpcnBvcnQgYm9hcmQgbWVtYmVyIERhdmUgQmVybnN0ZWluIHByb3Bvc2VkIGVtYnJhY2luZyB0aGUgaWRlbnRpZmllci4KIkxldCdzIG1ha2UgdGhlIGJlc3Qgb2YgaXQsIiBCZXJuc3RlaW4gc2FpZC4KSSB0aGluayB3ZSBoYXZlIHRoZSBvcHBvcnR1bml0eSB0byB0dXJuIGl0IGludG8gYSBwb3NpdGl2ZS4KSGUgbm90ZWQgdGhhdCBtYW55IGFpcnBvcnRzLCBpbmNsdWRpbmcgc29tZSBvZiB0aGUgYnVzaWVzdCwgaGF2ZSBmb3JnZXR0YWJsZSB0aHJlZS1sZXR0ZXIgY29kZXMuCiJJJ3ZlIGdvdCBidWRkaWVzIHRoYXQgSSB3ZW50IHRvIGNvbGxlZ2Ugd2l0aCBpbiBkaWZmZXJlbnQgY2l0aWVzIHRoYXQgY2FuJ3QgZXZlbiByZW1lbWJlciB0aGVpciBvd24gYmlydGhkYXlzLCBidXQgdGhleSBhbGwga25vdyB0aGUgU2lvdXggQ2l0eSBkZXNpZ25hdG9yIC0gU1VYLCIgaGUgc2FpZC4KTWF5b3IgQ3JhaWcgQmVyZW5zdGVpbiwgd2hvIGluIDIwMDIgZGVzY3JpYmVkIFNVWCBhcyBhbiAiZW1iYXJyYXNzbWVudCIgdG8gdGhlIGNpdHksIHNhaWQgaGUgdmlld3MgdGhlIG5ldyBzbG9nYW4gYXMgYSAiY3V0ZSBsaXR0bGUgd2F5IiB0byBtYWtlIGxpZ2h0IG9mIHRoZSBzaXR1YXRpb24uCg==, 'ORG')]
T2N0b2JlciBjb25zdW1lciBzZW50aW1lbnQgaGl0cyAxNy1tb250aCBsb3cKSG91c2luZyBzbHVtcCBzZWVuIGRhcmtlbmluZyBVLlMuIGVjb25vbWljIG91dGxvb2sKTkVXIFlPUksgLSBDb25zdW1lciBzZW50aW1lbnQgZmVsbCBmdXJ0aGVyIHRoYW4gZXhwZWN0ZWQgaW4gbGF0ZSBPY3RvYmVyIHRvIGl0cyBsb3dlc3QgaW4gbW9yZSB0aGFuIGEgeWVhciBhcyBjb25jZXJucyBhYm91dCB0aGUgaG91c2luZyBzbHVtcCBkYXJrZW5lZCB0aGUgZWNvbm9taWMgb3V0bG9vaywgYSBzdXJ2ZXkgcmVsZWFzZWQgb24gRnJpZGF5IHNob3dlZC4KVGhlIFJldXRlcnMvVW5pdmVyc2l0eSBvZiBNaWNoaWdhbiBTdXJ2ZXlzIG9mIENvbnN1bWVycyBzYWlkIGl0cyBsYXRlIE9jdG9iZXIgZmlndXJlIG9uIGNvbnN1bWVyIHNlbnRpbWVudCB3YXMgODAuOSwgZG93biBmcm9tIHRoZSBtb250aCdzIHByZWxpbWluYXJ5IHJlYWRpbmcgb2YgODIgYW5kIHRoZSBmaW5hbCBTZXB0ZW1iZXIgcmVhZGluZyBvZiA4My40LgpJdCB3YXMgdGhlIGxvd2VzdCByZWFkaW5nIHNpbmNlIE1heSAyMDA2IHdoZW4gdGhlIGluZGV4IHN0b29kIGF0IDc5LjEuCkVjb25vbWlzdHMgcG9sbGVkIGJ5IFJldXRlcnMgaGFkIGV4cGVjdGVkIHRoZSBmaW5hbCBPY3RvYmVyIGZpZ3VyZSB0byByZW1haW4gdW5jaGFuZ2VkIGZyb20gZWFybHkgaW4gdGhlIG1vbnRoIGF0IDgyLgpEZXNwaXRlIHRoZSBkZWNsaW5lIGluIHRoZSBpbmRleCwgdGhlIGRhdGEgc3RpbGwgaW5kaWNhdGUgYW4gYXZlcmFnZSBncm93dGggcmF0ZSBvZiAyLjAgcGVyY2VudCBpbiBwZXJzb25hbCBjb25zdW1wdGlvbiBleHBlbmRpdHVyZXMgb3ZlciB0aGUgbmV4dCBmb3VyIHF1YXJ0ZXJzLCB3aXRoIHRoZSB3ZWFrZXN0IHF1YXJ0ZXJzIGFyb3VuZCB0aGUgdHVybiBvZiB0aGUgeWVhciwgdGhlIHN1cnZleSBncm91cCBzYWlkLgpUaGUgZGF0YSBhbHNvIGltcGxpZWQgY29udGludWVkIGRlY2xpbmVzIGluIGhvdXNpbmcgc3RhcnRzIGFuZCBob21lIHNhbGVzIHRocm91Z2ggYXQgbGVhc3QgbWlkLTIwMDgsIHRoZSBncm91cCBzYWlkLgpUaGUgc3VydmV5J3MgZ2F1Z2Ugb2YgY3VycmVudCBjb25zdW1lciBjb25kaXRpb25zIHdhcyA5Ny42IGluIGxhdGUgT2N0b2JlciwgYmVsb3cgdGhlIHByZWxpbWluYXJ5IHJlYWRpbmcgb2YgOTguMiBhbmQgdGhlIFNlcHRlbWJlciBsZXZlbCBvZiA5Ny45LgpJdCBzdG9vZCBhdCAxMDcuMyBpbiBPY3RvYmVyIDIwMDYuCkNvbnN1bWVyIGV4cGVjdGF0aW9ucyBkcm9wcGVkIHRvIDcwLjEgZnJvbSB0aGUgcHJlbGltaW5hcnkgcmVhZGluZyBvZiA3MS42IGFuZCBTZXB0ZW1iZXIncyA3NC4xIHRvIGl0cyBsb3dlc3QgaW4gYSB5ZWFyLgpVbmxpa2UgcHJldmlvdXMgeWVhcnMsIHdoZW4gZHJvcHMgaW4gY29uZmlkZW5jZSB3ZXJlIGR1ZSB0byB0cmFuc2l0b3J5IGZhY3RvcnMgc3VjaCBhcyB0ZW1wb3Jhcnkgc3VyZ2VzIGluIGdhc29saW5lIHByaWNlcywgdGhpcyB0aW1lIHRoZSBkZWNsaW5lIHdhcyBkcml2ZW4gYnkgY29uY2VybnMgYWJvdXQgZmFsbGluZyBob21lIHByaWNlcywgdGhlIHN1cnZleSBncm91cCBzYWlkLgoiSW4gdGhlIG1vbnRocyBhaGVhZCwgaG93ZXZlciwgcmVzdXJnZW50IHByaWNlcyBmb3IgZ2FzIGFuZCBob21lIGhlYXRpbmcgYXJlIGxpa2VseSB0byBiZSBhY2NvbXBhbmllZCBieSBjb250aW51ZWQgZGVjbGluZXMgaW4gaG9tZSBwcmljZXMgYW5kIHJlc3VsdCBpbiBhZGRpdGlvbmFsIGRlY2xpbmVzIGluIGNvbmZpZGVuY2UsIiB0aGUgc3VydmV5IHNhaWQuCkVhY2ggZG93bndhcmQgc3RlcCByYWlzZXMgdGhlIHByb2JhYmlsaXR5IG9mIHJlY2Vzc2lvbiwgd2hpY2ggaXMgc3RpbGwgYmVsb3cgNTAgcGVyY2VudCBidXQgbm90IGNvbWZvcnRhYmx5IHNvLgpUaGUgc3VydmV5J3Mgb25lLXllYXIgaW5mbGF0aW9uIGluZGV4IHdhcyB1bmNoYW5nZWQgZnJvbSBTZXB0ZW1iZXIgYXQgMy4xIHBlcmNlbnQsIGJ1dCB1cCBmcm9tIE9jdG9iZXIncyBwcmVsaW1pbmFyeSByZWFkaW5nIG9mIDMuMCBwZXJjZW50LgpUaGUgZml2ZS15ZWFyIGluZGV4IHdhcyB1bmNoYW5nZWQgZnJvbSBlYXJseSBPY3RvYmVyIGF0IDIuOCBwZXJjZW50IGJ1dCBkb3duIGZyb20gMi45IHBlcmNlbnQgaW4gU2VwdGVtYmVyLgo=
[(T2N0b2JlciBjb25zdW1lciBzZW50aW1lbnQgaGl0cyAxNy1tb250aCBsb3cKSG91c2luZyBzbHVtcCBzZWVuIGRhcmtlbmluZyBVLlMuIGVjb25vbWljIG91dGxvb2sKTkVXIFlPUksgLSBDb25zdW1lciBzZW50aW1lbnQgZmVsbCBmdXJ0aGVyIHRoYW4gZXhwZWN0ZWQgaW4gbGF0ZSBPY3RvYmVyIHRvIGl0cyBsb3dlc3QgaW4gbW9yZSB0aGFuIGEgeWVhciBhcyBjb25jZXJucyBhYm91dCB0aGUgaG91c2luZyBzbHVtcCBkYXJrZW5lZCB0aGUgZWNvbm9taWMgb3V0bG9vaywgYSBzdXJ2ZXkgcmVsZWFzZWQgb24gRnJpZGF5IHNob3dlZC4KVGhlIFJldXRlcnMvVW5pdmVyc2l0eSBvZiBNaWNoaWdhbiBTdXJ2ZXlzIG9mIENvbnN1bWVycyBzYWlkIGl0cyBsYXRlIE9jdG9iZXIgZmlndXJlIG9uIGNvbnN1bWVyIHNlbnRpbWVudCB3YXMgODAuOSwgZG93biBmcm9tIHRoZSBtb250aCdzIHByZWxpbWluYXJ5IHJlYWRpbmcgb2YgODIgYW5kIHRoZSBmaW5hbCBTZXB0ZW1iZXIgcmVhZGluZyBvZiA4My40LgpJdCB3YXMgdGhlIGxvd2VzdCByZWFkaW5nIHNpbmNlIE1heSAyMDA2IHdoZW4gdGhlIGluZGV4IHN0b29kIGF0IDc5LjEuCkVjb25vbWlzdHMgcG9sbGVkIGJ5IFJldXRlcnMgaGFkIGV4cGVjdGVkIHRoZSBmaW5hbCBPY3RvYmVyIGZpZ3VyZSB0byByZW1haW4gdW5jaGFuZ2VkIGZyb20gZWFybHkgaW4gdGhlIG1vbnRoIGF0IDgyLgpEZXNwaXRlIHRoZSBkZWNsaW5lIGluIHRoZSBpbmRleCwgdGhlIGRhdGEgc3RpbGwgaW5kaWNhdGUgYW4gYXZlcmFnZSBncm93dGggcmF0ZSBvZiAyLjAgcGVyY2VudCBpbiBwZXJzb25hbCBjb25zdW1wdGlvbiBleHBlbmRpdHVyZXMgb3ZlciB0aGUgbmV4dCBmb3VyIHF1YXJ0ZXJzLCB3aXRoIHRoZSB3ZWFrZXN0IHF1YXJ0ZXJzIGFyb3VuZCB0aGUgdHVybiBvZiB0aGUgeWVhciwgdGhlIHN1cnZleSBncm91cCBzYWlkLgpUaGUgZGF0YSBhbHNvIGltcGxpZWQgY29udGludWVkIGRlY2xpbmVzIGluIGhvdXNpbmcgc3RhcnRzIGFuZCBob21lIHNhbGVzIHRocm91Z2ggYXQgbGVhc3QgbWlkLTIwMDgsIHRoZSBncm91cCBzYWlkLgpUaGUgc3VydmV5J3MgZ2F1Z2Ugb2YgY3VycmVudCBjb25zdW1lciBjb25kaXRpb25zIHdhcyA5Ny42IGluIGxhdGUgT2N0b2JlciwgYmVsb3cgdGhlIHByZWxpbWluYXJ5IHJlYWRpbmcgb2YgOTguMiBhbmQgdGhlIFNlcHRlbWJlciBsZXZlbCBvZiA5Ny45LgpJdCBzdG9vZCBhdCAxMDcuMyBpbiBPY3RvYmVyIDIwMDYuCkNvbnN1bWVyIGV4cGVjdGF0aW9ucyBkcm9wcGVkIHRvIDcwLjEgZnJvbSB0aGUgcHJlbGltaW5hcnkgcmVhZGluZyBvZiA3MS42IGFuZCBTZXB0ZW1iZXIncyA3NC4xIHRvIGl0cyBsb3dlc3QgaW4gYSB5ZWFyLgpVbmxpa2UgcHJldmlvdXMgeWVhcnMsIHdoZW4gZHJvcHMgaW4gY29uZmlkZW5jZSB3ZXJlIGR1ZSB0byB0cmFuc2l0b3J5IGZhY3RvcnMgc3VjaCBhcyB0ZW1wb3Jhcnkgc3VyZ2VzIGluIGdhc29saW5lIHByaWNlcywgdGhpcyB0aW1lIHRoZSBkZWNsaW5lIHdhcyBkcml2ZW4gYnkgY29uY2VybnMgYWJvdXQgZmFsbGluZyBob21lIHByaWNlcywgdGhlIHN1cnZleSBncm91cCBzYWlkLgoiSW4gdGhlIG1vbnRocyBhaGVhZCwgaG93ZXZlciwgcmVzdXJnZW50IHByaWNlcyBmb3IgZ2FzIGFuZCBob21lIGhlYXRpbmcgYXJlIGxpa2VseSB0byBiZSBhY2NvbXBhbmllZCBieSBjb250aW51ZWQgZGVjbGluZXMgaW4gaG9tZSBwcmljZXMgYW5kIHJlc3VsdCBpbiBhZGRpdGlvbmFsIGRlY2xpbmVzIGluIGNvbmZpZGVuY2UsIiB0aGUgc3VydmV5IHNhaWQuCkVhY2ggZG93bndhcmQgc3RlcCByYWlzZXMgdGhlIHByb2JhYmlsaXR5IG9mIHJlY2Vzc2lvbiwgd2hpY2ggaXMgc3RpbGwgYmVsb3cgNTAgcGVyY2VudCBidXQgbm90IGNvbWZvcnRhYmx5IHNvLgpUaGUgc3VydmV5J3Mgb25lLXllYXIgaW5mbGF0aW9uIGluZGV4IHdhcyB1bmNoYW5nZWQgZnJvbSBTZXB0ZW1iZXIgYXQgMy4xIHBlcmNlbnQsIGJ1dCB1cCBmcm9tIE9jdG9iZXIncyBwcmVsaW1pbmFyeSByZWFkaW5nIG9mIDMuMCBwZXJjZW50LgpUaGUgZml2ZS15ZWFyIGluZGV4IHdhcyB1bmNoYW5nZWQgZnJvbSBlYXJseSBPY3RvYmVyIGF0IDIuOCBwZXJjZW50IGJ1dCBkb3duIGZyb20gMi45IHBlcmNlbnQgaW4gU2VwdGVtYmVyLgo=, 'GPE')]
RG9kZ2VycyByZXBvcnRlZGx5IHRvIGJyaW5nIGluIFRvcnJlLCBmaXJlIExpdHRsZQpNYXR0aW5nbHkgd291bGQgam9pbiBmb3JtZXIgWWFua2VlcyBza2lwcGVyIGluIExvcyBBbmdlbGVzClVwZGF0ZWQ6IDE6MjMgYS5tLgpORVcgWU9SSyAtIFRoZSBOZXcgWW9yayBUaW1lcyBpcyByZXBvcnRpbmcgdGhhdCB0aGUgTG9zIEFuZ2VsZXMgRG9kZ2VycyBhcmUgcGxhbm5pbmcgb24gZmlyaW5nIG1hbmFnZXIgR3JhZHkgTGl0dGxlIGFuZCByZXBsYWNpbmcgaGltIHdpdGggbG9uZ3RpbWUgTmV3IFlvcmsgWWFua2VlcyBtYW5hZ2VyIEpvZSBUb3JyZS4KVG9ycmUgaGFzIGJlZW4gb24gdGhlIG1hcmtldCBzaW5jZSB0dXJuaW5nIGRvd24gYSBvbmUteWVhciBvZmZlciB0byByZW1haW4gYXMgbWFuYWdlciBvZiB0aGUgWWFua2VlcyBvbiBPY3RvYmVyIDE4LgpIZSBoYWQgYmVlbiB3aXRoIHRoZSBZYW5rZWVzIGZvciAxMiBzZWFzb25zLCB3aW5uaW5nIGZvdXIgV29ybGQgU2VyaWVzIGNoYW1waW9uc2hpcHMgYW5kIGxlYWRpbmcgdGhlIHRlYW0gdG8gdGhlIHBsYXlvZmZzIGV2ZXJ5IHNlYXNvbiBoZSB3YXMgaW4gY2hhcmdlIGluIHRoZSBCcm9ueC4KVG9ycmUsIDY3LCBvd25zIGEgLjUzOSAoMjA2Ny0xNzcwKSB3aW5uaW5nIHBlcmNlbnRhZ2Ugb3ZlciAyNiBzZWFzb25zIGluIHRoZSBtYWpvcnMgdGhhdCBoYXZlIGFsc28gaW5jbHVkZWQgc3RvcHMgd2l0aCB0aGUgTmV3IFlvcmsgTWV0cywgQXRsYW50YSBCcmF2ZXMgYW5kIHRoZSBTdC4gTG91aXMgQ2FyZGluYWxzLgpBbG9uZyB3aXRoIHRoZSBwb3NzaWJsZSBoaXJlIG9mIFRvcnJlLCBpdCBpcyBiZWluZyByZXBvcnRlZCB0aGF0IGhpcyBiZW5jaCBjb2FjaCwgRG9uIE1hdHRpbmdseSwgbWF5IGJlIGpvaW5pbmcgaGltIGluIHRoZSBzYW1lIHJvbGUgdGhhdCBoZSBtYW5uZWQgZm9yIG9uZSBzZWFzb24gd2l0aCB0aGUgWWFua2VlcyBhZnRlciBzcGVuZGluZyB0aHJlZSBzZWFzb25zIGFzIHRoZWlyIGhpdHRpbmcgY29hY2guCk1hdHRpbmdseSB3YXMgb25lIG9mIHRoZSB0aHJlZSBmaW5hbGlzdHMgZm9yIHRoZSB2YWNhbmN5IGNyZWF0ZWQgYnkgdGhlIGRlcGFydHVyZSBvZiBUb3JyZSBsYXN0IHdlZWsgYmVmb3JlIHRoZSBZYW5rZWVzIG9mZmVyZWQgdGhlIGpvYiB0byBmb3JtZXIgTWFybGlucyBtYW5hZ2VyIEpvZSBHaXJhcmRpIG9uIE1vbmRheS4KSXQgaGFkIGJlZW4gcmVwb3J0ZWQgZWFybGllciBpbiB0aGUgZGF5IHRoYXQgTWF0dGluZ2x5IHdvdWxkIG5vdCBhY2NlcHQgYSBwb3NpdGlvbiBvbiB0aGUgbmV3IFlhbmtlZXMgY29hY2hpbmcgc3RhZmYuCkludGVyZXN0aW5nbHksIGEgbW92ZSB0byBMb3MgQW5nZWxlcyB3b3VsZCByZXVuaXRlIE1hdHRpbmdseSB3aXRoIHRoZSBvcmdhbml6YXRpb24gdGhhdCBkcmFmdGVkIGhpcyBzb24sIFByZXN0b24sIGluIHRoZSBmaXJzdCByb3VuZCBvZiB0aGUgMjAwNiBtYWpvciBsZWFndWUgZHJhZnQuCkxpdHRsZSwgd2hvIGhhcyBsZWQgdGhlIERvZGdlcnMgdG8gd2lubmluZyBzZWFzb25zIGluIGVhY2ggb2YgaGlzIHR3byBzZWFzb25zIGF0IHRoZSBoZWxtLCBsZWQgTG9zIEFuZ2VsZXMgdG8gYSBkaXNhcHBvaW50aW5nIDgyLTgwIGZpbmlzaCBsYXN0IHNlYXNvbiwgZWlnaHQgZ2FtZXMgYmVoaW5kIHRoZSBldmVudHVhbCBOYXRpb25hbCBMZWFndWUgV2VzdCBEaXZpc2lvbiBjaGFtcGlvbiBBcml6b25hIERpYW1vbmRiYWNrcy4KRGVzcGl0ZSBuZXZlciBlbmR1cmluZyBhIGxvc2luZyBzZWFzb24gaW4gZm91ciBzZWFzb25zIHdpdGggdGhlIERvZGdlcnMgYW5kIEJvc3RvbiBSZWQgU294IGFuZCBjb21waWxpbmcgYSAuNTUyIHdpbm5pbmcgcGVyY2VudGFnZSAoMzU4LTI5MCksIExpdHRsZSB3aWxsIGhhdmUgbGFzdGVkIGp1c3QgdHdvIHNlYXNvbnMgd2l0aCBlYWNoIHRlYW0uCg==
[]
QXJpem9uYSdzIE9sc29uIHRvIHRha2UgbGVhdmUgb2YgYWJzZW5jZQpBc3Npc3RhbnQgTydOZWlsbCB3aWxsIHJ1biB0ZWFtIHdoaWxlIDczLXllYXItb2xkIGhlYWQgY29hY2ggYXdheQp1cGRhdGVkIDE6MzEgcC5tLgpUVUNTT04sIEFyaXouIC0gQXJpem9uYSBjb2FjaCBMdXRlIE9sc29uIGlzIHRha2luZyBhIGxlYXZlIG9mIGFic2VuY2UgZm9yIHVuc3BlY2lmaWVkIHBlcnNvbmFsIHJlYXNvbnMuCkluIGEgc3RhdGVtZW50IGlzc3VlZCBieSBoaXMgcHVibGljIHJlbGF0aW9ucyBmaXJtLCB0aGUgNzMteWVhci1vbGQgSGFsbCBvZiBGYW1lIGNvYWNoIHNhaWQgdGhlIG1hdHRlciB3YXMgbm90IGhlYWx0aCByZWxhdGVkLgoiRm9yIHRoZSBwYXN0IDI1IHllYXJzLCBJIGhhdmUgYWx3YXlzIGdpdmVuIDExMCBwZXJjZW50IHRvIHRoZSB0ZWFtIGFuZCB0aGlzIGpvYiwiIE9sc29uIHNhaWQuCkluIGxpZ2h0IG9mIHRoaXMgcGVyc29uYWwgbWF0dGVyLCBJIGZlZWwgaXQgaXMgaW4gdGhlIGJlc3QgaW50ZXJlc3Qgb2YgdGhlIHRlYW0gYW5kIHRoZSBVbml2ZXJzaXR5IG9mIEFyaXpvbmEgdG8gdGFrZSBhIGxlYXZlIG9mIGFic2VuY2UuCk9sc29uIHNhaWQgaGUgd2FudGVkIHRvICJyZWFzc3VyZSBldmVyeW9uZSB0aGF0IHRoaXMgaXNuJ3QgYSBoZWFsdGggc2NhcmUsIGJ1dCByYXRoZXIgYSBwZXJzb25hbCBtYXR0ZXIgdGhhdCBuZWVkcyBteSB1bmRpdmlkZWQgYXR0ZW50aW9uLiIKVGhlIHNwZWNpZmljIHJlYXNvbiB3YXMgbm90IGdpdmVuLgoiSSB3YW50IHRvIHRoYW5rIGV2ZXJ5b25lIGluIGFkdmFuY2UgZm9yIHRoZWlyIHN1cHBvcnQgYW5kIHByYXllcnMgYW5kIHJlcXVlc3QgdGhhdCB0aGUgbWVkaWEgcmVzcGVjdCBteSBmYW1pbHkncyBwcml2YWN5IGR1cmluZyB0aGlzIHRpbWUsIiBoZSBzYWlkLgpBc3Npc3RhbnQgY29hY2ggS2V2aW4gTydOZWlsbCB3aWxsIGFzc3VtZSBPbHNvbidzIGR1dGllcyBpbiBoaXMgYWJzZW5jZS4KQXJpem9uYSBpcyByYW5rZWQgTm8uCjE3IGluIFRoZSBBc3NvY2lhdGVkIFByZXNzIHBvbGwuCk9sc29uIGhhcyBhIDc4MC0yODAgcmVjb3JkIGluIDM0IHNlYXNvbnMgYXMgYSBtYWpvciBjb2xsZWdlIGNvYWNoLgpJbiAyNCB5ZWFycyBhdCBBcml6b25hLCBoZSBpcyA1ODktMTg3IHdpdGggMjMgY29uc2VjdXRpdmUgTkNBQSB0b3VybmFtZW50IGFwcGVhcmFuY2VzLgpIaXMgV2lsZGNhdHMgaGF2ZSB3b24gMTEgUGFjLTEwIGNoYW1waW9uc2hpcHMsIHJlYWNoZWQgdGhlIEZpbmFsIEZvdXIgZm91ciB0aW1lcyBhbmQgd29uIHRoZSAxOTk3IE5DQUEgdGl0bGUuCg==
[]
QmVybmFua2U6IEJ1c2luZXNzIGdyb3d0aCBpcyBzZXQgdG8gc2xvdwpGZWQgY2hpZWYgaWRlbnRpZmllcyBlY29ub21pYyBpc3N1ZXMgaW4gYSBzcGVlY2ggYmVmb3JlIENvbmdyZXNzCldBU0hJTkdUT04gLSBGZWRlcmFsIFJlc2VydmUgQ2hhaXJtYW4gQmVuIEJlcm5hbmtlIHNhaWQgVGh1cnNkYXkgdGhhdCBhIGhvc3Qgb2YgZWNvbm9taWMgcHJvYmxlbXMsIGluY2x1ZGluZyB0aGUgc2V2ZXJlIGhvdXNpbmcgc2x1bXAsIHdpbGwgY2F1c2UgYnVzaW5lc3MgZ3Jvd3RoIHRvIHNsb3cgbm90aWNlYWJseSBpbiBjb21pbmcgbW9udGhzLgpCZXJuYW5rZSB0b2xkIENvbmdyZXNzIiBKb2ludCBFY29ub21pYyBDb21taXR0ZWUgdGhhdCB0aGUgY2VudHJhbCBiYW5rIGlzIHdhdGNoaW5nIGRldmVsb3BtZW50cyBjbG9zZWx5LCBidXQgZ2F2ZSBubyBzaWduYWwgdGhhdCBpdCdzIHByZXBhcmVkIGF0IHRoZSBjdXJyZW50IHRpbWUgdG8gY3V0IGludGVyZXN0IHJhdGVzIGV2ZW4gZnVydGhlci4KRmVkIHBvbGljeW1ha2VycyBsYXN0IHdlZWsgY3V0IGEga2V5IGludGVyZXN0IHJhdGUgZm9yIHRoZSBzZWNvbmQgdGltZSBpbiB0d28gbW9udGhzLCBidXQgZGlzYXBwb2ludGVkIFdhbGwgU3RyZWV0IGJ5IGRpc2NvdXJhZ2luZyBleHBlY3RhdGlvbnMgdGhhdCBpdCB3b3VsZCBmb2xsb3cgd2l0aCBmdXJ0aGVyIHJhdGUgY3V0cy4KQmVybmFua2Ugc2FpZCBoZSBhbmQgaGlzIGNvbGxlYWd1ZXMgYmVsaWV2ZSBlY29ub21pYyBhY3Rpdml0eSB3aWxsICJzbG93IG5vdGljZWFibHkgaW4gdGhlIGZvdXJ0aCBxdWFydGVyIiBjb21wYXJlZCB0byB0aGUgMy45IHBlcmNlbnQgcGFjZSBvZiB0aGUgdGhpcmQgcXVhcnRlci4KIkdyb3d0aCB3YXMgc2VlbiBhcyByZW1haW5pbmcgc2x1Z2dpc2ggZHVyaW5nIHRoZSBmaXJzdCBwYXJ0IG9mIG5leHQgeWVhciwgdGhlbiBzdHJlbmd0aGVuaW5nIGFzIHRoZSBlZmZlY3RzIG9mIHRpZ2h0ZXIgY3JlZGl0IGFuZCB0aGUgaG91c2luZyBjb3JyZWN0aW9uIGJlZ2luIHRvIHdhbmUsIiBCZXJuYW5rZSBzYWlkIGluIGhpcyBwcmVwYXJlZCByZW1hcmtzIHRvIHRoZSBKRUMuCk1hbnkgZWNvbm9taXN0cyBiZWxpZXZlIHRoZSBlY29ub215J3MgbWF4aW11bSBwb2ludCBvZiBkYW5nZXIgb2YgZmFsbGluZyBpbnRvIGEgcmVjZXNzaW9uIHdpbGwgb2NjdXIgaW4gdGhlIGVhcmx5IHBhcnQgb2YgbmV4dCB5ZWFyLgpBIHZhcmlldHkgb2YgcHJvYmxlbXMgZnJvbSB0aGUgc3RlZXBlc3QgaG91c2luZyBkb3dudHVybiBpbiBtb3JlIHRoYW4gdHdvIGRlY2FkZXMgdG8gYSBzZXZlcmUgY3JlZGl0IGNydW5jaCwgc3VyZ2luZyBvaWwgcHJpY2VzIGFuZCBhIGZhbGxpbmcgZG9sbGFyIGhhdmUgcm9pbGVkIFdhbGwgU3RyZWV0IGluIHJlY2VudCBkYXlzLCB0cmlnZ2VyaW5nIGJpZyBwbHVuZ2VzIGluIHN0b2NrIHByaWNlcy4KVGhlIERvdyBKb25lcyBpbmR1c3RyaWFsIGF2ZXJhZ2UgcGx1bmdlZCBieSAzNjAuOTIgcG9pbnRzIG9uIFdlZG5lc2RheSwgdGhlIHNlY29uZCBkcm9wIG9mIHRoYXQgbWFnbml0dWRlIGluIHRoZSBwYXN0IHdlZWsuCk11Y2ggb2YgdGhhdCBhbnhpZXR5IHN0ZW1zIGZyb20gYSBzdGVhZHkgc3RyZWFtIG9mIGJhZCBjb21wYW55IG5ld3MgYXMgY29ycG9yYXRlIGdpYW50cyBzdWNoIGFzIEdlbmVyYWwgTW90b3JzLCBNZXJyaWxsIEx5bmNoIGFuZCBDaXRpZ3JvdXAgaGF2ZSByZXBvcnRlZCBodWdlIGxvc3Nlcy4K
[(QmVybmFua2U6IEJ1c2luZXNzIGdyb3d0aCBpcyBzZXQgdG8gc2xvdwpGZWQgY2hpZWYgaWRlbnRpZmllcyBlY29ub21pYyBpc3N1ZXMgaW4gYSBzcGVlY2ggYmVmb3JlIENvbmdyZXNzCldBU0hJTkdUT04gLSBGZWRlcmFsIFJlc2VydmUgQ2hhaXJtYW4gQmVuIEJlcm5hbmtlIHNhaWQgVGh1cnNkYXkgdGhhdCBhIGhvc3Qgb2YgZWNvbm9taWMgcHJvYmxlbXMsIGluY2x1ZGluZyB0aGUgc2V2ZXJlIGhvdXNpbmcgc2x1bXAsIHdpbGwgY2F1c2UgYnVzaW5lc3MgZ3Jvd3RoIHRvIHNsb3cgbm90aWNlYWJseSBpbiBjb21pbmcgbW9udGhzLgpCZXJuYW5rZSB0b2xkIENvbmdyZXNzIiBKb2ludCBFY29ub21pYyBDb21taXR0ZWUgdGhhdCB0aGUgY2VudHJhbCBiYW5rIGlzIHdhdGNoaW5nIGRldmVsb3BtZW50cyBjbG9zZWx5LCBidXQgZ2F2ZSBubyBzaWduYWwgdGhhdCBpdCdzIHByZXBhcmVkIGF0IHRoZSBjdXJyZW50IHRpbWUgdG8gY3V0IGludGVyZXN0IHJhdGVzIGV2ZW4gZnVydGhlci4KRmVkIHBvbGljeW1ha2VycyBsYXN0IHdlZWsgY3V0IGEga2V5IGludGVyZXN0IHJhdGUgZm9yIHRoZSBzZWNvbmQgdGltZSBpbiB0d28gbW9udGhzLCBidXQgZGlzYXBwb2ludGVkIFdhbGwgU3RyZWV0IGJ5IGRpc2NvdXJhZ2luZyBleHBlY3RhdGlvbnMgdGhhdCBpdCB3b3VsZCBmb2xsb3cgd2l0aCBmdXJ0aGVyIHJhdGUgY3V0cy4KQmVybmFua2Ugc2FpZCBoZSBhbmQgaGlzIGNvbGxlYWd1ZXMgYmVsaWV2ZSBlY29ub21pYyBhY3Rpdml0eSB3aWxsICJzbG93IG5vdGljZWFibHkgaW4gdGhlIGZvdXJ0aCBxdWFydGVyIiBjb21wYXJlZCB0byB0aGUgMy45IHBlcmNlbnQgcGFjZSBvZiB0aGUgdGhpcmQgcXVhcnRlci4KIkdyb3d0aCB3YXMgc2VlbiBhcyByZW1haW5pbmcgc2x1Z2dpc2ggZHVyaW5nIHRoZSBmaXJzdCBwYXJ0IG9mIG5leHQgeWVhciwgdGhlbiBzdHJlbmd0aGVuaW5nIGFzIHRoZSBlZmZlY3RzIG9mIHRpZ2h0ZXIgY3JlZGl0IGFuZCB0aGUgaG91c2luZyBjb3JyZWN0aW9uIGJlZ2luIHRvIHdhbmUsIiBCZXJuYW5rZSBzYWlkIGluIGhpcyBwcmVwYXJlZCByZW1hcmtzIHRvIHRoZSBKRUMuCk1hbnkgZWNvbm9taXN0cyBiZWxpZXZlIHRoZSBlY29ub215J3MgbWF4aW11bSBwb2ludCBvZiBkYW5nZXIgb2YgZmFsbGluZyBpbnRvIGEgcmVjZXNzaW9uIHdpbGwgb2NjdXIgaW4gdGhlIGVhcmx5IHBhcnQgb2YgbmV4dCB5ZWFyLgpBIHZhcmlldHkgb2YgcHJvYmxlbXMgZnJvbSB0aGUgc3RlZXBlc3QgaG91c2luZyBkb3dudHVybiBpbiBtb3JlIHRoYW4gdHdvIGRlY2FkZXMgdG8gYSBzZXZlcmUgY3JlZGl0IGNydW5jaCwgc3VyZ2luZyBvaWwgcHJpY2VzIGFuZCBhIGZhbGxpbmcgZG9sbGFyIGhhdmUgcm9pbGVkIFdhbGwgU3RyZWV0IGluIHJlY2VudCBkYXlzLCB0cmlnZ2VyaW5nIGJpZyBwbHVuZ2VzIGluIHN0b2NrIHByaWNlcy4KVGhlIERvdyBKb25lcyBpbmR1c3RyaWFsIGF2ZXJhZ2UgcGx1bmdlZCBieSAzNjAuOTIgcG9pbnRzIG9uIFdlZG5lc2RheSwgdGhlIHNlY29uZCBkcm9wIG9mIHRoYXQgbWFnbml0dWRlIGluIHRoZSBwYXN0IHdlZWsuCk11Y2ggb2YgdGhhdCBhbnhpZXR5IHN0ZW1zIGZyb20gYSBzdGVhZHkgc3RyZWFtIG9mIGJhZCBjb21wYW55IG5ld3MgYXMgY29ycG9yYXRlIGdpYW50cyBzdWNoIGFzIEdlbmVyYWwgTW90b3JzLCBNZXJyaWxsIEx5bmNoIGFuZCBDaXRpZ3JvdXAgaGF2ZSByZXBvcnRlZCBodWdlIGxvc3Nlcy4K, 'ORG')]
MSBvZiBsYXN0IDIgVGl0YW5pYyBzdXJ2aXZvcnMgZGllcwpTaGUgYXZvaWRlZCBzcG90bGlnaHQgdG8gdGhlIHBvaW50IG9mIGhhdmluZyBkZWF0aCBhbm5vdW5jZW1lbnQgZGVsYXllZApMT05ET04gLSBCYXJiYXJhIFdlc3QgRGFpbnRvbiwgYmVsaWV2ZWQgdG8gYmUgb25lIG9mIHRoZSBsYXN0IHR3byBzdXJ2aXZvcnMgZnJvbSB0aGUgc2lua2luZyBvZiB0aGUgVGl0YW5pYyBpbiAxOTEyLCBoYXMgZGllZCBpbiBFbmdsYW5kIGF0IGFnZSA5Ni4KRGFpbnRvbiBkaWVkIE9jdC4gMTYgYXQgYSBudXJzaW5nIGhvbWUgaW4gQ2FtYm9ybmUsIEVuZ2xhbmQsIGFjY29yZGluZyB0byBQZXRlciBWaXNpY2ssIGEgZGlzdGFudCByZWxhdGl2ZS4KSGVyIGZ1bmVyYWwgd2FzIGhlbGQgTW9uZGF5IGF0IFRydXJvIENhdGhlZHJhbCwgVmlzaWNrIHNhaWQgVGh1cnNkYXkuCkVsaXphYmV0aCBHbGFkeXMgIk1pbGx2aW5hIiBEZWFuIG9mIFNvdXRoYW1wdG9uLCBFbmdsYW5kLCB3aG8gd2FzIDIgbW9udGhzIG9sZCBhdCB0aGUgdGltZSBvZiB0aGUgVGl0YW5pYyBzaW5raW5nLCBpcyBub3cgdGhlIGRpc2FzdGVyJ3Mgb25seSByZW1haW5pbmcgc3Vydml2b3IsIGFjY29yZGluZyB0byB0aGUgVGl0YW5pYyBIaXN0b3JpY2FsIFNvY2lldHkuClRoZSBsYXN0IEFtZXJpY2FuIHN1cnZpdm9yLCBMaWxsaWFuIEdlcnRydWQgQXNwbHVuZCwgZGllZCBpbiBNYXNzYWNodXNldHRzIGxhc3QgeWVhciBhdCBhZ2UgOTkuCkRhaW50b24sIGJvcm4gaW4gQm91cm5lbW91dGggaW4gc291dGhlcm4gRW5nbGFuZCBpbiAxOTExLCB3YXMgdG9vIHlvdW5nIHRvIHJlbWVtYmVyIHRoZSBuaWdodCB3aGVuIHRoZSBodWdlIGxpbmVyIGhpdCBhbiBpY2ViZXJnIGFuZCBzYW5rIGluIHRoZSBBdGxhbnRpYyBpbiBBcHJpbCAxOTEyLCBraWxsaW5nIDEsNTAwIHBlb3BsZSwgaW5jbHVkaW5nIGhlciBmYXRoZXIsIEVkd3kgQXJ0aHVyIFdlc3QuCkhlIHdhdmVkIGZhcmV3ZWxsIGFzIHRoZSBsaWZlYm9hdCBjYXJyeWluZyBCYXJiYXJhOyBoZXIgbW90aGVyLCBBZGE7IGFuZCBoZXIgc2lzdGVyLCBDb25zdGFuY2UsIHdhcyBsb3dlcmVkIGludG8gdGhlIG9jZWFuLCBhY2NvcmRpbmcgdG8gS2FyZW4gS2FtdWRhIG9mIHRoZSBUaXRhbmljIEhpc3RvcmljYWwgU29jaWV0eSBpbiBJbmRpYW4gT3JjaGFyZCwgTWFzcy4KSGlzIGJvZHkgd2FzIG5ldmVyIGlkZW50aWZpZWQuClRoZSBUaXRhbmljIGRpZCBub3QgaGF2ZSBlbm91Z2ggbGlmZWJvYXRzIGZvciBhbGwgb2YgMiwyMDAgcGFzc2VuZ2VycyBhbmQgY3Jldy4KT25seSBhIHNtYWxsIG51bWJlciBvZiB0aG9zZSB1bmFibGUgdG8gZmluZCBhIHBsYWNlIG9uIHRoZSBib2F0cyBzdXJ2aXZlZCB0aGUgZnJlZXppbmcgd2F0ZXJzLgpEYWludG9uIHJldHVybmVkIHRvIEVuZ2xhbmQgYWZ0ZXIgdGhlIGFjY2lkZW50LgpTaGUgbWFycmllZCBpbiAxOTUyLgpTaGUgYXZvaWRlZCBwdWJsaWNpdHkgYXNzb2NpYXRlZCB3aXRoIHRoZSBUaXRhbmljIGFuZCBldmVuIGluc2lzdGVkIHRoYXQgaGVyIGZ1bmVyYWwgdGFrZSBwbGFjZSBiZWZvcmUgYW55IHB1YmxpYyBhbm5vdW5jZW1lbnQgb2YgaGVyIGRlYXRoLCBLYW11ZGEgc2FpZC4KIldlIHJlc3BlY3RlZCBoZXIgcHJpdmFjeSwiIEthbXVkYSBzYWlkLgpXZSdyZSBzbyBvcGVuIHdpdGggZXZlcnl0aGluZyBhbmQgb3VyIGVtb3Rpb25zIG5vd2FkYXlzLCBidXQgcGVvcGxlIGF0IHRoYXQgdGltZSwgdGhleSBqdXN0IGRpZG4ndCB0YWxrIGFib3V0IGl0Lgo=
[]
TW9yZSB0cm91YmxlIGZvciBTdGF0ZSBEZXBhcnRtZW50IGludmVzdGlnYXRvcgpFbWJhdHRsZWQgZW1wbG95ZWUgd2l0aGRyYXdzIGZyb20gYW5vdGhlciBwcm9iZSwgYnV0IHN0YXlzIGF0IHBvc3QKV0FTSElOR1RPTiAtIFRoZSBTdGF0ZSBEZXBhcnRtZW50J3MgZW1iYXR0bGVkIHRvcCBmcmF1ZCBpbnZlc3RpZ2F0b3IsIHdobyByZWN1c2VkIGhpbXNlbGYgZnJvbSBwcm9iZXMgaW50byBCbGFja3dhdGVyIFdvcmxkd2lkZSBzZWN1cml0eSBjb250cmFjdG9ycyBvdmVyIGNvbmZsaWN0IG9mIGludGVyZXN0IGNoYXJnZXMsIGhhcyByZWxpbnF1aXNoZWQgZXZlbiBtb3JlIGF1dGhvcml0eSBidXQgcmVtYWlucyBhdCBoaXMgcG9zdCwgb2ZmaWNpYWxzIHNhaWQgVGh1cnNkYXkuCkluIGFkZGl0aW9uIHRvIHJlbW92aW5nIGhpbXNlbGYgZnJvbSBhbGwgcXVlcmllcyByZWxhdGVkIHRvIEJsYWNrd2F0ZXIsIEluc3BlY3RvciBHZW5lcmFsIEhvd2FyZCBLcm9uZ2FyZCBoYXMgZ2l2ZW4gdXAgaGlzIHJvbGUgaW4gbG9va2luZyBpbnRvIGNvcnJ1cHRpb24gYWxsZWdhdGlvbnMgaW52b2x2aW5nIHRoZSBjb25zdHJ1Y3Rpb24gb2YgdGhlIG5ldyBVLlMuIGVtYmFzc3kgaW4gQmFnaGRhZCwgU3RhdGUgRGVwYXJ0bWVudCBzcG9rZXNtYW4gU2VhbiBNY0Nvcm1hY2sgc2FpZC4KVGhlIG1vdmUgY2FtZSBhdCB0aGUgcmVxdWVzdCBvZiBhIGNvbmdyZXNzaW9uYWwgb3ZlcnNpZ2h0IGNvbW1pdHRlZSBjaGFpcmVkIGJ5IFJlcC4gSGVucnkgV2F4bWFuLCBELUNhbGlmLiwgd2hpY2ggS3JvbmdhcmQgdGVzdGlmaWVkIGJlZm9yZSBhIGRheSBlYXJsaWVyLgpEdXJpbmcgdGhlIGhlYXJpbmcgaGUgbGVhcm5lZCwgYXBwYXJlbnRseSBmb3IgdGhlIGZpcnN0IHRpbWUsIHRoYXQgaGlzIGJyb3RoZXIgaXMgYSBtZW1iZXIgb2YgQmxhY2t3YXRlcidzIGFkdmlzb3J5IGJvYXJkLgoiVGhhdCB3YXMgYXQgdGhlIHJlcXVlc3Qgb2YgQ29uZ3Jlc3NtYW4gV2F4bWFuJ3MgY29tbWl0dGVlIGJlY2F1c2UgdGhleSBhcmUgZG9pbmcgdGhlaXIgb3duIGlucXVpcmllcyBpbnRvIHRoZSBuZXcgZW1iYXNzeSBjb21wb3VuZCwiIE1jQ29ybWFjayBzYWlkLgpCZWNhdXNlIG9mIHRoZSByZXBvcnRpbmcgcmVsYXRpb25zaGlwIGJldHdlZW4gdGhlIElHIGFuZCB0aGUgQ29uZ3Jlc3MsIG9mIGNvdXJzZSwgSG93YXJkIGhvbm9yZWQgdGhhdCByZXF1ZXN0LgpQb2xpdGljaXplZCBhbmQgdW5kZXJtaW5lZCBwcm9iZXM/CkRlc3BpdGUgdGhlIGZhY3QgdGhhdCBoZSBoYXMgbm93IHJlY3VzZWQgaGltc2VsZiBmcm9tIHRoZSBTdGF0ZSBEZXBhcnRtZW50J3MgdHdvIG1haW4gaW50ZXJuYWwgaW52ZXN0aWdhdGlvbnMgaW4gSXJhcSBhbmQgaGFzIGNvbWUgdW5kZXIgaGVhdnkgcHJlc3N1cmUgdG8gcmVzaWduLCBLcm9uZ2FyZCBoYXMgbm90IG9mZmVyZWQgdG8gc3RlcCBkb3duIGFuZCBjb250aW51ZXMgYXMgdGhlIGluc3BlY3RvciBnZW5lcmFsLCBNY0Nvcm1hY2sgdG9sZCByZXBvcnRlcnMuCkhlIGRpZCBub3QsIGhvd2V2ZXIsIG9mZmVyIEtyb25nYXJkIGEgcmluZ2luZyBlbmRvcnNlbWVudCBhbmQgcG9pbnRlZGx5IHJlZnVzZWQgc2V2ZXJhbCB0aW1lcyB0byBzYXkgaWYgdGhlIGluc3BlY3RvciBnZW5lcmFsIHN0aWxsIGhhZCB0aGUgY29uZmlkZW5jZSBvZiBTZWNyZXRhcnkgb2YgU3RhdGUgQ29uZG9sZWV6emEgUmljZSBvciBvdGhlcnMuCiJIZSBoYXMsIGFwcHJvcHJpYXRlbHksIHJlY3VzZWQgaGltc2VsZiBmcm9tIHRoZXNlIHR3byBpc3N1ZXMsIEJsYWNrd2F0ZXIgYW5kIHRoZSBuZXcgZW1iYXNzeSBjb21wb3VuZCwiIE1jQ29ybWFjayBzYWlkLgpIZSBpcyBzdGlsbCBkb2luZyBoaXMgd29yayBhcyBpbnNwZWN0b3IgZ2VuZXJhbC4KV2F4bWFuIGFuZCBzb21lIG9mIGhpcyBmZWxsb3cgRGVtb2NyYXRzIG9uIHRoZSBIb3VzZSBPdmVyc2lnaHQgYW5kIEdvdmVybm1lbnQgUmVmb3JtIENvbW1pdHRlZSBoYXZlIGFsbGVnZWQgdGhhdCBLcm9uZ2FyZCBoYXMgcG9saXRpY2l6ZWQgaGlzIG9mZmljZSBhbmQgdW5kZXJtaW5lZCBwcm9iZXMgdGhhdCB0YXJnZXRlZCBCbGFja3dhdGVyIG9yIG1pZ2h0IGVtYmFycmFzcyBCdXNoIGFkbWluaXN0cmF0aW9uIG9mZmljaWFscy4KVGhvc2UgY2hhcmdlcyBsZWQgdGhlIHVuaW9uIHRoYXQgcmVwcmVzZW50cyBVLlMuIGRpcGxvbWF0cyB0byBjYWxsIGZvciBLcm9uZ2FyZCB0byBzdGVwIGRvd24uCktyb25nYXJkLCB3aG8gb2ZmaWNpYWxzIHNhaWQgaGFzIG5vdCBjb250ZW1wbGF0ZWQgcmVzaWduaW5nLCB2ZWhlbWVudGx5IGRlbmllZCB0aGUgYWNjdXNhdGlvbnMgYXQgV2VkbmVzZGF5J3MgaGVhcmluZywgbWFpbnRhaW5pbmcgdGhhdCBoZSBoYXMgbm8gcG9saXRpY2FsIHRpZXMgYW5kIGlzIHRoZSB2aWN0aW0gb2YgZGlzZ3J1bnRsZWQgZW1wbG95ZWVzIHdobyBvYmplY3RlZCB0byBoaXMgYnJ1c3F1ZSBtYW5hZ2VtZW50IHN0eWxlLgonSSdtIG5vdCBteSBicm90aGVyJ3Mga2VlcGVyJyBUZXN0aWZ5aW5nIHVuZGVyIG9hdGgsIGhlIGFsc28gZGVuaWVkIHRoYXQgaGlzIGJyb3RoZXIsIEFsdmluLCBoYWQgYW55IGNvbm5lY3Rpb24gdG8gQmxhY2t3YXRlciwgdGhlIHByaXZhdGUgc2VjdXJpdHkgZmlybSB3aG9zZSBndWFyZHMgbWF5IGZhY2UgY3JpbWluYWwgcHJvc2VjdXRpb24gZm9yIGEgZGVhZGx5IFNlcHQuCjE2IHNob290aW5nIGluY2lkZW50IGluIEJhZ2hkYWQuCkJ1dCBhZnRlciBiZWluZyBjb25mcm9udGVkIHdpdGggZG9jdW1lbnRzIHNob3dpbmcgQWx2aW4gS3JvbmdhcmQgd2FzIGluIGZhY3QgYSBtZW1iZXIgb2YgdGhlIGNvbXBhbnkncyBhZHZpc29yeSBib2FyZCwgaGUgY2FsbGVkIGhpcyBicm90aGVyIGR1cmluZyBhIGJyZWFrIGluIHRoZSBoZWFyaW5nIGFuZCByZXR1cm5lZCB0byBtYWtlIHRoZSBzdHVubmluZyBhbm5vdW5jZW1lbnQgdGhhdCBoZSBoYWQgYmVlbiB3cm9uZyBhbmQgaW1tZWRpYXRlbHkgcmVjdXNlZCBoaW1zZWxmIGZyb20gYWxsIEJsYWNrd2F0ZXItcmVsYXRlZCBpbnZlc3RpZ2F0aW9ucy4KIkknbSBub3QgbXkgYnJvdGhlcidzIGtlZXBlciwiIEtyb25nYXJkIHRvbGQgdGhlIGNvbW1pdHRlZSB3aGVuIGhlIHdhcyBwcmVzc2VkIHRvIGV4cGxhaW4gaG93IGhlIGNvdWxkIGhhdmUgYmVlbiB1bmF3YXJlIG9mIHRoZSBjb25uZWN0aW9uLgpUaGUgc2libGluZ3MgYXJlIGFwcGFyZW50bHkgbm90IGNsb3NlLCBhcyBBbHZpbiBLcm9uZ2FyZCB3YXMgd2lkZWx5IHF1b3RlZCBhZnRlciB0aGUgaGVhcmluZyBhcyBzYXlpbmcgaGUgaGFkIGluZm9ybWVkIEhvd2FyZCBvZiBoaXMgY29ubmVjdGlvbiB0byBCbGFja3dhdGVyIGJ1dCB0aGF0IHRoZXkgcmFyZWx5IHNwZWFrLgpNY0Nvcm1hY2sgZGVjbGluZWQgdG8gY29tbWVudCBvbiBLcm9uZ2FyZCdzIGZhbWlseSByZWxhdGlvbnNoaXBzIGJ1dCBhY2tub3dsZWRnZWQgdGhlIGRyYW1hdGljIG5hdHVyZSBvZiB0aGUgbW9tZW50IHdoaWxlIHN0cmVzc2luZyB0aGF0IEtyb25nYXJkIGhhZCBhY3RlZCBwcm9wZXJseS4KIkFzIHNvb24gYXMgaGUgbGVhcm5lZCBvZiB0aGUgcG90ZW50aWFsIGNvbmZsaWN0IG9mIGludGVyZXN0LCBvciBhdCBsZWFzdCB0aGUgcGVyY2VwdGlvbiBvZiBhIGNvbmZsaWN0LCBoZSByZWN1c2VkIGhpbXNlbGYsIGFzIGhlIHNob3VsZCBoYXZlIGRvbmUsIiBNY0Nvcm1hY2sgc2FpZC4KSXQgd2FzIHRoZSByaWdodCB0aGluZyB0byBkby4KQmxhY2t3YXRlciBpcyB0aGUgc3ViamVjdCBvZiBzZXZlcmFsIGZlZGVyYWwgaW52ZXN0aWdhdGlvbnMgcmVsYXRlZCB0byBpdHMgd29yayBpbiBJcmFxLCBpbmNsdWRpbmcgYWxsZWdhdGlvbnMgdGhhdCBzb21lIG9mIGl0cyBlbXBsb3llZXMgbWF5IGhhdmUgc211Z2dsZWQgd2VhcG9ucyBpbnRvIHRoZSBjb3VudHJ5LgpGZWRlcmFsIGludmVzdGlnYXRvcnMgYWxzbyBjb250aW51ZSB0byBleGFtaW5lIGEgU2VwdC4KMTYgc2hvb3RpbmcgaW4gQmFnaGRhZCBpbnZvbHZpbmcgQmxhY2t3YXRlciBndWFyZHMgdGhhdCBraWxsZWQgMTcgSXJhcWlzLgpXYXhtYW4gYW5kIG90aGVycyBoYXZlIHN1Z2dlc3RlZCB0aGF0IEFsdmluIEtyb25nYXJkJ3MgdGllcyB0byBCbGFja3dhdGVyIGFyZSBhIG1haW4gcmVhc29uIEhvd2FyZCBLcm9uZ2FyZCBzaWRlbGluZWQgYSBwcm9iZSBpbnRvIHRoZSB3ZWFwb25zIHNtdWdnbGluZyBjaGFyZ2VzLgpXYXhtYW4ncyBjb21taXR0ZWUgaXMgYWxzbyBsb29raW5nIGludG8gY2xhaW1zIG9mIGZyYXVkIGFuZCBjb3JydXB0aW9uIGluIHRoZSBjb25zdHJ1Y3Rpb24gb2YgdGhlIG5ldyBVLlMuIGVtYmFzc3kgaW4gQmFnaGRhZCwgd2hpY2ggaGFzIGJlZW4gYmVzZXQgYnkgbG9naXN0aWNhbCBkZWxheXMgYW5kIHNlY3VyaXR5IGNvbmNlcm5zLgpUaGUgb3BlbmluZyBvZiB0aGUgbW9yZSB0aGFuICQ2MDAgbWlsbGlvbiBmYWNpbGl0eSBpcyBhbHJlYWR5IHR3byBtb250aHMgYmVoaW5kIHNjaGVkdWxlLgo=
[]
UGFraXN0YW4gYmVnaW5zIHJlbGVhc2luZyBvcHBvc2l0aW9uIHN1cHBvcnRlcnMKSW1yYW4gS2hhbiwgYSBodW5nZXItc3RyaWtpbmcgb3Bwb3NpdGlvbiBsZWFkZXIsIHJlbWFpbnMgaW4gcHJpc29uCnVwZGF0ZWQgODoxMCBhLm0uCklTTEFNQUJBRCwgUGFraXN0YW4gLSBNb3JlIHRoYW4gMywwMDAgcGVvcGxlIGphaWxlZCBpbiBQYWtpc3RhbiB1bmRlciBlbWVyZ2VuY3kgcnVsZSBoYXZlIGJlZW4gcmVsZWFzZWQgaW4gcmVjZW50IGRheXMsIHRoZSBJbnRlcmlvciBNaW5pc3RyeSBzYWlkIFR1ZXNkYXksIHRoZSBsYXRlc3Qgc2lnbiB0aGF0IGVtYmF0dGxlZCBQcmVzaWRlbnQgR2VuLiBQZXJ2ZXogTXVzaGFycmFmIHdhcyByb2xsaW5nIGJhY2sgc29tZSBvZiB0aGUgaGFyc2hlciBtZWFzdXJlcyBoZSBoYXMgdGFrZW4gYWdhaW5zdCBoaXMgb3Bwb25lbnRzLgpJbnRlcmlvciBNaW5pc3RyeSBzcG9rZXNtYW4gSmF2ZWQgSXFiYWwgQ2hlZW1hIHB1dCB0aGUgZXhhY3QgZmlndXJlIG9mIHRob3NlIGZyZWVkIGluIHJlY2VudCBkYXlzIGF0IDMsNDE2IC0tIGluY2x1ZGluZyBsYXd5ZXJzIGFuZCBwb2xpdGljYWwgYWN0aXZpc3RzIC0tIGFuZCBzYWlkIG1vcmUgdGhhbiAyLDAwMCBwZW9wbGUgcmVtYWluZWQgamFpbGVkLgpUaGUgcHJvY2VzcyBoYXMgc3RhcnRlZC4KTW9yZSBhcmUgYmVpbmcgcmVsZWFzZWQgdG9kYXksIiBDaGVlbWEgc2FpZCBvZiB0aGUgcmVsZWFzZXMuCkhlIHNhaWQgdGhvc2Ugc3RpbGwgaW4gZGV0ZW50aW9uICJ3b3VsZCBiZSBmcmVlZCBzb29uLCIgdGhvdWdoIGhlIHNhaWQgdGhlIGNhc2VzIG9mIHNvbWUgZmFjaW5nIGNyaW1pbmFsIGNoYXJnZXMgY291bGQgdGFrZSBsb25nZXIuCk11c2hhcnJhZiwgd2hvIGxlZnQgZm9yIGEgdmlzaXQgdG8gU2F1ZGkgQXJhYmlhIG9uIFR1ZXNkYXksIGhhcyBiZWVuIHJvbGxpbmcgYmFjayBzb21lIG9mIGhpcyBtb3N0IHVucG9wdWxhciBzdGVwcyBvdmVyIHRoZSBwYXN0IHNldmVyYWwgZGF5cy4KSGUgaGFzIGJlZW4gdW5kZXIgaW1tZW5zZSBwcmVzc3VyZSBmcm9tIFdhc2hpbmd0b24gdG8gZnJlZSBvcHBvc2l0aW9uIGxlYWRlcnMsIGVuZCBtZWRpYSByZXN0cmljdGlvbnMgYW5kIHN0ZXAgZG93biBhcyBoZWFkIG9mIHRoZSBhcm1lZCBmb3JjZXMuClBha2lzdGFuIHN0aWxsIGphaWxpbmcgc29tZSBvcHBvbmVudHMgVGhlIHJlbGVhc2VzIGNhbWUgaG91cnMgYWZ0ZXIganVkZ2VzIGhhbmQtcGlja2VkIGJ5IE11c2hhcnJhZiBxdWFzaGVkIGxlZ2FsIGNoYWxsZW5nZXMgdG8gaGlzIGRpc3B1dGVkIHJlLWVsZWN0aW9uIGFzIHByZXNpZGVudC4KU3RpbGwsIG1hbnkgaGlnaC1yYW5raW5nIHBhcnR5IGFjdGl2aXN0cyBhbmQgbGVhZGVycywgc3VjaCBhcyBmb3JtZXIgY3JpY2tldCBzdGFyIEltcmFuIEtoYW4sIHJlbWFpbmVkIGluIHByaXNvbi4KS2hhbiBiZWdhbiBhIGh1bmdlciBzdHJpa2UgTW9uZGF5IHRvIHByb3Rlc3QgZW1lcmdlbmN5IHJ1bGUuCkFuZCB3aGlsZSBzb21lIHBlb3BsZSB3ZXJlIGJlaW5nIHNob3dlZCBvdXQgb2YgZGV0ZW50aW9uIGZhY2lsaXRpZXMsIG90aGVycyB3ZXJlIGJlaW5nIGxlZCBpbi4KSW4gdGhlIHNvdXRoZXJuIGNpdHkgb2YgS2FyYWNoaSwgcG9saWNlIGRldGFpbmVkIGFib3V0IDE1MCBqb3VybmFsaXN0cyBUdWVzZGF5IGFmdGVyIGNsYXNoaW5nIHdpdGggdGhlbSBkdXJpbmcgYSBwcm90ZXN0IGFnYWluc3QgUGFraXN0YW4ncyBzdGF0ZSBvZiBlbWVyZ2VuY3ksIHdpdG5lc3NlcyBzYWlkLgpUd28gcmVwb3J0ZXJzIHdlcmUgc2VlbiBibGVlZGluZyBmcm9tIGhlYWQgaW5qdXJpZXMuClBvbGljZSBhbHNvIGRldGFpbmVkIDIzIGpvdXJuYWxpc3RzIGFmdGVyIHRoZXkgdHJpZWQgdG8gaG9sZCBhIHJhbGx5IGluIHRoZSBzb3V0aGVybiBjaXR5IG9mIEh5ZGVyYWJhZCB0byBwcm90ZXN0IHByZXNzIHJlc3RyaWN0aW9ucywgc2FpZCBBbGkgSGFzc2FuLCBhIGxvY2FsIGpvdXJuYWxpc3Qgd2hvIHdhcyBwcmVzZW50IGF0IHRoZSByYWxseS4KTWVhbndoaWxlLCBzZXZlcmFsIGxlYWRlcnMgb2YgUGFraXN0YW4ncyBsYXd5ZXJzJyBhc3NvY2lhdGlvbnMsIHdoaWNoIGhhdmUgYmVlbiBhdCB0aGUgZm9yZWZyb250IG9mIHByb3Rlc3RzIGFnYWluc3QgTXVzaGFycmFmIGZvciBtb250aHMsIHZvd2VkIG9uIHRoZWlyIHJlbGVhc2UgZnJvbSBqYWlsIHRoYXQgdGhleSB3b3VsZCBjb250aW51ZSB0aGVpciBjYW1wYWlnbiBhZ2FpbnN0IHRoZSBlbWVyZ2VuY3kgYW5kIGZvciB0aGUgcmVzdG9yYXRpb24gb2Ygb3VzdGVkIGp1ZGdlcy4KV2UgYXJlIGNoYWxraW5nIG91dCBzdHJhdGVneSBmb3IgdGhlIG5leHQgcGhhc2UgLi4uClRoZSBsYXd5ZXJzIGNvbW11bml0eSB3aWxsIG5vdCBnaXZlIHVwLCIgc2FpZCBIYWZpeiBMYWtobywgYSBzZW5pb3IgbGF3eWVyIGluIEthcmFjaGkuCkluIHRoZSBzb3V0aGVybiBwcm92aW5jZSBvZiBTaW5kaCwgYXV0aG9yaXRpZXMgcmVsZWFzZWQgMzAwIHBlb3BsZSwgaW5jbHVkaW5nIGxhd3llcnMsIGh1bWFuIHJpZ2h0cyBhY3RpdmlzdHMgYW5kIHN1cHBvcnRlcnMgb2YgZm9ybWVyIFByaW1lIE1pbmlzdGVyIEJlbmF6aXIgQmh1dHRvLCBvbmUgb2YgTXVzaGFycmFmJ3MgY2hpZWYgcml2YWxzLgpCaHV0dG8gaGVyc2VsZiB3YXMgcmVsZWFzZWQgZnJvbSBhIHNlY29uZCBzdGludCB1bmRlciBob3VzZSBhcnJlc3QgbGF0ZSBsYXN0IHdlZWssIGFzIHdhcyBhIHByb21pbmVudCBodW1hbiByaWdodHMgYWN0aXZpc3QsIEFzbWEgSmVoYW5naXIuCiJBbGwgdGhlIHBvbGl0aWNhbCB3b3JrZXJzIGFuZCBsYXd5ZXJzIHdobyB3ZXJlIGRldGFpbmVkIC4uLiBhcmUgYmVpbmcgcmVsZWFzZWQsIiBhIHNlbmlvciBwcm92aW5jaWFsIG9mZmljaWFsLCBHaHVsYW0gTW9oYW1tZWQgTW9odGFyZW0sIHNhaWQgb2YgdGhlIFNpbmRoIHJlbGVhc2VzLgpXZSBoYWQgaW5zdHJ1Y3Rpb25zIGZyb20gdGhlIGNoaWVmIG1pbmlzdGVyIHRvIHJlbGVhc2UgdGhlc2UgcGVvcGxlLgpIZSBhZGRlZCB0aGF0IG90aGVycyAtLSBoZSB3b3VsZG4ndCBzYXkgaG93IG1hbnkgLS0gcmVtYWluIGluIGphaWwgaW4gdGhlIHByb3ZpbmNlLCBpbmNsdWRpbmcgMTEgcGVvcGxlIGNoYXJnZWQgd2l0aCBzZWRpdGlvbiBzaW5jZSBlbWVyZ2VuY3kgcnVsZSB3YXMgaW1wb3NlZCBvbiBOb3YuIDMuCkluIG5laWdoYm9yaW5nIEJhbHVjaGlzdGFuLCA0OSBsYXd5ZXJzIGFuZCBzaXggcG9saXRpY2FsIGFjdGl2aXN0cyB3ZXJlIHNldCBmcmVlLCBzYWlkIFJlaG1hdHVsbGFoIE5pYXppLCBhIHNlbmlvciBwb2xpY2Ugb2ZmaWNlciBpbiBRdWV0dGEsIHRoZSBwcm92aW5jaWFsIGNhcGl0YWwuClRocmVlIG90aGVyIGxhd3llcnMgcmVtYWluIGluIGN1c3RvZHkuCkVtZXJnZW5jeSBydWxlIGNyaXRpY2l6ZWQgTXVzaGFycmFmIHNheXMgdGhlIGVtZXJnZW5jeSBpcyBuZWVkZWQgdG8gY29tYmF0IGluY3JlYXNpbmdseSBwb3dlcmZ1bCBJc2xhbWljIG1pbGl0YW50cywgYnV0IG9wcG9uZW50cyBub3RlIG1vc3Qgb2YgdGhvc2UgamFpbGVkIGhhdmUgYmVlbiBtb2RlcmF0ZXMuClRoZXkgc2F5IHRoZSBnZW5lcmFsIHN1c3BlbmRlZCB0aGUgY29uc3RpdHV0aW9uIHNvbGVseSB0byBwcmVzZXJ2ZSBoaXMgZ3JpcCBvbiBwb3dlciBieSBwcmV2ZW50aW5nIHRoZSB0aGVuLVN1cHJlbWUgQ291cnQgZnJvbSBpbnZhbGlkYXRpbmcgaGlzIHJlY2VudCByZS1lbGVjdGlvbiBhcyBwcmVzaWRlbnQuCldoZW4gdGhlIHJlY29uc3RpdHV0ZWQgU3VwcmVtZSBDb3VydCB0aHJldyBvdXQgbGVnYWwgY2hhbGxlbmdlcyB0byBNdXNoYXJyYWYncyByZS1lbGVjdGlvbiBNb25kYXksIGNyaXRpY3MgZGVub3VuY2VkIHRoZSBkZWNpc2lvbiBhcyBpbGxlZ2l0aW1hdGUgYW5kIGluc2lzdGVkIHRoYXQgTXVzaGFycmFmIHJlbGlucXVpc2ggcG93ZXIgdG8gZW5kIHRoZSBjb3VudHJ5J3MgcG9saXRpY2FsIHR1cm1vaWwuCkhvd2V2ZXIsIHRoZSBydWxpbmcgZGlkIHBhdmUgdGhlIHdheSBmb3IgTXVzaGFycmFmIHRvIGZ1bGZpbGwgYSBwcm9taXNlIHRvIHF1aXQgYXMgYXJteSBjaGllZiBhbmQgcnVsZSBhcyBhIGNpdmlsaWFuIHByZXNpZGVudCwgcGVyaGFwcyBieSB0aGUgZW5kIG9mIHRoZSBtb250aCwgYW5kIHNvbWUgb3Bwb3NpdGlvbiBsZWFkZXJzIGFuZCBhbmFseXN0cyBzYWlkIHRoZSBydWxpbmcgY291bGQgcHJvbXB0IHRoZSBnb3Zlcm5tZW50IHRvIGVhc2UgdGhlIGVtZXJnZW5jeS4KIlRoZSB3aG9sZSBjb3VudHJ5IHdhcyBzdWJqZWN0IHRvIG1hcnRpYWwgbGF3IG9ubHkgdG8gZ2V0IHRoaXMgZGVjaXNpb24sIiBzYWlkIEFoc2FuIElxYmFsLCBsZWFkZXIgb2Ygb25lIG9mIFBha2lzdGFuJ3MgdHdvIG1haW4gb3Bwb3NpdGlvbiBwYXJ0aWVzLgoiTm93IGhlIGhhcyBnb3QgaGlzIGRlY2lzaW9uIGF0IGd1bnBvaW50IiBhbmQgbWF5IHNvb24gbWFrZSBjb25jZXNzaW9ucywgSXFiYWwgc2FpZC4KTXVzaGFycmFmIGFycml2ZWQgaW4gdGhlIFNhdWRpIGNhcGl0YWwgb2YgUmlheWRoIG9uIFR1ZXNkYXkgZm9yIHRhbGtzIHdpdGggS2luZyBBYmR1bGxhaCBhYm91dCB0aGUgcG9saXRpY2FsIGNyaXNpcywgdGhlIHByZXNpZGVuY3kgc2FpZC4KTXVzaGFycmFmIGZyZXF1ZW50bHkgdmlzaXRzIFNhdWRpIEFyYWJpYSwgYSBjbG9zZSBhbGx5IHRoYXQgaXMgYWxzbyBob21lIHRvIG9uZSBvZiBoaXMgc3RhdW5jaGVzdCBvcHBvbmVudHMgLS0gZm9ybWVyIHByaW1lIG1pbmlzdGVyIE5hd2F6IFNoYXJpZiwgd2hvIHRoZSBnZW5lcmFsIHRvcHBsZWQgaW4gYSBibG9vZGxlc3MgMTk5OSBjb3VwLgpUaGUgdHdvIGhhdmUgbm8gcGxhbnMgdG8gbWVldCwgU2hhcmlmIHdhcyBxdW90ZWQgYXMgc2F5aW5nIGJ5IFBha2lzdGFuJ3MgRGF3biBuZXdzcGFwZXIgb24gVHVlc2RheS4KQnVzaCBhZG1pbmlzdHJhdGlvbiBwcmVzc3VyZXMgTXVzaGFycmFmIFRoZSBCdXNoIGFkbWluaXN0cmF0aW9uIGhhcyBwdXQgaW50ZW5zZSBwcmVzc3VyZSBvbiBNdXNoYXJyYWYgdG8gbGlmdCBlbWVyZ2VuY3kgcnVsZSBhcyBzd2lmdGx5IGFzIHBvc3NpYmxlLCBzYXlpbmcgdGhhdCB0aGUgZWxlY3Rpb25zIGNhbm5vdCBiZSBmYWlyIHVubGVzcyBNdXNoYXJyYWYgZnJlZXMgb3Bwb25lbnRzLCBsaWZ0cyBtZWRpYSBjdXJicyBhbmQgbGV0cyBjYW5kaWRhdGVzIGNhbXBhaWduIGZyZWVseS4KSXQgYWxzbyBoYXMgdXJnZWQgb3Bwb3NpdGlvbiBwYXJ0aWVzIHRvIHJlc3RhcnQgYSBkaWFsb2d1ZSBvZiByZWNvbmNpbGlhdGlvbiB3aXRoIHRoZSBnb3Zlcm5tZW50IHRoYXQgbGFzdCBtb250aCB5aWVsZGVkIGFuIGFtbmVzdHkgZm9yIEJodXR0byBmcm9tIGNvcnJ1cHRpb24gY2hhcmdlcywgYWxsb3dpbmcgaGVyIHRvIHJldHVybiBmcm9tIGV4aWxlLgpCaHV0dG8sIGEgZm9ybWVyIHByaW1lIG1pbmlzdGVyIHdobyBhbHNvIGZhdm9ycyB0aWVzIHdpdGggdGhlIFUuUy4sIHNhaWQgTW9uZGF5IHRoYXQgc2hlIGhhZCBubyBwbGFucyB0byByZXZpdmUgcG93ZXItc2hhcmluZyBuZWdvdGlhdGlvbnMgd2l0aCBNdXNoYXJyYWYuClRoZSB0YWxrcyBicm9rZSBkb3duIGFmdGVyIHBvbGljZSBwdXQgaGVyIHVuZGVyIGhvdXNlIGFycmVzdCB0byBzdG9wIGhlciBmcm9tIGxlYWRpbmcgcmFsbGllcyBhZ2FpbnN0IHRoZSBnZW5lcmFsJ3Mgc3VzcGVuc2lvbiBvZiB0aGUgY29uc3RpdHV0aW9uLgpCaHV0dG8gd2FzIGh1ZGRsZWQgd2l0aCBvdGhlciBsZWFkZXJzIG9mIGhlciBwYXJ0eSBvbiBUdWVzZGF5IHRvIGRpc2N1c3Mgd2hldGhlciBpdCBjb3VsZCB0YWtlIHBhcnQgaW4gcG9sbHMgaWYgdGhlIGVtZXJnZW5jeSBpcyBub3QgbGlmdGVkLCBoZXIgc3Bva2Vzd29tYW4gU2hlcnJ5IFJlaG1hbiBzYWlkLgo=
[]
R09QIGRlYmF0ZXJzIHRvIGZhY2UgWW91VHViZSBxdWVzdGlvbmVycwpEZXNwaXRlIGluaXRpYWwgcmVsdWN0YW5jZSBhIGZ1bGwgbGluZXVwIG9mIGNhbmRpZGF0ZXMgaXMgZXhwZWN0ZWQgdG8gYXR0ZW5kCldBU0hJTkdUT04gLSBRdWVzdGlvbnMgc3VibWl0dGVkIGZvciBXZWRuZXNkYXkncyBDTk4tWW91VHViZSBSZXB1YmxpY2FuIGRlYmF0ZSByYWlzZSBpc3N1ZXMgdGhhdCByYW5nZSBmcm9tIGdsb2JhbCB3YXJtaW5nIC0gYSBxdWVzdGlvbiBhc2tlZCBieSBhIHNub3dtYW4gLSB0byBndW4gdmlvbGVuY2UgdG8gcmVzcGVjdCBmb3IgZ2F5cy4KU29tZSBvZiB0aGUgR09QIGNhbmRpZGF0ZXMgd2VyZSByZWx1Y3RhbnQgdG8gYXR0ZW5kIHRoZSBkZWJhdGUgaW4gU3QuIFBldGVyc2J1cmcsIEZsYS4sIGJlY2F1c2UgdGhleSB3b3JyaWVkIHRoZSBmb3JtYXQgd2Fzbid0IHNlcmlvdXMgZW5vdWdoLCBidXQgYSBmdWxsIGxpbmV1cCBpcyBleHBlY3RlZC4KQSBtZWx0aW5nIHNub3dtYW4gZnJpZ2h0ZW5lZCBhYm91dCBnbG9iYWwgd2FybWluZyB3YXMgYW1vbmcgdGhlIHF1ZXN0aW9uZXJzIGF0IHRoZSBEZW1vY3JhdHMnIENOTi1Zb3VUdWJlIGRlYmF0ZSBvbiBKdW5lIDMuClRoZSBzbm93bWFuIGlzIGJhY2sgLSAiSGVsbG8sIE1pdHQgUm9tbmV5ISIgaGUgdHJpbGxzIGluIGEgNDAtc2Vjb25kIHZpZGVvIC0gYWxvbmcgd2l0aCB0aG91c2FuZHMgb2Ygb3RoZXIgcXVlc3Rpb25lcnMgaG9waW5nIHRvIG1ha2UgdGhlIGN1dCBmb3IgdGhlIGFjdHVhbCBkZWJhdGUuClJvbW5leSBoYWQgZXhwcmVzc2VkIGRvdWJ0cyBhYm91dCBhbnN3ZXJpbmcgYSBxdWVzdGlvbiBmcm9tIGEgc25vd21hbi4KQW1vbmcgdGhlIHF1ZXN0aW9ucyBzdWJtaXR0ZWQ6Ckx5bm4gTXVsZGVyLCB0aGUgZmF0aGVyIG9mIGEgeW91bmcgRmxvcmlkYSBnYXkgbWFuIHdobyB3YXMgc2xhaW4sIGFza3MgaG93IGNhbmRpZGF0ZXMgd2lsbCAiaGVscCBjcmVhdGUgYSBjbGltYXRlIG9mIHVuZGVyc3RhbmRpbmcgYW5kIHJlc3BlY3QiIHRvd2FyZCBnYXkgYW5kIHRyYW5zZ2VuZGVyZWQgcGVvcGxlLgpBY3RvciBLaXJrIERvdWdsYXMsIGhpcyBzcGVlY2ggc2x1cnJlZCBieSBhIHN0cm9rZSwgYXNrcyBob3cgY2FuZGlkYXRlcyB3aWxsIGltcHJvdmUgZWR1Y2F0aW9uIHRvIGhlbHAgVS5TLiBjaGlsZHJlbiBjb21wZXRlIGluIG1hdGggYW5kIHNjaWVuY2UuCkd1c3Rhdm8gQml0ZGluZ2VyIG9mIFBhbG8gQWx0bywgQ2FsaWYuLCBwbGF5cyB0aGUgcGlhbm8gYW5kIHNpbmdzIGFib3V0IGhpcyBSZXB1YmxpY2FuIGJsdWVzLCBhc2tpbmcgIkhvdyBkbyB5b3Uga25vdyB0aGF0IHlvdSB3b24ndCBsb3NlPyIKT2YgdGhlIG1vcmUgdGhhbiAzLDUwMCB2aWRlbyBzdWJtaXNzaW9ucyByZXZpZXdlZCBieSBDTk4gcHJvZHVjZXJzLCBvbmx5IGFib3V0IDQwIHdpbGwgYmUgcGxheWVkIGF0IHRoZSBkZWJhdGUsIENOTiBzYWlkLgo=
[]
TmVnb3RpYXRvcnMgZnJvbSAxNTggY291bnRyaWVzIHJlYWNoZWQgYmFzaWMgYWdyZWVtZW50IEZyaWRheSBvbiByb3VnaCB0YXJnZXRzIGFpbWVkIGF0IGdldHRpbmcgc29tZSBvZiB0aGUgd29ybGQncyBiaWdnZXN0IHBvbGx1dGVycyB0byByZWR1Y2UgZW1pc3Npb25zIG9mIHRoZSBncmVlbmhvdXNlIGdhc2VzIGJsYW1lZCBmb3IgZ2xvYmFsIHdhcm1pbmcuCkEgd2Vla2xvbmcgVS5OLiBjbGltYXRlIGNvbmZlcmVuY2UgY29uY2x1ZGVkIHRoYXQgaW5kdXN0cmlhbGl6ZWQgY291bnRyaWVzIHNob3VsZCBzdHJpdmUgdG8gY3V0IGVtaXNzaW9ucyBieSAyNSBwZXJjZW50IHRvIDQwIHBlcmNlbnQgb2YgdGhlaXIgMTk5MCBsZXZlbHMgYnkgMjAyMC4KRXhwZXJ0cyBzYWlkIHRoYXQgdGFyZ2V0IHdvdWxkIHNlcnZlIGFzIGEgbG9vc2UgZ3VpZGUgZm9yIGEgbWFqb3IgaW50ZXJuYXRpb25hbCBjbGltYXRlIHN1bW1pdCB0byBiZSBoZWxkIGluIERlY2VtYmVyIGluIEJhbGksIEluZG9uZXNpYS4KIldlIGhhdmUgcmVhY2hlZCBicm9hZCBhZ3JlZW1lbnQgb24gdGhlIG1haW4gaXNzdWVzLCIgc2FpZCBMZW9uIENoYXJsZXMsIGEgbmVnb3RpYXRvciBmcm9tIEdyZW5hZGEgd2hvIGhlbHBlZCBvdmVyc2VlIHRoZSBWaWVubmEgdGFsa3MuCkRlbGVnYXRlcyB3b3JrZWQgaW50byBGcmlkYXkgZXZlbmluZyB0byBvdmVyY29tZSByZXNpc3RhbmNlIGZyb20gc2V2ZXJhbCBjb3VudHJpZXMgLSBpbmNsdWRpbmcgQ2FuYWRhLCBKYXBhbiBhbmQgUnVzc2lhIC0gdGhhdCBoYWQgaGVsZCB1cCBuZWdvdGlhdGlvbnMgYmVjYXVzZSB0aGV5IHByZWZlcnJlZCBhIG1vcmUgb3BlbiBhcHByb2FjaCByYXRoZXIgdGhhbiBzZXR0aW5nIGVtaXNzaW9ucyB0YXJnZXRzLgpUaGUgMjAyMCB0YXJnZXRzIGFyZSBub3QgYmluZGluZywgYnV0IHRoZXkgd2VyZSBzZWVuIGFzIGFuIGltcG9ydGFudCBzaWduYWwgdGhhdCBpbmR1c3RyaWFsaXplZCBuYXRpb25zIGFyZSBzZXJpb3VzIGFib3V0IHNsYXNoaW5nIHRoZSBhbW91bnQgb2YgY2FyYm9uIGRpb3hpZGUgYW5kIG90aGVyIGRhbmdlcm91cyBnYXNlcyB0byB0cnkgdG8gYXZlcnQgdGhlIG1vc3QgY2F0YXN0cm9waGljIGNvbnNlcXVlbmNlcyBvZiBnbG9iYWwgd2FybWluZy4KRnJpZGF5J3MgYWdyZWVtZW50IHNvdWdodCB0byBlYXNlIGNvbmNlcm5zIHRoYXQgdGhlIGVtaXNzaW9ucyB0YXJnZXQgbWlnaHQgYmUgdG9vIGFtYml0aW91cyBmb3Igc29tZSBuYXRpb25zLCBub3RpbmcgdGhhdCBlZmZvcnRzIHRvIGN1dCBiYWNrIG9uIGFpcmJvcm5lIHBvbGx1dGFudHMgYXJlICJkZXRlcm1pbmVkIGJ5IG5hdGlvbmFsIGNpcmN1bXN0YW5jZXMgYW5kIGV2b2x2ZSBvdmVyIHRpbWUuIgpCdXQgaXQgbWFkZSBjbGVhciB0aGF0IGdyZWVuaG91c2UgZ2FzIGVtaXNzaW9ucyBtdXN0IGJlIHJlZHVjZWQgdG8gInZlcnkgbG93IGxldmVscyIgdG8gZ3VhcmQgYWdhaW5zdCBwb3RlbnRpYWxseSBkZWFkbHkgZmxvb2RpbmcsIGRyb3VnaHQgYW5kIG90aGVyIGZhbGxvdXQuCiJIZW5jZSB0aGUgdXJnZW5jeSB0byBhZGRyZXNzIGNsaW1hdGUgY2hhbmdlLCIgdGhlIGFncmVlbWVudCBzYWlkLgpUaGUgQmFsaSBjb25mZXJlbmNlIHdpbGwgdHJ5IHRvIGZvcmdlIGEgbmV3IGdsb2JhbCBhZ3JlZW1lbnQgdG8gY3V0IGdyZWVuaG91c2UgZ2FzIGVtaXNzaW9ucyBhZnRlciAyMDEyLCB3aGVuIHRoZSAxOTk3IEt5b3RvIFByb3RvY29sIGV4cGlyZXMuClRoZSBLeW90byBhY2NvcmQgcmVxdWlyZXMgMzUgaW5kdXN0cmlhbCBuYXRpb25zIHRvIGN1dCB0aGVpciBlbWlzc2lvbnMgNSBwZXJjZW50IGJlbG93IDE5OTAgbGV2ZWxzIGJ5IDIwMTIuCkVudmlyb25tZW50YWwgZ3JvdXBzIHN0cmVzc2VkIHRoYXQgZGV2ZWxvcGVkIGNvdW50cmllcyBuZWVkIHRvIHRha2UgdXJnZW50IG1lYXN1cmVzIHRvIGtlZXAgRWFydGgncyB0ZW1wZXJhdHVyZSBmcm9tIHJpc2luZyBtb3JlIHRoYW4gMy42IGRlZ3JlZXMgRmFocmVuaGVpdCAtIGEgbGltaXQgc2NpZW50aXN0cyBjb250ZW5kIGlzIGNyaXRpY2FsIHRvIHByZXZlbnQgY2F0YXN0cm9waGljIGZsb29kaW5nIGFuZCBvdGhlciBkZWFkbHkgd2VhdGhlciBwYXR0ZXJucy4KIlRoZXkgbmVlZCB0byBiZSBndWlkZWQgYnkgdGhlIHBvdGVudGlhbCBjYWxhbWl0eSwiIHNhaWQgQW5nZWxhIEFuZGVyc29uLCB2aWNlIHByZXNpZGVudCBmb3IgY2xpbWF0ZSBwcm9ncmFtcyBhdCB0aGUgV2FzaGluZ3Rvbi1iYXNlZCBOYXRpb25hbCBFbnZpcm9ubWVudGFsIFRydXN0LgpGYWlsaW5nIHRvIGN1dCBlbWlzc2lvbnMgYnkgYXQgbGVhc3QgMzAgcGVyY2VudCBvZiAxOTkwIGxldmVscyBieSAyMDIwICJ3b3VsZCBjb25kZW1uIG1pbGxpb25zIHRvIGRpc2Vhc2UsIHdhdGVyIHNob3J0YWdlcyBhbmQgbWlzZXJ5IGluIHRoZSBkZXZlbG9waW5nIHdvcmxkLCIgc2FpZCBSZWQgQ29uc3RhbnRpbm8sIGFuIG9mZmljaWFsIHdpdGggR3JlZW5wZWFjZSBJbnRlcm5hdGlvbmFsLgpFdXJvcGVhbiBVbmlvbiBvZmZpY2lhbHMgaGFkIHByZXNzZWQgaGFyZCBmb3IgdGhlIDIwMjAgdGFyZ2V0cy4KVGhlIEVVIGFscmVhZHkgaGFzIHBsZWRnZWQgdG8gY3V0IGVtaXNzaW9ucyBvZiBjYXJib24gZGlveGlkZSBhbmQgb3RoZXIgaGFybWZ1bCBnYXNlcyBieSAyMCBwZXJjZW50IGJ5IHRoYXQgeWVhciwgYW5kIGJ5IGFub3RoZXIgMTAgcGVyY2VudCBpZiBvdGhlciBpbmR1c3RyaWFsaXplZCBuYXRpb25zIGpvaW4gaW4uCll2byBkZSBCb2VyLCB0aGUgVS5OLidzIHRvcCBjbGltYXRlIG9mZmljaWFsLCBzYWlkIHNvbWUgZGV2ZWxvcGluZyBjb3VudHJpZXMgLSBpbmNsdWRpbmcgc21hbGwgaXNsYW5kIG5hdGlvbnMgbW9zdCB2dWxuZXJhYmxlIHRvIGNsaW1hdGUgY2hhbmdlIGFzIHBvbGFyIGljZSBjYXBzIG1lbHQgYW5kIHNlYSBsZXZlbHMgcmlzZSAtIHdlcmUgcHJlc3NpbmcgaW5kdXN0cmlhbGl6ZWQgbmF0aW9ucyBmb3IgZXZlbiBkZWVwZXIgZW1pc3Npb25zIGN1dHMuClRoZWlyIG5lZ290aWF0b3JzLCBoZSBzYWlkLCB3ZXJlIGFjdGluZyBvdXQgb2YgYSBzZW5zZSBvZiB1cmdlbmN5IGFuZCBhIGZlYXIgdGhhdCAidGhleSB3b24ndCBoYXZlIGEgY291bnRyeSB0byByZXByZXNlbnQiIGlmIGNsaW1hdGUgY2hhbmdlIGlzIG5vdCBzbG93ZWQuCg==
[]
U2VjcmV0YXJ5IG9mIFN0YXRlIENvbmRvbGVlenphIFJpY2UgY2hhbGxlbmdlZCB0aGUgd29ybGQncyBiaWdnZXN0IHBvbGx1dGVycyBUaHVyc2RheSB0byAiY3V0IHRoZSBHb3JkaWFuIGtub3Qgb2YgZm9zc2lsIGZ1ZWxzIiBieSBzaGlmdGluZyB0b3dhcmQgZnVlbHMgdGhhdCB3aWxsIHJlZHVjZSBnbG9iYWwgd2FybWluZyAtIHdpdGhvdXQgaGFybWluZyB0aGVpciBlY29ub21pZXMuClVsdGltYXRlbHkgd2UgbmVlZCB0byBhbnN3ZXIganVzdCBvbmUgZnVuZGFtZW50YWwgcXVlc3Rpb246IFdoYXQga2luZCBvZiB3b3JsZCBkbyB3ZSB3aXNoIHRvIGluaGFiaXQgYW5kIHdoYXQga2luZCBvZiB3b3JsZCBkbyB3ZSB3aXNoIHRvIHBhc3Mgb24gdG8gZnV0dXJlIGdlbmVyYXRpb25zPwpSaWNlIHNhaWQgYXQgdGhlIHN0YXJ0IG9mIGEgdHdvLWRheSBjbGltYXRlIG1lZXRpbmcgY2FsbGVkIGJ5IFByZXNpZGVudCBCdXNoLgpUaGUgVW5pdGVkIFN0YXRlcyBoYXMgbGluZWQgdXAgd2l0aCBDaGluYSwgSW5kaWEgYW5kIG90aGVyIG1ham9yIHBvbGx1dGVycyBpbiBvcHBvc2l0aW9uIHRvIG1hbmRhdG9yeSBjdXRzIGluIEVhcnRoLXdhcm1pbmcgZ3JlZW5ob3VzZSBnYXNlcyBzb3VnaHQgYnkgdGhlIFVuaXRlZCBOYXRpb25zIGFuZCBFdXJvcGVhbiBjb3VudHJpZXMuClJpY2Ugc2FpZCB0aGUgY2hhbGxlbmdlIG9mIGdsb2JhbCBjbGltYXRlIGNoYW5nZSBjYW5ub3QgYmUgZGVhbHQgd2l0aCBlbnRpcmVseSBhcyBhbiBlbnZpcm9ubWVudGFsIHF1ZXN0aW9uLCBidXQgImluIGEgd2F5IHRoYXQgZG9lcyBub3Qgc3RhcnZlIGVjb25vbWllcyBvZiB0aGUgZW5lcmd5IHRoYXQgdGhleSBuZWVkIHRvIGdyb3cuIgoiVGhvdWdoIHVuaXRlZCBieSBjb21tb24gZ29hbHMgYW5kIGNvbGxlY3RpdmUgcmVzcG9uc2liaWxpdHksIGFsbCBuYXRpb25zIHNob3VsZCB0YWNrbGUgY2xpbWF0ZSBjaGFuZ2UgaW4gdGhlIHdheXMgdGhhdCB0aGV5IGRlZW0gYmVzdCwiIHNoZSBzYWlkLgpNYW5hZ2luZyB0aGUgc3RhdHVzIHF1byBpcyBzaW1wbHkgbm90IGFuIGFkZXF1YXRlIHJlc3BvbnNlLiAuLi4KV2UgbXVzdCBjdXQgdGhlIEdvcmRpYW4ga25vdCBvZiBmb3NzaWwgZnVlbHMuCkJ1c2gncyBjbGltYXRlIG1lZXRpbmcgd2lsbCBlbXBoYXNpemUgY3JlYXRpbmcgbW9yZSBwcm9jZXNzZXMgdG8gZmluZCBhIHNvbHV0aW9uIHRvIGdsb2JhbCB3YXJtaW5nLCByYXRoZXIgdGhhbiBzZXR0aW5nIGZpcm0gZ29hbHMgZm9yIHJlZHVjaW5nIGNhcmJvbiBkaW94aWRlIGFuZCBvdGhlciBnYXNlcyBibGFtZWQgZm9yIGhlYXRpbmcgdXAgdGhlIGF0bW9zcGhlcmUuClRoZSBuYXRpb25zIHN1bW1vbmVkIGJ5IEJ1c2ggd2lsbCAic2VlayBhZ3JlZW1lbnQgb24gdGhlIHByb2Nlc3MiIGFuZCBtb3JlIHdvcmsgdGVhbXMgZm9yIG5hdGlvbnMgdG8gc2V0IHRoZWlyIG93biBzdHJhdGVnaWVzIGJleW9uZCAyMDEyLCB3aGVuIHRoZSBVLk4uLWJyb2tlcmVkIEt5b3RvIFByb3RvY29sIGV4cGlyZXMsIGFjY29yZGluZyB0byBhIFdoaXRlIEhvdXNlIHN0YXRlbWVudCBXZWRuZXNkYXkuCkl0IGFsc28gImNvdWxkIGluY2x1ZGUgYSBsb25nLXRlcm0gZ2xvYmFsIGdvYWwsIG5hdGlvbmFsbHkgZGVmaW5lZCBtaWR0ZXJtIGdvYWxzIGFuZCBzdHJhdGVnaWVzLCBhbmQgc2VjdG9yLWJhc2VkIGFwcHJvYWNoZXMgZm9yIGltcHJvdmluZyBlbmVyZ3kgc2VjdXJpdHkgYW5kIHJlZHVjaW5nIGdyZWVuaG91c2UgZ2FzIGVtaXNzaW9ucywiIHRoZSBXaGl0ZSBIb3VzZSBzYWlkLgpUaGF0IGhhcyBFdXJvcGVhbiBsZWFkZXJzLCB3aG8gY29uY2VkZSB0aGF0IHRoZSBiaWdnZXN0IHBvbGx1dGluZyBuYXRpb25zIG11c3QgYmUgcGFydCBvZiBhbnkgc29sdXRpb24sIHdhbGtpbmcgYSB0aGluIGxpbmUgYmV0d2VlbiBza2VwdGljaXNtIGFuZCBvcHRpbWlzbS4KIldlIGNhbid0IGRvIHRoaXMgb24gdGhlIGJhc2lzIG9mIHRhbGtpbmcgYWJvdXQgdGFsa2luZyBvciBzZXR0aW5nIGdvYWxzIHRvIHNldCBnb2FscywiIEpvaG4gQXNodG9uLCBhIHNwZWNpYWwgcmVwcmVzZW50YXRpdmUgb24gY2xpbWF0ZSBjaGFuZ2UgZm9yIHRoZSBCcml0aXNoIGZvcmVpZ24gc2VjcmV0YXJ5LCBzYWlkIGluIGFuIGludGVydmlldy4KV2Uga25vdyB0aGF0IGEgdm9sdW50YXJ5IGFwcHJvYWNoIHRvIGdsb2JhbCB3YXJtaW5nIGlzIGFib3V0IGFzIGVmZmVjdGl2ZSBhcyBhIHZvbHVudGFyeSBzcGVlZCBsaW1pdCBzaWduIGluIHRoZSByb2FkLgpXZSBkb24ndCBqdXN0IG5lZWQgYW4gYXBwcm9hY2ggdGhhdCB3b3Jrczsgd2UgbmVlZCBhbiBhcHByb2FjaCB0aGF0IHdvcmtzIHZlcnkgcXVpY2tseS4KQnVzaCdzIG1lZXRpbmcgbm90YWJseSBpbmNsdWRlcyB0aGUgZmFzdC1lbWVyZ2luZyBlY29ub21pZXMgd2hvc2UgZXhjbHVzaW9uIGZyb20gdGhlIGdyb3VwIG9mIGluZHVzdHJpYWxpemVkIG5hdGlvbnMgcGFydGljaXBhdGluZyBpbiBLeW90byBoYXMgYmVlbiBjaXRlZCBieSBoaXMgYWRtaW5pc3RyYXRpb24gYXMgcmVhc29ucyBmb3IgcmVqZWN0aW5nIHRoYXQgaW50ZXJuYXRpb25hbCBjbGltYXRlIGFjY29yZC4KQnkgZG9pbmcgc28sIEJ1c2ggaGFzIGNvbXBldGVkIGZvciBhdHRlbnRpb24gd2l0aCB0aGUgY2xpbWF0ZSBjaGFuZ2Ugc3VtbWl0IHRoYXQgd2FzIGhlbGQgTW9uZGF5IGluIE5ldyBZb3JrIENpdHkgYXQgd2hpY2ggVS5OLiBTZWNyZXRhcnktR2VuZXJhbCBCYW4gS2ktbW9vbiB3YXJuZWQgODAgd29ybGQgbGVhZGVycyB0aGF0ICJ0aGUgdGltZSBmb3IgZG91YnQgaGFzIHBhc3NlZCIgYW5kIHVyZ2VkIGZhc3QgYWN0aW9uIHRvIHNhdmUgZnV0dXJlIGdlbmVyYXRpb25zIGZyb20gcG90ZW50aWFsbHkgcnVpbm91cyBlZmZlY3RzIG9mIGdsb2JhbCB3YXJtaW5nLgpUaGUgVS5TLi1sZWQgdGFsa3MgVGh1cnNkYXkgYW5kIEZyaWRheSB1bml0ZSBjb3VudHJpZXMgYXQgYm90aCBlbmRzIG9mIHRoZSBlY29ub21pYyBzcGVjdHJ1bSwgdGhlIGhhdmVzIGFuZCBoYXZlLW5vdHMsIGluIG9wcG9zaXRpb24gdG8gbWFuZGF0b3J5IGN1dHMgaW4gZ3JlZW5ob3VzZSBnYXNlcywgYnV0IGZvciBkaWZmZXJlbnQgcmVhc29ucy4KVGhlIGFscmVhZHkgaW5kdXN0cmlhbGl6ZWQgbmF0aW9ucyBkbyBub3Qgd2FudCB0byBoYXJtIHRoZWlyIGVjb25vbWllcywgYXMgQnVzaCBoYXMgYXJndWVkLgpEZXZlbG9waW5nIG5hdGlvbnMgZG8gbm90IHdhbnQgdG8gZ2l2ZSB1cCBncm91bmQgdG93YXJkIGluZHVzdHJpYWxpemluZyAtIGFuZCBtZWV0aW5nIGJhc2ljIGh1bWFuIG5lZWRzLgoiRm9yIGEgZGV2ZWxvcGluZyBjb3VudHJ5LCB0aGUgbWFpbiB0YXNrIGlzIHRvIHJlZHVjZSBwb3ZlcnR5LCIgWGllIFpoZW5odWEsIHZpY2UgY2hhaXJtYW4gb2YgQ2hpbmEncyBuYXRpb25hbCBkZXZlbG9wbWVudCBhbmQgcmVmb3JtIGNvbW1pc3Npb24sIHRvbGQgYSBmb3J1bSBXZWRuZXNkYXkgc3BvbnNvcmVkIGJ5IHRoZSBDZW50ZXIgZm9yIENsZWFuIEFpciBQb2xpY3ksIGEgdGhpbmsgdGFuay4KV2UgYXJlIGFsc28gZXh0cmVtZWx5IGNvbmNlcm5lZCBhYm91dCB0aGUgY29uc2VxdWVuY2VzLCB0aGUgYWR2ZXJzZSBlZmZlY3RzIG9mIGNsaW1hdGUgY2hhbmdlLgpUaGV5IGV4cHJlc3NlZCBhIHN0cm9uZyBwcmVmZXJlbmNlIGZvciB0aGUgY2xpbWF0ZSBuZWdvdGlhdGlvbnMgbGF0ZXIgdGhpcyB5ZWFyIHNwb25zb3JlZCBieSB0aGUgVS5OLiBGcmFtZXdvcmsgQ29udmVudGlvbiBvbiBDbGltYXRlIENoYW5nZSwgZm9yIHdoaWNoIEJhbidzIHN1bW1pdCBNb25kYXkgd2FzIGludGVuZGVkIHRvIGJ1aWxkIG1vbWVudHVtLgpCdXQgZGV2ZWxvcGluZyBjb3VudHJpZXMgc3RpbGwgYXJlIHRyeWluZyB0byBjdXJiIHRoZWlyIGVtaXNzaW9ucyB3aGlsZSBsaWZ0aW5nIHRoZSB3ZWxmYXJlIG9mIHRoZWlyIGNpdGl6ZW5zLCBzYWlkIFNlcmdpbyBTZXJyYSwgQnJhemlsJ3MgZmlyc3QgYW1iYXNzYWRvciBpbiBjaGFyZ2Ugb2YgZ2xvYmFsIHdhcm1pbmcgaXNzdWVzLgpUaHJlZSBVLk4uIGVudm95cyBvbiBjbGltYXRlIGNoYW5nZSBhbmQgdGhlIEdlcm1hbiBlbnZpcm9ubWVudCBtaW5pc3RlciB1cmdlZCBVLlMuIGxhd21ha2VycyBXZWRuZXNkYXkgdG8gY29tbWl0IHRvIGJpbmRpbmcgY2FwcyBvbiBlbWlzc2lvbnMgb2YgY2FyYm9uIGRpb3hpZGUgYW5kIG90aGVyIGdyZWVuaG91c2UgZ2FzZXMuCg==
[]
V2VkZGluZyBiZWxscyBtaWdodCBub3QgYmUgZmFyIG9mZiBmb3IgUGFtZWxhIEFuZGVyc29uLgpUaGUgZm9ybWVyICdCYXl3YXRjaCcgc3RhciBhbmQgUmljayBTYWxvbW9uIGFwcGxpZWQgZm9yIC0gYW5kIHdlcmUgZ3JhbnRlZCAtIGEgbWFycmlhZ2UgbGljZW5zZSBsYXRlIFNhdHVyZGF5IGluIExhcyBWZWdhcywgYWNjb3JkaW5nIHRvIHRoZSBDbGFyayBDb3VudHkncyBNYXJyaWFnZSBMaWNlbnNlIEJ1cmVhdS4KVGhlIGxpY2Vuc2UgbWVhbnMgdGhlIGNvdXBsZSBjYW4gZ2V0IG1hcnJpZWQgYW55IHRpbWUgZHVyaW5nIHRoZSBuZXh0IHllYXIuCkFuZGVyc29uLCA0MCwgaGFzIGJlZW4gcHJldmlvdXNseSBtYXJyaWVkIHRvIHNpbmdlciBLaWQgUm9jayBhbmQgTW90bGV5IENydWUgZHJ1bW1lciBUb21teSBMZWUuClNhbG9tb24sIDM4LCBpcyBiZXN0LWtub3duIGZvciBtYWtpbmcgYSBzZXggdmlkZW90YXBlIHdpdGggaGlzIHRoZW4tZ2lybGZyaWVuZCBQYXJpcyBIaWx0b24gYW5kIHdhcyBwcmV2aW91c2x5IG1hcnJpZWQgdG8gYWN0cmVzcyBTaGFubmVuIERvaGVydHkuCkFuZGVyc29uJ3MgcHVibGljaXN0LCBDaW5keSBHdWFnZW50aSwgZGlkIG5vdCBpbW1lZGlhdGVseSByZXR1cm4gYSBjYWxsIGZvciBjb21tZW50IFN1bmRheS4KRWFybGllciB0aGlzIG1vbnRoLCBBbmRlcnNvbiBhcHBlYXJlZCBvbiBUaGUgRWxsZW4gRGVHZW5lcmVzIFNob3cgYW5kIHNhaWQgdGhhdCBzaGUgd2FzIGRhdGluZyBhICJteXN0ZXJ5IG1hbiIgd2hvIHdhcyBhIHByb2Zlc3Npb25hbCBwb2tlciBwbGF5ZXIsIGJ1dCB3b3VsZCBub3QgZ2l2ZSBhbnkgZnVydGhlciBkZXRhaWxzLgo=
[(V2VkZGluZyBiZWxscyBtaWdodCBub3QgYmUgZmFyIG9mZiBmb3IgUGFtZWxhIEFuZGVyc29uLgpUaGUgZm9ybWVyICdCYXl3YXRjaCcgc3RhciBhbmQgUmljayBTYWxvbW9uIGFwcGxpZWQgZm9yIC0gYW5kIHdlcmUgZ3JhbnRlZCAtIGEgbWFycmlhZ2UgbGljZW5zZSBsYXRlIFNhdHVyZGF5IGluIExhcyBWZWdhcywgYWNjb3JkaW5nIHRvIHRoZSBDbGFyayBDb3VudHkncyBNYXJyaWFnZSBMaWNlbnNlIEJ1cmVhdS4KVGhlIGxpY2Vuc2UgbWVhbnMgdGhlIGNvdXBsZSBjYW4gZ2V0IG1hcnJpZWQgYW55IHRpbWUgZHVyaW5nIHRoZSBuZXh0IHllYXIuCkFuZGVyc29uLCA0MCwgaGFzIGJlZW4gcHJldmlvdXNseSBtYXJyaWVkIHRvIHNpbmdlciBLaWQgUm9jayBhbmQgTW90bGV5IENydWUgZHJ1bW1lciBUb21teSBMZWUuClNhbG9tb24sIDM4LCBpcyBiZXN0LWtub3duIGZvciBtYWtpbmcgYSBzZXggdmlkZW90YXBlIHdpdGggaGlzIHRoZW4tZ2lybGZyaWVuZCBQYXJpcyBIaWx0b24gYW5kIHdhcyBwcmV2aW91c2x5IG1hcnJpZWQgdG8gYWN0cmVzcyBTaGFubmVuIERvaGVydHkuCkFuZGVyc29uJ3MgcHVibGljaXN0LCBDaW5keSBHdWFnZW50aSwgZGlkIG5vdCBpbW1lZGlhdGVseSByZXR1cm4gYSBjYWxsIGZvciBjb21tZW50IFN1bmRheS4KRWFybGllciB0aGlzIG1vbnRoLCBBbmRlcnNvbiBhcHBlYXJlZCBvbiBUaGUgRWxsZW4gRGVHZW5lcmVzIFNob3cgYW5kIHNhaWQgdGhhdCBzaGUgd2FzIGRhdGluZyBhICJteXN0ZXJ5IG1hbiIgd2hvIHdhcyBhIHByb2Zlc3Npb25hbCBwb2tlciBwbGF5ZXIsIGJ1dCB3b3VsZCBub3QgZ2l2ZSBhbnkgZnVydGhlciBkZXRhaWxzLgo=, 'GPE')]
VGhlIFN1cHJlbWUgQ291cnQgb24gVHVlc2RheSB0ZXJtaW5hdGVkIGEgbGF3c3VpdCBmcm9tIGEgbWFuIHdobyBjbGFpbXMgaGUgd2FzIGFiZHVjdGVkIGFuZCB0b3J0dXJlZCBieSB0aGUgQ0lBLCBlZmZlY3RpdmVseSBlbmRvcnNpbmcgQnVzaCBhZG1pbmlzdHJhdGlvbiBhcmd1bWVudHMgdGhhdCBzdGF0ZSBzZWNyZXRzIHdvdWxkIGJlIHJldmVhbGVkIGlmIHRoZSBjYXNlIHdlcmUgYWxsb3dlZCB0byBwcm9jZWVkLgpLaGFsZWQgZWwtTWFzcmksIDQ0LCBhbGxlZ2VkIHRoYXQgaGUgd2FzIGtpZG5hcHBlZCBieSBDSUEgYWdlbnRzIGluIEV1cm9wZSBhbmQgaGVsZCBpbiBhbiBBZmdoYW4gcHJpc29uIGZvciBmb3VyIG1vbnRocyBpbiBhIGNhc2Ugb2YgbWlzdGFrZW4gaWRlbnRpdHkuClRoZSBhZG1pbmlzdHJhdGlvbiBoYXMgbm90IHB1YmxpY2x5IGFja25vd2xlZGdlZCB0aGF0IGVsLU1hc3JpIHdhcyBkZXRhaW5lZCwgYW5kIGxvd2VyIGNvdXJ0cyBkaXNtaXNzZWQgaGlzIHN1aXQgYWZ0ZXIgdGhlIGFkbWluaXN0cmF0aW9uIGFzc2VydGVkIHRoYXQgc3RhdGUgc2VjcmV0cyB3b3VsZCBiZSByZXZlYWxlZCBpZiB0aGUgbGF3c3VpdCB3ZXJlIG5vdCBibG9ja2VkLgpUaGUganVzdGljZXMgcmVqZWN0ZWQgaGlzIGFwcGVhbCB3aXRob3V0IGNvbW1lbnQuClRoZSBjYXNlIGhhZCBiZWVuIHNlZW4gYXMgYSB0ZXN0IG9mIHRoZSBhZG1pbmlzdHJhdGlvbidzIGxlZ2FsIHN0cmF0ZWd5IHRvIHN0b3AgaXQgYW5kIHNldmVyYWwgb3RoZXIgbmF0aW9uYWwgc2VjdXJpdHkgbGF3c3VpdHMgYnkgaW52b2tpbmcgdGhlIGRvY3RyaW5lIG9mIHN0YXRlIHNlY3JldHMuCkFub3RoZXIgbGF3c3VpdCBvdmVyIHRoZSBhZG1pbmlzdHJhdGlvbidzIHdhcnJhbnRsZXNzIHdpcmV0YXBwaW5nIHByb2dyYW0sIGFsc28gZGlzbWlzc2VkIG9uIHN0YXRlIHNlY3JldHMgZ3JvdW5kcywgc3RpbGwgaXMgcGVuZGluZyBiZWZvcmUgdGhlIGp1c3RpY2VzLgpBIGNvYWxpdGlvbiBvZiBncm91cHMgZmF2b3JpbmcgZ3JlYXRlciBvcGVubmVzcyBpbiBnb3Zlcm5tZW50IHNheXMgdGhlIEJ1c2ggYWRtaW5pc3RyYXRpb24gaGFzIHVzZWQgdGhlIHN0YXRlIHNlY3JldHMgcHJpdmlsZWdlIG11Y2ggbW9yZSBvZnRlbiB0aGFuIGl0cyBwcmVkZWNlc3NvcnMuCkF0IHRoZSBoZWlnaHQgb2YgQ29sZCBXYXIgdGVuc2lvbnMgYmV0d2VlbiB0aGUgVW5pdGVkIFN0YXRlcyBhbmQgdGhlIGZvcm1lciBTb3ZpZXQgVW5pb24sIFUuUy4gcHJlc2lkZW50cyB1c2VkIHRoZSBzdGF0ZSBzZWNyZXRzIHByaXZpbGVnZSBzaXggdGltZXMgZnJvbSAxOTUzIHRvIDE5NzYsIGFjY29yZGluZyB0byBPcGVuVGhlR292ZXJubWVudC5vcmcuClNpbmNlIDIwMDEsIGl0IGhhcyBiZWVuIHVzZWQgMzkgdGltZXMsIGVuYWJsaW5nIHRoZSBnb3Zlcm5tZW50IHRvIHVuaWxhdGVyYWxseSB3aXRoaG9sZCBkb2N1bWVudHMgZnJvbSB0aGUgY291cnQgc3lzdGVtLCB0aGUgZ3JvdXAgc2FpZC4KRWwtTWFzcmkncyBjYXNlIGNlbnRlcnMgb24gdGhlIENJQSdzICJleHRyYW9yZGluYXJ5IHJlbmRpdGlvbiIgcHJvZ3JhbSwgaW4gd2hpY2ggdGVycm9yaXNtIHN1c3BlY3RzIGFyZSBjYXB0dXJlZCBhbmQgdGFrZW4gdG8gZm9yZWlnbiBjb3VudHJpZXMgZm9yIGludGVycm9nYXRpb24uCkh1bWFuIHJpZ2h0cyBncm91cHMgaGF2ZSBoZWF2aWx5IGNyaXRpY2l6ZWQgdGhlIHByb2dyYW0uClByZXNpZGVudCBCdXNoIGhhcyByZXBlYXRlZGx5IGRlZmVuZGVkIHRoZSBwb2xpY2llcyBpbiB0aGUgd2FyIG9uIHRlcnJvciwgc2F5aW5nIGFzIHJlY2VudGx5IGFzIGxhc3Qgd2VlayB0aGF0IHRoZSBVLlMuIGRvZXMgbm90IGVuZ2FnZSBpbiB0b3J0dXJlLgpFbC1NYXNyaSwgYSBHZXJtYW4gY2l0aXplbiBvZiBMZWJhbmVzZSBkZXNjZW50LCBzYXlzIGhlIHdhcyBtaXN0YWtlbmx5IGlkZW50aWZpZWQgYXMgYW4gYXNzb2NpYXRlIG9mIHRoZSBTZXB0LgoxMSBoaWphY2tlcnMgYW5kIHdhcyBkZXRhaW5lZCB3aGlsZSBhdHRlbXB0aW5nIHRvIGVudGVyIE1hY2Vkb25pYSBvbiBOZXcgWWVhcidzIEV2ZSAyMDAzLgpIZSBjbGFpbXMgdGhhdCBDSUEgYWdlbnRzIHN0cmlwcGVkLCBiZWF0LCBzaGFja2xlZCwgZGlhcGVyZWQsIGRydWdnZWQgYW5kIGNoYWluZWQgaGltIHRvIHRoZSBmbG9vciBvZiBhIHBsYW5lIGZvciBhIGZsaWdodCB0byBBZmdoYW5pc3Rhbi4KSGUgc2F5cyBoZSB3YXMgaGVsZCBmb3IgZm91ciBtb250aHMgaW4gYSBDSUEtcnVuIHByaXNvbiBrbm93biBhcyB0aGUgInNhbHQgcGl0IiBpbiB0aGUgQWZnaGFuIGNhcGl0YWwgb2YgS2FidWwuClRoZSBsYXdzdWl0IHNvdWdodCBkYW1hZ2VzIG9mIGF0IGxlYXN0ICQ3NSwwMDAuClRoZSBVLlMuIGdvdmVybm1lbnQgaGFzIG5laXRoZXIgY29uZmlybWVkIG5vciBkZW5pZWQgZWwtTWFzcmkncyBhY2NvdW50LgpCdXQgR2VybWFuIENoYW5jZWxsb3IgQW5nZWxhIE1lcmtlbCBoYXMgc2FpZCB0aGF0IFUuUy4gb2ZmaWNpYWxzIGFja25vd2xlZGdlZCB0aGF0IEVsLU1hc3JpJ3MgZGV0ZW50aW9uIHdhcyBhIG1pc3Rha2UuCkVsLU1hc3JpJ3MgYWNjb3VudCBhbHNvIGhhcyBiZWVuIGJvbHN0ZXJlZCBieSBFdXJvcGVhbiBpbnZlc3RpZ2F0aW9ucyBhbmQgVS5TLiBuZXdzIHJlcG9ydHMuCkluIEphbnVhcnksIEdlcm1hbiBwcm9zZWN1dG9ycyBpc3N1ZWQgYXJyZXN0IHdhcnJhbnRzIGZvciAxMyBzdXNwZWN0ZWQgQ0lBIGFnZW50cyB3aG8gYWxsZWdlZGx5IHRvb2sgcGFydCBpbiB0aGUgb3BlcmF0aW9uIGFnYWluc3QgaGltLgpFbC1NYXNyaSdzIGxhd3llcnMgYWxzbyB0cmllZCB0byB1c2UgYSBjb21tZW50IGJ5IGZvcm1lciBDSUEgZGlyZWN0b3IgR2VvcmdlIFRlbmV0IHRvIHNob3cgdGhhdCBib3RoIHRoZSBwcm9ncmFtIGFuZCBlbC1NYXNyaSdzIGNhc2UgYXJlIHdlbGwta25vd24gdG8gdGhlIHB1YmxpYy4KUmF0aGVyIHRoYW4gcmVmdXNlIHRvIGNvbW1lbnQgd2hlbiBhc2tlZCBhYm91dCBFbC1NYXNyaSdzIGNsYWltcywgVGVuZXQgdG9sZCBDTk4gaW4gTWF5LCAiSSBkb24ndCBiZWxpZXZlIHdoYXQgaGUgc2F5cyBpcyB0cnVlLiIKVGhlIHN0YXRlIHNlY3JldHMgcHJpdmlsZWdlIGFyb3NlIGZyb20gYSAxOTUzIFN1cHJlbWUgQ291cnQgcnVsaW5nIHRoYXQgYWxsb3dlZCB0aGUgZXhlY3V0aXZlIGJyYW5jaCB0byBrZWVwIHNlY3JldCwgZXZlbiBmcm9tIHRoZSBjb3VydCwgZGV0YWlscyBhYm91dCBhIG1pbGl0YXJ5IHBsYW5lJ3MgZmF0YWwgY3Jhc2guClRocmVlIHdpZG93cyBzdWVkIHRvIGdldCB0aGUgYWNjaWRlbnQgcmVwb3J0IGFmdGVyIHRoZWlyIGh1c2JhbmRzIGRpZWQgYWJvYXJkIGEgQi0yOSBib21iZXIsIGJ1dCB0aGUgQWlyIEZvcmNlIHJlZnVzZWQgdG8gcmVsZWFzZSBpdCBjbGFpbWluZyB0aGF0IHRoZSBwbGFuZSB3YXMgb24gYSBzZWNyZXQgbWlzc2lvbiB0byB0ZXN0IG5ldyBlcXVpcG1lbnQuClRoZSBoaWdoIGNvdXJ0IGFjY2VwdGVkIHRoZSBhcmd1bWVudCwgYnV0IHdoZW4gdGhlIHJlcG9ydCB3YXMgcmVsZWFzZWQgZGVjYWRlcyBsYXRlciB0aGVyZSB3YXMgbm90aGluZyBpbiBpdCBhYm91dCBhIHNlY3JldCBtaXNzaW9uIG9yIGVxdWlwbWVudC4KVGhlIGNhc2UgaXMgRWwtTWFzcmkgdi4gVS5TLiwgMDYtMTYxMy4K
[(VGhlIFN1cHJlbWUgQ291cnQgb24gVHVlc2RheSB0ZXJtaW5hdGVkIGEgbGF3c3VpdCBmcm9tIGEgbWFuIHdobyBjbGFpbXMgaGUgd2FzIGFiZHVjdGVkIGFuZCB0b3J0dXJlZCBieSB0aGUgQ0lBLCBlZmZlY3RpdmVseSBlbmRvcnNpbmcgQnVzaCBhZG1pbmlzdHJhdGlvbiBhcmd1bWVudHMgdGhhdCBzdGF0ZSBzZWNyZXRzIHdvdWxkIGJlIHJldmVhbGVkIGlmIHRoZSBjYXNlIHdlcmUgYWxsb3dlZCB0byBwcm9jZWVkLgpLaGFsZWQgZWwtTWFzcmksIDQ0LCBhbGxlZ2VkIHRoYXQgaGUgd2FzIGtpZG5hcHBlZCBieSBDSUEgYWdlbnRzIGluIEV1cm9wZSBhbmQgaGVsZCBpbiBhbiBBZmdoYW4gcHJpc29uIGZvciBmb3VyIG1vbnRocyBpbiBhIGNhc2Ugb2YgbWlzdGFrZW4gaWRlbnRpdHkuClRoZSBhZG1pbmlzdHJhdGlvbiBoYXMgbm90IHB1YmxpY2x5IGFja25vd2xlZGdlZCB0aGF0IGVsLU1hc3JpIHdhcyBkZXRhaW5lZCwgYW5kIGxvd2VyIGNvdXJ0cyBkaXNtaXNzZWQgaGlzIHN1aXQgYWZ0ZXIgdGhlIGFkbWluaXN0cmF0aW9uIGFzc2VydGVkIHRoYXQgc3RhdGUgc2VjcmV0cyB3b3VsZCBiZSByZXZlYWxlZCBpZiB0aGUgbGF3c3VpdCB3ZXJlIG5vdCBibG9ja2VkLgpUaGUganVzdGljZXMgcmVqZWN0ZWQgaGlzIGFwcGVhbCB3aXRob3V0IGNvbW1lbnQuClRoZSBjYXNlIGhhZCBiZWVuIHNlZW4gYXMgYSB0ZXN0IG9mIHRoZSBhZG1pbmlzdHJhdGlvbidzIGxlZ2FsIHN0cmF0ZWd5IHRvIHN0b3AgaXQgYW5kIHNldmVyYWwgb3RoZXIgbmF0aW9uYWwgc2VjdXJpdHkgbGF3c3VpdHMgYnkgaW52b2tpbmcgdGhlIGRvY3RyaW5lIG9mIHN0YXRlIHNlY3JldHMuCkFub3RoZXIgbGF3c3VpdCBvdmVyIHRoZSBhZG1pbmlzdHJhdGlvbidzIHdhcnJhbnRsZXNzIHdpcmV0YXBwaW5nIHByb2dyYW0sIGFsc28gZGlzbWlzc2VkIG9uIHN0YXRlIHNlY3JldHMgZ3JvdW5kcywgc3RpbGwgaXMgcGVuZGluZyBiZWZvcmUgdGhlIGp1c3RpY2VzLgpBIGNvYWxpdGlvbiBvZiBncm91cHMgZmF2b3JpbmcgZ3JlYXRlciBvcGVubmVzcyBpbiBnb3Zlcm5tZW50IHNheXMgdGhlIEJ1c2ggYWRtaW5pc3RyYXRpb24gaGFzIHVzZWQgdGhlIHN0YXRlIHNlY3JldHMgcHJpdmlsZWdlIG11Y2ggbW9yZSBvZnRlbiB0aGFuIGl0cyBwcmVkZWNlc3NvcnMuCkF0IHRoZSBoZWlnaHQgb2YgQ29sZCBXYXIgdGVuc2lvbnMgYmV0d2VlbiB0aGUgVW5pdGVkIFN0YXRlcyBhbmQgdGhlIGZvcm1lciBTb3ZpZXQgVW5pb24sIFUuUy4gcHJlc2lkZW50cyB1c2VkIHRoZSBzdGF0ZSBzZWNyZXRzIHByaXZpbGVnZSBzaXggdGltZXMgZnJvbSAxOTUzIHRvIDE5NzYsIGFjY29yZGluZyB0byBPcGVuVGhlR292ZXJubWVudC5vcmcuClNpbmNlIDIwMDEsIGl0IGhhcyBiZWVuIHVzZWQgMzkgdGltZXMsIGVuYWJsaW5nIHRoZSBnb3Zlcm5tZW50IHRvIHVuaWxhdGVyYWxseSB3aXRoaG9sZCBkb2N1bWVudHMgZnJvbSB0aGUgY291cnQgc3lzdGVtLCB0aGUgZ3JvdXAgc2FpZC4KRWwtTWFzcmkncyBjYXNlIGNlbnRlcnMgb24gdGhlIENJQSdzICJleHRyYW9yZGluYXJ5IHJlbmRpdGlvbiIgcHJvZ3JhbSwgaW4gd2hpY2ggdGVycm9yaXNtIHN1c3BlY3RzIGFyZSBjYXB0dXJlZCBhbmQgdGFrZW4gdG8gZm9yZWlnbiBjb3VudHJpZXMgZm9yIGludGVycm9nYXRpb24uCkh1bWFuIHJpZ2h0cyBncm91cHMgaGF2ZSBoZWF2aWx5IGNyaXRpY2l6ZWQgdGhlIHByb2dyYW0uClByZXNpZGVudCBCdXNoIGhhcyByZXBlYXRlZGx5IGRlZmVuZGVkIHRoZSBwb2xpY2llcyBpbiB0aGUgd2FyIG9uIHRlcnJvciwgc2F5aW5nIGFzIHJlY2VudGx5IGFzIGxhc3Qgd2VlayB0aGF0IHRoZSBVLlMuIGRvZXMgbm90IGVuZ2FnZSBpbiB0b3J0dXJlLgpFbC1NYXNyaSwgYSBHZXJtYW4gY2l0aXplbiBvZiBMZWJhbmVzZSBkZXNjZW50LCBzYXlzIGhlIHdhcyBtaXN0YWtlbmx5IGlkZW50aWZpZWQgYXMgYW4gYXNzb2NpYXRlIG9mIHRoZSBTZXB0LgoxMSBoaWphY2tlcnMgYW5kIHdhcyBkZXRhaW5lZCB3aGlsZSBhdHRlbXB0aW5nIHRvIGVudGVyIE1hY2Vkb25pYSBvbiBOZXcgWWVhcidzIEV2ZSAyMDAzLgpIZSBjbGFpbXMgdGhhdCBDSUEgYWdlbnRzIHN0cmlwcGVkLCBiZWF0LCBzaGFja2xlZCwgZGlhcGVyZWQsIGRydWdnZWQgYW5kIGNoYWluZWQgaGltIHRvIHRoZSBmbG9vciBvZiBhIHBsYW5lIGZvciBhIGZsaWdodCB0byBBZmdoYW5pc3Rhbi4KSGUgc2F5cyBoZSB3YXMgaGVsZCBmb3IgZm91ciBtb250aHMgaW4gYSBDSUEtcnVuIHByaXNvbiBrbm93biBhcyB0aGUgInNhbHQgcGl0IiBpbiB0aGUgQWZnaGFuIGNhcGl0YWwgb2YgS2FidWwuClRoZSBsYXdzdWl0IHNvdWdodCBkYW1hZ2VzIG9mIGF0IGxlYXN0ICQ3NSwwMDAuClRoZSBVLlMuIGdvdmVybm1lbnQgaGFzIG5laXRoZXIgY29uZmlybWVkIG5vciBkZW5pZWQgZWwtTWFzcmkncyBhY2NvdW50LgpCdXQgR2VybWFuIENoYW5jZWxsb3IgQW5nZWxhIE1lcmtlbCBoYXMgc2FpZCB0aGF0IFUuUy4gb2ZmaWNpYWxzIGFja25vd2xlZGdlZCB0aGF0IEVsLU1hc3JpJ3MgZGV0ZW50aW9uIHdhcyBhIG1pc3Rha2UuCkVsLU1hc3JpJ3MgYWNjb3VudCBhbHNvIGhhcyBiZWVuIGJvbHN0ZXJlZCBieSBFdXJvcGVhbiBpbnZlc3RpZ2F0aW9ucyBhbmQgVS5TLiBuZXdzIHJlcG9ydHMuCkluIEphbnVhcnksIEdlcm1hbiBwcm9zZWN1dG9ycyBpc3N1ZWQgYXJyZXN0IHdhcnJhbnRzIGZvciAxMyBzdXNwZWN0ZWQgQ0lBIGFnZW50cyB3aG8gYWxsZWdlZGx5IHRvb2sgcGFydCBpbiB0aGUgb3BlcmF0aW9uIGFnYWluc3QgaGltLgpFbC1NYXNyaSdzIGxhd3llcnMgYWxzbyB0cmllZCB0byB1c2UgYSBjb21tZW50IGJ5IGZvcm1lciBDSUEgZGlyZWN0b3IgR2VvcmdlIFRlbmV0IHRvIHNob3cgdGhhdCBib3RoIHRoZSBwcm9ncmFtIGFuZCBlbC1NYXNyaSdzIGNhc2UgYXJlIHdlbGwta25vd24gdG8gdGhlIHB1YmxpYy4KUmF0aGVyIHRoYW4gcmVmdXNlIHRvIGNvbW1lbnQgd2hlbiBhc2tlZCBhYm91dCBFbC1NYXNyaSdzIGNsYWltcywgVGVuZXQgdG9sZCBDTk4gaW4gTWF5LCAiSSBkb24ndCBiZWxpZXZlIHdoYXQgaGUgc2F5cyBpcyB0cnVlLiIKVGhlIHN0YXRlIHNlY3JldHMgcHJpdmlsZWdlIGFyb3NlIGZyb20gYSAxOTUzIFN1cHJlbWUgQ291cnQgcnVsaW5nIHRoYXQgYWxsb3dlZCB0aGUgZXhlY3V0aXZlIGJyYW5jaCB0byBrZWVwIHNlY3JldCwgZXZlbiBmcm9tIHRoZSBjb3VydCwgZGV0YWlscyBhYm91dCBhIG1pbGl0YXJ5IHBsYW5lJ3MgZmF0YWwgY3Jhc2guClRocmVlIHdpZG93cyBzdWVkIHRvIGdldCB0aGUgYWNjaWRlbnQgcmVwb3J0IGFmdGVyIHRoZWlyIGh1c2JhbmRzIGRpZWQgYWJvYXJkIGEgQi0yOSBib21iZXIsIGJ1dCB0aGUgQWlyIEZvcmNlIHJlZnVzZWQgdG8gcmVsZWFzZSBpdCBjbGFpbWluZyB0aGF0IHRoZSBwbGFuZSB3YXMgb24gYSBzZWNyZXQgbWlzc2lvbiB0byB0ZXN0IG5ldyBlcXVpcG1lbnQuClRoZSBoaWdoIGNvdXJ0IGFjY2VwdGVkIHRoZSBhcmd1bWVudCwgYnV0IHdoZW4gdGhlIHJlcG9ydCB3YXMgcmVsZWFzZWQgZGVjYWRlcyBsYXRlciB0aGVyZSB3YXMgbm90aGluZyBpbiBpdCBhYm91dCBhIHNlY3JldCBtaXNzaW9uIG9yIGVxdWlwbWVudC4KVGhlIGNhc2UgaXMgRWwtTWFzcmkgdi4gVS5TLiwgMDYtMTYxMy4K, 'ORG')]
QXV0aG9yaXRpZXMgaW4gbm9ydGhlYXN0ZXJuIEluZGlhIGFyZSBvZmZlcmluZyBmYXJtZXJzIGNhc2ggZm9yIGV2ZXJ5IHJhdCBraWxsZWQgaW4gdGhlIGZhY2Ugb2YgYW4gZXhwbG9zaW9uIGluIHRoZSByYXQgcG9wdWxhdGlvbiB0aGF0IHRocmVhdGVucyB0byBkZXZhc3RhdGUgY3JvcHMgYW5kIHBsdW5nZSB0aGUgcmVnaW9uIGludG8gYSBmYW1pbmUsIG9mZmljaWFscyBzYWlkIFdlZG5lc2RheS4KRmFybWVycyB3aWxsIGJlIHBhaWQgdHdvIHJ1cGVlcywgb3IgNSBjZW50cywgZm9yIGV2ZXJ5IHJhdCB0YWlsIGJyb3VnaHQgaW4gdG8gZ292ZXJubWVudCBvZmZpY2VzIGFzIHByb29mIHRoYXQgdGhlIHJhdCBoYXMgYmVlbiBraWxsZWQsIHNhaWQgSmFtZXMgTGFsc2lhbWxpYW5hLCBhbiBvZmZpY2lhbCBvZiBNaXpvcmFtIHN0YXRlJ3MgUm9kZW50IENvbnRyb2wgUHJvZ3JhbS4KUm9kZW50cyBhcmUgc3dhcm1pbmcgYWxsIGFjcm9zcyBNaXpvcmFtIHN0YXRlLCBmZWFzdGluZyBvbiBzdGFuZGluZyBjcm9wcyBhbmQgbGVhZGluZyB0byBmZWFycyBvZiBhIGZhbWluZS4KVGhlIHNpdHVhdGlvbiBpcyBpbmRlZWQgYWxhcm1pbmcsIiBMYWxzaWFtbGlhbmEgdG9sZCBUaGUgQXNzb2NpYXRlZCBQcmVzcyBieSBwaG9uZSBmcm9tIHRoZSBzdGF0ZSBjYXBpdGFsLCBBaXphd2wuClRoZSBjYXNoLWZvci1yYXRzIHNjaGVtZSBpcyB0aGUgbGF0ZXN0IGRldmlzZWQgYnkgdGhlIE1pem9yYW0gZ292ZXJubWVudCB0byBkZWFsIHdpdGggdGhlIHJhcGlkIGluY3JlYXNlIGluIHRoZSByYXQgcG9wdWxhdGlvbiBjYXVzZWQgYnkgYSByYXJlIGZsb3dlcmluZyBvZiB3aWxkIGJhbWJvbyBwbGFudHMgaW4gdGhlIHJlZ2lvbiBvdmVyIHRoZSBsYXN0IHRocmVlIHllYXJzLgpUaGUgcmF0cyBmZWFzdCBvbiB0aGUgYmFtYm9vIGZsb3dlcnMsIHdoaWNoIGJsb29tIGludGVybWl0dGVudGx5IGZvciBhYm91dCBmb3VyIHllYXJzLCBhbmQgdGhlbiBub3QgYWdhaW4gZm9yIGFub3RoZXIgNTAuCldoZW4gdGhlIGZsb3dlcnMgZGllIGRvd24gdGhlIHJhdHMgbW92ZSBvbiB0byBvdGhlciBjcm9wcyBpbiBzZWFyY2ggb2YgZm9vZC4KQXV0aG9yaXRpZXMgYXJlIHRha2luZyB0aGUgcmF0IHRocmVhdCBzZXJpb3VzbHkuClRoZSBsYXN0IG1ham9yIGZsb3dlcmluZyBvZiB0aGUgcGxhbnQsIGtub3duIGxvY2FsbHkgYXMgdGhlIG11bGkgYmFtYm9vIChNZWxvY2FubmEgQmFjY2lmZXJhKSwgaW4gMTk1OSwgc3BhcmtlZCBhIGZhbWluZSB0aGF0IGxlZCB0byBhIHZpb2xlbnQgdGhyZWUtZGVjYWRlLWxvbmcgcmViZWxsaW9uIGJ5IGxvY2FsIHRyaWJlcy4KVGhlIGN1cnJlbnQgZmxvd2VyaW5nIGJlZ2FuIGluIDIwMDQgYW5kIGlzIGV4cGVjdGVkIHRvIGxhc3QgdW50aWwgMjAwOC4KSW4gcmVjZW50IHllYXJzIHRoZSBnb3Zlcm5tZW50IGhhcyBjb250YWluZWQgdGhlIHJhdCBwb3B1bGF0aW9uIGJ5IGhhbmRpbmcgb3V0IHRvbnMgb2YgcmF0IHBvaXNvbiBhbmQgcGF5aW5nIGZhcm1lcnMgdG8gbWFrZSB0cmFwcy4KVGhlIGFybXkgaGFzIGtpbGxlZCByYXRzLgpFeHBlcnRzIGZyb20gSmFwYW4sIENhbmFkYSBhbmQgQXVzdHJhbGlhIGhhdmUgYmVlbiBpbiB0aGUgcmVnaW9uIHN0dWR5aW5nIHRoZSBiYW1ib28sIHRvIGRldGVybWluZSB3aHkgaXQgZmxvd2VycyBzbyBpcnJlZ3VsYXJseSBhbmQgaG93IHRoYXQgYWZmZWN0cyB0aGUgcmF0IHBvcHVsYXRpb24sIExhbHNpYW1saWFuYSBzYWlkLgo=
[]
TXlhbm1hciBhbm5vdW5jZWQgU2F0dXJkYXkgdGhhdCBpdCB3YXMgbGlmdGluZyBhIGN1cmZldyBhbmQgZW5kaW5nIGEgYmFuIG9uIGFzc2VtYmx5IGltcG9zZWQgYWZ0ZXIgYSBjcmFja2Rvd24gb24gcHJvLWRlbW9jcmFjeSBwcm90ZXN0ZXJzLCB0aGUgbGF0ZXN0IHNpZ24gdGhhdCB0aGUgZ292ZXJubWVudCBiZWxpZXZlcyBpdCBoYXMgZXh0aW5ndWlzaGVkIHRoZSBsYXJnZXN0IGRlbW9uc3RyYXRpb25zIGluIGRlY2FkZXMuClRoZSBhbm5vdW5jZW1lbnQsIG1hZGUgYnkgZ292ZXJubWVudCB2ZWhpY2xlcyBwYXNzaW5nIHRocm91Z2ggbmVpZ2hib3Job29kcywgbGlmdHMgdGhlIGN1cmZldyB0aGF0IGhhZCBiZWVuIGltcG9zZWQgYXQgb25lIHBvaW50IGZyb20gOSBwLm0uIHRvIDUgYS5tLiBhbmQgZW5kcyB0aGUgYmFuIG9uIGdhdGhlcmluZ3Mgb2YgbW9yZSB0aGFuIGZpdmUgcGVvcGxlIGluIFlhbmdvbi4KVGhlIHJ1bGluZyBqdW50YSBvbiBTYXR1cmRheSBhbHNvIGlzc3VlZCBhbiB1bnVzdWFsIHBsZWEgaW4gc3RhdGUgbWVkaWEgZm9yIHRoZSBjb3VudHJ5J3MgZGV0YWluZWQgb3Bwb3NpdGlvbiBsZWFkZXIsIEF1bmcgU2FuIFN1dSBLeWksIHRvIGNvbXByb21pc2UgYW5kIGhvbGQgdGFsa3Mgd2l0aCB0aGUgZ292ZXJubWVudC4KVGhlIGFwcGFyZW50IHNvZnRlbmluZyBvZiB0aGUgZ292ZXJubWVudCdzIHBvc2l0aW9uIGNvbWVzIGFmdGVyIFByZXNpZGVudCBCdXNoJ3MgYW5ub3VuY2VtZW50IEZyaWRheSB0aGF0IG5ldyBzYW5jdGlvbnMgd291bGQgYmUgaW1wb3NlZCB0byBwdW5pc2ggdGhlIG1pbGl0YXJ5LXJ1biBnb3Zlcm5tZW50IGFuZCBpdHMgYmFja2VycyBmb3IgdGhlIGRlYWRseSBjcmFja2Rvd24uClRoZSBwcm90ZXN0cyB3ZXJlIHNwYXJrZWQgaW4gQXVndXN0IHdoZW4gYXV0aG9yaXRpZXMgc2hhcnBseSByYWlzZWQgZnVlbCBwcmljZXMuCldpdGggdGhlIHN1cHBvcnQgb2YgcmVzcGVjdGVkIG1vbmtzLCB0aGV5IGdyZXcgdG8gaW5jbHVkZSB0ZW5zIG9mIHRob3VzYW5kcyBvZiBwZW9wbGUuClRoZSBtaWxpdGFyeSByZXNwb25kZWQgdG8gdGhlIGdyb3dpbmcgdGhyZWF0IGJ5IGRldGFpbmluZyB0aG91c2FuZHMgYW5kIHNob290aW5nIGludG8gdGhlIGNyb3dkcyBvZiBkZW1vbnN0cmF0b3JzLCBraWxsaW5nIGFzIG1hbnkgYXMgMTAgcGVvcGxlLgpEaXBsb21hdHMgYW5kIGFjdGl2aXN0cyBzYXkgdGhlIGRlYXRoIHRvbGwgaXMgbXVjaCBoaWdoZXIuCkF1dGhvcml0aWVzIGluIE15YW5tYXIgaGF2ZSBzaW5jZSBjbGVhcmVkIFlhbmdvbidzIHN0cmVldHMgb2Ygc29sZGllcnMgYW5kIHJlbGVhc2VkIHNvbWUgcHJvbWluZW50IGFjdGl2aXN0cywgYWx0aG91Z2ggU3V1IEt5aSByZW1haW5zIHVuZGVyIGhvdXNlIGFycmVzdC4KQW5kIG9uIFNhdHVyZGF5LCB0aGV5IGFubm91bmNlZCB0aGF0IGEgOSBwLm0uIHRvIDUgYS5tLiBjdXJmZXcgd291bGQgYmUgbGlmdGVkIGFzIHdlbGwgYXMgYSBiYW4gb24gZ2F0aGVyaW5ncyBvZiBtb3JlIHRoYW4gZml2ZSBwZW9wbGUgaW4gWWFuZ29uLgpJdCBpcyB1bmNsZWFyIGlmIHRoZSBkZWNpc2lvbiBhbHNvIGFwcGxpZXMgdG8gTWFuZGFsYXkuClRoZSBnb3Zlcm5tZW50IGFubm91bmNlZCBlYXJsaWVyIHRoaXMgbW9udGggdGhhdCB0aGUganVudGEncyBsZWFkZXIsIFNlbmlvciBHZW4uIFRoYW4gU2h3ZSwgd2FzIHdpbGxpbmcgdG8gbWVldCB3aXRoIFN1dSBLeWkgLSBidXQgb25seSBpZiBzaGUgbWVldHMgY2VydGFpbiBjb25kaXRpb25zLCBpbmNsdWRpbmcgcmVub3VuY2luZyBzdXBwb3J0IGZvciBmb3JlaWduIHNhbmN0aW9ucyB0YXJnZXRpbmcgdGhlIGp1bnRhLgpUaGUgcmVnaW1lIGFjY3VzZXMgU3V1IEt5aSwgd2hvIGhhcyBiZWVuIGRldGFpbmVkIGZvciAxMiBvZiB0aGUgbGFzdCAxOCB5ZWFycywgYW5kIGhlciBwYXJ0eSBvZiB3b3JraW5nIHdpdGggb3RoZXIgbmF0aW9ucyB0byBzYWJvdGFnZSB0aGUganVudGEncyBvd24gcGxhbnMgZm9yIGEgcGhhc2VkIHJldHVybiB0byBkZW1vY3JhY3kuClRoYW4gU2h3ZSBoYXMgb25seSBtZXQgd2l0aCBTdXUgS3lpIG9uY2UgYmVmb3JlLCBpbiAyMDAyLgpUaGUgdGFsa3MgcXVpY2tseSBicm9rZSBkb3duLgpJbiBhIGxlbmd0aHkgY29tbWVudGFyeSwgdGhlIG5ld3NwYXBlciBzYWlkIHRoZSB0aW1lIHdhcyByaWdodCBmb3IgU3V1IEt5aSB0byByZXNwb25kIHBvc2l0aXZlbHkgdG8gdGhlIG9mZmVyIG9mIHRhbGtzICJ3aXRoIGEgdmlldyB0byBzZXJ2aW5nIHRoZSBpbnRlcmVzdCBvZiBhbGwuIgoiV2UgYXJlIHRpcmVkIG9mIHdhdGNoaW5nIGEgc3RhbGVtYXRlIGZvciBhIGxvbmcgdGltZSBjb25zaWRlcmluZyB0aGF0IHdlIHNob3VsZCBub3QgZ28gb24gbGlrZSB0aGlzIGZvcmV2ZXIsIiB0aGUgY29tbWVudGFyeSBzYWlkLgpUaGVyZSBzaG91bGQgYmUgc29tZSBmb3JtcyBvZiBjb21wcm9taXNlLgpJZiBvbmUgc2lkZSBtYWtlcyBhIGNvbmNlc3Npb24sIHRoZSBvdGhlciBzaWRlIHNob3VsZCBkbyBzby4KVGhlIHNpdHVhdGlvbiB3aWxsIGdldCB3b3JzZSBpZiBib3RoIHNpZGVzIGFyZSBhcnJvZ2FudGx5IGludHJhbnNpZ2VudCByZWZ1c2luZyB0byBidWRnZSBmcm9tIHRoZWlyIHN0YW5kLgpUaGUgdmlld3MgaW4gdGhlIHN0YXRlLXJ1biBOZXcgTGlnaHQgb2YgTXlhbm1hciBjb21tZW50YXJ5IGFyZSBiZWxpZXZlZCB0byByZXByZXNlbnQgdGhvc2Ugb2YgdGhlIGp1bnRhLgpUaGUgbmV3c3BhcGVyIGRpZCBub3QgbWVudGlvbiB0aGUgc2FuY3Rpb25zLgpVLk4uIFNwZWNpYWwgRW52b3kgSWJyYWhpbSBHYW1iYXJpIGFsc28gbWV0IHdpdGggdGhlIGp1bnRhIGxlYWRlciBpbiBNeWFubWFyIGVhcmx5IHRoaXMgbW9udGgsIHVyZ2luZyB0aGUgbGVhZGVycyB0byBicmluZyBkZW1vY3JhY3kgdG8gdGhlIGNvdW50cnksIGFzIHdlbGwgYXMgdHdpY2Ugd2l0aCBTdXUgS3lpLgpCdXQgaGUgaGFzIGZhaWxlZCBzbyBmYXIgdG8gYnJpbmcgYWJvdXQgYSBkaWFsb2d1ZSBiZXR3ZWVuIHRoZSB0d28gc2lkZXMuCk15YW5tYXIncyByZXByZXNzaXZlIHJlZ2ltZSBoYXMgcmVwZWF0ZWRseSByZWJ1ZmZlZCB0aGUgd29ybGQncyBjYWxscyBmb3IgZGVtb2NyYXRpYyByZWZvcm1zLCBzYXlpbmcgaXQgd2lsbCBmb2xsb3cgaXRzIG93biBzby1jYWxsZWQgcm9hZCBtYXAgdG8gZGVtb2NyYWN5Lgo=
[]
TW9yZSB0aGFuIDEwMCBCdWRkaGlzdCBtb25rcyBtYXJjaGVkIGFuZCBjaGFudGVkIGluIG5vcnRoZXJuIE15YW5tYXIgZm9yIG5lYXJseSBhbiBob3VyIFdlZG5lc2RheSwgdGhlIGZpcnN0IHB1YmxpYyBkZW1vbnN0cmF0aW9uIHNpbmNlIHRoZSBnb3Zlcm5tZW50J3MgZGVhZGx5IGNyYWNrZG93biBsYXN0IG1vbnRoIG9uIHByby1kZW1vY3JhY3kgcHJvdGVzdGVycywgdHdvIG1vbmtzIHNhaWQuClRoZSBtb25rcyBpbiBQYWtva2t1IG1hZGUgbm8gcG9saXRpY2FsIHN0YXRlbWVudHMgYW5kIHNob3V0ZWQgbm8gc2xvZ2FucywgYnV0IHRoZWlyIG1hcmNoIGNsZWFybHkgd2FzIGluIGRlZmlhbmNlIG9mIHRoZSBnb3Zlcm5tZW50IGFuZCBpbiBzb2xpZGFyaXR5IHdpdGggdGhlIGVhcmxpZXIsIGFudGktZ292ZXJubWVudCByYWxsaWVzIGxlZCBieSBtb25rcyBpbiBtYW55IG9mIE15YW5tYXIncyBjaXRpZXMgaW4gU2VwdGVtYmVyLgpUaG9zZSBkZW1vbnN0cmF0aW9ucyB3ZXJlIGNydXNoZWQgd2hlbiB0cm9vcHMgZmlyZWQgb24gcHJvdGVzdGVycyBTZXB0LgoyNy0yOCBpbiBhIGNyYWNrZG93biB0aGF0IGxlZnQgYXQgbGVhc3QgMjAgcGVvcGxlIGRlYWQgYnkgdGhlIGdvdmVybm1lbnQncyBjb3VudCwgZHJhd2luZyBpbnRlcm5hdGlvbmFsIGNvbmRlbW5hdGlvbi4KT3Bwb3NpdGlvbiBncm91cHMgc2F5cyBhcyBtYW55IGFzIDIwMCBwZW9wbGUgbWF5IGhhdmUgYmVlbiBraWxsZWQuClBha29ra3UsIGEgY2VudGVyIGZvciBCdWRkaGlzdCBsZWFybmluZyB3aXRoIG1vcmUgdGhhbiA4MCBtb25hc3RlcmllcyBsb2NhdGVkIGFib3V0IDM5MCBtaWxlcyBub3J0aHdlc3Qgb2YgdGhlIGNvbW1lcmNpYWwgY2VudGVyIG9mIFlhbmdvbiwgd2FzIHRoZSBzaXRlIG9mIHRoZSBmaXJzdCBtYXJjaCBsYXN0IG1vbnRoIGJ5IG1vbmtzIGFzIHRoZXkgam9pbmVkIC0gYW5kIHRoZW4gc3BlYXJoZWFkZWQgLSB0aGUgYmlnZ2VzdCBhbnRpLWdvdmVybm1lbnQgcHJvdGVzdHMgaW4gbmVhcmx5IHR3byBkZWNhZGVzLgpUaGUgcHJvdGVzdHMgb3JpZ2luYWxseSBzdGFydGVkIEF1Zy4gMTksIHdoZW4gb3JkaW5hcnkgY2l0aXplbnMgdG9vayB0byB0aGUgc3RyZWV0cyB0byB2ZW50IGFuZ2VyIGFmdGVyIHRoZSBnb3Zlcm5tZW50IGhpa2VkIGZ1ZWwgcHJpY2VzIGFzIG11Y2ggYXMgNTAwIHBlcmNlbnQuClRoZSByYWxsaWVzIGdhaW5lZCBtb21lbnR1bSB3aGVuIEJ1ZGRoaXN0IG1vbmtzIGluIFBha29ra3Ugam9pbmVkIHRoZSBwcm90ZXN0cyBpbiBlYXJseSBTZXB0ZW1iZXIuClJlcG9ydHMgdGhhdCB0cm9vcHMgaGFkIGJlYXRlbiBwcm90ZXN0aW5nIG1vbmtzIGluIFBha29ra3Ugb24gU2VwdC4KNiByYWxsaWVkIG1vbmtzIGFyb3VuZCB0aGUgY291bnRyeSB0byBqb2luIHRoZSBidXJnZW9uaW5nIG1hcmNoZXMuCk9uIFdlZG5lc2RheSwgdGhlIG1vbmtzIHN0YXJ0ZWQgb3V0IGF0IFBha29ra3UncyBTaHdlZ3UgUGFnb2RhLCBtYXJjaGluZyBmb3IgbmVhcmx5IGFuIGhvdXIgYW5kIGNoYW50aW5nIEJ1ZGRoaXN0IHByYXllcnMgd2l0aG91dCBpbmNpZGVudCwgYW5kIHRoZW4gcmV0dXJuZWQgdG8gdGhlaXIgcmVzcGVjdGl2ZSBtb25hc3RlcmllcywgdHdvIG1vbmtzIHNhaWQgaW4gdGVsZXBob25lIGludGVydmlld3MsIHNwZWFraW5nIG9uIGNvbmRpdGlvbiBvZiBhbm9ueW1pdHkgZm9yIGZlYXIgb2YgcmVwcmlzYWxzLgo=
[]
VW5jbGUgS3JhY2tlciBzYXlzIGhlIGRpZG4ndCBzZXh1YWxseSBhc3NhdWx0IGEgd29tYW4gaW4gYSBOb3J0aCBDYXJvbGluYSBuaWdodGNsdWIsIGFuZCBoZSdzIG5vdCBlbnRpcmVseSBoYXBweSB0aGF0IGhlIHBsZWFkZWQgZ3VpbHR5IHRvIGEgbGVzc2VyIGNoYXJnZSBvZiBtaXNkZW1lYW5vciBhc3NhdWx0IHRvIGF2b2lkIGEgdHJpYWwuClRoZSAzMy15ZWFyLW9sZCBzaW5nZXIsIHdob3NlIHJlYWwgbmFtZSBpcyBNYXR0aGV3IFNoYWZlciwgdG9sZCBUaGUgRGV0cm9pdCBOZXdzIGFuZCBUaGUgT2FrbGFuZCBQcmVzcyBvZiBQb250aWFjIG9uIE1vbmRheSB0aGF0IGhlIHN0cnVjayBhIDI2LXllYXItb2xkIHdvbWFuIGFmdGVyIHNoZSBoaXQgaGltLgpIZSBzYWlkIGl0IHN0YXJ0ZWQgd2hlbiBoZSBidW1wZWQgaW50byBoZXIgZHVyaW5nIGEgcGFydHkgYWZ0ZXIgYSBjb25jZXJ0IGluIFJhbGVpZ2ggaW4gQXVndXN0LgpBdXRob3JpdGllcyBhbGxlZ2VkIFNoYWZlciBoYWQgcHV0IGhpcyBoYW5kIHVwIHRoZSB3b21hbidzIHNraXJ0IGF0IHRoZSBjbHViLgpTaGUgbGF0ZXIgcmVwb3J0ZWQgdGhlIGluY2lkZW50IHRvIGFuIG9mZi1kdXR5IHBvbGljZSBvZmZpY2VyLgpTaGFmZXIgcGxlYWRlZCBndWlsdHkgaW4gU2VwdGVtYmVyIHRvIGEgbWlzZGVtZWFub3IgYXNzYXVsdCBjaGFyZ2UuCkEganVkZ2Ugc2VudGVuY2VkIGhpbSB0byAxMiBtb250aHMnIHByb2JhdGlvbiwgZmluZWQgaGltICQxLDUwMCBhbmQgb3JkZXJlZCBoaW0gdG8gdW5kZXJnbyBhbiBhbGNvaG9sIGFzc2Vzc21lbnQuCiJUaGVyZSB3YXMgbm8gc2V4dWFsIGFueXRoaW5nIGludm9sdmVkLCIgU2hhZmVyIHRvbGQgdGhlIE5ld3MuCkFzc2F1bHQgaXMgYSBmYXIgY3J5IGZyb20gc2V4dWFsIGJhdHRlcnkuCllvdSBjYW4gZWl0aGVyIHdhaXQgYSB5ZWFyLCBzcGVuZCAxNTAgZ3JhbmQsIGdvIHRvIHRyaWFsLCBtYWtlIG1vcmUgb2YgYSBkZWJhY2xlIG91dCBvZiBpdCwgb3IgeW91IGNhbiBnZXQgaXQgb3ZlciB3aXRoLCIgaGUgc2FpZC4KU2hhZmVyIHNhaWQgaGUgcmVncmV0cyB0aGUgaW5jaWRlbnQsIGJ1dCBoZSdzIG5vdCBzb3JyeSBhYm91dCBoaXMgcmVhY3Rpb24gdG8gYmVpbmcgc3RydWNrLgpTaGFmZXIsIGEgTWljaGlnYW4gbmF0aXZlLCBpcyBhIGZvcm1lciBkaXNjIGpvY2tleSBmb3IgS2lkIFJvY2suCkhpcyBoaXRzIGluY2x1ZGUgYSBkdWV0IHdpdGggS2VubnkgQ2hlc25leSwgIldoZW4gdGhlIFN1biBHb2VzIERvd24uIgo=
[(VW5jbGUgS3JhY2tlciBzYXlzIGhlIGRpZG4ndCBzZXh1YWxseSBhc3NhdWx0IGEgd29tYW4gaW4gYSBOb3J0aCBDYXJvbGluYSBuaWdodGNsdWIsIGFuZCBoZSdzIG5vdCBlbnRpcmVseSBoYXBweSB0aGF0IGhlIHBsZWFkZWQgZ3VpbHR5IHRvIGEgbGVzc2VyIGNoYXJnZSBvZiBtaXNkZW1lYW5vciBhc3NhdWx0IHRvIGF2b2lkIGEgdHJpYWwuClRoZSAzMy15ZWFyLW9sZCBzaW5nZXIsIHdob3NlIHJlYWwgbmFtZSBpcyBNYXR0aGV3IFNoYWZlciwgdG9sZCBUaGUgRGV0cm9pdCBOZXdzIGFuZCBUaGUgT2FrbGFuZCBQcmVzcyBvZiBQb250aWFjIG9uIE1vbmRheSB0aGF0IGhlIHN0cnVjayBhIDI2LXllYXItb2xkIHdvbWFuIGFmdGVyIHNoZSBoaXQgaGltLgpIZSBzYWlkIGl0IHN0YXJ0ZWQgd2hlbiBoZSBidW1wZWQgaW50byBoZXIgZHVyaW5nIGEgcGFydHkgYWZ0ZXIgYSBjb25jZXJ0IGluIFJhbGVpZ2ggaW4gQXVndXN0LgpBdXRob3JpdGllcyBhbGxlZ2VkIFNoYWZlciBoYWQgcHV0IGhpcyBoYW5kIHVwIHRoZSB3b21hbidzIHNraXJ0IGF0IHRoZSBjbHViLgpTaGUgbGF0ZXIgcmVwb3J0ZWQgdGhlIGluY2lkZW50IHRvIGFuIG9mZi1kdXR5IHBvbGljZSBvZmZpY2VyLgpTaGFmZXIgcGxlYWRlZCBndWlsdHkgaW4gU2VwdGVtYmVyIHRvIGEgbWlzZGVtZWFub3IgYXNzYXVsdCBjaGFyZ2UuCkEganVkZ2Ugc2VudGVuY2VkIGhpbSB0byAxMiBtb250aHMnIHByb2JhdGlvbiwgZmluZWQgaGltICQxLDUwMCBhbmQgb3JkZXJlZCBoaW0gdG8gdW5kZXJnbyBhbiBhbGNvaG9sIGFzc2Vzc21lbnQuCiJUaGVyZSB3YXMgbm8gc2V4dWFsIGFueXRoaW5nIGludm9sdmVkLCIgU2hhZmVyIHRvbGQgdGhlIE5ld3MuCkFzc2F1bHQgaXMgYSBmYXIgY3J5IGZyb20gc2V4dWFsIGJhdHRlcnkuCllvdSBjYW4gZWl0aGVyIHdhaXQgYSB5ZWFyLCBzcGVuZCAxNTAgZ3JhbmQsIGdvIHRvIHRyaWFsLCBtYWtlIG1vcmUgb2YgYSBkZWJhY2xlIG91dCBvZiBpdCwgb3IgeW91IGNhbiBnZXQgaXQgb3ZlciB3aXRoLCIgaGUgc2FpZC4KU2hhZmVyIHNhaWQgaGUgcmVncmV0cyB0aGUgaW5jaWRlbnQsIGJ1dCBoZSdzIG5vdCBzb3JyeSBhYm91dCBoaXMgcmVhY3Rpb24gdG8gYmVpbmcgc3RydWNrLgpTaGFmZXIsIGEgTWljaGlnYW4gbmF0aXZlLCBpcyBhIGZvcm1lciBkaXNjIGpvY2tleSBmb3IgS2lkIFJvY2suCkhpcyBoaXRzIGluY2x1ZGUgYSBkdWV0IHdpdGggS2VubnkgQ2hlc25leSwgIldoZW4gdGhlIFN1biBHb2VzIERvd24uIgo=, 'GPE')]
RG9ubnkgT3Ntb25kIGhhcyBhcG9sb2dpemVkIHRvIExhcnJ5IEtpbmcgZm9yIGNyaXRpY2l6aW5nIHRoZSBDTk4gdGFsay1zaG93IGhvc3QgYWZ0ZXIgaGUgcmV2ZWFsZWQgdGhhdCBNYXJpZSBPc21vbmQncyAxNi15ZWFyLW9sZCBzb24gaGFkIGVudGVyZWQgcmVoYWIuCiJJIHdhcyB2ZXJ5IHVwc2V0IGFib3V0IGl0LCIgdGhlIDQ5LXllYXItb2xkIHNpbmdlciBzYWlkIGluIGFuIGludGVydmlldyB0aGF0IGFpcmVkIE1vbmRheSBvbiBOQkMncyAiVG9kYXkiIHNob3cuCkkgdGhvdWdodCBpdCB3YXMgdmVyeSB1bmZhaXIgZm9yIExhcnJ5IEtpbmcgdG8gdGhyb3cgdGhhdCBxdWVzdGlvbiBhdCBNYXJpZSB0aGUgd2F5IGhlIGRpZC4KRG9ubnkgT3Ntb25kIGFuZCBoaXMgc2lzdGVyLCB3aG8gc3RhcnJlZCBvbiB0ZWxldmlzaW9uJ3MgIkRvbm55IGFuZCBNYXJpZSBTaG93IiBkdXJpbmcgdGhlIDE5NzBzLCBhcHBlYXJlZCBzdHVubmVkIHdoZW4gS2luZyBhc2tlZCBhYm91dCBNaWNoYWVsIGluIGFuIGludGVydmlldyBsYXN0IHdlZWsuCk9zbW9uZCBzYWlkIGhlIGxhdGVyIGxlYXJuZWQgdGhlIHRhYmxvaWRzIHdlcmUgYWJvdXQgdG8gYnJlYWsgdGhlIHN0b3J5LgoiSSBoYXZlIHRvIGJhY2sgdXAgYW5kIGFwb2xvZ2l6ZSBwdWJsaWNseSB0byBMYXJyeSBLaW5nIGJlY2F1c2UgSSBjYW1lIG91dCBhbmQgc2FpZCBzb21lIHRoaW5ncyBhZ2FpbnN0IGhpbSwiIGhlIHNhaWQuCkluIGhpbmRzaWdodCwgTGFycnkgS2luZyBkaWQgTWFyaWUgYSBmYXZvciwiIE9zbW9uZCBzYWlkLgpTaGUgd2FzIGFibGUgdG8gbWFrZSBhIHN0YXRlbWVudCBhYm91dCB0aGUgc2l0dWF0aW9uLiAuLi4KQW5kIHNvIHNoZSdzIGdyYXRlZnVsIHRvIExhcnJ5LgpNYXJpZSBPc21vbmQsIHdobyBpcyBjb21wZXRpbmcgb24gQUJDJ3MgIkRhbmNpbmcgV2l0aCB0aGUgU3RhcnMsIiBoYXNuJ3QgZGlzY2xvc2VkIHRoZSBuYXR1cmUgb2YgTWljaGFlbCdzIHByb2JsZW0gb3Igd2hlcmUgaGUgaXMgYmVpbmcgdHJlYXRlZC4KT3Ntb25kLCA0OCwgYW5ub3VuY2VkIGVhcmxpZXIgdGhpcyB5ZWFyIHRoYXQgc2hlIGFuZCBoZXIgc2Vjb25kIGh1c2JhbmQsIEJyaWFuIEJsb3NpbCwgYXJlIGRpdm9yY2luZy4KU2hlIGhhcyBlaWdodCBjaGlsZHJlbi4K
[(RG9ubnkgT3Ntb25kIGhhcyBhcG9sb2dpemVkIHRvIExhcnJ5IEtpbmcgZm9yIGNyaXRpY2l6aW5nIHRoZSBDTk4gdGFsay1zaG93IGhvc3QgYWZ0ZXIgaGUgcmV2ZWFsZWQgdGhhdCBNYXJpZSBPc21vbmQncyAxNi15ZWFyLW9sZCBzb24gaGFkIGVudGVyZWQgcmVoYWIuCiJJIHdhcyB2ZXJ5IHVwc2V0IGFib3V0IGl0LCIgdGhlIDQ5LXllYXItb2xkIHNpbmdlciBzYWlkIGluIGFuIGludGVydmlldyB0aGF0IGFpcmVkIE1vbmRheSBvbiBOQkMncyAiVG9kYXkiIHNob3cuCkkgdGhvdWdodCBpdCB3YXMgdmVyeSB1bmZhaXIgZm9yIExhcnJ5IEtpbmcgdG8gdGhyb3cgdGhhdCBxdWVzdGlvbiBhdCBNYXJpZSB0aGUgd2F5IGhlIGRpZC4KRG9ubnkgT3Ntb25kIGFuZCBoaXMgc2lzdGVyLCB3aG8gc3RhcnJlZCBvbiB0ZWxldmlzaW9uJ3MgIkRvbm55IGFuZCBNYXJpZSBTaG93IiBkdXJpbmcgdGhlIDE5NzBzLCBhcHBlYXJlZCBzdHVubmVkIHdoZW4gS2luZyBhc2tlZCBhYm91dCBNaWNoYWVsIGluIGFuIGludGVydmlldyBsYXN0IHdlZWsuCk9zbW9uZCBzYWlkIGhlIGxhdGVyIGxlYXJuZWQgdGhlIHRhYmxvaWRzIHdlcmUgYWJvdXQgdG8gYnJlYWsgdGhlIHN0b3J5LgoiSSBoYXZlIHRvIGJhY2sgdXAgYW5kIGFwb2xvZ2l6ZSBwdWJsaWNseSB0byBMYXJyeSBLaW5nIGJlY2F1c2UgSSBjYW1lIG91dCBhbmQgc2FpZCBzb21lIHRoaW5ncyBhZ2FpbnN0IGhpbSwiIGhlIHNhaWQuCkluIGhpbmRzaWdodCwgTGFycnkgS2luZyBkaWQgTWFyaWUgYSBmYXZvciwiIE9zbW9uZCBzYWlkLgpTaGUgd2FzIGFibGUgdG8gbWFrZSBhIHN0YXRlbWVudCBhYm91dCB0aGUgc2l0dWF0aW9uLiAuLi4KQW5kIHNvIHNoZSdzIGdyYXRlZnVsIHRvIExhcnJ5LgpNYXJpZSBPc21vbmQsIHdobyBpcyBjb21wZXRpbmcgb24gQUJDJ3MgIkRhbmNpbmcgV2l0aCB0aGUgU3RhcnMsIiBoYXNuJ3QgZGlzY2xvc2VkIHRoZSBuYXR1cmUgb2YgTWljaGFlbCdzIHByb2JsZW0gb3Igd2hlcmUgaGUgaXMgYmVpbmcgdHJlYXRlZC4KT3Ntb25kLCA0OCwgYW5ub3VuY2VkIGVhcmxpZXIgdGhpcyB5ZWFyIHRoYXQgc2hlIGFuZCBoZXIgc2Vjb25kIGh1c2JhbmQsIEJyaWFuIEJsb3NpbCwgYXJlIGRpdm9yY2luZy4KU2hlIGhhcyBlaWdodCBjaGlsZHJlbi4K, 'ORG')]
SWRlbnRpdHkgdGhpZXZlcyBhbGxlZ2VkbHkgdXNlZCBkZWJpdCBjYXJkcyB0byBtYWtlIGZyYXVkdWxlbnQgZG9uYXRpb25zIHRvIHRoZSBwcmVzaWRlbnRpYWwgY2FtcGFpZ24gb2YgVS5TLiBSZXAuIFJvbiBQYXVsLgpDYW1wYWlnbiBzdGFmZmVycyBzcG90dGVkIHNldmVyYWwgaHVuZHJlZCAkNSBjaGFyZ2VzIGZyb20gc2ltaWxhciBJbnRlcm5ldCBhZGRyZXNzZXMgdGhpcyBtb250aC4KU2VjdXJpdHkgb2ZmaWNpYWxzIGZvciBTYW4gQW50b25pby1iYXNlZCBGcm9zdCBCYW5rIG5vdGljZWQgYSBzaW1pbGFyIHBhdHRlcm4gb24gY2hlY2sgY2FyZHMgZnJvbSBhbiBvdXQtb2YtY291bnRyeSBsb2NhdGlvbiBhcm91bmQgdGhlIHNhbWUgdGltZS4KRmV3ZXIgdGhhbiAxMDAgY2FyZHMgaGFkIHVuYXV0aG9yaXplZCBjaGFyZ2VzIG9uIHRoZW0sIGFuZCBmZXdlciB0aGFuIDUwMCBjYXJkcyB3ZXJlIGFmZmVjdGVkLgpGcm9zdCBCYW5rIHJlZnVuZGVkIHRoZSBtb25leSBhbmQgY2FuY2VsZWQgdGhlIGFmZmVjdGVkIGNhcmRzLgoiSXQncyB1bmZvcnR1bmF0ZSB3aGVuZXZlciBpdCBoYXBwZW5zLCBidXQgb3VyIGNhbXBhaWduIGFuZCBGcm9zdCBCYW5rIHRvb2sgcmFwaWQgYWN0aW9uLCIgc2FpZCBKZXNzZSBCZW50b24sIGEgc3Bva2VzbWFuIGZvciB0aGUgVGV4YXMgUmVwdWJsaWNhbiBjYW5kaWRhdGUncyBjYW1wYWlnbi4KVGhlIGZyYXVkdWxlbnQgZG9uYXRpb25zLCBmaXJzdCByZXBvcnRlZCBieSBDQlNuZXdzLmNvbSwgYW1vdW50ZWQgdG8gYWJvdXQgJDMsMDAwIGFuZCB3ZXJlIHJldHVybmVkLgpCYW5rIG9mZmljaWFscyBzYWlkIHRoZSBpZGVudGl0eSB0aGlldmVzIG1heSBoYXZlIHVzZWQgdGhlIFBhdWwgY2FtcGFpZ24gYXMgYSB0ZXN0IHRvIHNlZSB3aGV0aGVyIHRoZSBzdG9sZW4gZGViaXQgY2FyZCBudW1iZXJzIHdlcmUgdmFsaWQgYmVmb3JlIGF0dGVtcHRpbmcgbGFyZ2VyIHB1cmNoYXNlcy4K
[]

[]
U2NhcmxldHQgSm9oYW5zc29uIGtlZXBzIGhlciBoZWFkIG9uIHN0cmFpZ2h0CkxPUyBBTkdFTEVTLCBDYWxpZm9ybmlhIChBUCkgLS0gTGlmZSBpcyBnb29kIGZvciBTY2FybGV0dCBKb2hhbnNzb24uClRoZSBhY3RyZXNzIGFuZCBhc3BpcmluZyBzaW5nZXIganVzdCByZWNvcmRlZCBoZXIgZGVidXQgYWxidW0gYW5kIGhhcyBhIGNhbGVuZGFyIGZ1bGwgb2YgZmlsbSBwcm9qZWN0cyB0aGF0IHdpbGwga2VlcCBoZXIgYnVzeSBmb3IgbW9udGhzLgpTY2FybGV0dCBKb2hhbnNzb24gaGFzIHdvcmtlZCB3aXRoIEEtbGlzdCBwZXJmb3JtZXJzIGFuZCBkaXJlY3RvcnMuCkF0IGp1c3QgMjIsIEpvaGFuc3NvbiBoYXMgYWxyZWFkeSB0YWtlbiBkaXJlY3Rpb24gZnJvbSBSb2JlcnQgUmVkZm9yZCwgQnJpYW4gRGVQYWxtYSwgQ2hyaXN0b3BoZXIgTm9sYW4gYW5kIFdvb2R5IEFsbGVuLCB3aXRoIHdob20gc2hlJ3MgY3VycmVudGx5IHdvcmtpbmcgZm9yIHRoZSB0aGlyZCB0aW1lLgpTaGUncyBzaGFyZWQgdGhlIHNjcmVlbiB3aXRoIEpvaG4gVHJhdm9sdGEsIEJpbGwgTXVycmF5LCBTdGV2ZSBCdXNjZW1pIGFuZCBIaWxhcnkgU3dhbmsgaW4gcm9sZXMgdGhhdCBoYXZlIHNlZW4gaGVyIGFzIGFuIG91dGNhc3QsIGFjdGlvbiBzdGFyIGFuZCBsaXR0bGUgZ2lybCBsb3N0LgpJbiBoZXIgbGF0ZXN0IHByb2plY3QsICJUaGUgTmFubnkgRGlhcmllcywiIHdoaWNoIG9wZW5lZCBGcmlkYXksIEpvaGFuc3NvbiBzdGFycyBvcHBvc2l0ZSBPc2NhciBub21pbmVlcyBMYXVyYSBMaW5uZXkgYW5kIFBhdWwgR2lhbWF0dGkuClNldCBpbiBoZXIgaG9tZXRvd24gb2YgTmV3IFlvcmsgQ2l0eSwgdGhlIGZpbG0gdGVsbHMgdGhlIHN0b3J5IG9mIGEgMjEteWVhci1vbGQgY29sbGVnZSBncmFkIHdobyBsZWFybnMgd2hhdCBtb25leSBjYW4gYW5kIGNhbid0IGJ1eSB3aGVuIHNoZSB0YWtlcyBhIGpvYiBhcyBhIGxpdmUtaW4gbmFubnkgZm9yIGEgc3VwZXItd2VhbHRoeSBjb3VwbGUgYW5kIHRoZWlyIHNvbi4KU3BlYWtpbmcgYnkgcGhvbmUgZnJvbSBCYXJjZWxvbmEsIHdoZXJlIHNoZSdzIHNob290aW5nIEFsbGVuJ3MgbGF0ZXN0IGZpbG0sIEpvaGFuc3NvbiB0YWxrZWQgd2l0aCBUaGUgQXNzb2NpYXRlZCBQcmVzcyBhYm91dCBtdXNpYywgaGVyIG1vdmllIGNhcmVlciBhbmQgaG93IHNoZSBhdm9pZHMgdGhlIHBpdGZhbGxzIGFuZCBwYXBhcmF6emkgdGhhdCBwbGFndWUgaGVyIEhvbGx5d29vZCBjb250ZW1wb3Jhcmllcy4KUTogQXJlIHlvdSBXb29keSBBbGxlbidzIG5ldyBtdXNlPwpTQ0FSTEVUVCBKT0hBTlNTT046IFdlIGJvdGgga2luZCBvZiB0aGluayB0aGF0IHRlcm0gaXMgc28gYml6YXJyZS4KWW91IGtub3csIGl0J3Mgbm90IGxpa2UgSSBjb21lIGJyaW5nIGhpbSBpbnNwaXJhdGlvbiB3aGVuIGhlJ3MgZ290IHdyaXRlcidzIGJsb2NrIGF0IDMgaW4gdGhlIG1vcm5pbmcuCldlIGxpa2UgdG8gd29yayB0b2dldGhlci4KSXQncyBhbiBlYXN5IHdvcmtpbmcgcmVsYXRpb25zaGlwIGFuZCBhIHJlYWxseSBuaWNlIGZyaWVuZHNoaXAsIHNvIGl0IHdvcmtzIG91dC4KQnV0IEkgZG9uJ3Qga25vdyBpZiBpdCBnb2VzIG11Y2ggZnVydGhlciB0aGFuIHRoYXQuClE6IFdoYXQgYXR0cmFjdGVkIHlvdSB0byAiVGhlIE5hbm55IERpYXJpZXMiPwpKT0hBTlNTT046IFNoYXJpIChTcHJpbmdlciBCZXJtYW4pIGFuZCBCb2IgKFB1bGNpbmkpIHdlcmUgYXR0YWNoZWQgdG8gaXQgLi4uIGhhZCB3cml0dGVuIHRoZSBzY3JpcHQsIGFuZCBJIHdhcyBhIGJpZyBmYW4gb2YgIkFtZXJpY2FuIFNwbGVuZG9yLiIKU28gSSBtZXQgd2l0aCB0aGVtIC4uLiBhbmQgd2UganVzdCBnb3QgYWxvbmcgaW5jcmVkaWJseSB3ZWxsLgpUaGUgdGhyZWUgb2YgdXMgc3BlbnQgaG91cnMgdGFsa2luZyBhYm91dCBldmVyeXRoaW5nLCBhbmQgd2UgaGF2ZSBzb3J0IG9mIHNpbWlsYXIgdXBicmluZ2luZ3MsIGFuZCB3ZSdyZSBhbGwgZnJvbSBOZXcgWW9yay4KVGhhdCdzIHdoYXQgYXR0cmFjdGVkIG1lIHRvIHRoZSBwcm9qZWN0IHRvIGJlZ2luIHdpdGguCldhdGNoIGNvLXN0YXIgTGF1cmEgTGlubmV5IHRhbGsgYWJvdXQgdGhlIGZpbG0gCk9mIGNvdXJzZSwgKGFsc28pIGp1c3QgdGhlIG9wcG9ydHVuaXR5IHRvIHBsYXkgc29tZWJvZHkgd2hvIHdhcyBhIGdpcmwgd2hvIEkgdmVyeSBlYXNpbHkgY291bGQgaGF2ZSBiZWVuIGZyaWVuZHMgd2l0aCBvciBrbm93bi4KSSBmZWx0IGxpa2UgSSdkIG5ldmVyIHJlYWxseSBoYWQgdGhlIG9wcG9ydHVuaXR5IHRvIHBsYXkgc29tZW9uZSB0aGF0IEkgY291bGQgc28gZWFzaWx5IHJlbGF0ZSB0bywgc29tZW9uZSBteSBvd24gYWdlLgpJIGp1c3QgcmVhbGx5IGxvdmVkIHRoZSBzY3JpcHQuCkkgdGhvdWdodCBpdCB3YXMgY2xldmVyIGFuZCBmdW5ueSBhbmQgYSBuaWNlIG9wcG9ydHVuaXR5IHRvIGRvIGtpbmQgb2YgYSBicm9hZCBjb21lZHkuCkl0IGFsbCB3YXMgdmVyeSBhdHRyYWN0aXZlLgpROiBIb3cgZGlkIHlvdSBsaWtlIHdvcmtpbmcgaW4geW91ciBob21ldG93bj8KSk9IQU5TU09OOiBOZXcgWW9yayBpcyBzdWNoIGEgZ3JlYXQgY2l0eSB0byBzaG9vdCBpbi4gLi4uCkl0J3MgYmVlbiBhIGxvbmcgdGltZSBzaW5jZSBJJ3ZlIGJlZW4gYWJsZSB0byBzaG9vdCBhdCBob21lIGFuZCBpdCdzIGp1c3Qgc28gbXVjaCBmdW4uCkl0J3Mgd29uZGVyZnVsIHRvIGJlIGFibGUgdG8ganVzdCBzZWUgeW91ciBmcmllbmRzIGFmdGVyIHdvcmssIHRvIGJlIGFibGUgdG8gZ28gaG9tZSBhbmQgc2xlZXAgaW4geW91ciBvd24gYmVkLgpJdCdzIGp1c3Qgc3VjaCBhIHBsZWFzdXJlLgpROiBXaGF0IGFib3V0IHRoaXMgYWxidW0geW91J3JlIHJlbGVhc2luZz8KSXQncyBhbGwgVG9tIFdhaXRzIGNvdmVycz8KSk9IQU5TU09OOiBJJ3ZlIGFsd2F5cyBiZWVuIGEgaHVnZSBmYW4gb2YgVG9tIFdhaXRzIGFuZCBJIGhhZCB0aGlzIGtpbmQgb2YgZ29sZGVuIG9wcG9ydHVuaXR5IHRvIG1ha2UgYW4gYWxidW0gaG93ZXZlciBJIHdhbnRlZCBhbmQgaXQncyBraW5kIG9mIGEgZHJlYW0gY2hhbmNlLiAuLi4KT3JpZ2luYWxseSBJIHRob3VnaHQgdGhhdCBJIHdvdWxkIGRvIGFuIGFsYnVtIG9mIHN0YW5kYXJkcyBhbmQgSSB3YW50ZWQgdG8gaW5jbHVkZSBhIFRvbSBXYWl0cyBzb25nLgpBbmQgSSBkb24ndCBrbm93LCBJIHRob3VnaHQgbWF5YmUgZXZlcnlib2R5IGRvZXMgc3RhbmRhcmRzLCBhbmQgc28sIEkgc2VlIFRvbSBXYWl0cyBhcyBiZWluZyBraW5kIG9mIGEgY29tcG9zZXIgb2YgbW9kZXJuIHN0YW5kYXJkcyBhbmQgc28gaXQgc2VlbWVkIGFwcHJvcHJpYXRlIHRoYXQgSSBjb3VsZCBpbnRlcnByZXQgaGlzIHNvbmdzLgpPYnZpb3VzbHksIGl0J3Mgbm90IGFuIGFsYnVtIHdoZXJlIEknbSB0cnlpbmcgdG8gc291bmQgbGlrZSBoaW0uCkl0IHdvdWxkIGJlIGltcG9zc2libGUuCkhlIHdyaXRlcyBzdWNoIGJlYXV0aWZ1bCBzb25ncyBhbmQgaW5jcmVkaWJsZSBtZWxvZGllcyBhbmQgdGhleSdyZSBzbyBjaW5lbWF0aWMgYW5kIGtpbmQgb2Ygb3Blbi1lbmRlZCBzbyBJIGZlbHQgbGlrZSBpdCB3b3VsZCBiZSBzb21ldGhpbmcgdGhhdCBJIGNvdWxkIGJlIGluc3BpcmVkIGJ5LgpROiBIYXMgbXVzaWMgYWx3YXlzIGJlZW4gYW4gaW50ZXJlc3Qgb2YgeW91cnM/CkpPSEFOU1NPTjogSSBhY3R1YWxseSBzdGFydGVkIGFjdGluZyBiZWNhdXNlIEkgd2FudGVkIHRvIGJlIGluIG11c2ljYWxzIHdoZW4gSSB3YXMgYSBsaXR0bGUgZ2lybC4KVGhhdCdzIHdoZXJlIG15IGRyZWFtIGNhcmVlciB3YXMgZ29pbmcgdG8gYmUgd2hlbiBJIHdhcyA4IHllYXJzIG9sZCwgbGlrZSB0aGUgeW91bmcgQ29zZXR0ZSBpbiAiTGVzIE1pc2VyYWJsZXMuIgpUaGVuIEkgc3RhcnRlZCBtYWtpbmcgZmlsbXMgYW5kIEkgbmV2ZXIgZW5kZWQgdXAgZG9pbmcgbXVzaWNhbCB0aGVhdGVyLgpPZiBjb3Vyc2UsIGJ5IHRoZSB0aW1lIEkgdHVybmVkIDEzLCBJIGtpbmQgb2YgYnVyaWVkIHRoYXQgcGFydCBvZiBteXNlbGYuCllvdSBrbm93LCBpdCdzIGFsd2F5cyBiZWVuIHRoZXJlLgpJJ3ZlIGFsd2F5cyBsb3ZlZCB0byBzaW5nIGFuZCBJJ3ZlIGFsd2F5cyBsb3ZlZCBtdXNpYyBhbmQgbGlzdGVuZWQgdG8gbG90cyBvZiBtdXNpYyBhbmQgYWxsIGtpbmRzIG9mIG11c2ljLgpROiBVbmxpa2Ugc29tZSBvZiB5b3VyIGNvbnRlbXBvcmFyaWVzLCB5b3UncmUgbm90IGEgZmFtb3VzIHBhcnRpZXIgYW5kIGhhdmVuJ3QgYmVlbiBhcnJlc3RlZCBmb3IgZHJ1bmsgZHJpdmluZy4KSG93IGRvIHlvdSBzdGF5IG9uIHRyYWNrPwpKT0hBTlNTT046IEkgZG9uJ3QgdGhpbmsgbmVjZXNzYXJpbHkgdGhhdCB0aGVyZSdzIHRyb3VibGUgbG9vbWluZyBhcm91bmQgdGhlIGNvcm5lciBmb3IgZXZlcnlvbmUgaW52b2x2ZWQgaW4gdGhpcyBpbmR1c3RyeS4gLi4uCkkgaGF2ZSBhIHJlYWxseSB3b25kZXJmdWwgZmFtaWx5IHRoYXQncyB2ZXJ5IHN1cHBvcnRpdmUuCkx1Y2tpbHkgSSBuZXZlciByZWFsbHkgc3RydWdnbGVkIHdpdGggYW55IGtpbmQgb2YsIEkgZG9uJ3Qga25vdywgaW1hZ2UgcHJvYmxlbXMgb3IgYWRkaWN0aW9ucy4KWW91IGtub3csIEkgdGhpbmsgaXQncyBub3QganVzdCBwZW9wbGUgaW4gSG9sbHl3b29kIC4uLgpJdCdzIGtpbmQgb2YgcGFydCBvZiBqdXN0IGdyb3dpbmcgdXAgYW5kIGdyb3dpbmcgdXAgaW4gdGhlIHdvcmxkIHRoYXQgd2UgbGl2ZSBpbiB0b2RheSB3aGVyZSBldmVyeXRoaW5nIGlzIHNvIGF2YWlsYWJsZSBhbmQgc28gZmFzdC1wYWNlZC4KSXQncyBoYXJkIEkgdGhpbmsgZm9yIGEgbG90IG9mIHlvdXRocyB0byBhdm9pZCB0aGVzZSBwaXRmYWxscy4KT2J2aW91c2x5IHRoZSBhdmFpbGFiaWxpdHkgb2Ygd2hhdGV2ZXIgaXQgbWF5IGJlLCB3aGV0aGVyIGl0J3MgZHJ1Z3Mgb3IgYWxjb2hvbCBvciBwYXJ0eWluZyBvciB3aGF0ZXZlciwgaXMgZGFuZ2Vyb3VzIGZvciBwZW9wbGUgd2hvIGFyZSBwcm9uZSB0byBhZGRpY3Rpb24gb3IgdGhhdCBraW5kIG9mIGxpZmVzdHlsZS4KSSdtIGp1c3QgZm9ydHVuYXRlIGVub3VnaCB0byBuZXZlciBoYXZlIGhhZCB0aGF0IGluY2xpbmF0aW9uLgpJIGd1ZXNzIEkgYXR0cmlidXRlIHRoYXQgdG8gbXkgcGFyZW50cyBhbmQgZnJpZW5kcyBhbmQgdGhlIHdheSBJIHdhcyByYWlzZWQuCkFsbCBBYm91dCBTY2FybGV0dCBKb2hhbnNzb24K
[]

[]
S25veCB0YWtlcyBvdmVyIGF0IGFpbGluZyBCb2x0b24KQk9MVE9OLCBFbmdsYW5kIC0tIFByZW1pZXIgTGVhZ3VlIHN0cnVnZ2xlcnMgQm9sdG9uIGhhdmUgcHV0IFNjb3QgQXJjaGllIEtub3ggaW4gY2hhcmdlIG9mIGZpcnN0LXRlYW0gYWZmYWlycyBmb2xsb3dpbmcgdGhlIGRlcGFydHVyZSBvZiBtYW5hZ2VyIFNhbW15IExlZSBvbiBXZWRuZXNkYXkuCkxlZSdzIHBvc2l0aW9uIGF0IEJvbHRvbiB3YXMgdW5kZXJtaW5lZCBieSBhIHNlcmllcyBvZiBwb29yIHJlc3VsdHMuCktub3gsIDYwLCBpcyB2YXN0bHkgZXhwZXJpZW5jZWQgYW5kIHdhcyBpbiBjaGFyZ2Ugb2YgaGlzIG5hdGlvbmFsIHRlYW0ncyB5b3V0aCBzZXQgdXAgYmVmb3JlIGJlaW5nIHJlY3J1aXRlZCBieSBMZWUgaW4gQXVndXN0IGFzIGEgY29hY2hpbmcgY28tb3JkaW5hdG9yLgpIZSB3aWxsIGJlIGFzc2lzdGVkIGJ5IGZpcnN0IHRlYW0gY29hY2hlcyBKaW1teSBQaGlsbGlwcyBhbmQgUmlja3kgU2JyYWdpYSBmb3IgU2F0dXJkYXkncyBkaWZmaWN1bHQgdHJpcCB0byBsZWFndWUgbGVhZGVycyBBcnNzbmFsIG9uIFNhdHVyZGF5LgpMZWUgbGVmdCB0aGUgUmVlYm9rIFN0YWRpdW0gYnkgIm11dHVhbCBjb25zZW50IiBhZnRlciBoaXMgdGVhbSBoYWQgY29sbGVjdGVkIGp1c3QgZml2ZSBwb2ludHMgaW4gdGhlaXIgb3BlbmluZyBuaW5lIFByZW1pZXJzaGlwIGdhbWVzLgpIZSBoYWQgYWxzbyBhIHB1YmxpYyBmYWxsaW5nIG91dCB3aXRoIGNsdWIgc3RhbHdhcnQgR2FyeSBTcGVlZCB3aG8gd2FzIHJlbGlldmVkIG9mIGhpcyBjb2FjaGluZyBkdXRpZXMgYXQgdGhlIGNsdWIgLSBoYXZpbmcgYmVlbiBsZWZ0IG91dCBvZiB0aGUgc3F1YWQgdG8gZmFjZSBDaGVsc2VhLgpUaGUgTGFuY2FzaGlyZSBjbHViIHF1YWxpZmllZCBmb3IgRXVyb3BlYW4gY29tcGV0aXRpb24gaW4gdGhlIFVFRkEgQ3VwIGFmdGVyIGFuIGV4Y2VsbGVudCAyMDA2LTA3IGNhbXBhaWduIGJ1dCB0aGUgZGVwYXJ0dXJlIG9mIGxvbmctdGltZSBtYW5hZ2VyIFNhbSBBbGxhcmR5Y2UgYXQgdGhlIGJhY2sgZW5kIG9mIGxhc3Qgc2Vhc29uIHByaW9yIHRvIGhpbSB0YWtpbmcgb3ZlciBhdCBOZXdjYXN0bGUsIGhhcyBiZWVuIGFjY29tcGFuaWVkIGJ5IHBvb3IgcmVzdWx0cy4KS25veCBpcyB2aWV3ZWQgaW4gdGhlIG1lZGlhIGFzIGEgc3RvcC1nYXAgYW5kIGZvcm1lciBXaWdhbiBtYW5hZ2VyIFBhdWwgSmV3ZWxsIGhhcyBiZWVuIHdpZGVseSB0aXBwZWQgdG8gdGFrZSBvdmVyIGF0IEJvbHRvbiBpbiBwbGFjZSBvZiBMZWUuCg==
[(S25veCB0YWtlcyBvdmVyIGF0IGFpbGluZyBCb2x0b24KQk9MVE9OLCBFbmdsYW5kIC0tIFByZW1pZXIgTGVhZ3VlIHN0cnVnZ2xlcnMgQm9sdG9uIGhhdmUgcHV0IFNjb3QgQXJjaGllIEtub3ggaW4gY2hhcmdlIG9mIGZpcnN0LXRlYW0gYWZmYWlycyBmb2xsb3dpbmcgdGhlIGRlcGFydHVyZSBvZiBtYW5hZ2VyIFNhbW15IExlZSBvbiBXZWRuZXNkYXkuCkxlZSdzIHBvc2l0aW9uIGF0IEJvbHRvbiB3YXMgdW5kZXJtaW5lZCBieSBhIHNlcmllcyBvZiBwb29yIHJlc3VsdHMuCktub3gsIDYwLCBpcyB2YXN0bHkgZXhwZXJpZW5jZWQgYW5kIHdhcyBpbiBjaGFyZ2Ugb2YgaGlzIG5hdGlvbmFsIHRlYW0ncyB5b3V0aCBzZXQgdXAgYmVmb3JlIGJlaW5nIHJlY3J1aXRlZCBieSBMZWUgaW4gQXVndXN0IGFzIGEgY29hY2hpbmcgY28tb3JkaW5hdG9yLgpIZSB3aWxsIGJlIGFzc2lzdGVkIGJ5IGZpcnN0IHRlYW0gY29hY2hlcyBKaW1teSBQaGlsbGlwcyBhbmQgUmlja3kgU2JyYWdpYSBmb3IgU2F0dXJkYXkncyBkaWZmaWN1bHQgdHJpcCB0byBsZWFndWUgbGVhZGVycyBBcnNzbmFsIG9uIFNhdHVyZGF5LgpMZWUgbGVmdCB0aGUgUmVlYm9rIFN0YWRpdW0gYnkgIm11dHVhbCBjb25zZW50IiBhZnRlciBoaXMgdGVhbSBoYWQgY29sbGVjdGVkIGp1c3QgZml2ZSBwb2ludHMgaW4gdGhlaXIgb3BlbmluZyBuaW5lIFByZW1pZXJzaGlwIGdhbWVzLgpIZSBoYWQgYWxzbyBhIHB1YmxpYyBmYWxsaW5nIG91dCB3aXRoIGNsdWIgc3RhbHdhcnQgR2FyeSBTcGVlZCB3aG8gd2FzIHJlbGlldmVkIG9mIGhpcyBjb2FjaGluZyBkdXRpZXMgYXQgdGhlIGNsdWIgLSBoYXZpbmcgYmVlbiBsZWZ0IG91dCBvZiB0aGUgc3F1YWQgdG8gZmFjZSBDaGVsc2VhLgpUaGUgTGFuY2FzaGlyZSBjbHViIHF1YWxpZmllZCBmb3IgRXVyb3BlYW4gY29tcGV0aXRpb24gaW4gdGhlIFVFRkEgQ3VwIGFmdGVyIGFuIGV4Y2VsbGVudCAyMDA2LTA3IGNhbXBhaWduIGJ1dCB0aGUgZGVwYXJ0dXJlIG9mIGxvbmctdGltZSBtYW5hZ2VyIFNhbSBBbGxhcmR5Y2UgYXQgdGhlIGJhY2sgZW5kIG9mIGxhc3Qgc2Vhc29uIHByaW9yIHRvIGhpbSB0YWtpbmcgb3ZlciBhdCBOZXdjYXN0bGUsIGhhcyBiZWVuIGFjY29tcGFuaWVkIGJ5IHBvb3IgcmVzdWx0cy4KS25veCBpcyB2aWV3ZWQgaW4gdGhlIG1lZGlhIGFzIGEgc3RvcC1nYXAgYW5kIGZvcm1lciBXaWdhbiBtYW5hZ2VyIFBhdWwgSmV3ZWxsIGhhcyBiZWVuIHdpZGVseSB0aXBwZWQgdG8gdGFrZSBvdmVyIGF0IEJvbHRvbiBpbiBwbGFjZSBvZiBMZWUuCg==, 'ORG')]
Q29tbWVudGFyeTogQmh1dHRvIHVuZGV0ZXJyZWQgYnkgY293YXJkbHkgYm9tYmluZ3MKRWRpdG9yJ3Mgbm90ZTogV2FqaWQgU2hhbXN1bCBIYXNhbiBpcyBhIGZvcm1lciBQYWtpc3RhbmkgSGlnaCBDb21taXNzaW9uZXIgaW4gQnJpdGFpbi4KSGUgaXMgYSBmcmllbmQgYW5kIGFkdmlzZXIgdG8gQmVuYXppciBCaHV0dG8uCkxPTkRPTiwgRW5nbGFuZCAtLSBCb3JuIGludG8gb25lIG9mIHRoZSBtb3N0IGZhbW91cyBwb2xpdGljYWwgZmFtaWxpZXMgb24gdGhlIEFzaWFuIHN1Yi1jb250aW5lbnQsIEJlbmF6aXIgQmh1dHRvLCB0aGUgZm9ybWVyIHByaW1lIG1pbmlzdGVyIG9mIFBha2lzdGFuLCB3YXMgcmFpc2VkIHRvIHdpdGhzdGFuZCBjb25zdGFudCBwdWJsaWMgc2NydXRpbnkuCldhamlkIFNoYW1zdWwgSGFzYW4gKHJpZ2h0KSBhcmd1ZXMgdGhlIHRocmVhdCBvZiB2aW9sZW5jZSB3aWxsIG5vdCBkZXRlciBCZW5hemlyIEJodXR0bywgUGFraXN0YW4ncyBmb3JtZXIgbGVhZGVyLgpBIGJyaWdodCBzdHVkZW50LCBCaHV0dG8gaGFkIGFjYWRlbWljIGluc2lnaHQgdGhhdCBicm91Z2h0IGhlciBzdWNjZXNzIGF0IEhhcnZhcmQgVW5pdmVyc2l0eSBhbmQgdGhlIFVuaXZlcnNpdHkgb2YgT3hmb3JkLgpXaGlsZSBpbiBzY2hvb2wsIHNoZSB3YW50ZWQgdG8gYmUgYSBqb3VybmFsaXN0IG9yIGEgZm9yZWlnbiBwb2xpY3kgZXhwZXJ0LCBidXQgc2hlIHNvb24gZm91bmQgaGVyc2VsZiBwbHVuZ2VkIGludG8gcG9saXRpY3MuCkkgZ290IHRoZSBmaXJzdCBnbGltcHNlIG9mIEJodXR0byB3aGVuIHNoZSBhY2NvbXBhbmllZCBoZXIgZmF0aGVyLCBQcmVzaWRlbnQgWnVsZmlrYXIgQWxpIEJodXR0bywgdG8gdGhlIEluZGlhbiBjaXR5IG9mIFNpbWxhIGZvciBhIHN1bW1pdCB3aXRoIFByaW1lIE1pbmlzdGVyIEluZGlyYSBHYW5kaGkgdG8gbmVnb3RpYXRlIGFuIGFncmVlbWVudCBmb3IgcGVhY2UgaW4gMTk3Mi4KQXMgYSBtZW1iZXIgb2YgdGhlIG1lZGlhIHRlYW0gaW4gTXIuIEJodXR0bydzIGVudG91cmFnZSwgSSBzYXcgaW4gdGhlIHlvdW5nZXIgQmh1dHRvIHRoZSBtYWtpbmcgb2YgYW5vdGhlciBncmVhdCBmZW1hbGUgbGVhZGVyLgpJbiBoZXIgZWFybHkgMjBzLCBzaGUgY2FycmllZCBoZXJzZWxmIHdpdGggZ3JhY2UsIHN0YXRlbHkgZGlnbml0eSBhbmQgc3RyaWtpbmcgY29uZmlkZW5jZS4KVGhlIG1pbGl0YXJ5IGNvdXAgYWdhaW5zdCBoZXIgZmF0aGVyIGluIDE5NzcsIGZvbGxvd2VkIGJ5IGhpcyBqdWRpY2lhbCBtdXJkZXIgaW4gMTk3OSwgY2F0YXB1bHRlZCBoZXIgaW50byBwb2xpdGljcyB0byBjb21wbGV0ZSB0aGUgZWxkZXIgQmh1dHRvJ3MgbWlzc2lvbiBvZiBlbXBvd2VyaW5nIGhpcyBwZW9wbGUuCkFzIHRoZSBsZWFkZXIgb2YgdGhlIGNvdW50cnkncyBiaWdnZXN0IHBhcnR5IC0tIHRoZSBQYWtpc3RhbiBQZW9wbGUncyBQYXJ0eSAtLSBCaHV0dG8gaGFzIG5vdCBnaXZlbiB1cCBoZXIgZmF0aGVyJ3MgbWlzc2lvbiBvZiB0cmFuc2Zvcm1pbmcgUGFraXN0YW4gaW50byBhIG1vZGVybiBkZW1vY3JhY3kgd2l0aCBlcXVhbGl0eSBmb3IgYWxsIGl0cyBjaXRpemVucy4KQmVjYXVzZSBzaGUgaGFzIGRhcmVkIHRvIGNoYWxsZW5nZSBQYWtpc3RhbidzIHJlZ3Jlc3NpdmUgZm9yY2VzIGFuZCBhIHByby1zdGF0dXMgcXVvIGVzdGFibGlzaG1lbnQsIEJodXR0byBoYXMgYnJhdmVkIG1vcmUgdGhhbiB0d28gZGVjYWRlcyBvZiBwZXJzZWN1dGlvbiBhbmQgcHJvc2VjdXRpb24uClNoZSBoYXMgcHJvdmVuIGhlciBwb2xpdGljYWwgcHJvd2VzcyBieSBob2xkaW5nIHRoZSBQZW9wbGUncyBQYXJ0eSB0b2dldGhlciB3aGlsZSBpbiBleGlsZS4KQmh1dHRvJ3MgcG9wdWxhcml0eSBoYXMgYmVlbiBzdXN0YWluZWQgZXZlbiB0aG91Z2ggc2hlJ3MgYmVlbiBhIHRhcmdldCBvZiBkaXNpbmZvcm1hdGlvbiBhbmQgZmFjZWQgYSBob3N0IG9mIHVucHJvdmVuIGNoYXJnZXMgb2YgY29ycnVwdGlvbiAtLS0gY2hhcmdlcyB0aGF0IGV2ZW4gaGVyIG1haW4gcG9saXRpY2FsIHJpdmFsLCBHZW5lcmFsIFBlcnZleiBNdXNoYXJyYWYsIGFja25vd2xlZGdlZCBhcyBwb2xpdGljYWxseSBtb3RpdmF0ZWQuCkl0IGNhbWUgYXMgYSBydWRlIHNob2NrIHRvIEJodXR0bydzIG9wcG9uZW50cyB3aGVuIHNoZSByZWNlaXZlZCBhbiB1bnByZWNlZGVudGVkIHdlbGNvbWUgaW4gS2FyYWNoaSBsYXN0IHdlZWsgYXMgInRoZSBkYXVnaHRlciBvZiB0aGVpciBkZXN0aW55LiIKVGhlIHBlb3BsZSdzIGNhcm5pdmFsIHRoYXQgY29udmVydGVkIEthcmFjaGkgaW50byBhICJtaW5pLVBha2lzdGFuIiB3YXMgbWFycmVkIGJ5IHR3byBzdWljaWRlIGJvbWJpbmdzIGFpbWVkIGF0IGtpbGxpbmcgaGVyLgpTaGUgc3Vydml2ZWQsIGJ1dCBtb3JlIHRoYW4gMTMwIG90aGVycyB3ZXJlIGtpbGxlZCwgb3ZlciA1MDAgaW5qdXJlZC4KU28gZmFyIG5vIG9uZSBoYXMgY2xhaW1lZCByZXNwb25zaWJpbGl0eS4KTWVhbndoaWxlLCB0aGUgZ292ZXJubWVudCBoYXMgcnVzaGVkIHRvIGludHJvZHVjZSBCaHV0dG8tc3BlY2lmaWMgbGF3cyB0byBjdXJ0YWlsIGhlciBwb2xpdGljYWwgYWN0aXZpdGllcy4KV2lsbCBzaGUgYmUgZGV0ZXJyZWQgYnkgc3VjaCBjb3dhcmRseSBhY3RzIG9mIGhpZGRlbiBmYWNlcyB0byBrZWVwIGhlciBhd2F5IGZyb20gaGVyIHBlb3BsZT8KTW9zdCBjZXJ0YWlubHkgbm90IQpUaGUgYXR0YWNrcyBoYXZlIHN0cmVuZ3RoZW5lZCB0aGUgY29uZmlkZW5jZSBvZiB0aGUgbWFzc2VzIGluIGhlciBsZWFkZXJzaGlwIGFuZCBpbiBoZXIgZGVtb2NyYXRpYyBtaXNzaW9uIG9mIGVtcG93ZXJpbmcgdGhlIHBlb3BsZS4KU2hlIHdpc2hlcyB0byBlbXBvd2VyIHRoZSBwZW9wbGUgbm90IG9ubHkgdG8gYmV0dGVyIHRoZWlyIG93biBsb3QgYnV0IHRvIGdldCByaWQgb2YgZXh0cmVtaXNtLCB0ZXJyb3Jpc20gYW5kIGludG9sZXJhbmNlLCBmb3JjZXMgdGhhdCBhcmUgcHVzaGluZyBQYWtpc3RhbiB0byB0aGUgZWRnZSBvZiBmYWlsZWQgc3RhdGVob29kLgpJIGhhdmUga25vd24gQmh1dHRvIGNsb3NlbHkuClNoZSBpcyBicmF2ZSwgYm9sZCBhbmQgY291cmFnZW91cyBhbmQgc2hlIHdpbGwgbm90IGJlIGludGltaWRhdGVkLgpPbmNlLCBJIGFjY29tcGFuaWVkIEJodXR0byBhcyBzaGUgd2VudCB0byBvZmZlciBoZXIgY29uZG9sZW5jZXMgYWZ0ZXIgdGhlIGRlYXRoIG9mIGEgcGFydHkgd29ya2VyLgpXaGVuIHdlIHJlYWNoZWQgdGhlIGZhbWlseSdzIHN0cmVldCwgbG9jYXRlZCBpbiB0aGUgaGVhcnQgb2YgYXJtZWQgb3Bwb3NpdGlvbiwgZ3VuZmlyZSBjb3VsZCBiZSBoZWFyZC4KSXQgd2FzIGludGVuZGVkIHRvIHNjYXJlIEJodXR0byBvZmYsIHNvIHNoZSB3b3VsZG4ndCBnbyB0byB0aGUgZGVjZWFzZWQgd29ya2VyJ3MgaG91c2UuCldlIGFkdmlzZWQgaGVyIHRvIHJldHVybiBob21lIGFzIHRoZSBndW5maXJlIGJvb21lZCBhbGwgYXJvdW5kLgpOb3RoaW5nIGRvaW5nLgpXZSBtdXN0IGdvIG9uLCIgc2hlIHNhaWQuCklmIHdlIHR1cm4gYmFjayBub3cgdGhvc2UgdHJ5aW5nIHRvIHNjYXJlIHVzIHdpbGwgaW5ncmFpbiBwZXJtYW5lbnQgZmVhciBpbiB0aGUgbG9jYWxpdHkgZXNwZWNpYWxseSBmb3IgdGhlIGFnZ3JpZXZlZCBmYW1pbHkgb2YgdGhlIHZpY3RpbS4KV2UgbXVzdCBicmVhayB0aGUgc2llZ2Ugb2YgZmVhciBhbmQgc2VuZCB0aGUgbWVzc2FnZSB0byB0aGUgZ2FuZ3N0ZXJzIHRoYXQgbm8gYW1vdW50IG9mIGd1bmZpcmUgY2FuIGRldGVyIHVzLgpJdCBpcyBhIG1lc3NhZ2UgdGhhdCByZXNvbmF0ZXMgdG9kYXkuCg==
[]
TGF0ZSBzdHJpa2UgcHV0cyBXZXN0IEhhbSB0aHJvdWdoCkNPVkVOVFJZLCBFbmdsYW5kIC0tIEFuIGluanVyeSB0aW1lIHdpbm5lciBmcm9tIENhcmx0b24gQ29sZSBwdXQgV2VzdCBIYW0gaW50byB0aGUgbGFzdCBlaWdodCBvZiB0aGUgRW5nbGlzaCBMZWFndWUgQ3VwIHdpdGggYSAyLTEgd2luLCBlbmRpbmcgdGhlIGRyZWFtcyBvZiBjYXNoLXN0cmFwcGVkIENoYW1waW9uc2hpcCBzaWRlIENvdmVudHJ5IENpdHkuClRoZSBXZXN0IEhhbSBwbGF5ZXJzIGNlbGVicmF0ZSBDYXJsdG9uIENvbGUncyBsYXN0LWdhc3Agd2lubmVyIGFnYWluc3QgQ292ZW50cnkgQ2l0eS4KQ29sZSBoZWxkIG9mZiBkZWZlbmRlciBBcmplbiBkZSBaZWV1dyBvbiB0aGUgZWRnZSBvZiB0aGUgQ292ZW50cnkgYXJlYSwgdGhlbiBrZXB0IGhpcyBuZXJ2ZSB0byBzdHJva2UgaG9tZSBoaXMgc2Vjb25kIGdvYWwgb2YgdGhlIHNlYXNvbiB3aXRoIHZpcnR1YWxseSB0aGUgZmluYWwga2ljayBvZiB0aGUgZ2FtZS4KVGhlIG1hdGNoIHdhcyBnb2FsbGVzcyBhZnRlciB0aGUgZmlyc3QgNDUgbWludXRlcywgYnV0IGhvc3RzIENvdmVudHJ5IHdlcmUgbHVja3kgdG8gc3RpbGwgaGF2ZSAxMSBtZW4gb24gdGhlIHBpdGNoIGFmdGVyIEx1aXMgQm9hIE1vcnRlIGFwcGVhcmVkIHRvIGJlIGZvdWxlZCBieSBCZW4gVHVybmVyIHdoZW4gY2xlYXJseSB0aHJvdWdoIG9uIGdvYWwuCkNvdmVudHJ5LCB3aG8ga25vY2tlZCBvdXQgTWFuY2hlc3RlciBVbml0ZWQgaW4gdGhlIHByZXZpb3VzIHJvdW5kLCB3ZW50IGFoZWFkIHdoZW4gSmF5IFRhYmIgd2FzIGFsbG93ZWQgYSBmcmVlIGhlYWRlciBhdCB0aGUgZmFyIHBvc3QgZnJvbSBJc2FhYyBPc2JvdXJuZSdzIDY4dGggbWludXRlIGNyb3NzLgpIb3dldmVyLCBXZXN0IEhhbSB3ZXJlIGxldmVsIGp1c3QgdGhyZWUgbWludXRlcyBsYXRlciB3aGVuIE1hcmN1cyBIYWxsIGFuZCBUdXJuZXIgc3R1Y2sgb3V0IGEgYm9vdCB0byBibG9jayBCb2EgTW9ydGUncyAxNS1tZXRlciBoYWxmLXZvbGxleSBhbmQgc3VjY2VlZGVkIG9ubHkgaW4gZGVmbGVjdGluZyBpdCBwYXN0IGdvYWxrZWVwZXIgQW5keSBNYXJzaGFsbC4KQ29sZSdzIGxhdGUgd2lubmVyIGVuc3VyZWQgV2VzdCBIYW0gd2VyZSB0aGUgZmlyc3QgdGVhbSB0byByZWFjaCB0aGUgcXVhcnRlcmZpbmFscywgd2l0aCB0aGUgb3RoZXIgc2V2ZW4gbWF0Y2hlcyBiZWluZyBwbGF5ZWQgb24gV2VkbmVzZGF5Lgo=
[]
VHVya2lzaCBzb2xkaWVycyBtYXkgYmUgZnJlZWQKKENOTikgLS0gRWlnaHQgVHVya2lzaCBzb2xkaWVycyBtaXNzaW5nIHNpbmNlIGFuIGFtYnVzaCB0d28gd2Vla3MgYWdvIGJ5IHJlYmVscyBmcm9tIHRoZSBLdXJkaXN0YW4gV29ya2VycyBQYXJ0eSwgb3IgUEtLLCB3ZXJlIGV4cGVjdGVkIHRvIGJlIGZyZWVkIFN1bmRheSwgYSByZWdpb25hbCBLdXJkaXNoIGdvdmVybm1lbnQgc291cmNlIGluIElyYXEgdG9sZCBDTk4gVHVyayBvbiBTdW5kYXkuClR1cmtpc2ggUHJlc2lkZW50IEFiZHVsYWggR3VsIHNwZWFrcyB3aXRoIFUuUy4gU2VjcmV0YXJ5IG9mIFN0YXRlIENvbmRvbGVlenphIFJpY2Ugb24gU2F0dXJkYXkgaW4gSXN0YW5idWwuClRoZXJlIHdhcyBubyBpbW1lZGlhdGUgd29yZCBmcm9tIFR1cmtleSdzIGdvdmVybm1lbnQgb3IgbWlsaXRhcnkgb24gdGhlIGRldmVsb3BtZW50LgpUdXJrZXkncyBtaWxpdGFyeSBjb25maXJtZWQgb24gT2N0b2JlciAyMiB0aGF0IGVpZ2h0IHNvbGRpZXJzIHdlcmUgc3RpbGwgbWlzc2luZyBhZnRlciB0aGVpciBhbWJ1c2ggdGhlIHByZXZpb3VzIGRheSBieSBLdXJkaXNoIHJlYmVscyB0aGF0IGtpbGxlZCBhdCBsZWFzdCAxMiBzb2xkaWVycyBpbiBzb3V0aGVhc3Rlcm4gVHVya2V5LgpUdXJrZXkncyBEZWZlbnNlIE1pbmlzdGVyIFZlY2RpIEdvbnVsIGhhcyBkZW5pZWQgcmVwb3J0cyB0aGF0IGFueSBUdXJraXNoIHNvbGRpZXJzIGhhZCBiZWVuIGFiZHVjdGVkIGJ5IFBLSyByZWJlbHMuClRoZSBQS0sgaGFzIGJlZW4gbGF1bmNoaW5nIGF0dGFja3MgaW50byBzb3V0aGVhc3Rlcm4gVHVya2V5IGZyb20gbm9ydGhlcm4gSXJhcS4KSW4gcmVzcG9uc2UsIFR1cmtleSBpcyB0aHJlYXRlbmluZyB0byBsYXVuY2ggYSBmdWxsLXNjYWxlIG1pbGl0YXJ5IGF0dGFjayBhZ2FpbnN0IHRoZSBQS0ssIGFuZCBoYXMgc3RhdGlvbmVkIDEwMCwwMDAgdHJvb3BzIG5lYXIgdGhlIGJvcmRlci4KVGhlIFVuaXRlZCBTdGF0ZXMgZmVhcnMgdGhhdCBzdHJpa2VzIGJ5IGl0cyBOQVRPIGFsbHkgYWdhaW5zdCB0aGUgUEtLIGNvdWxkIGRlc3RhYmlsaXplIHRoZSBVLlMuLWJhY2tlZCBnb3Zlcm5tZW50IGluIEJhZ2hkYWQgYW5kIGplb3BhcmRpemUgc3VwcGx5IGxpbmVzIGZvciBpdHMgMTYwLDAwMC1wbHVzIHRyb29wcyBpbiBJcmFxLgpVLlMuIFNlY3JldGFyeSBvZiBTdGF0ZSBDb25kb2xlZXp6YSBSaWNlIG9uIFNhdHVyZGF5IGF0dGVtcHRlZCB0byBkaXNzdWFkZSBUdXJrZXkgZnJvbSBsYXVuY2hpbmcgYXR0YWNrcyBpbnRvIFBLSyB0ZXJyaXRvcnkgaW4gbm9ydGhlcm4gSXJhcSBkdXJpbmcgdGFsa3Mgd2l0aCBUdXJraXNoIGFuZCBJcmFxaSBsZWFkZXJzIG9uIHRoZSBzaWRlbGluZXMgb2YgYSBtZWV0aW5nIGluIElzdGFuYnVsIGF0dGVuZGVkIGJ5IElyYXEncyBuZWlnaGJvcnMgYW5kIG90aGVyIEFyYWIgY291bnRyaWVzLgpJcmFxaSBQcmltZSBNaW5pc3RlciBOdXJpIGFsLU1hbGlraSBoYXMgcGxlZGdlZCB0byB3b3JrIHdpdGggVHVya2V5IGFuZCB0aGUgS3VyZGlzaCByZWdpb25hbCBnb3Zlcm5tZW50IHRvIHJlc29sdmUgdGhlIGNvbmZsaWN0LgpPbiBTYXR1cmRheSwgdGhlIG9mZmljZSBvZiB0aGUgS3VyZGlzdGFuIERlbW9jcmF0aWMgU29sdXRpb24gUGFydHksIGEgbG9jYWwgcG9saXRpY2FsIGdyb3VwLCB3YXMgc2h1dCBkb3duIGluIHRoZSBLdXJkaXNoIHJlZ2lvbiBiZWNhdXNlIG9mIGl0cyB0aWVzIHdpdGggUEtLIHJlYmVscywgdGhlIHN0YXRlLXJ1biBhbC1JcmFxaXlhIHRlbGV2aXNpb24gbmV0d29yayByZXBvcnRlZC4KQWwtTWFsaWtpIHNhaWQgdGhlIElyYXFpIGdvdmVybm1lbnQgaGFzIHJlc29sdmVkICJ0byBjbG9zZSBhbGwgdGhlIG9mZmljZXMgYW5kIHRoZSBmcm9udCBidXNpbmVzcyBvZiB0aGUgUEtLIGFsbCBvdmVyIHRoZSBJcmFxaSB0ZXJyaXRvcmllcyIgYW5kIGFsc28gYW5ub3VuY2VkIG90aGVyIG1lYXN1cmVzIHRvIGNsYW1wIGRvd24gb24gdGhlIFBLSywgd2hpY2ggaXMgY29uc2lkZXJlZCBhIHRlcnJvcmlzdCBvcmdhbml6YXRpb24gYnkgdGhlIFVuaXRlZCBTdGF0ZXMgYW5kIEV1cm9wZS4KVGhlcmUgd2lsbCBiZSB0aWdodGVyIGNvbnRyb2xzIGF0IGJvcmRlcnMgYW5kIGFpcnBvcnRzIHRvIGNoZWNrIHRoZSBncm91cCdzIG1vdmVtZW50cywgYW5kIGdyZWF0ZXIgZWZmb3J0cyB0byBpc29sYXRlIHRoZSBQS0sgYnkgY3V0dGluZyBvZmYgYWlkIHRvIHRoZW0uClN1c3BlY3RlZCBQS0sgbWVtYmVycyBjYXB0dXJlZCBieSB0aGUgYXV0aG9yaXRpZXMgd2lsbCBiZSB0cmllZCBpbiBJcmFxaSBjb3VydHMgb24gdGVycm9yaXN0IGNoYXJnZXMsIGFsLU1hbGlraSBzYWlkLgo=
[]
Q29sb21iaWEgcmViZWxzIGluIFZlbmV6dWVsYSBmb3IgdGFsa3MKQ0FSQUNBUywgVmVuZXp1ZWxhIChBUCkgLS0gUmVwcmVzZW50YXRpdmVzIG9mIENvbG9tYmlhJ3MgbGFyZ2VzdCByZWJlbCBncm91cCBhcnJpdmVkIGluIFZlbmV6dWVsYSBmb3IgdGFsa3Mgd2l0aCBQcmVzaWRlbnQgSHVnbyBDaGF2ZXogdG93YXJkIGEgcG9zc2libGUgc3dhcCBvZiByZWJlbC1oZWxkIGhvc3RhZ2VzIGZvciBndWVycmlsbGEgcHJpc29uZXJzLCB0aGUgVmVuZXp1ZWxhbiBsZWFkZXIgc2FpZC4KUHJlc2lkZW50IEh1Z28gQ2hhdmV6IHNheXMgaGlzIGNvdW50cnkgImlzIGJlY29taW5nIGEgY2VudGVyIGZvciB0aGUgc2VhcmNoIGZvciBwZWFjZS4iCkNoYXZleiBzYWlkIGR1cmluZyBhIHNwZWVjaCBTdW5kYXkgdGhhdCByZXByZXNlbnRhdGl2ZXMgb2YgdGhlIFJldm9sdXRpb25hcnkgQXJtZWQgRm9yY2VzIG9mIENvbG9tYmlhLCBvciB0aGUgRkFSQywgaGFkIGp1c3QgYXJyaXZlZCBhbmQgdGhhdCBoZSB3b3VsZCBtZWV0IHdpdGggdGhlbSBzb29uIGFzIGhlIHRyaWVzIHRvIG5lZ290aWF0ZSB0aGUgZnJlZWRvbSBvZiBkb3plbnMgb2YgcmViZWwtaGVsZCBob3N0YWdlcywgaW5jbHVkaW5nIHRocmVlIFUuUy4gbWlsaXRhcnkgY29udHJhY3RvcnMgYW5kIEZyZW5jaC1Db2xvbWJpYW4gcG9saXRpY2lhbiBJbmdyaWQgQmV0YW5jb3VydC4KSGUgc2FpZCB0aGUgRkFSQyByZXByZXNlbnRhdGl2ZXMgd291bGQgYWxzbyBtZWV0IHdpdGggYW4gZW52b3kgb2YgRnJlbmNoIFByZXNpZGVudCBOaWNvbGFzIFNhcmtvenkuCiJWZW5lenVlbGEgaXMgYmVjb21pbmcgYSBjZW50ZXIgZm9yIHRoZSBzZWFyY2ggZm9yIHBlYWNlLCIgQ2hhdmV6IHNhaWQgZHVyaW5nIGEgcG9saXRpY2FsIHJhbGx5LgpIZSBzYWlkIGEgaGlnaC1yYW5raW5nIGxlYWRlciBvZiBDb2xvbWJpYSdzIHNlY29uZC1sYXJnZXN0IHJlYmVsIGdyb3VwLCB0aGUgTmF0aW9uYWwgTGliZXJhdGlvbiBBcm15LCBvciBFTE4sIHdhcyBhbHNvIGluIFZlbmV6dWVsYSBmb3IgdGFsa3MuCkNoYXZleiBzYWlkIGhlIHdvdWxkIG5vdCByZXZlYWwgdGhlIHdoZXJlYWJvdXRzIG9mIHRoZSBGQVJDIHJlcHJlc2VudGF0aXZlcywgd2hvIGFyZSBkZW1hbmRpbmcgdGhhdCB0aGUgQ29sb21iaWFuIGdvdmVybm1lbnQgcmVsZWFzZSBndWVycmlsbGEgcHJpc29uZXJzIGFzIHBhcnQgb2YgYW55IGRlYWwuCkluIFBhcmlzLCBGcmVuY2ggRm9yZWlnbiBNaW5pc3RyeSBzcG9rZXN3b21hbiBQYXNjYWxlIEFuZHJlYW5pIHdvdWxkIG5vdCBjb21tZW50IE1vbmRheSBvbiB0aGUgcHJlc2VuY2Ugb2YgdGhlIEZyZW5jaCBlbnZveSBvciByZWxlYXNlIHRoZSBlbnZveSdzIGlkZW50aXR5LgpBbGwgQWJvdXQgSHVnbyBDaGF2ZXog4oCiIEZBUkMg4oCiIFZlbmV6dWVsYQo=
[(Q29sb21iaWEgcmViZWxzIGluIFZlbmV6dWVsYSBmb3IgdGFsa3MKQ0FSQUNBUywgVmVuZXp1ZWxhIChBUCkgLS0gUmVwcmVzZW50YXRpdmVzIG9mIENvbG9tYmlhJ3MgbGFyZ2VzdCByZWJlbCBncm91cCBhcnJpdmVkIGluIFZlbmV6dWVsYSBmb3IgdGFsa3Mgd2l0aCBQcmVzaWRlbnQgSHVnbyBDaGF2ZXogdG93YXJkIGEgcG9zc2libGUgc3dhcCBvZiByZWJlbC1oZWxkIGhvc3RhZ2VzIGZvciBndWVycmlsbGEgcHJpc29uZXJzLCB0aGUgVmVuZXp1ZWxhbiBsZWFkZXIgc2FpZC4KUHJlc2lkZW50IEh1Z28gQ2hhdmV6IHNheXMgaGlzIGNvdW50cnkgImlzIGJlY29taW5nIGEgY2VudGVyIGZvciB0aGUgc2VhcmNoIGZvciBwZWFjZS4iCkNoYXZleiBzYWlkIGR1cmluZyBhIHNwZWVjaCBTdW5kYXkgdGhhdCByZXByZXNlbnRhdGl2ZXMgb2YgdGhlIFJldm9sdXRpb25hcnkgQXJtZWQgRm9yY2VzIG9mIENvbG9tYmlhLCBvciB0aGUgRkFSQywgaGFkIGp1c3QgYXJyaXZlZCBhbmQgdGhhdCBoZSB3b3VsZCBtZWV0IHdpdGggdGhlbSBzb29uIGFzIGhlIHRyaWVzIHRvIG5lZ290aWF0ZSB0aGUgZnJlZWRvbSBvZiBkb3plbnMgb2YgcmViZWwtaGVsZCBob3N0YWdlcywgaW5jbHVkaW5nIHRocmVlIFUuUy4gbWlsaXRhcnkgY29udHJhY3RvcnMgYW5kIEZyZW5jaC1Db2xvbWJpYW4gcG9saXRpY2lhbiBJbmdyaWQgQmV0YW5jb3VydC4KSGUgc2FpZCB0aGUgRkFSQyByZXByZXNlbnRhdGl2ZXMgd291bGQgYWxzbyBtZWV0IHdpdGggYW4gZW52b3kgb2YgRnJlbmNoIFByZXNpZGVudCBOaWNvbGFzIFNhcmtvenkuCiJWZW5lenVlbGEgaXMgYmVjb21pbmcgYSBjZW50ZXIgZm9yIHRoZSBzZWFyY2ggZm9yIHBlYWNlLCIgQ2hhdmV6IHNhaWQgZHVyaW5nIGEgcG9saXRpY2FsIHJhbGx5LgpIZSBzYWlkIGEgaGlnaC1yYW5raW5nIGxlYWRlciBvZiBDb2xvbWJpYSdzIHNlY29uZC1sYXJnZXN0IHJlYmVsIGdyb3VwLCB0aGUgTmF0aW9uYWwgTGliZXJhdGlvbiBBcm15LCBvciBFTE4sIHdhcyBhbHNvIGluIFZlbmV6dWVsYSBmb3IgdGFsa3MuCkNoYXZleiBzYWlkIGhlIHdvdWxkIG5vdCByZXZlYWwgdGhlIHdoZXJlYWJvdXRzIG9mIHRoZSBGQVJDIHJlcHJlc2VudGF0aXZlcywgd2hvIGFyZSBkZW1hbmRpbmcgdGhhdCB0aGUgQ29sb21iaWFuIGdvdmVybm1lbnQgcmVsZWFzZSBndWVycmlsbGEgcHJpc29uZXJzIGFzIHBhcnQgb2YgYW55IGRlYWwuCkluIFBhcmlzLCBGcmVuY2ggRm9yZWlnbiBNaW5pc3RyeSBzcG9rZXN3b21hbiBQYXNjYWxlIEFuZHJlYW5pIHdvdWxkIG5vdCBjb21tZW50IE1vbmRheSBvbiB0aGUgcHJlc2VuY2Ugb2YgdGhlIEZyZW5jaCBlbnZveSBvciByZWxlYXNlIHRoZSBlbnZveSdzIGlkZW50aXR5LgpBbGwgQWJvdXQgSHVnbyBDaGF2ZXog4oCiIEZBUkMg4oCiIFZlbmV6dWVsYQo=, 'PERSON')]
Q29wcyBmaW5kIHRoZW1zZWx2ZXMgaW4gYXJtcyByYWNlIHdpdGggY3JpbWluYWxzCldFU1QgUEFMTSBCRUFDSCwgRmxvcmlkYSAoQ05OKSAtLSBUaGUgd2FyIG9uIHRoZSBzdHJlZXRzIGlzIGVzY2FsYXRpbmcuCkFzIGdhbmdzIGFuZCBvdGhlciBjcmltaW5hbHMgcGFjayBtb3JlIGZpcmVwb3dlciwgcG9saWNlIGRlcGFydG1lbnRzIHNheSB0aGV5IGZpbmQgdGhlbXNlbHZlcyBpbiBhbiBhcm1zIHJhY2UuClNndC4gTGF1cmllIFBmZWlsIHByYWN0aWNlcyBzaG9vdGluZyBhIHNlbWlhdXRvbWF0aWMgd2VhcG9uIGluIFBhbG0gQmVhY2ggQ291bnR5LCBGbG9yaWRhLgpUaGUgb2ZmaWNlcnMgc2F5IHRoZXkgbmVlZCB0byBsZXZlbCB0aGUgcGxheWluZyBmaWVsZCB0byBzdXJ2aXZlLgpBbmQgc28sIG9uIGEgYnJpZ2h0IE9jdG9iZXIgZGF5IGFib3V0IGEgZG96ZW4gUGFsbSBCZWFjaCBDb3VudHkgc2hlcmlmZidzIGRlcHV0aWVzIGJyb3VnaHQgb3V0IHRoZWlyIGJpZyBndW5zIGF0IHRoZSBsb2NhbCBmaXJpbmcgcmFuZ2UuClJpZmxlcyBjcmFja2xlZC4KU2hlbGwgY2FzaW5ncyBmbGV3LgpCdWxsZXRzIHNhaWxlZCBhdCAzLDIwMCBmZWV0IHBlciBzZWNvbmQgdGhyb3VnaCBwYXBlciB0YXJnZXRzIHNldCB1cCBhIGZvb3RiYWxsIGZpZWxkJ3MgbGVuZ3RoIGF3YXkuClRoZSBzaGFycHNob290ZXJzIHdlcmVuJ3QgdHJhaW5pbmcgZm9yIGEgU1dBVCB0ZWFtLgpUaGVzZSB3ZXJlIHRoZSBkZXB1dGllcyB3aG8gcGF0cm9sIHRoZSBzdHJlZXRzIGFuZCByb2FkcyBmcm9tIHRoZSBnbGl0dGVyeSBHb2xkIENvYXN0IHRvIHRoZSBzd2FtcHMgb2YgdGhlIEV2ZXJnbGFkZXMuCldhdGNoIGNvcHMgcHJhY3RpY2UgZmlyaW5nIHRoZSBiaWcgZ3VucyAKVGhlIGZhdGFsIHNob290aW5nIGluIFNlcHRlbWJlciBvZiBhIE1pYW1pLURhZGUgcG9saWNlIG9mZmljZXIgYnkgYSBtYW4gdXNpbmcgYW4gYXNzYXVsdCB3ZWFwb24gcHV0IGFsbCBTb3V0aCBGbG9yaWRhIHBvbGljZSBkZXBhcnRtZW50cyBvbiBlZGdlLgpTZXZlcmFsIG90aGVyIG9mZmljZXJzIHdlcmUgd291bmRlZCBieSB0aGUgZ3VuZmlyZS4KIkl0J3Mgbm90IG5pY2Ugd2UgaGF2ZSB0byBhcm0gb3Vyc2VsdmVzIGxpa2UgdGhlIHNvbGRpZXJzIGluIElyYXEsIiBzYWlkIFNndC4gTGF1cmllIFBmZWlsLCB3aG8gc3VwZXJ2aXNlcyBhIHNoZXJpZmYncyByb2FkIHBhdHJvbCBpbiBQYWxtIEJlYWNoIENvdW50eSBhbmQgaXMgbm93IGNlcnRpZmllZCB0byBjYXJyeSBhIHNlbWlhdXRvbWF0aWMgQVItMTUgcmlmbGUgb24gdGhlIGpvYi4KSXQncyB0aGUgY2l2aWxpYW4gdmVyc2lvbiBvZiB0aGUgbWlsaXRhcnkncyBNLTE2IHVzZWQgYnkgVS5TLiBzb2xkaWVycyBpbiBJcmFxLgpXZSBhcmUgbGlrZSBzb2xkaWVycy4KSXQgaXMgYSB3YXIsICIgc2F5cyBTZ3QgUGZlaWwuCkFjcm9zcyB0aGUgY291bnRyeSwgYXQgbGVhc3QgNjIgcG9saWNlIG9mZmljZXJzIGhhdmUgYmVlbiBndW5uZWQgZG93biB0aGlzIHllYXIgLS0gYSByZWNvcmQgcGFjZSwgc2FpZCBSb2JlcnQgVGVzc2FybywgdGhlIGFzc29jaWF0ZSBkaXJlY3RvciBmb3IgbGF3IGVuZm9yY2VtZW50IHJlbGF0aW9ucyBmb3IgdGhlIEJyYWR5IENhbXBhaWduIHRvIFByZXZlbnQgR3VuIFZpb2xlbmNlLgpBcyBhIHJlc3VsdCwgdGhlIEJyYWR5IG9yZ2FuaXphdGlvbiBzdXBwb3J0cyBwb2xpY2Ugb2ZmaWNlcnMgYXJtaW5nIHRoZW1zZWx2ZXMgd2l0aCBoaWdoLXBvd2VyZWQgd2VhcG9ucyAidG8gcHJvdGVjdCB0aGVtc2VsdmVzIGFuZCB0aGVpciBjb21tdW5pdGllcywiIGhlIHNhaWQuCldlJ3JlIGhhdmluZyBtb3JlIHRoYW4gb25lIG9mZmljZXIgc2hvdCBhbmQga2lsbGVkIGEgd2Vlay4KSXQncyBqdXN0IG91dHJhZ2VvdXMgdGhhdCBvZmZpY2VycyBhcmUgYmVpbmcgdGFyZ2V0ZWQsIiBoZSBzYWlkLgpJdCdzIHNvbWV0aGluZyBJIHRoaW5rIGFsbCBBbWVyaWNhbnMgc2hvdWxkIGJlIG91dHJhZ2VkIGFib3V0LgpIZSBsYXlzIHRoZSBibGFtZSBzcXVhcmVseSBvbiBsYXdtYWtlcnMgd2hvIGFsbG93ZWQgdGhlIGFzc2F1bHQgd2VhcG9ucyBiYW4gdG8gZXhwaXJlIGluIDIwMDQuCkRlc2lnbmVkIHRvIGJlIGZpcmVkIGZyb20gdGhlIGhpcCwgYXNzYXVsdCByaWZsZXMgc3VjaCBhcyB0aGUgQUstNDcgY2FuIHNwcmF5IGF0IGEgcmF0ZSBvZiB1cCB0byA2MDAgcm91bmRzIGEgbWludXRlIGluIGZ1bGwgYXV0b21hdGljIG1vZGUuCkl0IGlzIHRoZSB3ZWFwb24gb2YgY2hvaWNlIGZvciBndWVyaWxsYXMgYW5kIGdhbmdzdGVycy4KQ29wcyBwcmVmZXIgdG8gc3F1ZWV6ZSBvZmYgc2luZ2xlIHNob3RzIGluIHNlbWlhdXRvbWF0aWMgbW9kZSBiZWNhdXNlIGl0IG1ha2VzIGZvciBtb3JlIGFjY3VyYXRlIHNob290aW5nLgpTb21lIHNlbWlhdXRvbWF0aWMgd2VhcG9uJ3MgY2FuIGZpcmUgd2l0aCBwaW5wb2ludCBhY2N1cmFjeSBmcm9tIGFzIGZhciBhcyAxMDAgeWFyZHMgYXdheS4KVGhlIG1hZ2F6aW5lcyB1c2VkIGJ5IGxhdyBlbmZvcmNlbWVudCB0eXBpY2FsbHkgY2FycnkgMjAgb3IgMzAgcm91bmRzLCBhZGRpbmcgdG8gdGhlIGFiaWxpdHkgdG8gYmV0dGVyIHJlc3BvbmQgdW5kZXIgZmlyZS4KVGhlcmUncyBubyBkb3VidCB0aGF0IHVyYmFuIHN0cmVldCB3YXJmYXJlLCBhaWRlZCBieSBhIHByb2xpZmVyYXRpb24gb2YgY2hlYXAgYXV0b21hdGljIHdlYXBvbnMsIGhhcyBjb21lIGV2ZW4gdG8gUGFsbSBCZWFjaCBDb3VudHksIG9uY2UgaGlnaCBzb2NpZXR5J3MgdmFjYXRpb24gbWVjY2EgYW5kIGEgcmV0aXJlbWVudCBkZXN0aW5hdGlvbiBmb3Igbm9ydGhlcm4gc25vd2JpcmRzLgpBc3NhdWx0IHdlYXBvbnMgaGF2ZSBiZWVuIHVzZWQgdG8ga2lsbCBlaWdodCBwZW9wbGUgYW5kIHdvdW5kIDI1IGhlcmUgb3ZlciB0aGUgbGFzdCB0d28geWVhcnMuCkF1dGhvcml0aWVzIGVzdGltYXRlIHRoZXJlIGFyZSBhYm91dCAxNjAgZ2FuZ3Mgd2hvIGJvYXN0IGFyb3VuZCA3MDAwIG1lbWJlcnMuClRoZXkgZG9uJ3QgaGF2ZSAuMzhzIGFueW1vcmUuClRoZXkgaGF2ZSBBSy00N3MuIC4uLlRoZXkgaGF2ZSBhdXRvbWF0aWMgd2VhcG9ucyBub3csIiBzYWlkIFNndC4gUGZlaWwuClNvIHRoZSBQYWxtIEJlYWNoIFNoZXJpZmYncyBvZmZpY2UsIGxpa2UgbWFueSBvdGhlcnMgYWNyb3NzIHRoZSBjb3VudHksIGlzIHRyYWluaW5nIGFuZCBhcm1pbmcgZXZlcnlvbmUgb24gdGhlIGZvcmNlIHdpdGggc2VtaWF1dG9tYXRpYyBhc3NhdWx0IHdlYXBvbnMuCk1hbnkgb2ZmaWNlcnMgc2F5IGl0J3MgYWJvdXQgdGltZS4KSXQncyBkaWZmZXJlbnQgbm93LgpJdCdzIHNob290aW5ncyBvbiBhIHdlZWtseSBiYXNpcy4KVGVuIHllYXJzIGFnbywgdGhhdCBqdXN0IGRpZG4ndCBoYXBwZW4sIiBzYWlkIFBmZWlsLgpUaGV5IGRvbid0IGdldCBvdXQgYW5kIHJ1biBmcm9tIHVzIGFueW1vcmUuClRoZXkgc3RvcCwgYW5kIHRoZXkncmUgc2hvb3RpbmcgYXQgdXMuCk1pYW1pJ3MgcG9saWNlIGRlcGFydG1lbnQgYWxzbyBpcyBpbiB0aGUgcHJvY2VzcyBvZiBhcm1pbmcgZXZlcnkgb2ZmaWNlciB3aXRoIGFuIGFzc2F1bHQgcmlmbGUuCiJJdCdzIGEgbGl0dGxlIGJpdCBlbWJhcnJhc3NpbmcgdGhhdCB3ZSdyZSBlbmdhZ2VkIGluIHRoaXMsIGJ1dCB3aGF0IGlzIHRoZSBhbHRlcm5hdGl2ZT8iIHNhaWQgTWlhbWkgcG9saWNlIENoaWVmIEpvaG4gVGltb25leS4KSGUgc2FpZCBnYW5ncywgaW4gcGFydGljdWxhciwgYXJlIGdldHRpbmcgdGhlaXIgaGFuZHMgb24gaGlnaC1wb3dlcmVkIHdlYXBvbnMgd2l0aCBhcHBhcmVudCBlYXNlLgpUaGUgc3RyZWV0cyBvZiBTb3V0aCBGbG9yaWRhIGFyZSBiZWluZyBmbG9vZGVkIGJ5IEFLLTQ3cyBhbmQgYXNzYXVsdCB3ZWFwb25zIGZyb20gb2xkIFNvdmlldCBibG9jIGNvdW50cmllcy4KSXQncyBkcml2ZW4gdGhlIHByaWNlIGRvd24sIG1ha2luZyB0aGUgYXZhaWxhYmlsaXR5IGdyZWF0ZXIsIiBzYWlkIENoaWVmIFRpbW9uZXkuClRoZSBNaWFtaSBwb2xpY2UgZGVwYXJ0bWVudCBldmlkZW5jZSByb29tIGhhcyBzZWl6ZWQgQUstNDdzLCBBUi0xNXMgYW5kIGFuIGFzc29ydG1lbnQgb2Ygb3RoZXIgYXV0b21hdGljIGFuZCBzZW1pYXV0b21hdGljIHdlYXBvbnMgcGlsZWQgb24gc2hlbHZlcyBmcm9tIGZsb29yIHRvIGNlaWxpbmcuCkNoaWVmIFRpbW9uZXkgc2F5cyBoZSBzdGFydGVkIG5vdGljaW5nIGFuIGluY3JlYXNlIHNpbmNlIHRoZSBmZWRlcmFsIGFzc2F1bHQgd2VhcG9uIGJhbiBsYXBzZWQgaW4gMjAwNC4KU2luY2UgdGhlbiwgaGUgc2F5cyBob21pY2lkZXMgaW4gdGhlIGNpdHkgb2YgTWlhbWkgaW52b2x2aW5nIGFzc2F1bHQgd2VhcG9ucyBoYXZlIGJlZW4gdXAgLS0gMTggcGVyY2VudCBsYXN0IHllYXIgYW5kIDIwIHBlcmNlbnQgdGhpcyB5ZWFyLgpUaGUgTWlhbWkgUG9saWNlIERlcGFydG1lbnQgc2FpZCAxNSBvZiBpdHMgNzkgaG9taWNpZGVzIGxhc3QgeWVhciBpbnZvbHZlZCBhc3NhdWx0IHdlYXBvbnMsIHVwIGZyb20gdGhlIHllYXIgYmVmb3JlLgpTbyBmYXIgdGhpcyB5ZWFyLCAxMiBvZiA2MCBraWxsaW5ncyBoYXZlIGludm9sdmVkIHRoZSBoaWdoLXBvd2VyZWQgYXJtcy4KVGVzc2FybyBzYWlkIGhlIHJlY2VudGx5IGF0dGVuZGVkIGEgY29uZmVyZW5jZSBmb3IgdGhlIEludGVybmF0aW9uYWwgQXNzb2NpYXRpb24gb2YgQ2hpZWZzIG9mIFBvbGljZS4KQW1vbmcgdGhlIGNyaW1lIHNjZW5lIHRhcGUsIHNxdWFkIGNhcnMsIGFuZCBvdGhlciBsYXcgZW5mb3JjZW1lbnQgZ2VhciBvZmZlcmVkIGZvciBzYWxlIHdhcyB0aGUgbGF0ZXN0IGluIGhpZ2gtcG93ZXJlZCBhc3NhdWx0IHdlYXBvbnMuCkJ1dCBpdCB0YWtlcyB0aW1lIGFuZCBtb25leSB0byBhcm0gZXZlcnlvbmUuCkluIHRoZSBjYXNlIG9mIFBhbG0gQmVhY2ggU2hlcmlmZidzIG9mZmljZSwgYWJvdXQgb25lLXRoaXJkIG9mIGl0cyBkZXB1dGllcyBjYXJyeSBhc3NhdWx0IHdlYXBvbnMuCkl0IGNvdWxkIHRha2UgYSB5ZWFyIHRvIGdldCBldmVyeW9uZSBlcXVpcHBlZC4KU29tZSBvZmZpY2VycyBhcmVuJ3Qgd2FpdGluZy4KUGFsbSBCZWFjaCBTaGVyaWZmJ3MgZGVwdXR5IENhcmwgTWFydGluIGJvdWdodCBoaXMgb3duIEFSLTE1IGFuZCBwYXNzZWQgdGhlIHJlcXVpcmVkIHRyYWluaW5nLgpXaGVuIGhpcyBkZXBhcnRtZW50IG9mZmVyZWQgaGltIG9uZSBvZiB0aGVpciB3ZWFwb25zLCBoZSBnYXZlIGl0IHVwIHRvIHNvbWVvbmUgZWxzZSB3aG8gd2FzIG9uIHRoZSB3YWl0aW5nIGxpc3QuCiJCZWNhdXNlIHRoZXJlJ3Mgbm90IGVub3VnaCB0byBnbyBhcm91bmQsIiBoZSBleHBsYWluZWQuCkNOTidzIFBhdHJpY2sgT3BwbWFubiwgUmljaCBQaGlsbGlwcyBhbmQgQW5uIE8nTmVpbGwgY29udHJpYnV0ZWQgdG8gdGhpcyBzdG9yeS4KQWxsIEFib3V0IENyaW1lIOKAoiBBSy00NyBBc3NhdWx0IFJpZmxlCg==
[]
NiBVLlMuIHRyb29wcyBkaWUgaW4gQWZnaGFuIGFtYnVzaAooQ05OKSAtLSBTaXggQW1lcmljYW4gZm9yY2VzIHNlcnZpbmcgdW5kZXIgTkFUTydzIEludGVybmF0aW9uYWwgU2VjdXJpdHkgQXNzaXN0YW5jZSBGb3JjZSB3ZXJlIGtpbGxlZCBpbiBhbiBpbnN1cmdlbnQgYW1idXNoIHdoaWxlIHBhdHJvbGxpbmcgaW4gZWFzdGVybiBBZmdoYW5pc3RhbiwgYSBOQVRPIHNwb2tlc21hbiB0b2xkIENOTiBvbiBTYXR1cmRheS4KRnJpZGF5J3MgZGVhdGhzIG1ha2UgdGhpcyB5ZWFyIHRoZSBkZWFkbGllc3Qgc2luY2UgdGhlIDIwMDEgaW52YXNpb24gZm9yIFUuUy4gbWlsaXRhcnkgcGVyc29ubmVsLgpJbiBhZGRpdGlvbiwgZWlnaHQgb3RoZXIgTkFUTyBzb2xkaWVycyB3ZXJlIHdvdW5kZWQuCkl0IHdhcyBub3QgaW1tZWRpYXRlbHkgY2xlYXIgd2hldGhlciB0aG9zZSB3ZXJlIEFtZXJpY2Fucy4KVGhlIFUuUy4gdHJvb3BzIHdlcmUgb24gam9pbnQtZm9vdCBwYXRyb2wgd2l0aCBBZmdoYW4gTmF0aW9uYWwgQXJteSBzb2xkaWVycyAtLSB0aHJlZSBvZiB3aG9tIHdlcmUga2lsbGVkIGFuZCAxMSB3aG8gd2VyZSB3b3VuZGVkLCBOQVRPIHNhaWQuClRoZSBjb21iaW5lZCBmb3JjZXMgY2FtZSB1bmRlciBmaXJlIGZyb20gc21hbGwgYXJtcyBhbmQgcm9ja2V0LXByb3BlbGxlZCBncmVuYWRlcyBkdXJpbmcgdGhlICJhbWJ1c2guIgpJbiByZXNwb25zZSwgTkFUTyBzYWlkIGZvcmNlcyBmaXJlZCBiYWNrIHdpdGggc21hbGwtYXJtcywgbWFjaGluZSBndW5zLCBtb3J0YXJzLCBhcnRpbGxlcnkgYW5kIGNsb3NlLWFpciBzdXBwb3J0LgpBdCBsZWFzdCBvbmUgaW5zdXJnZW50IHdhcyBraWxsZWQgaW4gdGhlIGNsYXNoZXMuClZpb2xlbmNlIGluIEFmZ2hhbmlzdGFuIHRoaXMgeWVhciBpcyB0aGUgZGVhZGxpZXN0IGZvciBVLlMuIHRyb29wcyBzaW5jZSB0aGUgMjAwMSBVLlMuLWxlZCBpbnZhc2lvbi4KU28gZmFyIHRoaXMgeWVhciAxMDAgVS5TLiBtaWxpdGFyeSBwZXJzb25uZWwgaGF2ZSBkaWVkIGR1ZSBtYWlubHkgdG8gaW5zdXJnZW5jeS1yZWxhdGVkIHZpb2xlbmNlLCBhY2NvcmRpbmcgdG8gYSBDTk4gY291bnQgYmFzZWQgb24gZmlndXJlcyBmcm9tIHRoZSBVLlMuLWxlZCBOQVRPIGFuZCBDb2FsaXRpb24uCg==
[]
SW1taWdyYW50IHZvdGVycycgZHJlYW1zIHNuYWdnZWQgYnkgcmVkIHRhcGUKTEFTIFZFR0FTLCBOZXZhZGEgKENOTikgLS0gTWFubnkgQmFyYWphcyB3YXMgZWFnZXJseSBhd2FpdGluZyBoaXMgZmlyc3QgdGFzdGUgb2YgQW1lcmljYW4gZGVtb2NyYWN5LgpJbnN0ZWFkLCBoZSBpcyBsZWFybmluZyBhIGZydXN0cmF0aW5nIGxlc3NvbiBpbiBnb3Zlcm5tZW50IGJ1cmVhdWNyYWN5LgpNYW5ueSBCYXJhamFzIHNhaWQgaGlzIGZhbWlseSBoYXMgdXJnZWQgaGltIHRvIHB1cnN1ZSBjaXRpemVuc2hpcCBpbiB0aGUgVW5pdGVkIFN0YXRlcy4KQmFyYWphcyBpcyBvbmUgZXhhbXBsZSBvZiB0aGUgZXhjaXRlbWVudCBjYXVzZWQgYnkgTmV2YWRhJ3MgZGVjaXNpb24gdG8gZ3JhYiBhbiBlYXJseSBzcG90IG9uIHRoZSBwcmVzaWRlbnRpYWwgbm9taW5hdGluZyBjYWxlbmRhciAtLSBvbmUgb2YgdGhvdXNhbmRzIG9mIGltbWlncmFudHMgaW4gdGhlIFVuaXRlZCBTdGF0ZXMgbGVnYWxseSB3aG8gaGF2ZSBydXNoZWQgdG8gZmlsZSBmb3IgbmF0dXJhbGl6YXRpb24gYW5kIHZvdGluZyByaWdodHMuClRob3NlIGhvcGVzIGFyZSBldmlkZW50IGluIGEgdHJhaWxlci10dXJuZWQtY2xhc3Nyb29tIG9uIHRoZSBjaXR5J3Mgb3V0c2tpcnRzLCB3aGVyZSBhIG5vbnByb2ZpdCBvcmdhbml6YXRpb24gY2FsbGVkIHRoZSBDaXRpemVuc2hpcCBQcm9qZWN0IHRlYWNoZXMgdGhlIG51dHMgYW5kIGJvbHRzIG9mIEFtZXJpY2FuIGhpc3RvcnkuCkNocmlzdG9waGVyIENvbHVtYnVzIHdhcyB0aGUgdG9waWMgd2hlbiBDTk4gZHJvcHBlZCBieSBmb3IgYSB2aXNpdCB0aGlzIHdlZWsuCkFjcm9zcyB0b3duIGF0IGhpcyB1bmlvbidzIGhlYWRxdWFydGVycywgYSBmcnVzdHJhdGVkIEJhcmFqYXMgc3Bva2UgZm9yIG1hbnkgd2hvIGhhdmUgYWxyZWFkeSB0YWtlbiB0aGUgY2xhc3Nlcy4KIkkgd2FzIGhvcGluZyB0aGF0IEkgY291bGQgYmUgcmVhZHkgdG8gZ28gaW4gJzA4LCIgQmFyYWphcyBzYWlkLgpCYXJhamFzIGNhbWUgdG8gdGhlIFVuaXRlZCBTdGF0ZXMgZnJvbSBNZXhpY28gbmVhcmx5IDQwIHllYXJzIGFnbyBhbmQgaGFzIHJhaXNlZCBhIGZhbWlseSBpbiBMYXMgVmVnYXMsIE5ldmFkYSwgd2hlcmUgaGUgd29ya3MgYXMgYSB3YWl0ZXIuCkZvciB5ZWFycywgaGUgc2FpZCwgZmFtaWx5IGFuZCBmcmllbmRzIGhhdmUgdXJnZWQgaGltIHRvIGFwcGx5IGZvciBjaXRpemVuc2hpcDsgdGhlIGRlY2lzaW9uIHRvIGhvbGQgYSBEZW1vY3JhdGljIHByZXNpZGVudGlhbCBjYXVjdXMgbmV4dCBKYW51YXJ5IHdhcyB0aGUgY2xpbmNoZXIuCiJUaGUgQW1lcmljYW4gZHJlYW0gYnJpbmdzIG1lIHRvIExhcyBWZWdhcywiIEJhcmFqYXMgdG9sZCB1cyB3aGVuIHdlIGZpcnN0IG1ldCBuaW5lIG1vbnRocyBhZ28uCkFuZCB0aGUgbGFzdCB0aGluZyBmb3IgbWUgdG8gZG8gaXMgYmVjb21lIGEgY2l0aXplbiBhbmQgbWFrZSBteSB2b3RlIGNvdW50LgpCdXQgd2hlbiB3ZSBjaGVja2VkIGluIHRoaXMgd2VlaywgQmFyYWphcyB0b2xkIGEgdGFsZSBvZiBmcnVzdHJhdGlvbi4KSGUgZmlsZWQgaGlzIHBhcGVyd29yayBtb3JlIHRoYW4gc2l4IG1vbnRocyBhZ28gYnV0IGhhc24ndCBoZWFyZCBhIHdvcmQgZnJvbSB0aGUgZ292ZXJubWVudC4KSGlzIHVuaW9uIHNheXMgaXQga25vd3Mgb2YgYXQgbGVhc3QgMSwwMDAgaW4gc2ltaWxhciBsaW1iby4KT3VyIHBlb3BsZSBhcmUgd2lsbGluZyB0byBwYXkgdGhlIG1vbmV5LgpMZWFybiB3aGF0ZXZlciB0aGV5IGhhdmUgdG8gbGVhcm4gYW5kIHRoZXkgYXJlIGdldHRpbmcgZGlzY291cmFnZWQgYmVjYXVzZSB3ZSBoYXZlIHRvIHdhaXQgYmVjYXVzZSB0aGUgcHJvY2VzcyBpcyBzbyBzbG93LCIgQmFyYWphcyBzYWlkIHRoaXMgd2Vlay4KQmFyYWphcyBpcyBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoZSBwcm9jZXNzLgpGZWxpcGUgTG9wZXogYXQgdGhlIGVuZCAtLSBidXQgYWxzbyBpbiBsaW1iby4KIkkgYW0gd2FpdGluZyBhbG1vc3QgdHdvIHllYXJzIC0tIGl0IGlzIGEgbG9uZyB0aW1lLCIgc2FpZCBMb3Bleiwgd2hvIGNhbWUgdG8gdGhlIFVuaXRlZCBTdGF0ZXMgZnJvbSBNZXhpY28gMTQgeWVhcnMgYWdvIGFuZCBkcml2ZXMgYSB0cnVjayBmb3IgYSBzZWFmb29kIGRpc3RyaWJ1dG9yLgpMb3BleiBzaG93ZWQgdXMgdGhlIHBhcGVyIHRyYWlsIG9mIGhpcyBmcnVzdHJhdGlvbi4KSGUgZmlyc3QgYXBwbGllZCBpbiBKYW51YXJ5IDIwMDYuCkhlIHBhc3NlZCB0aGUgY2l0aXplbnNoaXAgdGVzdCAxNiBtb250aHMgYWdvLgpUaGUgbGFzdCBzdGVwIGlzIGEgYmFja2dyb3VuZCBjaGVjayAtLSBhbmQgdGhyZWUgdGltZXMgTG9wZXogc2F5cyBoZSBoYXMgYmVlbiBjYWxsZWQgaW4gZm9yIHRoZSByZXF1aXJlZCBmaW5nZXJwcmludGluZy4KVGhlIGxhc3QgdGltZSB3YXMgZm91ciBtb250aHMgYWdvLgpTdGlsbCBubyB3b3JkIG9uIGlmIGFuZCB3aGVuIGhlIHdpbGwgYmUgYXBwcm92ZWQgdG8gdGFrZSB0aGUgb2F0aCBvZiBjaXRpemVuc2hpcC4KIldlIG5lZWQgYSBsZXR0ZXIsIiBMb3BleiBzYWlkLgpUaGF0IGlzIHdoYXQgSSBuZWVkLgpBIGxldHRlci4KVGhlIERlcGFydG1lbnQgb2YgSG9tZWxhbmQgU2VjdXJpdHkgc2F5cyB0aGUgcHJvY2VzcyBzaG91bGQgdGFrZSBzZXZlbiBtb250aHMgLS0gc3RhcnQgdG8gZmluaXNoLgpCdXQgaXQgYWNrbm93bGVkZ2VzIGEgZ3Jvd2luZyBiYWNrbG9nOyB0aGVyZSBhcmUgbmVhcmx5IDkwMCwwMDAgcGVuZGluZyBhcHBsaWNhdGlvbnMgbm93IC0tIGFsbW9zdCB0d2ljZSBhcyBtYW55IGFzIGEgeWVhciBhZ28uClRoZSBnb3Zlcm5tZW50IHNheXMgaXQgaXMgYSBzaW1wbGUgY2FzZSBvZiBpbmNyZWFzZWQgZGVtYW5kIGFuZCBsaW1pdGVkIHJlc291cmNlcy4KVGhlIHdheSBCYXJhamFzIHNlZXMgaXQsIHNvbWUgbW9uZXkgc3BlbnQgb24gYmF0dGxpbmcgaWxsZWdhbCBpbW1pZ3JhdGlvbiBjb3VsZCBiZSByZWRpcmVjdGVkIHRlbXBvcmFyaWx5IHRvIGNsZWFyIHRoZSBiYWNrbG9nIGFuZCBjbGVhciB0aGUgcGF0aCBmb3IgbGVnYWwgaW1taWdyYW50cy4KSSB0aGluayBpdCBpcyBhIGxpdHRsZSBkaXNjcmltaW5hdGlvbiwgYmVjYXVzZSB0aGV5IGZvY3VzIG9uIHRoZSBiYWQgcGFydCBvZiBpbW1pZ3JhdGlvbi4KQmFyYWphcyBzYWlkLgpXaGF0IGFib3V0IGFsbCB0aGVzZSBwZW9wbGUgd2hvIGhhdmUgYmVlbiBpbiB0aGUgY291bnRyeSBsZWdhbGx5IGFuZCBwYXlpbmcgdGhlaXIgdGF4ZXM/ClVuaW9ucyBhcmUgYSBtYWpvciBmb3JjZSBiZWhpbmQgdGhlIGNpdGl6ZW5zaGlwIGRyaXZlIGFuZCBzb21lIGxhYm9yIGxlYWRlcnMgaGVyZSB3b25kZXIgYWxvdWQgaWYgYSBSZXB1YmxpY2FuIGFkbWluaXN0cmF0aW9uIGlzIHBlcmhhcHMgZHJhZ2dpbmcgaXRzIGZlZXQgcHJvY2Vzc2luZyB0aGUgYXBwbGljYXRpb25zIG9mIHBlb3BsZSBpdCBiZWxpZXZlcyBhcmUgbGlrZWx5IHRvIGJlY29tZSBEZW1vY3JhdGljIHZvdGVycy4KVGhlIGFkbWluaXN0cmF0aW9uIHNheXMgdGhhdCBpcyBub3QgdGhlIGNhc2UsIHRoYXQgdGhlIGJhY2tsb2cgaXMgc2ltcGx5IGEgcXVlc3Rpb24gb2YgcmVzb3VyY2VzLgpCYXJhamFzLCB3aG8gaXMgYWN0aXZlIGluIEN1bGluYXJ5IFVuaW9uIG9yZ2FuaXppbmcsIGlzIHdpdGhvdXQgYSBkb3VidCBhIERlbW9jcmF0IC0tIHRob3VnaCBoZSBzYXlzIGhlIGlzIG5vdCBzdXJlIGp1c3QgeWV0IHdobyBoZSB3b3VsZCBzdXBwb3J0IGlmIGhlIGhhZCBhIGNoYW5jZSB0byB2b3RlIGluIHRoZSBKYW51YXJ5IERlbW9jcmF0aWMgY2F1Y3VzLgpOb3csIGhpcyBiZXN0IGhvcGUgaXMgYmVpbmcgcHJvY2Vzc2VkIGluIHRpbWUgZm9yIHRoZSBOb3ZlbWJlciBlbGVjdGlvbi4KQXMgZm9yIExvcGV6LCBoZSBpcyBub3QgYXMgcG9saXRpY2FsbHkgYWN0aXZlIGJ1dCBzYXlzIGl0IGlzICJ2ZXJ5IGltcG9ydGFudCB0byBtZSIgdG8gZmluYWxseSBnZXQgYSBjaGFuY2UgdG8gcGFydGljaXBhdGUsIGFuZCB0aGF0IHdoaWxlIGZydXN0cmF0ZWQgaGUgaG9wZXMgdG8gYmUgYSBjaXRpemVuIC0tIGFuZCBhIHJlZ2lzdGVyZWQgdm90ZXIgLSBieSB0aGUgTm92ZW1iZXIgZ2VuZXJhbCBlbGVjdGlvbi4KQXNrZWQgYWJvdXQgaGlzIHBvbGl0aWNhbCBwcmVmZXJlbmNlcywgaGUgc2hydWdzLCB0aGVuIGFkZHMsICJJIGxpa2UgQnVzaCwgYnV0IGhlIGlzIGFsbW9zdCBnb25lLiIKQWxsIEFib3V0IFUuUy4gUG9saXRpY3Mg4oCiIEltbWlncmF0aW9uIOKAoiBJbW1pZ3JhdGlvbiBQb2xpY3kK
[(SW1taWdyYW50IHZvdGVycycgZHJlYW1zIHNuYWdnZWQgYnkgcmVkIHRhcGUKTEFTIFZFR0FTLCBOZXZhZGEgKENOTikgLS0gTWFubnkgQmFyYWphcyB3YXMgZWFnZXJseSBhd2FpdGluZyBoaXMgZmlyc3QgdGFzdGUgb2YgQW1lcmljYW4gZGVtb2NyYWN5LgpJbnN0ZWFkLCBoZSBpcyBsZWFybmluZyBhIGZydXN0cmF0aW5nIGxlc3NvbiBpbiBnb3Zlcm5tZW50IGJ1cmVhdWNyYWN5LgpNYW5ueSBCYXJhamFzIHNhaWQgaGlzIGZhbWlseSBoYXMgdXJnZWQgaGltIHRvIHB1cnN1ZSBjaXRpemVuc2hpcCBpbiB0aGUgVW5pdGVkIFN0YXRlcy4KQmFyYWphcyBpcyBvbmUgZXhhbXBsZSBvZiB0aGUgZXhjaXRlbWVudCBjYXVzZWQgYnkgTmV2YWRhJ3MgZGVjaXNpb24gdG8gZ3JhYiBhbiBlYXJseSBzcG90IG9uIHRoZSBwcmVzaWRlbnRpYWwgbm9taW5hdGluZyBjYWxlbmRhciAtLSBvbmUgb2YgdGhvdXNhbmRzIG9mIGltbWlncmFudHMgaW4gdGhlIFVuaXRlZCBTdGF0ZXMgbGVnYWxseSB3aG8gaGF2ZSBydXNoZWQgdG8gZmlsZSBmb3IgbmF0dXJhbGl6YXRpb24gYW5kIHZvdGluZyByaWdodHMuClRob3NlIGhvcGVzIGFyZSBldmlkZW50IGluIGEgdHJhaWxlci10dXJuZWQtY2xhc3Nyb29tIG9uIHRoZSBjaXR5J3Mgb3V0c2tpcnRzLCB3aGVyZSBhIG5vbnByb2ZpdCBvcmdhbml6YXRpb24gY2FsbGVkIHRoZSBDaXRpemVuc2hpcCBQcm9qZWN0IHRlYWNoZXMgdGhlIG51dHMgYW5kIGJvbHRzIG9mIEFtZXJpY2FuIGhpc3RvcnkuCkNocmlzdG9waGVyIENvbHVtYnVzIHdhcyB0aGUgdG9waWMgd2hlbiBDTk4gZHJvcHBlZCBieSBmb3IgYSB2aXNpdCB0aGlzIHdlZWsuCkFjcm9zcyB0b3duIGF0IGhpcyB1bmlvbidzIGhlYWRxdWFydGVycywgYSBmcnVzdHJhdGVkIEJhcmFqYXMgc3Bva2UgZm9yIG1hbnkgd2hvIGhhdmUgYWxyZWFkeSB0YWtlbiB0aGUgY2xhc3Nlcy4KIkkgd2FzIGhvcGluZyB0aGF0IEkgY291bGQgYmUgcmVhZHkgdG8gZ28gaW4gJzA4LCIgQmFyYWphcyBzYWlkLgpCYXJhamFzIGNhbWUgdG8gdGhlIFVuaXRlZCBTdGF0ZXMgZnJvbSBNZXhpY28gbmVhcmx5IDQwIHllYXJzIGFnbyBhbmQgaGFzIHJhaXNlZCBhIGZhbWlseSBpbiBMYXMgVmVnYXMsIE5ldmFkYSwgd2hlcmUgaGUgd29ya3MgYXMgYSB3YWl0ZXIuCkZvciB5ZWFycywgaGUgc2FpZCwgZmFtaWx5IGFuZCBmcmllbmRzIGhhdmUgdXJnZWQgaGltIHRvIGFwcGx5IGZvciBjaXRpemVuc2hpcDsgdGhlIGRlY2lzaW9uIHRvIGhvbGQgYSBEZW1vY3JhdGljIHByZXNpZGVudGlhbCBjYXVjdXMgbmV4dCBKYW51YXJ5IHdhcyB0aGUgY2xpbmNoZXIuCiJUaGUgQW1lcmljYW4gZHJlYW0gYnJpbmdzIG1lIHRvIExhcyBWZWdhcywiIEJhcmFqYXMgdG9sZCB1cyB3aGVuIHdlIGZpcnN0IG1ldCBuaW5lIG1vbnRocyBhZ28uCkFuZCB0aGUgbGFzdCB0aGluZyBmb3IgbWUgdG8gZG8gaXMgYmVjb21lIGEgY2l0aXplbiBhbmQgbWFrZSBteSB2b3RlIGNvdW50LgpCdXQgd2hlbiB3ZSBjaGVja2VkIGluIHRoaXMgd2VlaywgQmFyYWphcyB0b2xkIGEgdGFsZSBvZiBmcnVzdHJhdGlvbi4KSGUgZmlsZWQgaGlzIHBhcGVyd29yayBtb3JlIHRoYW4gc2l4IG1vbnRocyBhZ28gYnV0IGhhc24ndCBoZWFyZCBhIHdvcmQgZnJvbSB0aGUgZ292ZXJubWVudC4KSGlzIHVuaW9uIHNheXMgaXQga25vd3Mgb2YgYXQgbGVhc3QgMSwwMDAgaW4gc2ltaWxhciBsaW1iby4KT3VyIHBlb3BsZSBhcmUgd2lsbGluZyB0byBwYXkgdGhlIG1vbmV5LgpMZWFybiB3aGF0ZXZlciB0aGV5IGhhdmUgdG8gbGVhcm4gYW5kIHRoZXkgYXJlIGdldHRpbmcgZGlzY291cmFnZWQgYmVjYXVzZSB3ZSBoYXZlIHRvIHdhaXQgYmVjYXVzZSB0aGUgcHJvY2VzcyBpcyBzbyBzbG93LCIgQmFyYWphcyBzYWlkIHRoaXMgd2Vlay4KQmFyYWphcyBpcyBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoZSBwcm9jZXNzLgpGZWxpcGUgTG9wZXogYXQgdGhlIGVuZCAtLSBidXQgYWxzbyBpbiBsaW1iby4KIkkgYW0gd2FpdGluZyBhbG1vc3QgdHdvIHllYXJzIC0tIGl0IGlzIGEgbG9uZyB0aW1lLCIgc2FpZCBMb3Bleiwgd2hvIGNhbWUgdG8gdGhlIFVuaXRlZCBTdGF0ZXMgZnJvbSBNZXhpY28gMTQgeWVhcnMgYWdvIGFuZCBkcml2ZXMgYSB0cnVjayBmb3IgYSBzZWFmb29kIGRpc3RyaWJ1dG9yLgpMb3BleiBzaG93ZWQgdXMgdGhlIHBhcGVyIHRyYWlsIG9mIGhpcyBmcnVzdHJhdGlvbi4KSGUgZmlyc3QgYXBwbGllZCBpbiBKYW51YXJ5IDIwMDYuCkhlIHBhc3NlZCB0aGUgY2l0aXplbnNoaXAgdGVzdCAxNiBtb250aHMgYWdvLgpUaGUgbGFzdCBzdGVwIGlzIGEgYmFja2dyb3VuZCBjaGVjayAtLSBhbmQgdGhyZWUgdGltZXMgTG9wZXogc2F5cyBoZSBoYXMgYmVlbiBjYWxsZWQgaW4gZm9yIHRoZSByZXF1aXJlZCBmaW5nZXJwcmludGluZy4KVGhlIGxhc3QgdGltZSB3YXMgZm91ciBtb250aHMgYWdvLgpTdGlsbCBubyB3b3JkIG9uIGlmIGFuZCB3aGVuIGhlIHdpbGwgYmUgYXBwcm92ZWQgdG8gdGFrZSB0aGUgb2F0aCBvZiBjaXRpemVuc2hpcC4KIldlIG5lZWQgYSBsZXR0ZXIsIiBMb3BleiBzYWlkLgpUaGF0IGlzIHdoYXQgSSBuZWVkLgpBIGxldHRlci4KVGhlIERlcGFydG1lbnQgb2YgSG9tZWxhbmQgU2VjdXJpdHkgc2F5cyB0aGUgcHJvY2VzcyBzaG91bGQgdGFrZSBzZXZlbiBtb250aHMgLS0gc3RhcnQgdG8gZmluaXNoLgpCdXQgaXQgYWNrbm93bGVkZ2VzIGEgZ3Jvd2luZyBiYWNrbG9nOyB0aGVyZSBhcmUgbmVhcmx5IDkwMCwwMDAgcGVuZGluZyBhcHBsaWNhdGlvbnMgbm93IC0tIGFsbW9zdCB0d2ljZSBhcyBtYW55IGFzIGEgeWVhciBhZ28uClRoZSBnb3Zlcm5tZW50IHNheXMgaXQgaXMgYSBzaW1wbGUgY2FzZSBvZiBpbmNyZWFzZWQgZGVtYW5kIGFuZCBsaW1pdGVkIHJlc291cmNlcy4KVGhlIHdheSBCYXJhamFzIHNlZXMgaXQsIHNvbWUgbW9uZXkgc3BlbnQgb24gYmF0dGxpbmcgaWxsZWdhbCBpbW1pZ3JhdGlvbiBjb3VsZCBiZSByZWRpcmVjdGVkIHRlbXBvcmFyaWx5IHRvIGNsZWFyIHRoZSBiYWNrbG9nIGFuZCBjbGVhciB0aGUgcGF0aCBmb3IgbGVnYWwgaW1taWdyYW50cy4KSSB0aGluayBpdCBpcyBhIGxpdHRsZSBkaXNjcmltaW5hdGlvbiwgYmVjYXVzZSB0aGV5IGZvY3VzIG9uIHRoZSBiYWQgcGFydCBvZiBpbW1pZ3JhdGlvbi4KQmFyYWphcyBzYWlkLgpXaGF0IGFib3V0IGFsbCB0aGVzZSBwZW9wbGUgd2hvIGhhdmUgYmVlbiBpbiB0aGUgY291bnRyeSBsZWdhbGx5IGFuZCBwYXlpbmcgdGhlaXIgdGF4ZXM/ClVuaW9ucyBhcmUgYSBtYWpvciBmb3JjZSBiZWhpbmQgdGhlIGNpdGl6ZW5zaGlwIGRyaXZlIGFuZCBzb21lIGxhYm9yIGxlYWRlcnMgaGVyZSB3b25kZXIgYWxvdWQgaWYgYSBSZXB1YmxpY2FuIGFkbWluaXN0cmF0aW9uIGlzIHBlcmhhcHMgZHJhZ2dpbmcgaXRzIGZlZXQgcHJvY2Vzc2luZyB0aGUgYXBwbGljYXRpb25zIG9mIHBlb3BsZSBpdCBiZWxpZXZlcyBhcmUgbGlrZWx5IHRvIGJlY29tZSBEZW1vY3JhdGljIHZvdGVycy4KVGhlIGFkbWluaXN0cmF0aW9uIHNheXMgdGhhdCBpcyBub3QgdGhlIGNhc2UsIHRoYXQgdGhlIGJhY2tsb2cgaXMgc2ltcGx5IGEgcXVlc3Rpb24gb2YgcmVzb3VyY2VzLgpCYXJhamFzLCB3aG8gaXMgYWN0aXZlIGluIEN1bGluYXJ5IFVuaW9uIG9yZ2FuaXppbmcsIGlzIHdpdGhvdXQgYSBkb3VidCBhIERlbW9jcmF0IC0tIHRob3VnaCBoZSBzYXlzIGhlIGlzIG5vdCBzdXJlIGp1c3QgeWV0IHdobyBoZSB3b3VsZCBzdXBwb3J0IGlmIGhlIGhhZCBhIGNoYW5jZSB0byB2b3RlIGluIHRoZSBKYW51YXJ5IERlbW9jcmF0aWMgY2F1Y3VzLgpOb3csIGhpcyBiZXN0IGhvcGUgaXMgYmVpbmcgcHJvY2Vzc2VkIGluIHRpbWUgZm9yIHRoZSBOb3ZlbWJlciBlbGVjdGlvbi4KQXMgZm9yIExvcGV6LCBoZSBpcyBub3QgYXMgcG9saXRpY2FsbHkgYWN0aXZlIGJ1dCBzYXlzIGl0IGlzICJ2ZXJ5IGltcG9ydGFudCB0byBtZSIgdG8gZmluYWxseSBnZXQgYSBjaGFuY2UgdG8gcGFydGljaXBhdGUsIGFuZCB0aGF0IHdoaWxlIGZydXN0cmF0ZWQgaGUgaG9wZXMgdG8gYmUgYSBjaXRpemVuIC0tIGFuZCBhIHJlZ2lzdGVyZWQgdm90ZXIgLSBieSB0aGUgTm92ZW1iZXIgZ2VuZXJhbCBlbGVjdGlvbi4KQXNrZWQgYWJvdXQgaGlzIHBvbGl0aWNhbCBwcmVmZXJlbmNlcywgaGUgc2hydWdzLCB0aGVuIGFkZHMsICJJIGxpa2UgQnVzaCwgYnV0IGhlIGlzIGFsbW9zdCBnb25lLiIKQWxsIEFib3V0IFUuUy4gUG9saXRpY3Mg4oCiIEltbWlncmF0aW9uIOKAoiBJbW1pZ3JhdGlvbiBQb2xpY3kK, 'ORG')]
Rm9vZCBvbiB0aGUgSW50ZXJuZXQ6IFRhc3RlcyBMaWtlIENoaWNrZW4K
[(Rm9vZCBvbiB0aGUgSW50ZXJuZXQ6IFRhc3RlcyBMaWtlIENoaWNrZW4K, 'ORG')]
RnJvemVuIEh1bWFuIEVnZ3MgRmFjZSBUaHJlYXQ/Cg==
[]
TGViYW5vbiBGaXJlcyBvbiBJc3JhZWxpIFdhcnBsYW5lcwo=
[]
QW50aS1HYXkgQ2h1cmNoIE11c3QgUGF5ICQxMSBNaWxsaW9uCg==
[]
QWgsIHRvIEJlIFN3ZWV0IFNldmVudGVlbgpUaGUgdGVlbiBtYWdhemluZSBzdGF5cyBsb3lhbCB0byB0aGUgZ29vZCBnaXJscy4KU29ycnksIExpbmRzYXkuCkJ5IEJ5IEpvaG5uaWUgTC4gUm9iZXJ0cyBhbmQgQWlzaGEgRWFkeQpBdWcuIDIwLTI3LCAyMDA3IGlzc3VlIC0gWW91J3JlIGEgMTcteWVhci1vbGQtZ2lybCwgd2l0aGluIHdlZWtzIG9mIGVudGVyaW5nIHlvdXIgc2VuaW9yIHllYXIgYXQgSG9tZXRvd24gSGlnaC4KSG90IEhhaXIuCkNoZWNrLgpTZXh5IFNob2VzLgpBbmQgeW91J3JlIGFybWVkIHdpdGggdGhlIG9uZSAiRmxpcnRpbmcgTW92ZSIgdGhhdCAiR3V5cyBDYW4ndCBSZXNpc3QhIgpBbGwgdGhhbmtzIHRvIFNldmVudGVlbiBtYWdhemluZSdzIGFsbC1pbXBvcnRhbnQgYmFjay10by1zY2hvb2wgaXNzdWUuClNpbmNlIDE5NDQsIFNldmVudGVlbiBoYXMgaGVscGVkIGFuZ3N0LXJpZGRlbiBnb29kIGdpcmxzIGZlbmQgb2ZmIGZhc2hpb24gZmF1eCBwYXMsIGJyb2tlbiBoZWFydHMgYW5kIGFjbmUgYnJlYWtvdXRzLCBhbmQgY2F0Y2ggdXAgb24gZnJlc2gtZmFjZWQgY2VsZWJyaXRpZXMuClNvIGluIGFuIGVyYSB3aGVuIGJlaW5nIGJhZCBpcyB0aGUgdGVlbi1naXJsIHJhZ2UsIHdoYXQgaXMgU2V2ZW50ZWVuIGRvaW5nPwpJdCdzIGxldHRpbmcgVXMgV2Vla2x5IGFuZCBQZW9wbGUgb2JzZXNzIG92ZXIgTGluZHNheSdzIHJlbGFwc2VzIGFuZCBCcml0bmV5J3MgYnJlYWtkb3ducy4KU2V2ZW50ZWVuJ3MgYmFjay10by1zY2hvb2wgY292ZXIgZ2lybCBpcyBzaW5nZXIgQXNobGVlIFNpbXBzb24sIHdobyBpcyAiQ3JhenkgaW4gTG92ZSIgYW5kIGhhcyBubyByYXAgc2hlZXQuCiJTaGUncyBnb3JnZW91cywiIHN3b29ucyBBbm4gU2hva2V0LCBTZXZlbnRlZW4gbWFnYXppbmUncyBuZXcgZWRpdG9yLgpTaG9rZXQgcGlja2VkIEFzaGxlZSwgdGhlIHlvdW5nZXIgc2lzdGVyIG9mIERhaXN5IER1a2VzLXdlYXJpbmcgSmVzc2ljYSwgYmVjYXVzZSBzaGUgaXMgImxpdmluZyBsaWZlIHRvIHRoZSBiZXN0IG9mIGhlciBwb3RlbnRpYWwiIC0gdW5saWtlIHRoZSBiYWQgZ2lybHMgd2hvIGdldCBhbGwgdGhlIGluay4KIkdpcmxzIGFyZSB2ZXJ5IHNtYXJ0LCIgc2F5cyB0aGUgMzUteWVhci1vbGQgU2hva2V0LgpJZiB0aGV5IGFyZSBnaXZpbmcgYXR0ZW50aW9uIGFuZCByZXNwZWN0IHRvIGEgY2VsZWJyaXR5IHdobydzIG5vdCByZXBheWluZyB0aGVtIHdpdGggdGhlIHNhbWUgcmVzcGVjdCwgaXQncyBub3QgZmFpci4KSW4gdGhlIGJhY2stdG8tc2Nob29sIGlzc3VlLCBMb2hhbiBpcyBtZW50aW9uZWQgb25seSBvbmNlLCB3aGVuIFNob2tldCBhZHZpc2VzIGhlciB0byAic2xlZXAgbW9yZSwgcGFydHkgbGVzcywiIGFuZCBub3RlcywgIkV2ZXJ5Ym9keSBuZWVkcyBzb21lIGRvd250aW1lLCBMaW5kcy4iCkl0J3MgYWxsIHBhcnQgb2YgdGhlIFNldmVudGVlbiB3YXkgb2Ygc2VlaW5nIHRoZSBnbGFzcyBhcyBoYWxmIGZ1bGwgKGFuZCBub3Qgd2l0aCBhIGNvc21vcG9saXRhbiBjb25zdW1lZCBvbiBhIHBhbnR5bGVzcyBkcml2ZSBkb3duIFN1bnNldCBCb3VsZXZhcmQpLgoiU2V2ZW50ZWVuIGRpZmZlcnMgZnJvbSBjZWxlYnJpdHkgZ29zc2lwIG1hZ2F6aW5lcyBiZWNhdXNlIHRoZSB3aG9sZSBtYWdhemluZSBpc24ndCBiYXNlZCBvbiBwb2ludGluZyBvdXQgdGhlIGZhdWx0cyBpbiBjZWxlYnMsIiBzYXlzIENhdGh5IExlZSwgMTQsIG9mIEhvbm9sdWx1LgpTaW5jZSB0aGUgQXByaWwgaXNzdWUsIHdoaWNoIGZlYXR1cmVkIGEgInN1bm55IC4uLiBwaW5rLWNoZWVrZWQiIEF2cmlsIExhdmlnbmUsIHRoZSBIZWFyc3QgQ29ycC4gbWFnYXppbmUgaGFzIHNlZW4gbW9udGhseSBuZXdzc3RhbmQgc2FsZXMgY2xpbWIgYW4gYWRkaXRpb25hbCAxOCwwMDAgY29waWVzIHRocm91Z2ggSnVuZS4KTW9udGhseSBuZXdzc3RhbmQgc2FsZXMgZm9yIHRoaXMgeWVhcidzIGZpcnN0IGhhbGYgYXZlcmFnZWQgMzU2LDAwMCBjb3BpZXMsIHVwIGFsbW9zdCA5IHBlcmNlbnQgZnJvbSBhIHllYXIgYWdvLgpJdCBoYXMgMiBtaWxsaW9uIHN1YnNjcmliZXJzIGFuZCAxMyBtaWxsaW9uIHJlYWRlcnMgYSBtb250aCwgc2F5cyBIZWFyc3QuCkEgcmVsYXVuY2ggb2YgU2V2ZW50ZWVuLmNvbSBpbiBBcHJpbCBoYXMgYmVlbiBkcmF3aW5nIDEuMyBtaWxsaW9uIHVuaXF1ZSB2aXNpdG9ycyBhIG1vbnRoLCB1cCAyNSBwZXJjZW50IHRocm91Z2ggSnVuZS4K
[(QWgsIHRvIEJlIFN3ZWV0IFNldmVudGVlbgpUaGUgdGVlbiBtYWdhemluZSBzdGF5cyBsb3lhbCB0byB0aGUgZ29vZCBnaXJscy4KU29ycnksIExpbmRzYXkuCkJ5IEJ5IEpvaG5uaWUgTC4gUm9iZXJ0cyBhbmQgQWlzaGEgRWFkeQpBdWcuIDIwLTI3LCAyMDA3IGlzc3VlIC0gWW91J3JlIGEgMTcteWVhci1vbGQtZ2lybCwgd2l0aGluIHdlZWtzIG9mIGVudGVyaW5nIHlvdXIgc2VuaW9yIHllYXIgYXQgSG9tZXRvd24gSGlnaC4KSG90IEhhaXIuCkNoZWNrLgpTZXh5IFNob2VzLgpBbmQgeW91J3JlIGFybWVkIHdpdGggdGhlIG9uZSAiRmxpcnRpbmcgTW92ZSIgdGhhdCAiR3V5cyBDYW4ndCBSZXNpc3QhIgpBbGwgdGhhbmtzIHRvIFNldmVudGVlbiBtYWdhemluZSdzIGFsbC1pbXBvcnRhbnQgYmFjay10by1zY2hvb2wgaXNzdWUuClNpbmNlIDE5NDQsIFNldmVudGVlbiBoYXMgaGVscGVkIGFuZ3N0LXJpZGRlbiBnb29kIGdpcmxzIGZlbmQgb2ZmIGZhc2hpb24gZmF1eCBwYXMsIGJyb2tlbiBoZWFydHMgYW5kIGFjbmUgYnJlYWtvdXRzLCBhbmQgY2F0Y2ggdXAgb24gZnJlc2gtZmFjZWQgY2VsZWJyaXRpZXMuClNvIGluIGFuIGVyYSB3aGVuIGJlaW5nIGJhZCBpcyB0aGUgdGVlbi1naXJsIHJhZ2UsIHdoYXQgaXMgU2V2ZW50ZWVuIGRvaW5nPwpJdCdzIGxldHRpbmcgVXMgV2Vla2x5IGFuZCBQZW9wbGUgb2JzZXNzIG92ZXIgTGluZHNheSdzIHJlbGFwc2VzIGFuZCBCcml0bmV5J3MgYnJlYWtkb3ducy4KU2V2ZW50ZWVuJ3MgYmFjay10by1zY2hvb2wgY292ZXIgZ2lybCBpcyBzaW5nZXIgQXNobGVlIFNpbXBzb24sIHdobyBpcyAiQ3JhenkgaW4gTG92ZSIgYW5kIGhhcyBubyByYXAgc2hlZXQuCiJTaGUncyBnb3JnZW91cywiIHN3b29ucyBBbm4gU2hva2V0LCBTZXZlbnRlZW4gbWFnYXppbmUncyBuZXcgZWRpdG9yLgpTaG9rZXQgcGlja2VkIEFzaGxlZSwgdGhlIHlvdW5nZXIgc2lzdGVyIG9mIERhaXN5IER1a2VzLXdlYXJpbmcgSmVzc2ljYSwgYmVjYXVzZSBzaGUgaXMgImxpdmluZyBsaWZlIHRvIHRoZSBiZXN0IG9mIGhlciBwb3RlbnRpYWwiIC0gdW5saWtlIHRoZSBiYWQgZ2lybHMgd2hvIGdldCBhbGwgdGhlIGluay4KIkdpcmxzIGFyZSB2ZXJ5IHNtYXJ0LCIgc2F5cyB0aGUgMzUteWVhci1vbGQgU2hva2V0LgpJZiB0aGV5IGFyZSBnaXZpbmcgYXR0ZW50aW9uIGFuZCByZXNwZWN0IHRvIGEgY2VsZWJyaXR5IHdobydzIG5vdCByZXBheWluZyB0aGVtIHdpdGggdGhlIHNhbWUgcmVzcGVjdCwgaXQncyBub3QgZmFpci4KSW4gdGhlIGJhY2stdG8tc2Nob29sIGlzc3VlLCBMb2hhbiBpcyBtZW50aW9uZWQgb25seSBvbmNlLCB3aGVuIFNob2tldCBhZHZpc2VzIGhlciB0byAic2xlZXAgbW9yZSwgcGFydHkgbGVzcywiIGFuZCBub3RlcywgIkV2ZXJ5Ym9keSBuZWVkcyBzb21lIGRvd250aW1lLCBMaW5kcy4iCkl0J3MgYWxsIHBhcnQgb2YgdGhlIFNldmVudGVlbiB3YXkgb2Ygc2VlaW5nIHRoZSBnbGFzcyBhcyBoYWxmIGZ1bGwgKGFuZCBub3Qgd2l0aCBhIGNvc21vcG9saXRhbiBjb25zdW1lZCBvbiBhIHBhbnR5bGVzcyBkcml2ZSBkb3duIFN1bnNldCBCb3VsZXZhcmQpLgoiU2V2ZW50ZWVuIGRpZmZlcnMgZnJvbSBjZWxlYnJpdHkgZ29zc2lwIG1hZ2F6aW5lcyBiZWNhdXNlIHRoZSB3aG9sZSBtYWdhemluZSBpc24ndCBiYXNlZCBvbiBwb2ludGluZyBvdXQgdGhlIGZhdWx0cyBpbiBjZWxlYnMsIiBzYXlzIENhdGh5IExlZSwgMTQsIG9mIEhvbm9sdWx1LgpTaW5jZSB0aGUgQXByaWwgaXNzdWUsIHdoaWNoIGZlYXR1cmVkIGEgInN1bm55IC4uLiBwaW5rLWNoZWVrZWQiIEF2cmlsIExhdmlnbmUsIHRoZSBIZWFyc3QgQ29ycC4gbWFnYXppbmUgaGFzIHNlZW4gbW9udGhseSBuZXdzc3RhbmQgc2FsZXMgY2xpbWIgYW4gYWRkaXRpb25hbCAxOCwwMDAgY29waWVzIHRocm91Z2ggSnVuZS4KTW9udGhseSBuZXdzc3RhbmQgc2FsZXMgZm9yIHRoaXMgeWVhcidzIGZpcnN0IGhhbGYgYXZlcmFnZWQgMzU2LDAwMCBjb3BpZXMsIHVwIGFsbW9zdCA5IHBlcmNlbnQgZnJvbSBhIHllYXIgYWdvLgpJdCBoYXMgMiBtaWxsaW9uIHN1YnNjcmliZXJzIGFuZCAxMyBtaWxsaW9uIHJlYWRlcnMgYSBtb250aCwgc2F5cyBIZWFyc3QuCkEgcmVsYXVuY2ggb2YgU2V2ZW50ZWVuLmNvbSBpbiBBcHJpbCBoYXMgYmVlbiBkcmF3aW5nIDEuMyBtaWxsaW9uIHVuaXF1ZSB2aXNpdG9ycyBhIG1vbnRoLCB1cCAyNSBwZXJjZW50IHRocm91Z2ggSnVuZS4K, 'PERSON')]
Tm90IGFsbCB0aGUgZXhwZXJ0cyBhZ3JlZSB0aGF0IHRoZXJlIGlzIGFueSBjb25uZWN0aW9uIGJldHdlZW4gbW9sZCBhbmQgZGVwcmVzc2lvbiAtIGRlc3BpdGUgdGhpcyBuZXcgcmVzZWFyY2guCkNyaXRpY3Mgd2lzaCB0aGUgc3R1ZHkgaGFkbid0IHJlbGllZCBvbiBzZWxmIHJlcG9ydHMuCiJIYXZpbmcgcHJvZmVzc2lvbmFscyBkbyB0aGUgaW5zcGVjdGlvbiBhbmQgcmF0ZSBob21lcyBmb3IgZGFtcG5lc3Mgb3IgbW9sZGluZXNzIGlzIG11Y2ggYmV0dGVyIHRoYW4gaGF2aW5nIHBlb3BsZSBzZWxmIHJlcG9ydCwiIHNheXMgUGF0IEJyZXlzc2UsIGRpcmVjdG9yIG9mIHRoZSBkaXZpc2lvbiBvZiBlbnZpcm9ubWVudGFsIGhlYWx0aCBlbmdpbmVlcmluZyBhdCB0aGUgSm9obnMgSG9wa2lucyBTY2hvb2wgb2YgUHVibGljIEhlYWx0aC4KT2Z0ZW4gcGVvcGxlICJwb2ludCBmaW5nZXJzIGF0IG1vbGQsIiBidXQgInRoZSBiaW9sb2dpY2FsIGxpbmsgYmV0d2VlbiBtb2xkIGFuZCBhIG5ldXJvdG94aWMgZWZmZWN0IHRoYXQgbWlnaHQgbGVhZCB0byBkZXByZXNzaW9uIGlzIHZlcnkgdGVudW91cywgaW4gbXkgb3BpbmlvbiwiIHNheXMgQnJleXNzZS4KQnV0IHdoZXRoZXIgbW9sZCBpcyBsaW5rZWQgdG8gZGVwcmVzc2lvbiBvciBub3QsIG1hbnkgaGVhbHRoIHByb2Zlc3Npb25hbHMgYWdyZWUgdGhhdCBob21lb3duZXJzIG5lZWQgdG8gZml4IHRoZWlyIGhvdXNlcy4KVGhlIHByZXNlbmNlIG9mIG1vbGQgZG9lc24ndCBqdXN0IG1lYW4gdHJvdWJsZSBmb3IgYWxsZXJneSBzdWZmZXJlcnMsIGl0IGFsc28gbWVhbnMgYSBob21lIGlzIG1vcmUgbGlrZWx5IHRvIGJlIGluZmVzdGVkIHdpdGggY29ja3JvYWNoZXMsIGFuZCBpdCB1c3VhbGx5IGJyaW5ncyBkb3duIHByb3BlcnR5IHZhbHVlcy4KU28gZG9uJ3Qgd2FpdCBmb3IgYW4gaW5zcGVjdG9yLCBhZHZpc2VzIEJyZXlzc2UuCiJJZiB5b3UndmUgZ290IGEgbGVha3kgcGlwZSBhbmQgYSBiaWcgc3RhaW4gaW4gdGhlIGNlaWxpbmcsIHlvdSBkb24ndCBuZWVkIHRvIGhpcmUgc29tZW9uZSB0byBzYXkgdGhlcmUncyBhIGJpZyBwcm9ibGVtLCIgaGUgc2F5cy4KSXQncyBhbiBpbmRpY2F0aW9uIHRoYXQgdGhlIHBsdW1iaW5nIGlzIGxlYWtpbmcsIHRoZSByb29mIGlzIGxlYWtpbmcgYW5kIHRoZSB1cGtlZXAgb2YgdGhlIGhvdXNlIGlzIGJhZC4KQmFkIGhvdXNpbmcgaXMgbm90IGhlYWx0aHkgZm9yIGxvdHMgb2YgcmVhc29ucy4KVGhhdCBzaG91bGQgYmUgdGhlIG1lc3NhZ2UsIG5vdCB0aGF0IG1vbGQgY2F1c2VzIGRlcHJlc3Npb24uClRvIHByZXZlbnQgdGhlIHNwcmVhZCBvZiB0aGUgaWNreSBmdW5naSwgU2hlbmFzc2EgcmVjb21tZW5kcyB0aGF0IHlvdSBrZWVwIHRoZSBiYXRocm9vbSBhbmQgdGhlIGtpdGNoZW4gYXMgZHJ5IGFzIHBvc3NpYmxlIGFuZCBoYXZlIHNwYWNlIHdoZXJlIG9uZSBjYW4gZ2V0IGJlaGluZCBhcHBsaWFuY2VzIHRvIHdpcGUgb3V0IHRoZSB3YXRlci4KSGUgYWxzbyBzdWdnZXN0cyBpbnN1bGF0aW5nIGFyb3VuZCBwaXBlcywgd2luZG93cyBhbmQgbWFpbnRhaW5pbmcgZ29vZCB2ZW50aWxhdGlvbi4KQWZ0ZXIgYWxsLCBhIGRyeSBob21lIGlzIGxpa2VseSB0byBiZSBhIGhlYWx0aGllciBob21lLCBldmVuIGlmIGl0J3Mgbm90IG5lY2Vzc2FyaWx5IGhhcHBpZXIuCg==
[]
Rm94IFNob3cgQmVhcnMgT2RkIFJlc2VtYmxhbmNlIHRvIEJvb2sKTkVXIFlPUksgKEFQKSAtIFBldGUgSGFtaWxsIHRob3VnaHQgaGUnZCBzZWVuIGl0IGFsbC4KQW5kIHRoZW4gdGhlIGJlc3Qtc2VsbGluZyB3cml0ZXIgdGhvdWdodCB1cCBhIGNoYXJhY3RlciB3aG8gcmVhbGx5IGhhZC4KQ29ybWFjIE8nQ29ubm9yIGFwcGVhcmVkIGluICJGb3JldmVyLCIgSGFtaWxsJ3MgYmVzdC1zZWxsaW5nIDIwMDIgbm92ZWwuCkNvcm1hYyB3YXMga2lsbGVkIGNlbnR1cmllcyBhZ28gLi4uIGFuZCBicm91Z2h0IGJhY2sgdG8gbGlmZSAtIGV0ZXJuYWwgbGlmZS4KR3JhbnRlZCBpbW1vcnRhbGl0eSwgaGUgbGl2ZXMgaW4gTWFuaGF0dGFuLCBzdGlsbCBiZWFyaW5nIHRoZSBzY2FyIG9mIGhpcyBmYXRhbCB3b3VuZCwgbGVhcm5pbmcgdG8gcGxheSB0aGUgcGlhbm8sIHJvbWFuY2luZyB0aGUgY2l0eSdzIHdvbWVuIHVudGlsIGhlIGZpbmRzIHRoZSBvbmUgd2hvIGNhbiBncmFudCBoaW0gcGVhY2UuCkdvb2QgeWFybiwgcmlnaHQ/CkZpdmUgeWVhcnMgbGF0ZXIsIEhhbWlsbCdzIHJlYWRlcnMgc3RhcnRlZCB3cml0aW5nIGhpbSBhYm91dCBhbiB1cGNvbWluZyBGb3ggbmV0d29yayBUViBzaG93LCAiTmV3IEFtc3RlcmRhbS4iCkl0cyBsZWFkIGNoYXJhY3RlciB3YXMga2lsbGVkIGNlbnR1cmllcyBhZ28gLi4uIGFuZCBicm91Z2h0IGJhY2sgdG8gbGlmZSAtIGV0ZXJuYWwgbGlmZS4KR3JhbnRlZCBpbW1vcnRhbGl0eSwgaGUgbGl2ZXMgaW4gTWFuaGF0dGFuIC4uLgpTb3VuZCBmYW1pbGlhcj8KSXQgZGlkIHRvIEhhbWlsbC4KQWx0aG91Z2ggdGhlIHNob3cncyBleGVjdXRpdmUgcHJvZHVjZXIsIERhdmlkIE1hbnNvbiwgaW5zaXN0cyB0aGF0IEpvaG4gQW1zdGVyZGFtIHdhcyBjcmVhdGVkIGluZGVwZW5kZW50IG9mIENvcm1hYyBPJ0Nvbm5vciwgSGFtaWxsIGFuZCBoaXMgZmFucyBhcmVuJ3QgcXVpdGUgY29udmluY2VkIC0gYWx0aG91Z2ggdGhlIGF1dGhvcidzIGF0dGl0dWRlIGxlYW5zIG1vcmUgdG8gcmVzaWduYXRpb24gdGhhbiBsaXRpZ2F0aW9uLgoiVG8gdHJ5IGFuZCBwcm92ZSBhbnl0aGluZyBhYm91dCB0aGlzIHdvdWxkIHRha2UgdGhvdXNhbmRzIGFuZCB0aG91c2FuZHMgb2YgZG9sbGFycywgd2hpY2ggSSdkIHJhdGhlciBzcGVuZCBvbiBteSBncmFuZHNvbiwiIEhhbWlsbCBzYWlkLgpZb3UndmUgZ290dGEgbGF1Z2guCkhhbWlsbCdzIGFzc2Vzc21lbnQgb2YgaGlzIHN1Y2Nlc3MgaW4gYSBsZWdhbCBmaWdodCBpcyBsYXJnZWx5IGFjY3VyYXRlLgpFbnRlcnRhaW5tZW50IGF0dG9ybmV5IFN0ZXZlbiBIYXllcywgd2hvc2UgY2xpZW50cyBpbmNsdWRlIEJydWNlIFNwcmluZ3N0ZWVuLCBzYWlkIEhhbWlsbCdzIG9kZHMgb2Ygd2lubmluZyBhIGxhd3N1aXQgd2VyZSByb3VnaGx5IHRoZSBzYW1lIGFzIHRob3NlIG9mIHR3byBtZW4gZ3JhbnRlZCBpbW1vcnRhbGl0eSByZXNpZGluZyBpbiB0aGUgc2FtZSBib3JvdWdoLgpBbmQgSGFtaWxsIGlzIHF1aWNrIHRvIHBvaW50IG91dCB0aGUgcGxpZ2h0IG9mIHRoZSBsYXRlIEFydCBCdWNod2FsZCwgd2hvIHdhZ2VkIGEgZm91ci15ZWFyIGxlZ2FsIGZpZ2h0IHdpdGggUGFyYW1vdW50IFBpY3R1cmVzIG92ZXIgYSBzY3JpcHQgdGhhdCBiZWNhbWUgdGhlIEVkZGllIE11cnBoeSBoaXQgIkNvbWluZyB0byBBbWVyaWNhLiIKSW4gdGhlIGVuZCwgQnVjaHdhbGQgd29uIC0gYW5kIGNvbGxlY3RlZCBqdXN0ICQxNTAsMDAwLgpPJ0Nvbm5vciBhbmQgSm9obiBBbXN0ZXJkYW0sIHRoZSBUViBzaG93J3MgdGl0bGUgY2hhcmFjdGVyLCBtaWdodCBub3QgaGF2ZSBzcHJ1bmcgZnJvbSB0aGUgc2FtZSBtaW5kIC0gYnV0IHRoZXJlJ3Mgbm8gZG91YnQgdGhleSBzaGFyZSBzb21lIGxpdGVyYXJ5IEROQToKTydDb25ub3Igc3RpbGwgYmVhcnMgYSBzY2FyLCAiYSByaWRnZSBvZiBkZWFkIGZsZXNoIG9uIGhpcyBzaG91bGRlciwiIGZyb20gaGlzIGZhdGFsIHdvdW5kLgpBbXN0ZXJkYW0gaXMgbWFya2VkIHdpdGggInNjYXJzIGV2ZXJ5d2hlcmUgLi4uIGFsbCBvdmVyIGhpcyB0b3JzbyBhbmQgYm9keSwiIGFjY29yZGluZyB0byBhIHNjcmlwdCBhY3F1aXJlZCBieSBIYW1pbGwncyBhZ2VudC4KTydDb25ub3IgbGVhcm5lZCB0byBwbGF5IHRoZSBwaWFubywgYmVjb21pbmcgYSBmYW4gb2YgbGVnZW5kYXJ5IGphenogcGxheWVyIEFydCBUYXR1bS4KQW1zdGVyZGFtIHBsYXlzIHRvbywgYW5kIGZhdm9ycyB0aGUgd29yayBvZiBsZWdlbmRhcnkgamF6eiBwbGF5ZXIgVGhlbG9uaW91cyBNb25rLgpPJ0Nvbm5vciBoYXMgb25lIHdheSB0byByZXR1cm4gdG8gYSBub3JtYWwgbGlmZTogZmluZGluZyB0aGUgcmlnaHQgd29tYW4gYW1pZHN0IE1hbmhhdHRhbidzIG11bHRpdHVkZXMuCkFuZCBBbXN0ZXJkYW0gLi4uCiJZb3Ugd2lsbCBub3QgZ3JvdyBvbGQsIiBoZSBpcyB0b2xkLCAidW50aWwgeW91IGZpbmQgeW91ciBvbmUuIgpPbmUgd29tYW4sIHRoYXQgaXMuCkNvaW5jaWRlbmNlPwpBcyBGb3ggTmV3cyBzYXlzLCB3ZSByZXBvcnQsIHlvdSBkZWNpZGUuCkhhbWlsbCBhbHJlYWR5IGhhczogIkl0IGlzIGFzdG9uaXNoaW5nLgpUaGUgc2NhcnMuClRoZSBmYWN0IHRoYXQgaGUgcGxheXMgcGlhbm8uCk1hbnNvbiwgYXNrZWQgYWJvdXQgdGhlIHNpbWlsYXJpdGllcyBpbiBhIHNlc3Npb24gd2l0aCBUViBjcml0aWNzIGVhcmxpZXIgdGhpcyBzdW1tZXIsIHNhaWQgaGUnZCBuZXZlciByZWFkIHRoZSBIYW1pbGwgYm9vayBhbmQgd2FzIHVuYXdhcmUgb2YgaXRzIGV4aXN0ZW5jZSB1bnRpbCBwcm9kdWN0aW9uIHdhcyB3cmFwcGVkLgoiSSBndWVzcyB3aGF0IEkgdGhpbmsgYWJvdXQgaXQgaXMgdGhpcyAtIHRoZSBzdWJqZWN0IG9mIGltbW9ydGFsaXR5IGhhcyBiZWVuIGNvbXBlbGxpbmcgdG8sIHNpbmNlIHRoZSBkYXduIG9mIHRpbWUsIHZhcmlvdXMgY3VsdHVyZXMsIiB0aGUgc2hvdydzIGV4ZWN1dGl2ZSBwcm9kdWNlciBzYWlkLgpJIHRoaW5rIHRoYXQgaXQncyBub3QgLSBpdCdzIG5vdCBzdXJwcmlzaW5nIHRoYXQgdGhlcmUgd2lsbCBiZSBvdmVybGFwcyBpbiB0aGlzIHdvcmxkLgpUaGF0J3MgYWxsIEkgY2FuIHNheS4KQSBwcmVzcyByZWxlYXNlIHByb21vdGluZyB0aGUgU2VwdC4KNiBwcmVtaWVyZSBvZiAiTmV3IEFtc3RlcmRhbSIgYXQgYSBNYW5oYXR0YW4gdGhlYXRlciBjYWxsZWQgaXQgb25lIG9mIHRoZSAibW9zdCBhbnRpY2lwYXRlZCBuZXR3b3JrIHNob3dzIG9mIHRoZSBuZXcgVFYgc2Vhc29uLiIKSGFtaWxsLCBzcGVha2luZyBmb3IgdGhlIGZpcnN0IHRpbWUgYWJvdXQgdGhlIHNob3csIGhhcyBtYW5hZ2VkIHRvIGtlZXAgaGlzIHNlbnNlIG9mIGh1bW9yLgpIZSdzIG5vdCB0b28gaW1wcmVzc2VkIGJ5IEFtc3RlcmRhbSwgZm9yIHN0YXJ0ZXJzOiAiSGVyZSdzIHNvbWUgZ3V5IHdobyB0b29rIDMwMCB5ZWFycyB0byBwYXNzIHRoZSBjb3AncyB0ZXN0LiIKSGFtaWxsLCA3MiwgaXMgb25lIG9mIE5ldyBZb3JrJ3MgYmVzdC1rbm93biB3cml0ZXJzLCB3b3JraW5nIGFzIGEgY29sdW1uaXN0IHdpdGggdGhyZWUgY2l0eSBuZXdzcGFwZXJzIGluIGJldHdlZW4gMTAgbm92ZWxzLCB0d28gc2hvcnQgc3RvcnkgY29sbGVjdGlvbnMgYW5kIGFzc29ydGVkIG90aGVyIHByb2plY3RzLgpUaGUgc29uIG9mIElyaXNoIGltbWlncmFudHMgd2FzIGJvcm4gaW4gQnJvb2tseW4sIGFuZCBzdGlsbCBtYWtlcyBoaXMgaG9tZSBpbiB0aGUgY2l0eS4KSGUgYWxzbyBzdGlsbCBvd25zIHRoZSBUViBhbmQgbW92aWUgcmlnaHRzIHRvICJGb3JldmVyLCIgYWx0aG91Z2ggaGUgd29uZGVycyBpZiB0aGVpciB2YWx1ZSB3aWxsIHRha2UgYSBoaXQgZnJvbSAiTmV3IEFtc3RlcmRhbS4iCkhhbWlsbCBzYWlkIHRoZSBjYXBwZXIgdG8gaGlzIHNjcmlwdCByZWFkaW5nIGNhbWUgb24gcGFnZSA1OCwgd2hlcmUgdGhlIG1haW4gY2hhcmFjdGVyIGhhbmRzIG92ZXIgYW4gZW52ZWxvcGUgImZvciBFdmEuIgoiVGhlIHdvcmRzIGJsdXIgaW50byBvbmUgYW5kIGFsbW9zdCBzcGVsbCAtIEZPUkVWRVIgLi4uIGFuZCBvdXIgbXVzaWMga2lja3MgaW4sIiB0aGUgc2NyaXB0IHJlYWRzLgoiSSBzYWlkLCBgSG9seSBqZWV6LCB0YWxrIGFib3V0IEZyZXVkaWFuIHR5cG9zLCciIEhhbWlsbCByZWNhbGxlZC4KSGV5LCBtYXliZSB0aGlzIHdpbGwgc2VsbCB0aGUgbm92ZWw6IGBZb3UndmUgc2VlbiB0aGUga25vY2tvZmYsIG5vdyB0cnkgdGhlIGJvb2suJwpXaG8ga25vd3M/Cg==
[]
TGFrZWxhbmQgTWFuJ3MgSGlzdG9yeSBVbnJhdmVsaW5nCihBUCkgLSBFdmVyeW9uZSBoZXJlIGtuZXcgQmlsbCBIZW5yeSBhcyBhbiBvbGQgbWFqb3IgbGVhZ3VlIHBpdGNoZXIgLSBhdCBjaHVyY2gsIGFyb3VuZCB0aGUgZ29sZiBjb3Vyc2UgYW5kIGNlcnRhaW5seSBhdCBob21lLgpUaGUgODMteWVhci1vbGQgZGlkbid0IGxpa2UgdG8gYm9hc3QsIGJ1dCBoZSBoYWQgc3Rvcmllcy4KVGhlIGJveXMgYXQgVGhlIDE5dGggSG9sZSBsb3VuZ2UgYXQgdGhlIGdvbGYgY291cnNlIHdoZXJlIHRoZSA2LWZvb3QtMiBsZWZ0eSByZXRpcmVkIGhhZCB0byBwcnkgZm9yIG5vc3RhbGdpYSwgYnV0IEhlbnJ5IGtuZXcgaGlzIHN0dWZmIC0gaGlzIGFwcGVhcmFuY2UgaW4gdGhlIDE5NjEgV29ybGQgU2VyaWVzIHdpdGggdGhlIENpbmNpbm5hdGkgUmVkcywgdGhlIDE5NjAgQWxsLVN0YXIgc2VsZWN0aW9uLCB0aGUgMTYgc2Vhc29ucyBpbiB0aGUgbWFqb3JzLgpCdXQgaXQgdHVybnMgb3V0IHRoZSBMYWtlbGFuZCBtYW4gd2FzIG5vdCB0aGUgQmlsbCBIZW5yeSB3aG8gcGxheWVkIG1ham9yIGxlYWd1ZSBiYWxsLCBhbmQgdGhlIHRhbGVzIGhlIHNwdW4gYXJlIHVucmF2ZWxpbmcgYSB3ZWVrIGFmdGVyIGhpcyBkZWF0aCBmb2xsb3dpbmcgYSBoZWFydCBhdHRhY2suClRoZSBmb3JtZXIgcmVsaWV2ZXIgYnkgdGhlIHNhbWUgbmFtZSBpcyBhbGl2ZSBhbmQgd2VsbCBpbiBUZXhhcyAtIHN0dW5uZWQgc29tZW9uZSBoYWQgY2xhaW1lZCBoaXMgYWNjb21wbGlzaG1lbnRzIGZvciBkZWNhZGVzLgpUaGUgNzktIHllYXItb2xkIGxlYXJuZWQgb2YgdGhlIGltcG9zdG9yIGFmdGVyIFRoZSBBc3NvY2lhdGVkIFByZXNzIGRpc3RyaWJ1dGVkIGEgc2hvcnQgb2JpdHVhcnkuClRoZSBkZWF0aCAtIGFuZCB0aGUgYm9ndXMgaGlzdG9yeSAtIG9yaWdpbmFsbHkgd2FzIHJlcG9ydGVkIGluIFRoZSBMZWRnZXIsIHRoZSBsb2NhbCBuZXdzcGFwZXIuCkkgcmVhbGx5IGNhbid0IHVuZGVyc3RhbmQgd2h5IGEgbWFuIHdvdWxkIGRvIHNvbWV0aGluZyBsaWtlIHRoYXQuClRvIGltcHJlc3MgaGlzIGZhbWlseSBvciBoaXMgbmVpZ2hib3JzPyIgc2FpZCB0aGUgcmVhbCBwaXRjaGVyLgpUaGUgTGFrZWxhbmQgbWFuJ3MgZmFtaWx5IGlzbid0IHN1cmUgd2hlbiB0aGUgZGVjZXB0aW9uIGJlZ2FuLgpIaXMgd2lkb3csIEVsaXphYmV0aCBKZWFuIEhlbnJ5LCBzYWlkIHRoZSBjb3VwbGUgbWV0IG1vcmUgdGhhbiB0d28gZGVjYWRlcyBhZ28gaW4gTWljaGlnYW4uCkhpcyB0aGlyZCB3aWZlLCBzaGUgc2FpZCBzaGUgbmV2ZXIgbWV0IGhlciBodXNiYW5kJ3MgdHdvIGNoaWxkcmVuLCB3aG8gYXJlIGJvdGggZGVhZC4KU2hlIHNhaWQgaGVyIGZ1dHVyZSBodXNiYW5kIGRpZG4ndCBtZW50aW9uIHJpZ2h0IGF3YXkgdGhhdCBoZSB3YXMgYSBmb3JtZXIgYmlnIGxlYWd1ZXIsIGJ1dCBzaGUgaGFkIG5vIHJlYXNvbiB0byBkb3VidCBoaW0gd2hlbiBpdCBjYW1lIHVwLgpFbGl6YWJldGggSGVucnkgc2FpZCBoZSBkaWRuJ3QgaGF2ZSBhbnkgbWVtb3JhYmlsaWEgYXNpZGUgZnJvbSBhIGZldyBiYXNlYmFsbCBjYXJkcyAtIG5vIHJpbmdzLCBubyB0cm9waGllcywgbm8gcGhvdG9zLgpCdXQgc2hlIGFuZCBoaXMgc3RlcGNoaWxkcmVuIHN0aWxsIGJlbGlldmUgaGUgcGxheWVkIGF0IGxlYXN0IHNvbWUgbGV2ZWwgb2YgbWlub3IgbGVhZ3VlIGJhbGwuCiJIZSB0b2xkIG1lIG9uY2UgaGUgY291bGQgaGVhciBoaXMgZmF0aGVyIHdoZW4gaGUgd2FzIHBpdGNoaW5nIGEgZ2FtZSwiIEVsaXphYmV0aCBIZW5yeSBzYWlkLgpIZSBkaWRuJ3QgdGVsbCBtZSB3aGF0IGdhbWUsIGJ1dCBoZSBzYWlkIGhlIGNvdWxkIGhlYXIgaGlzIGZhdGhlciBpbiB0aGUgc3RhbmRzIGNhbGxpbmcgaGlzIG5hbWUuCkkgZG9uJ3QgdGhpbmsgaGUgbGllZCBhYm91dCBhbGwgdGhhdC4KVGhlIGNvdXBsZSBtb3ZlZCBoZXJlIDE5IHllYXJzIGFnbyBhZnRlciBoZSByZXRpcmVkIGFzIGEgc2FsZXNtYW4sIGFuZCBoZSB3YXMgYSBzdGFwbGUgYXQgdGhlIFNhbmQgUGlwZXIgR29sZiBhbmQgQ291bnRyeSBDbHViIHdoZXJlIHRoZSB0d28gbGl2ZWQuCkhlIG1ldCBvbmUgb2YgaGlzIGNsb3Nlc3QgZnJpZW5kcyB0aGVyZSAtIGEgZm9ybWVyIHNlbWlwcm8gcGl0Y2hlciB3aG8gYWxzbyBuZXZlciBkb3VidGVkIGhpbS4KQm9iIE1jSGVucnkgc2FpZCBoZSBwbGF5ZWQgZm9yIGEgdGVhbSBmaWVsZGVkIGJ5IFJDQSBzZXZlcmFsIGRlY2FkZXMgYWdvLgpUaGUgdHdvIGV2ZW4gZ2F2ZSBhIGJpYW5udWFsIGxlY3R1cmUgY2FsbGVkICJCYXNlYmFsbCwgSHVtb3IgYW5kIFNvY2lldHkiIGF0IEZsb3JpZGEgU291dGhlcm4gQ29sbGVnZSwgd2hlcmUgTWNIZW5yeSB3YXMgYW4gYWRqdW5jdCBwcm9mZXNzb3IuCiJUbyBtZSB0aGVyZSB3ZXJlIHR3byByZWxpZXZlcnMgYXQgdGhhdCB0aW1lIC0gSm9lIFBhZ2UgZm9yIHRoZSBZYW5rZWVzIGFuZCBCaWxsIEhlbnJ5IGZvciB0aGUgQ2luY2lubmF0aSBSZWRzLCIgTWNIZW5yeSBzYWlkLgpJdCB3YXMgYWJvdXQgdGhlIGVhcmx5ICc1MHMgdGhhdCByZWxpZXZpbmcgYmVjYW1lIGEgYmlnIHRoaW5nIGluIHRoZSBtYWpvcnMsIGFuZCBzbyBJIGNvdWxkIGFjY2VwdCBCaWxsIGFzIHRoYXQgcGVyc29uLgoiSGUga25ldyB0aGUgbmFtZXMsIiBNY0hlbnJ5IHNhaWQuCkhlIGFuZCBJIGhhZCBhIGxvdCBvZiBvcHBvcnR1bml0aWVzIHRvIHRhbGsgYWJvdXQgcGVvcGxlIGluIHRoZSAnNDBzLCAnNTBzLCAnNjBzLgpIZSBrbmV3IGhpcyBzdHVmZi4KQW5kIHRoZSByZWFsIEJpbGwgSGVucnkgZmVhdHVyZWQgb24gdGhlIGJhc2ViYWxsIGNhcmRzIGxvb2tlZCBqdXN0IGxpa2UgdGhlIG9uZSBpbiBMYWtlbGFuZC4KIkl0J3MgY3JlZXB5IHN0cmlraW5nIC0gdGhlIG5vc2UsIHRoZSBmYWNlLCB0aGUgc3F1aW50eSBleWVzLCIgc2FpZCBKZWFuaW5lIEhpbGwtQ29sZSwgdGhlIHdpZmUgb2YgSGVucnkncyBzdGVwc29uIERhdmlkIENvbGUuCkkgbWVhbiwgSSdtIHN0aWxsIGhlcmUgbG9va2luZyBhdCB0aGUgcGljdHVyZSB3ZSBwdXQgaW4gZm9yIGhpcyBvYml0dWFyeSwgYW5kIHlvdSdkIHN3ZWFyIHRoYXQgaXQgd2FzIHRoZSBzYW1lIG1hbi4KVGhlcmUgd2VyZSBkaWZmZXJlbmNlcywgaG93ZXZlci4KVGhlIHBpdGNoZXIncyBtaWRkbGUgbmFtZSBpcyBSb2RtYW4sIHdoaWxlIHRoZSBGbG9yaWRhIG1hbidzIG1pZGRsZSBuYW1lIHdhcyBDbGFyZW5jZS4KVGhlIHR3byBhbHNvIGhhZCBkaWZmZXJlbnQgZGF0ZXMgYW5kIGNpdGllcyBvZiBiaXJ0aC4KVGhlIExha2VsYW5kIG1hbiBoYWQgZXhwbGFpbmVkIHRvIGZhbWlseSBhbmQgZnJpZW5kcyB0aGF0IHRoZSBkaWZmZXJlbnQgYmlydGggZGF0ZXMgd2VyZSBhIGRlbGliZXJhdGUgZGVjZXB0aW9uIHdoZW4gaGUgd2FzIGEgcHJvc3BlY3QgdG8gbWFrZSBzY291dHMgdGhpbmsgaGUgd2FzIHlvdW5nZXIgLSBzb21ldGhpbmcgdGhhdCBkb2VzIGhhcHBlbiBvY2Nhc2lvbmFsbHksIGV2ZW4gdG9kYXkuCkl0J3Mga2luZCBvZiBsaWtlIEFudGlxdWUgUm9hZCBTaG93LgpZb3UgZ2V0IHRoaXMgc3RvcnkgdGhhdCdzIGJlZW4gaGFuZGVkIGRvd24gYW5kIHRvbGQgdG8geW91LCIgSGlsbC1Db2xlIHNhaWQuCldlJ3JlIHN0aWxsIGtpbmQgb2YgYWxsIGluIHNob2NrLgpTb21lIG9mIEhlbnJ5J3Mgb2xkIGdvbGYgYnVkZGllcywgbGlrZSA2NC15ZWFyLW9sZCBCcnVjZSBCcmFuZHQsIHN0aWxsIGRpZG4ndCB3YW50IHRvIGFjY2VwdCB0aGUgbmV3cyAtIEhlbnJ5IGFsd2F5cyB0YWxrZWQgd2l0aCBvbGQgcHJvcyB3aG8gcGlsZSBpbnRvIHRvd24gZWFjaCBzcHJpbmcgd2hlbiB0aGUgRGV0cm9pdCBUaWdlcnMgdHJhaW4gaGVyZS4KIlRoZSBndXkgSSBrbmV3IHdhcyBhIGJhbGxwbGF5ZXIsIiBCcmFuZHQgc2FpZC4KSGUgaGFkIHRvIGJlLCBiZWNhdXNlIGV2ZXJ5Ym9keSBrbmV3IGhpbS4KSGUgd291bGQgbm90IHJlYWQgVGhlIExlZGdlciBzaXR0aW5nIGEgZmV3IGZlZXQgYXdheSBkb2N1bWVudGluZyBoaXMgZnJpZW5kJ3MgYXBwYXJlbnQgbGllLgpUaGUgbmV3c3BhcGVyIHNhaWQgaXQgc2hvdWxkIGhhdmUgZG9uZSBhIGJldHRlciBqb2IgY29uZmlybWluZyB3aGV0aGVyIHRoZSBsb2NhbCdzIHRhbGVzIHdlcmUgdHJ1ZS4KIlRoZXJlIGhhZCBiZWVuIHNvbWUgZGlzY3Vzc2lvbiBvdmVyIHRoZSB5ZWFycyBhYm91dCBkb2luZyBhIHN0b3J5IGFib3V0IGhpbSwiIExlZGdlciBleGVjdXRpdmUgZWRpdG9yIFNraXAgUGVyZXogc2FpZC4KT25lIG9mIG91ciBzdGFmZiB3cml0ZXJzIEkgdGhpbmsgd2FzIGEgbWVtYmVyIG9mIHRoZSBzYW1lIGNodXJjaC4KWW91IGtub3csIGluIGEgd2F5IEkgd2lzaCB3ZSBoYWQgZG9uZSB0aGUgZGFybiBzdG9yeSAxMCB5ZWFycyBhZ28gb3Igd2hhdGV2ZXIsIGJlY2F1c2UgaG9wZWZ1bGx5IHdlIHdvdWxkIGhhdmUgY2hlY2tlZCBvciBtYWRlIGEgY2FsbCBvciBzb21ldGhpbmcuCkVsaXphYmV0aCBIZW5yeSBzYWlkIGhlciBodXNiYW5kJ3MgaGVhbHRoIGhhZCBkZWNsaW5lZCBzaW5jZSBhbiBBbHpoZWltZXIncyBkaXNlYXNlIGRpYWdub3NpcyBhYm91dCB0aHJlZSB5ZWFycyBhZ28uCkhlIGxvc3QgaGlzIGRyaXZlcidzIGxpY2Vuc2UgYW5kIHVzZWQgYSBnb2xmIGNhcnQgdG8gd2hlZWwgYXJvdW5kIGhpcyByZXRpcmVtZW50IGNvbW11bml0eS4KVGhlIHNpeC1oYW5kaWNhcCBjb3VsZG4ndCBldmVuIHBsYXkgMTggaG9sZXMgYW55bW9yZS4KIldoZW4gaGUgcGFzc2VkIGl0IHdhcyBhIHJlbGllZiB0byBrbm93IGhlIHdhc24ndCBzdWZmZXJpbmcgYW55bW9yZSwiIHNoZSBzYWlkLgpIZSBkaWRuJ3QgaGF2ZSB0byBnbyB0byBhIG51cnNpbmcgaG9tZS4KU28gd2l0aCB0aGF0IEkganVzdCBmZWx0IGF0IHBlYWNlLCBhbmQgSSdkIGxpa2UgdG8gZ2V0IG9uIHdpdGggbXkgbGlmZS4KVGhlIExha2VsYW5kIGZhbWlseSBzYWlkIHRoZXkgd2FudCBCaWxsIEhlbnJ5IGluIFRleGFzIGNyZWRpdGVkIHdpdGggdGhlIDQ2LTUwIGxpZmV0aW1lIHJlY29yZCwgQWxsLVN0YXIgc2VsZWN0aW9uIGFuZCBXb3JsZCBTZXJpZXMgYXBwZWFyYW5jZSBoZSBlYXJuZWQuClRoZSBmb3JtZXIgbWFqb3IgbGVhZ3Vlciwgc3RpbGwgd29ya2luZyBmb3IgYSBtb29yaW5nIGNvbXBhbnkgaW4gSG91c3Rvbiwgc2FpZCBoZSBkaWRuJ3QgbWluZC4KIkl0IGRvZXNuJ3QgYm90aGVyIG1lIGF0IGFsbCwiIGhlIHNhaWQuClRoZSBkZWFkIG1hbidzIGZyaWVuZHMgYW5kIGZhbWlseSBpbiBGbG9yaWRhIGluc2lzdCBpdCBkb2Vzbid0IG1hdHRlciBpZiBoZSBwbGF5ZWQgcHJvIGJhbGwsIGJlY2F1c2UgaGUgd2FzIGEgZ29vZCBtYW4gYW55d2F5LgoiVGhhdCBqdXN0IHdhcyBub3QgYSBiaWcgb3Igc2lnbmlmaWNhbnQgcGFydCBvZiB0aGUgcGVyc29uIHdlIGFsbCBrbmV3IGFuZCBsb3ZlZCBhbmQgc3RpbGwgaG9sZCBpbiBoaWdoIHJlZ2FyZCwiIEhlbnJ5J3MgcGFzdG9yIEJyeWFuIE1pY2tsZSBzYWlkLgpBc3NvY2lhdGVkIFByZXNzIFdyaXRlcnMgU2FyYWggTGFyaW1lciBhbmQgUmFzaGEgTWFka291ciBpbiBNaWFtaSBjb250cmlidXRlZCB0byB0aGlzIHJlcG9ydC4K
[]
TGh1aWxsaWVyIFdoaXBzIFVwIFN3ZWV0IENvbmZlY3Rpb25zCk5FVyBZT1JLIChBUCkgLSBSZWQtY2FycGV0IHByaW5jZXNzIE1vbmlxdWUgTGh1aWxsaWVyIHR1cm5lZCBvdXQgYSBzZXJpZXMgb2YgcHJldHR5IGRyZXNzZXMgYXQgTmV3IFlvcmsgRmFzaGlvbiBXZWVrIG9uIFR1ZXNkYXkgdGhhdCBhcmUgc3VyZSB0byBtYWtlIGhlciBzdGFybGV0cyBoYXBweS4KVGhlIHNwcmluZyBjb2xsZWN0aW9uLCBob3dldmVyLCBzdHJheWVkIGZyb20gdGhlIHZvbHVtZSBhbmQgYWxsIHRoZSBqZXdlbGVkIGVtYmVsbGlzaG1lbnQgdGhhdCBoYXZlIGJlZW4gaGVyIGhhbGxtYXJrIGluIHJlY2VudCBzZWFzb25zLCBpbnN0ZWFkIG9mZmVyaW5nIG1vc3RseSBzb3BoaXN0aWNhdGVkLCBmbHVpZCBsb29rcyB0aGF0IGNlbGVicmF0ZSBhIHdvbWFuJ3Mgc2hhcGUgd2l0aG91dCBzcXVlZXppbmcgaXQuClRoZSBsYXN0IGxvb2sgb24gdGhlIHJ1bndheSBhdCB0aGUgQnJ5YW50IFBhcmsgdGVudHMgbWlnaHQgaGF2ZSBiZWVuIHRoZSBiZXN0IGV4YW1wbGU6IGEgYmxhY2sgY2hpZmZvbiBnb3duIHdpdGggYSBmaXR0ZWQgY29yc2V0IGJvZGljZSBhbmQgYSBkcmFwZWQgc2tpcnQgdGhhdCBjYW1lIHRvZ2V0aGVyIGluIGEgYm93IGF0IHRoZSB3YWlzdC4KQmxhY2sgd2Fzbid0IHRoZSBkb21pbmFudCBjb2xvciBpbiB0aGUgY29sbGVjdGlvbiwgYnV0IG1vc3Qgd29tZW4ga25vdyBpdCBpcyB0aGUgZ28tdG8gY29sb3IgZm9yIGRyZXNzeSBhZmZhaXJzLgpGb3IgYW55b25lIHdobyB3YW50ZWQgdG8gdHJ5IHNvbWV0aGluZyBuZXcsIGhvd2V2ZXIsIHRoZXJlIHdlcmUgcGxlbnR5IG9mIG9wdGlvbnMsIGluY2x1ZGluZyBzZWFmb2FtLWNvbG9yZWQgY2hpZmZvbiBzdHJhcGxlc3MgZ293biB3aXRoIGRyYXBpbmcgYWxsIG92ZXIgdGhlIHRvcCAtIGRvd24gYmVsb3cgdGhlIGhpcHMgLSBhbmQgdGhlbiBhIGJpbGxvd3kgaGFuZGtlcmNoaWVmIGhlbSBhbmQgYSBudWRlLSBjb2xvcmVkIGNoaWZmb24gY3Jpc3Njcm9zcyBkcmFwZWQgYm9kaWNlIGdvd24uClRoZXNlIGZhc2hpb24gY29uZmVjdGlvbnMgd2VyZSBpbnNwaXJlZCBieSBMaHVpbGxpZXIncyBvd24gaW5kdWxnZW5jZSBvbmUgZGF5LgpXaGlsZSBlbmpveWluZyBhIGJveCBvZiBteSBmYXZvcml0ZSBMYWR1cmVlIG1hY2Fyb29ucywgSSBzYXcgdGhlIGNvbG9yIHBhbGV0dGUgZmxhc2ggYmVmb3JlIG15IGV5ZXMuClZhbmlsbGEuCk1pbnQuCkxhdHRlLgpQaXN0YWNoaW8uCkJ1dHRlcnNjb3RjaCwiIHNoZSBzYWlkIGluIGhlciBub3Rlcy4KSSB3aGlwcGVkIHVwIHNpbGsgdHVsbGVzLCBvcmdhbnphcyBhbmQgY2hpZmZvbnMgdG8gY3JlYXRlIGFuIG92ZXJhbGwgbGlnaHR3ZWlnaHQgd2hpbXNpY2FsIGZlZWxpbmcuClRoaXMgY2FycmllZCB0aHJvdWdoIHRvIHNvbWUgb3V0c3RhbmRpbmcgZGF5dGltZSBvdXRmaXRzLCBpbmNsdWRpbmcgYSBsaWdodCB5ZWxsb3cgbWV0YWxsaWMgdHdlZWQgc3VpdCB3aXRoIGEgc2hhd2wtY29sbGFyIGphY2tldCBhbmQgYSBzbGltIHBlbmNpbCBza2lydCB3b3JuIHdpdGggYSBjcmVhbS1jb2xvcmVkIFYtbmVjayBoYWx0ZXIgYmxvdXNlIHdpdGggcnVmZmxlcyBkb3duIHRoZSBmcm9udC4KQnV0IGV2ZW4gd2hlbiB5b3UncmUgZGVhbGluZyB3aXRoIHN1Y2ggZGFpbnR5LCBkZWxpY2F0ZSBkZXRhaWxzLCB0aGVyZSBjYW4gYmUgdG9vIG11Y2ggb2YgYSBnb29kIHRoaW5nIGFuZCBvbmUgZHJlc3MgLSBhIG9uZS1zaG91bGRlciB0dWxsZSBnb3duIHdpdGggc2VlbWluZ2x5IGVuZGxlc3MgdGllcnMgY292ZXJlZCB3aXRoIGxpZ2h0IGdyZWVuIGZsb3dlcnMgLSB3YXMganVzdCB0b28gbXVjaCBvZiBldmVyeXRoaW5nLgo=
[]
T2lsIE5lYXIgUmVjb3JkIG9uIFJlZmluZXJ5IE91dGFnZQpORVcgWU9SSyAoQVApIC0gT2lsIHByaWNlcyByZW1haW5lZCBuZWFyIHJlY29yZCBoaWdocyBUaHVyc2RheSBhbmQgZ2Fzb2xpbmUgZnV0dXJlcyBqdW1wZWQgYWZ0ZXIgVmFsZXJvIEVuZXJneSBDb3JwLiBzYWlkIGEgYmlnIFRleGFzIHJlZmluZXJ5IHdhcyBzaHV0IGRvd24gYWZ0ZXIgSHVycmljYW5lIEh1bWJlcnRvIGhpdCBUZXhhcy4KT2lsIHRyYWRlZCBvdmVyICQ4MCBhIGJhcnJlbCBvbiBXZWRuZXNkYXkgYW5kIGFnYWluIGVhcmx5IFRodXJzZGF5IGFmdGVyIHRoZSBFbmVyZ3kgRGVwYXJ0bWVudCByZXBvcnRlZCBkZWNsaW5lcyBpbiBjcnVkZSBhbmQgZ2Fzb2xpbmUgaW52ZW50b3JpZXMgYW5kIHJlZmluZXJ5IGFjdGl2aXR5IGxhc3Qgd2Vlay4KTGlnaHQsIHN3ZWV0IGNydWRlIGZvciBPY3RvYmVyIGRlbGl2ZXJ5IGZlbGwgNDEgY2VudHMgdG8gJDc5LjUwIGEgYmFycmVsIG9uIHRoZSBOZXcgWW9yayBNZXJjYW50aWxlIEV4Y2hhbmdlIGFmdGVyIHJpc2luZyBhcyBoaWdoIGFzICQ4MC4wOSBlYXJsaWVyLgpPY3RvYmVyIGdhc29saW5lIHJvc2UgMi44MCBjZW50cyB0byAkMi4wNDQgYSBnYWxsb24uCk9pbCBoaXQgYW4gaW50cmFkYXkgdHJhZGluZyByZWNvcmQgb2YgJDgwLjE4IGEgYmFycmVsIFdlZG5lc2RheSBiZWZvcmUgc2V0dGxpbmcgYXQgYSByZWNvcmQgY2xvc2Ugb2YgJDc5LjkxIGEgYmFycmVsLgpEZXNwaXRlIFdlZG5lc2RheSdzIGp1bXAsIG9pbCBpcyBzdGlsbCB3ZWxsIGJlbG93IGluZmxhdGlvbi1hZGp1c3RlZCBoaWdocyBoaXQgaW4gZWFybHkgRGVwZW5kaW5nIG9uIHRoZSBhZGp1c3RtZW50LCBhICQzOCBiYXJyZWwgb2Ygb2lsIGluIDE5ODAgd291bGQgYmUgd29ydGggJDk2IHRvICQxMDEgb3IgbW9yZSB0b2RheS4KSG93ZXZlciwgU2h1bSBzYWlkIHByb2ZpdC10YWtpbmcgaW4gdGhlIG5lYXIgdGVybSB3aWxsIGxpbWl0IHRoZSBvaWwgcHJpY2UncyBhYmlsaXR5IHRvIHN1c3RhaW4gYWJvdmUgdGhlICQ4MC1hLWJhcnJlbCBsZXZlbC4KQW5hbHlzdHMgc2FpZCBwcm9maXQtdGFraW5nIHdhcyBiZWhpbmQgdGhlIGVhcmx5IGRpcHMgaW4gcHJpY2VzIFRodXJzZGF5LgpCdXQgd2VhdGhlciBjb25jZXJucyBhYm91dCBIdW1iZXJ0byBhbmQgYSBkZXZlbG9waW5nIHN0b3JtIGluIHRoZSBBdGxhbnRpYyB3ZXJlIHN1cHBvcnRpbmcgcHJpY2VzLgpXaGlsZSBWYWxlcm8ncyAzMjUsMDAwIGJhcnJlbC0gcGVyLWRheSBQb3J0IEFydGh1ciwgVGV4YXMsIHJlZmluZXJ5IHdhcyBzaHV0IGR1ZSB0byBhIHBvd2VyIG91dGFnZSwgb3RoZXIgb2lsIGZhY2lsaXRpZXMgLSBpbmNsdWRpbmcgVmFsZXJvIHJlZmluZXJpZXMgaW4gQ29ycHVzIENocmlzdGksIEhvdXN0b24gYW5kIFRleGFzIENpdHkgLSB3ZXJlIHVuYWZmZWN0ZWQuClRyYWRlcnMgYXBwZWFyIG1vcmUgY29uY2VybmVkIGFib3V0IGEgc3Rvcm0gdGhlIE5hdGlvbmFsIEh1cnJpY2FuZSBDZW50ZXIgaXMgY2FsbGluZyBUcm9waWNhbCBEZXByZXNzaW9uIEVpZ2h0LCB3aG9zZSBjb3Vyc2UgcmVtYWlucyB1bmNsZWFyLgpFbmVyZ3kgaW52ZXN0b3JzIGdldCB3b3JyaWVkIGFueSB0aW1lIGEgdHJvcGljYWwgc3Rvcm0gb3IgaHVycmljYW5lIHRocmVhdGVucyBrZXkgb2lsIGFuZCBnYXMgaW5mcmFzdHJ1Y3R1cmUgaW4gdGhlIEd1bGYgb2YgTWV4aWNvLgpTdGlsbCwgbmF0dXJhbCBnYXMgZnV0dXJlcyBmZWxsIFRodXJzZGF5IGFmdGVyIGp1bXBpbmcgbW9yZSB0aGFuIDUwIGNlbnRzIG9uIFdlZG5lc2RheS4KT24gdGhlIE55bWV4LCBPY3RvYmVyIG5hdHVyYWwgZ2FzIGxvc3QgMjEuOCBjZW50cyB0byAkNi4yMiBwZXIgMSwwMDAgY3ViaWMgZmVldC4KTmF0dXJhbCBnYXMgdHJhZGVycyBhcmUgYXdhaXRpbmcgYW4gaW52ZW50b3J5IHJlcG9ydCBleHBlY3RlZCB0byBzaG93IHN1cHBsaWVzIGdyZXcgYnkgNjIgYmlsbGlvbiBjdWJpYyBmZWV0IGxhc3Qgd2Vlay4KTmF0dXJhbCBnYXMgaW52ZW50b3JpZXMgYXJlIGF0IHJlY29yZCBoaWdocy4KSW4gb3RoZXIgTnltZXggdHJhZGluZywgaGVhdGluZyBvaWwgZnV0dXJlcyBsb3N0IDAuMDcgY2VudCB0byAkMi4yMTg0IGEgZ2FsbG9uLgpJbiBMb25kb24sIE9jdG9iZXIgQnJlbnQgY3J1ZGUgZmVsbCAzMCBjZW50cyB0byAkNzcuMzggYSBiYXJyZWwgb24gdGhlIElDRSBmdXR1cmVzIGV4Y2hhbmdlLgpBbmFseXN0cyBzYXkgbXVjaCBvZiB0aGUgcmVjZW50IGFkdmFuY2UgaW4gY3J1ZGUgcHJpY2VzIGhhcyBiZWVuIGR1ZSB0byBzcGVjdWxhdGl2ZSBidXlpbmcgYnkgbGFyZ2UgaW52ZXN0bWVudCBmdW5kcy4KIk1vc3QgbGFyZ2UgZmluYW5jaWFsIGluc3RpdHV0aW9ucyBoYXZlIGdvbmUgbG9uZyBvbiBjcnVkZSwgYW5kIGVhY2ggbmV3IGhpZ2ggdGVzdGVkIGVxdWF0ZXMgdG8gc3Vic3RhbnRpYWwgcHJvZml0cywiIHdyb3RlIFNpbW9uIFdhcmRlbGwsIGFuIGVuZXJneSBhbmFseXN0IGF0IEdsb2JhbCBJbnNpZ2h0IGluIExvbmRvbiwgaW4gYSByZXNlYXJjaCBub3RlLgpCdXQgc3VjaCBqdW1wcyBpbiBzcGVjdWxhdGl2ZSBidXlpbmcgY2FycnkgdGhlaXIgb3duIHNlZWRzIG9mIGRlc3RydWN0aW9uLCBub3RlcyBKaW0gUml0dGVyYnVzY2gsIHByZXNpZGVudCBvZiBSaXR0ZXJidXNjaCAmIEFzc29jaWF0ZXMgaW4gR2FsZW5hLCBJbGwuCiJBdCBzb21lIHBvaW50LCBhIHNhdHVyYXRpb24gbGV2ZWwgd2lsbCBiZSBhY2hpZXZlZCBhcyB3YXMgdGhlIGNhc2UgYXQgdGhlIGVuZCBvZiBKdWx5IHdoZW4gdGhlIG5ldCBsb25nIGZ1bmQgcG9zaXRpb24gcGVha2VkLCIgUml0dGVyYnVzY2ggd3JvdGUuCkFmdGVyIG9pbCBoaXQgdGhlbi1yZWNvcmQgdHJhZGluZyBwcmljZXMgYWJvdmUgJDc4IGEgYmFycmVsIG9uIEF1Z3VzdCAxLCBwcmljZXMgZHJvcHBlZCB0byB0aGUgJDY5IGxldmVsIGluIGEgZmV3IHdlZWtzLgo=
[]
U0NPIEdyb3VwIEZpbGVzIGZvciBCYW5rcnVwdGN5ClNBTFQgTEFLRSBDSVRZIChBUCkgLSBUaGUgU0NPIEdyb3VwIEluYy4sIGxpY2Vuc2VyIG9mIHRoZSBVbml4IG9wZXJhdGluZyBzeXN0ZW0sIGZpbGVkIGZvciBiYW5rcnVwdGN5IHByb3RlY3Rpb24gRnJpZGF5LCBkcmFpbmVkIGJ5IHVuc3VjY2Vzc2Z1bGx5IGZpbGluZyBsYXdzdWl0cyBjbGFpbWluZyBpdHMgc29mdHdhcmUgY29kZSB3YXMgbWlzYXBwcm9wcmlhdGVkIGJ5IGRldmVsb3BlcnMgb2YgdGhlIG9wZW4tc291cmNlIExpbnV4IG9wZXJhdGluZyBzeXN0ZW0uClRoZSBMaW5kb24sIFV0YWgsIGNvbXBhbnkgc2FpZCBpdCBpcyBzZWVraW5nIHByb3RlY3Rpb24gZnJvbSBjcmVkaXRvcnMgdW5kZXIgQ2hhcHRlciAxMSBhcyBpdCBjb250aW51ZXMgdG8gbGljZW5zZSBhbmQgaW1wcm92ZSBVbml4IGZvciBjb3Jwb3JhdGUgc2VydmVycy4KIldlIHdhbnQgdG8gYXNzdXJlIG91ciBjdXN0b21lcnMgYW5kIHBhcnRuZXJzIHRoYXQgdGhleSBjYW4gY29udGludWUgdG8gcmVseSBvbiBTQ08gcHJvZHVjdHMsIHN1cHBvcnQgYW5kIHNlcnZpY2VzIGZvciB0aGVpciBjcml0aWNhbCBidXNpbmVzcyBvcGVyYXRpb25zLCIgRGFybCBNY0JyaWRlLCBwcmVzaWRlbnQgYW5kIGNoaWVmIGV4ZWN1dGl2ZSwgc2FpZCBpbiBhIHN0YXRlbWVudCBGcmlkYXkuCk1jQnJpZGUgaGFzIGJsYW1lZCBjb21wZXRpdGlvbiBmcm9tIExpbnV4IGZvciBvcGVyYXRpbmcgbG9zc2VzIGFuZCB0aGUgb25nb2luZyBzbGlkZSBpbiBjb21wYW55IHJldmVudWVzLgpUaGUgY29tcGFueSBzYWlkIGl0cyBvcGVyYXRpbmcgbG9zcyBpbiB0aGUgcXVhcnRlciBlbmRpbmcgQXByaWwgMzAgd2FzICQxLjEgbWlsbGlvbi4KQSB5ZWFyIGVhcmxpZXIsIGl0IGxvc3QgJDMuOSBtaWxsaW9uLgpJbiBBdWd1c3QsIFUuUy4gRGlzdHJpY3QgQ291cnQgRGFsZSBLaW1iYWxsIHJ1bGVkIHRoYXQgTm92ZWxsIEluYy4sIG5vdCBTQ08sIG93bnMgdGhlIGNvcHlyaWdodHMgY292ZXJpbmcgdGhlIFVuaXggb3BlcmF0aW5nIHN5c3RlbS4KU0NPIGxpY2Vuc2VzIHRoZSBVbml4IHNvZnR3YXJlIGZvciBjb3Jwb3JhdGUgc2VydmVycy4KVGhlIGNhc2UgY291bGQgbGVhdmUgU0NPIHdpdGggYSBiaWdnZXIgbGlhYmlsaXR5OiBLaW1iYWxsIHNhaWQgU0NPIG1heSBvd2UgTm92ZWxsIHNvZnR3YXJlIHJveWFsdGllcy4KS2ltYmFsbCdzIHJ1bGluZyB3YXMgcmVsaWVmIGZvciBJQk0gQ29ycC4sIHRoZSB0YXJnZXQgb2Ygb25lIGxhd3N1aXQgYnkgU0NPIGNsYWltaW5nIEJpZyBCbHVlIGR1bXBlZCBVbml4IGNvZGUgaW4gTGludXguClNlcGFyYXRlbHksIE5vdmVsbCBpcyBjb3VudGVyc3VpbmcgU0NPIGZvciBkYW1hZ2VzIGluIGEgdHJpYWwgdGhhdCB3YXMgdG8gYmVnaW4gbmV4dCB3ZWVrIGJ1dCBpcyBub3cgb24gaG9sZCBiZWNhdXNlIG9mIHRoZSBiYW5rcnVwdGN5IGZpbGluZy4KQ2hhcHRlciAxMSBmcmVlcyBhIGNvbXBhbnkgZnJvbSBsYXdzdWl0cyBieSBjcmVkaXRvcnMgd2hpbGUgaXQgcmVvcmdhbml6ZXMgaXRzIGZpbmFuY2VzLgpNY0JyaWRlIGRpZG4ndCBpbW1lZGlhdGVseSByZXR1cm4gYSBtZXNzYWdlIHJlbGF5ZWQgRnJpZGF5IHRocm91Z2ggYSBwdWJsaWMtcmVsYXRpb25zIGZpcm0uCg==
[]
MTAwLDAwMCBQcm90ZXN0IE92ZXIgSmFwYW4gVGV4dGJvb2sKVE9LWU8gKEFQKSAtIE1vcmUgdGhhbiAxMDAsMDAwIHBlb3BsZSBwcm90ZXN0ZWQgU2F0dXJkYXkgaW4gc291dGhlcm4gSmFwYW4gYWdhaW5zdCB0aGUgY2VudHJhbCBnb3Zlcm5tZW50J3Mgb3JkZXIgdG8gbW9kaWZ5IHNjaG9vbCB0ZXh0Ym9va3Mgd2hpY2ggc2F5IHRoZSBjb3VudHJ5J3MgYXJteSBmb3JjZWQgY2l2aWxpYW5zIHRvIGNvbW1pdCBtYXNzIHN1aWNpZGUgYXQgdGhlIGVuZCBvZiBXb3JsZCBXYXIgSUkuClB1Ymxpc2hlcnMgb2YgaGlzdG9yeSB0ZXh0Ym9va3Mgd2VyZSBvcmRlcmVkIGluIERlY2VtYmVyIHRvIG1vZGlmeSBzZWN0aW9ucyB0aGF0IHNhaWQgdGhlIEphcGFuZXNlIGFybXkgLSBmYWNlZCB3aXRoIGFuIGltcGVuZGluZyBVLlMuIGludmFzaW9uIGluIDE5NDUgLSBoYW5kZWQgb3V0IGdyZW5hZGVzIHRvIHJlc2lkZW50cyBpbiBPa2luYXdhIGFuZCBvcmRlcmVkIHRoZW0gdG8ga2lsbCB0aGVtc2VsdmVzIHJhdGhlciB0aGFuIHN1cnJlbmRlciB0byB0aGUgQW1lcmljYW5zLgpUaGUgYW1lbmRtZW50IG9yZGVyIGNhbWUgYW1pZCBtb3ZlcyBieSBUb2t5byB0byBzb2Z0ZW4gYnJ1dGFsIGFjY291bnRzIG9mIEphcGFuZXNlIHdhcnRpbWUgY29uZHVjdCwgYnV0IHRyaWdnZXJlZCBpbW1lZGlhdGUgY29uZGVtbmF0aW9uIGZyb20gcmVzaWRlbnRzIGFuZCBhY2FkZW1pY3MuCkFib3V0IDExMCwwMDAgcmVzaWRlbnRzIGFuZCBwb2xpdGljaWFucyBhdHRlbmRlZCBTYXR1cmRheSdzIHJhbGxpZXMgaW4gdGhlIHByZWZlY3R1cmUgKHN0YXRlKSBvZiBPa2luYXdhLCBzYWlkIFlvc2hpbm8gVWV0c3UsIG9uZSBvZiB0aGUgb3JnYW5pemVycy4KIldlIGNhbm5vdCBidXJ5IHRoZSBmYWN0IHRoYXQgdGhlIEphcGFuZXNlIG1pbGl0YXJ5IHdhcyBpbnZvbHZlZCBpbiB0aGUgbWFzcyBzdWljaWRlLCB0YWtpbmcgaW50byBhY2NvdW50IG9mIHRoZSBnZW5lcmFsIGJhY2tncm91bmQgYW5kIHRlc3RpbW9uaWVzIHRoYXQgaGFuZCBncmVuYWRlcyB3ZXJlIGRlbGl2ZXJlZCwiIE9raW5hd2EgR292LiBIaXJva2F6dSBOYWthaW1hIHRvbGQgYSBjcm93ZCBnYXRoZXJlZCBhdCBhIHBhcmsgaW4gR2lub3dhbiBDaXR5LgpBY2NvdW50cyBvZiBmb3JjZWQgZ3JvdXAgc3VpY2lkZXMgb24gT2tpbmF3YSBhcmUgYmFja2VkIGJ5IGhpc3RvcmljYWwgcmVzZWFyY2gsIGFzIHdlbGwgYXMgdGVzdGltb25pZXMgZnJvbSB2aWN0aW1zJyByZWxhdGl2ZXMuCkhpc3RvcmlhbnMgYWxzbyBzYXkgY2l2aWxpYW5zIHdlcmUgaW5kdWNlZCBieSBnb3Zlcm5tZW50IHByb3BhZ2FuZGEgdG8gYmVsaWV2ZSBVLlMuIHNvbGRpZXJzIHdvdWxkIGNvbW1pdCBob3JyaWJsZSBhdHJvY2l0aWVzIGFuZCB0aGVyZWZvcmUga2lsbGVkIHRoZW1zZWx2ZXMgYW5kIHRoZWlyIGZhbWlsaWVzIHRvIGF2b2lkIGNhcHR1cmUuCkFib3V0IDUwMCBwZW9wbGUgY29tbWl0dGVkIHN1aWNpZGUsIGFjY29yZGluZyB0byBjaXZpYyBncm91cCBhbmQgbWVkaWEgcmVwb3J0cy4KSW4gcmVjZW50IHllYXJzLCBzb21lIGFjYWRlbWljcyBoYXZlIHF1ZXN0aW9uZWQgd2hldGhlciB0aGUgc3VpY2lkZXMgd2VyZSBmb3JjZWQgLSBwYXJ0IG9mIGEgZ2VuZXJhbCBwdXNoIGJ5IEphcGFuZXNlIGNvbnNlcnZhdGl2ZXMgdG8gc29mdGVuIGNyaXRpY2lzbSBvZiBUb2t5bydzIHdhcnRpbWUgY29uZHVjdC4KVGhlIGJsb29keSBiYXR0bGUgaW4gT2tpbmF3YSByYWdlZCBmcm9tIGxhdGUgTWFyY2ggdGhyb3VnaCBKdW5lIDE5NDUsIGxlYXZpbmcgbW9yZSB0aGFuIDIwMCwwMDAgY2l2aWxpYW5zIGFuZCBzb2xkaWVycyBkZWFkLCBhbmQgc3BlZWRpbmcgdGhlIGNvbGxhcHNlIG9mIEphcGFuJ3MgZGVmZW5zZXMuClRoZSBVLlMuIG9jY3VwaWVkIE9raW5hd2EgZnJvbSB0aGUgZW5kIG9mIFdvcmxkIFdhciBJSSB1bnRpbCAxOTcyLgpOZXcgdGV4dGJvb2tzIGZvciB1c2UgaW4gSmFwYW5lc2Ugc2Nob29scyBtdXN0IGJlIHNjcmVlbmVkIGFuZCBhcHByb3ZlZCBieSBhIGdvdmVybm1lbnQtYXBwb2ludGVkIHBhbmVsLCB3aGljaCBjYW4gb3JkZXIgY29ycmVjdGlvbnMgb2YgcGVyY2VpdmVkIGhpc3RvcmljYWwgaW5hY2N1cmFjaWVzLgpUaGUgcHVibGlzaGVycyBvZiBzZXZlbiB0ZXh0Ym9va3Mgc2xhdGVkIGZvciB1c2UgaW4gaGlnaCBzY2hvb2xzIG5leHQgeWVhciBoYWQgYmVlbiBhc2tlZCB0byBtYWtlIHJlbGV2YW50IGNoYW5nZXMgYW5kIHN1Ym1pdCB0aGVtIGZvciBhcHByb3ZhbC4KQW4gb2ZmaWNpYWwgb2YgdGhlIEVkdWNhdGlvbiBNaW5pc3RyeSBzYWlkIFNhdHVyZGF5IHRoYXQgdGhlIG1pbmlzdHJ5IGhhcyBubyBpbW1lZGlhdGUgcGxhbnMgY29uY2VybmluZyB0aGUgYW1lbmRtZW50LgpTaGUgc3Bva2Ugb24gY29uZGl0aW9uIG9mIGFub255bWl0eSwgY2l0aW5nIHBvbGljeS4KU2F0dXJkYXkncyByYWxseSB3YXMgdGhlIGxhcmdlc3QgaW4gT2tpbmF3YSBzaW5jZSB0aGUgaXNsYW5kIHdhcyByZXR1cm5lZCB0byBKYXBhbiBieSB0aGUgVW5pdGVkIFN0YXRlcyBpbiAxOTcyLCBLeW9kbyBOZXdzIGFnZW5jeSBzYWlkLgpJbiAxOTk1LCA4NSwwMDAgcGVvcGxlIHRvb2sgcGFydCBpbiBhIHJhbGx5IGZvbGxvd2luZyB0aGUgMTk5NSByYXBlIG9mIGEgc2Nob29sZ2lybCB0aGVyZSBieSB0aHJlZSBBbWVyaWNhbiBzZXJ2aWNlbWVuLCBhY2NvcmRpbmcgdG8gdGhlIGFnZW5jeS4K
[(MTAwLDAwMCBQcm90ZXN0IE92ZXIgSmFwYW4gVGV4dGJvb2sKVE9LWU8gKEFQKSAtIE1vcmUgdGhhbiAxMDAsMDAwIHBlb3BsZSBwcm90ZXN0ZWQgU2F0dXJkYXkgaW4gc291dGhlcm4gSmFwYW4gYWdhaW5zdCB0aGUgY2VudHJhbCBnb3Zlcm5tZW50J3Mgb3JkZXIgdG8gbW9kaWZ5IHNjaG9vbCB0ZXh0Ym9va3Mgd2hpY2ggc2F5IHRoZSBjb3VudHJ5J3MgYXJteSBmb3JjZWQgY2l2aWxpYW5zIHRvIGNvbW1pdCBtYXNzIHN1aWNpZGUgYXQgdGhlIGVuZCBvZiBXb3JsZCBXYXIgSUkuClB1Ymxpc2hlcnMgb2YgaGlzdG9yeSB0ZXh0Ym9va3Mgd2VyZSBvcmRlcmVkIGluIERlY2VtYmVyIHRvIG1vZGlmeSBzZWN0aW9ucyB0aGF0IHNhaWQgdGhlIEphcGFuZXNlIGFybXkgLSBmYWNlZCB3aXRoIGFuIGltcGVuZGluZyBVLlMuIGludmFzaW9uIGluIDE5NDUgLSBoYW5kZWQgb3V0IGdyZW5hZGVzIHRvIHJlc2lkZW50cyBpbiBPa2luYXdhIGFuZCBvcmRlcmVkIHRoZW0gdG8ga2lsbCB0aGVtc2VsdmVzIHJhdGhlciB0aGFuIHN1cnJlbmRlciB0byB0aGUgQW1lcmljYW5zLgpUaGUgYW1lbmRtZW50IG9yZGVyIGNhbWUgYW1pZCBtb3ZlcyBieSBUb2t5byB0byBzb2Z0ZW4gYnJ1dGFsIGFjY291bnRzIG9mIEphcGFuZXNlIHdhcnRpbWUgY29uZHVjdCwgYnV0IHRyaWdnZXJlZCBpbW1lZGlhdGUgY29uZGVtbmF0aW9uIGZyb20gcmVzaWRlbnRzIGFuZCBhY2FkZW1pY3MuCkFib3V0IDExMCwwMDAgcmVzaWRlbnRzIGFuZCBwb2xpdGljaWFucyBhdHRlbmRlZCBTYXR1cmRheSdzIHJhbGxpZXMgaW4gdGhlIHByZWZlY3R1cmUgKHN0YXRlKSBvZiBPa2luYXdhLCBzYWlkIFlvc2hpbm8gVWV0c3UsIG9uZSBvZiB0aGUgb3JnYW5pemVycy4KIldlIGNhbm5vdCBidXJ5IHRoZSBmYWN0IHRoYXQgdGhlIEphcGFuZXNlIG1pbGl0YXJ5IHdhcyBpbnZvbHZlZCBpbiB0aGUgbWFzcyBzdWljaWRlLCB0YWtpbmcgaW50byBhY2NvdW50IG9mIHRoZSBnZW5lcmFsIGJhY2tncm91bmQgYW5kIHRlc3RpbW9uaWVzIHRoYXQgaGFuZCBncmVuYWRlcyB3ZXJlIGRlbGl2ZXJlZCwiIE9raW5hd2EgR292LiBIaXJva2F6dSBOYWthaW1hIHRvbGQgYSBjcm93ZCBnYXRoZXJlZCBhdCBhIHBhcmsgaW4gR2lub3dhbiBDaXR5LgpBY2NvdW50cyBvZiBmb3JjZWQgZ3JvdXAgc3VpY2lkZXMgb24gT2tpbmF3YSBhcmUgYmFja2VkIGJ5IGhpc3RvcmljYWwgcmVzZWFyY2gsIGFzIHdlbGwgYXMgdGVzdGltb25pZXMgZnJvbSB2aWN0aW1zJyByZWxhdGl2ZXMuCkhpc3RvcmlhbnMgYWxzbyBzYXkgY2l2aWxpYW5zIHdlcmUgaW5kdWNlZCBieSBnb3Zlcm5tZW50IHByb3BhZ2FuZGEgdG8gYmVsaWV2ZSBVLlMuIHNvbGRpZXJzIHdvdWxkIGNvbW1pdCBob3JyaWJsZSBhdHJvY2l0aWVzIGFuZCB0aGVyZWZvcmUga2lsbGVkIHRoZW1zZWx2ZXMgYW5kIHRoZWlyIGZhbWlsaWVzIHRvIGF2b2lkIGNhcHR1cmUuCkFib3V0IDUwMCBwZW9wbGUgY29tbWl0dGVkIHN1aWNpZGUsIGFjY29yZGluZyB0byBjaXZpYyBncm91cCBhbmQgbWVkaWEgcmVwb3J0cy4KSW4gcmVjZW50IHllYXJzLCBzb21lIGFjYWRlbWljcyBoYXZlIHF1ZXN0aW9uZWQgd2hldGhlciB0aGUgc3VpY2lkZXMgd2VyZSBmb3JjZWQgLSBwYXJ0IG9mIGEgZ2VuZXJhbCBwdXNoIGJ5IEphcGFuZXNlIGNvbnNlcnZhdGl2ZXMgdG8gc29mdGVuIGNyaXRpY2lzbSBvZiBUb2t5bydzIHdhcnRpbWUgY29uZHVjdC4KVGhlIGJsb29keSBiYXR0bGUgaW4gT2tpbmF3YSByYWdlZCBmcm9tIGxhdGUgTWFyY2ggdGhyb3VnaCBKdW5lIDE5NDUsIGxlYXZpbmcgbW9yZSB0aGFuIDIwMCwwMDAgY2l2aWxpYW5zIGFuZCBzb2xkaWVycyBkZWFkLCBhbmQgc3BlZWRpbmcgdGhlIGNvbGxhcHNlIG9mIEphcGFuJ3MgZGVmZW5zZXMuClRoZSBVLlMuIG9jY3VwaWVkIE9raW5hd2EgZnJvbSB0aGUgZW5kIG9mIFdvcmxkIFdhciBJSSB1bnRpbCAxOTcyLgpOZXcgdGV4dGJvb2tzIGZvciB1c2UgaW4gSmFwYW5lc2Ugc2Nob29scyBtdXN0IGJlIHNjcmVlbmVkIGFuZCBhcHByb3ZlZCBieSBhIGdvdmVybm1lbnQtYXBwb2ludGVkIHBhbmVsLCB3aGljaCBjYW4gb3JkZXIgY29ycmVjdGlvbnMgb2YgcGVyY2VpdmVkIGhpc3RvcmljYWwgaW5hY2N1cmFjaWVzLgpUaGUgcHVibGlzaGVycyBvZiBzZXZlbiB0ZXh0Ym9va3Mgc2xhdGVkIGZvciB1c2UgaW4gaGlnaCBzY2hvb2xzIG5leHQgeWVhciBoYWQgYmVlbiBhc2tlZCB0byBtYWtlIHJlbGV2YW50IGNoYW5nZXMgYW5kIHN1Ym1pdCB0aGVtIGZvciBhcHByb3ZhbC4KQW4gb2ZmaWNpYWwgb2YgdGhlIEVkdWNhdGlvbiBNaW5pc3RyeSBzYWlkIFNhdHVyZGF5IHRoYXQgdGhlIG1pbmlzdHJ5IGhhcyBubyBpbW1lZGlhdGUgcGxhbnMgY29uY2VybmluZyB0aGUgYW1lbmRtZW50LgpTaGUgc3Bva2Ugb24gY29uZGl0aW9uIG9mIGFub255bWl0eSwgY2l0aW5nIHBvbGljeS4KU2F0dXJkYXkncyByYWxseSB3YXMgdGhlIGxhcmdlc3QgaW4gT2tpbmF3YSBzaW5jZSB0aGUgaXNsYW5kIHdhcyByZXR1cm5lZCB0byBKYXBhbiBieSB0aGUgVW5pdGVkIFN0YXRlcyBpbiAxOTcyLCBLeW9kbyBOZXdzIGFnZW5jeSBzYWlkLgpJbiAxOTk1LCA4NSwwMDAgcGVvcGxlIHRvb2sgcGFydCBpbiBhIHJhbGx5IGZvbGxvd2luZyB0aGUgMTk5NSByYXBlIG9mIGEgc2Nob29sZ2lybCB0aGVyZSBieSB0aHJlZSBBbWVyaWNhbiBzZXJ2aWNlbWVuLCBhY2NvcmRpbmcgdG8gdGhlIGFnZW5jeS4K, 'PERSON')]
UmFjaXN0IEluY2lkZW50IFJvaWxzIFBhLgpIaWdoIFNjaG9vbAooQVApIC0gRm9yIHllYXJzLCBhIGNsaXF1ZSBvZiBoaWdoIHNjaG9vbCBzdHVkZW50cyBpbiB0aGlzIHByb3NwZXJvdXMgYW5kIG92ZXJ3aGVsbWluZ2x5IHdoaXRlIGJvcm91Z2ggaGF2ZSB3b3JuIGNsb3RoZXMgYWRvcm5lZCB3aXRoIENvbmZlZGVyYXRlIGZsYWdzIGFuZCBwYXJrZWQgdGhlaXIgcGlja3VwcyBpbiBhIHNlY3Rpb24gb2YgdGhlIHNjaG9vbCBwYXJraW5nIGxvdCBrbm93biBhcyAicmVkbmVjayByb3cuIgpUaGUgZGlzcGxheSwgc29tZSBwYXJlbnRzIG9mIG1pbm9yaXR5IHN0dWRlbnRzIHNheSwgd2FzIGp1c3Qgb25lIHN5bXB0b20gb2YgZmVzdGVyaW5nIHJhY2lzbSB0aGF0IHNjaG9vbCBvZmZpY2lhbHMgaWdub3JlZCB1bnRpbCBhbmltb3NpdGllcyBib2lsZWQgb3ZlciBsYXN0IHdlZWsuClRoYXQncyB3aGVuIHRocmVlIHdoaXRlIDE2LXllYXItb2xkIHN0dWRlbnRzIGFsbGVnZWRseSB5ZWxsZWQgcmFjaWFsIHNsdXJzIGFuZCB0aHJldyBwYXBlciB3YWRzIGF0IG1pbm9yaXR5IHN0dWRlbnRzIG91dHNpZGUgdGhlIDEsNjAwLSBzdHVkZW50IFdhcndpY2sgSGlnaCBTY2hvb2wuClNjaG9vbCBvZmZpY2lhbHMgdm93ZWQgdG8gZGlzY2lwbGluZSB0aGUgdGhyZWUgc3R1ZGVudHMsIHRpZ2h0ZW4gc2VjdXJpdHkgYW5kIGJhbiBDb25mZWRlcmF0ZSBmbGFncyBvbiBzY2hvb2wgcHJvcGVydHkuCk9uIFdlZG5lc2RheSwgcG9saWNlIGNoYXJnZWQgdGhlIHRocmVlIHdpdGggZGlzb3JkZXJseSBjb25kdWN0LgpUaGUgImRpc3R1cmJpbmcgYW5kIHJlcHVsc2l2ZSIgT2N0LiAzIGNvbmZyb250YXRpb24gd2FzIGEgIndha2UtdXAgY2FsbCIgZm9yIFdhcndpY2sgSGlnaCBTY2hvb2wgc2FpZCBTdXBlcmludGVuZGVudCBKb2huIEdlb3JnZS4KIlBlcmhhcHMgd2Ugd2VyZSBsdWxsZWQgaW50byBhIGZhbHNlIHNlbnNlIHRoYXQgb3VyIHNjaG9vbCBkaXN0cmljdCB3YXMgaW1tdW5lIHRvIHJhY2lzbSBhbmQgYmlnb3RyeSwiIGhlIHNhaWQuClNvbWUgc3R1ZGVudHMgc3VzcGVjdCB0aGUgcGVycGV0cmF0b3JzIHdlcmUgdHJ5aW5nIHRvIGltaXRhdGUgd2hpdGUgc3R1ZGVudHMgaW4gSmVuYSwgTGEuLCB3aG8gZmFubmVkIHJhY2lhbCB0ZW5zaW9ucyBsYXN0IHllYXIgYnkgaGFuZ2luZyBub29zZXMgZnJvbSBhIHRyZWUgb3V0c2lkZSBhIGhpZ2ggc2Nob29sLgpQb2xpY2UgQ2hpZWYgV2lsbGlhbSBTZWFzZSBzYWlkIHRoZXJlJ3Mgbm8gZXZpZGVuY2UgdGhlIHN1c3BlY3RzIHdlcmUgaW5mbHVlbmNlZCBieSB0aGUgSmVuYSBjYXNlLgpXaGF0IGlzIHJhY2lhbCBpbnRpbWlkYXRpb24/Ckl0J3MgdHJ5aW5nIHRvIGhhdmUgcG93ZXIgb3ZlciBzb21lb25lIGVsc2UsIiBTZWFzZSBzYWlkLgpJIHRoaW5rIHRoYXQncyB0aGVpciBtb3RpdmF0aW9uLgpFcmFzbW8gQ29yYSBKci4sIGEgUHVlcnRvIFJpY2FuIG5hdGl2ZSB3aG9zZSAxNC15ZWFyLW9sZCBzb24sIEVyaWssIHdhcyBhbW9uZyB0aGUgdmljdGltcywgc2FpZCB0aGUgc2Nob29sIHNob3VsZCBleHBlbCBhbGwgb2YgdGhlIHJvdWdobHkgZG96ZW4gc3R1ZGVudHMgd2hvIGFsbGVnZWRseSBlbmdhZ2VkIGluIHJhY2lzdCBiZWhhdmlvci4KIkknbSBub3QgZ29pbmcgdG8gcHV0IHVwIHdpdGggaXQgLSBteSBraWQgc2hvdWxkIGhhdmUgbmV2ZXIgd2VudCB0aHJvdWdoIHRoaXMsIiBDb3JhIHNhaWQuCkVpdGhlciB0aGV5IGFsbCBnZXQgb3V0LCBvciB3ZSdyZSBqdXN0IGdvaW5nIHRvIGhhdmUgdG8gbWFrZSBhIGJpZ2dlciBpc3N1ZSBvZiBpdC4KVGhlIGNvbmZyb250YXRpb24gY29tZXMgYXMgYSBtYWpvciBkaXNhcHBvaW50bWVudCB0byBDb3JhLgpIZSBtb3ZlZCBoaXMgZmFtaWx5IGZyb20gbmVhcmJ5IExhbmNhc3RlciBhYm91dCBhIHllYXIgYWdvLCBleHBlY3RpbmcgaGlzIHNvbiB0byByZWNlaXZlIGEgYmV0dGVyIGVkdWNhdGlvbiB0aGFuIGhlIGNvdWxkIGluIExhbmNhc3RlcidzIHRyb3VibGVkIHNjaG9vbHMuCkVyaWsgQ29yYSwgYSBmcmVzaG1hbiwgc2FpZCBoZSB3YXMgaGFuZ2luZyBvdXQgYnkgdGhlIGZsYWdwb2xlIHdpdGggdHdvIGJveXMgLSBvbmUgYmxhY2sgYW5kIG9uZSBiaXJhY2lhbCAtIHdoZW4gdGhlIHRhdW50aW5nIG9jY3VycmVkIGJlZm9yZSB0aGUgc3RhcnQgb2Ygc2Nob29sLgpJdCBicm9rZSB1cCB3aGVuIHRoZSBtb3JuaW5nIGJlbGwgcmFuZywgYnV0IGl0IGFsc28gc3Bhd25lZCBydW1vcnMgdGhhdCBzb21lIHN0dWRlbnRzIHBsYW5uZWQgdG8gYnJpbmcgZ3VucyB0byBzY2hvb2wgbGF0ZXIgaW4gdGhlIHdlZWsgYW5kIHN0YXJ0IHJpb3RzLgpBdCBhIGNvbW11bml0eSBtZWV0aW5nIE1vbmRheSwgc29tZSBwYXJlbnRzIHNhaWQgdGhlaXIgZWFybGllciBjb21wbGFpbnRzIGFib3V0IENvbmZlZGVyYXRlIGZsYWcgZGlzcGxheXMgYW5kIHJhY2lhbCBzbHVycyBmZWxsIG9uIGRlYWYgZWFycy4KT3RoZXJzIGNvbXBsYWluZWQgdGhhdCB0aGUgZGlzdHJpY3QgdG9vayB0b28gbG9uZyB0byBwdW5pc2ggdGhlIHBlcnBldHJhdG9ycy4KVGhlIHN1cGVyaW50ZW5kZW50IHNhaWQgdGhlIGluY2lkZW50IHdhcyByZXZlYWxlZCBvbmx5IGFmdGVyIGEgdGVhY2hlciBvdmVyaGVhcmQgb3RoZXIgc3R1ZGVudHMgZGlzY3Vzc2luZyBpdCBhbmQgYWxlcnRlZCBhZG1pbmlzdHJhdG9ycy4KQWx0aG91Z2ggc2Nob29sIG9mZmljaWFscyB3ZXJlIHByZXZpb3VzbHkgYXdhcmUgb2YgInJlZG5lY2sgcm93LCIgdGhleSBjb3VsZG4ndCBkaXNjaXBsaW5lIHN0dWRlbnRzIG1lcmVseSBmb3IgZGlzcGxheWluZyBhIENvbmZlZGVyYXRlIGZsYWcsIGEgc3ltYm9sIHRoYXQgaGFzIGJlZW4gcHJvdGVjdGVkIHVuZGVyIHRoZSBGaXJzdCBBbWVuZG1lbnQsIGhlIHNhaWQuCiJJZiB0aGVyZSB3ZXJlIHNpZ25zIG9mIHVucmVzdCwgdGhleSB3ZXJlIG5vdCBldmlkZW50IHRvIHVzIGF0IHRoYXQgcG9pbnQsIiBHZW9yZ2Ugc2FpZC4KVGhlIGhpZ2ggc2Nob29sIGlzIGp1c3QgYmxvY2tzIGF3YXkgZnJvbSBhIHBpY3R1cmVzcXVlIGRvd250b3duLCB0aGUgaHViIG9mIHRoZSBib3JvdWdoIG9mIGFib3V0IDksMDAwIHJlc2lkZW50cyBmb3VuZGVkIGluIDE3NTYuCkxpdGl0eiBpcyBrbm93biBmb3IgcXVhaW50IHNob3BzLCBhcnRpc3RzIGFuZCBTdHVyZ2lzIFByZXR6ZWwgSG91c2UsIHdoaWNoIGJpbGxzIGl0c2VsZiBhcyBBbWVyaWNhJ3MgZmlyc3QgcHJldHplbCBiYWtlcnksIGFuZCBpcyBuYW1lZCBhZnRlciBhIEJvaGVtaWFuIGNhc3RsZS4KVGFyeW4gQnVya21hbiwgd2hvIGF0dGVuZGVkIHRoZSBoaWdoIHNjaG9vbCBsYXN0IHllYXIsIHNhaWQgc2hlIGNvdWxkbid0IHJlbWVtYmVyIHRoZSAicmVkbmVjayByb3ciIGNsaXF1ZSBjYXVzaW5nIGFueSB0cm91YmxlIGluIHRoZSBwYXN0LgoiVGhleSBhbHdheXMgaGFkIHRoZSBmbGFncywgYnV0IHRoZXkgbmV2ZXIgZGlkIGFueXRoaW5nIHRvIHRoZSBibGFjayBraWRzLCIgc2FpZCBCdXJrbWFuLCAxNywgd2hvIGlzIHdoaXRlLgpJIGRvbid0IHVuZGVyc3RhbmQgd2h5IGl0IGFsbCBoYXBwZW5lZCB0aGlzIHllYXIuCk90aGVycyBzcGVjdWxhdGUgdGhhdCB0aGUgcGVycGV0cmF0b3JzIGZlbHQgdGhyZWF0ZW5lZCBieSBhIGdyb3dpbmcgYnV0IHN0aWxsIHRpbnkgbWlub3JpdHkgcG9wdWxhdGlvbiBhdCB0aGUgaGlnaCBzY2hvb2wuCkhpc3BhbmljcyBhY2NvdW50IGZvciByb3VnaGx5IDMgcGVyY2VudCBhbmQgYmxhY2tzIDIgcGVyY2VudCBvZiB0aGlzIHllYXIncyB0b3RhbCBlbnJvbGxtZW50LgoiTGFzdCB5ZWFyLCB0aGVyZSB3YXMgYSBsaXR0bGUgYml0IG9mIHJhY2lzbSwgYnV0IGl0IGRpZG4ndCBzdXJmYWNlIGFzIG11Y2ggYmVjYXVzZSB0aGVyZSB3ZXJlbid0IGFzIG1hbnkgbWlub3JpdGllcywiIHNhaWQgSmFzbWluZSBXaGFsZXksIGEgMTUteWVhci1vbGQgc29waG9tb3JlIHdobyBpcyBibGFjay4KSSBuZXZlciB0aG91Z2h0IEkgd2FzIGluIGRhbmdlciBvciBhbnl0aGluZywgYnV0IHRoaXMgeWVhciBpdCdzIHN0YXJ0aW5nIHRvIGVzY2FsYXRlIG1vcmUsIHNvIG5vdyBJJ20gc3RhcnRpbmcgdG8gZ2V0IGtpbmQgb2Ygd29ycmllZC4KU2luY2UgRnJpZGF5LCBwb2xpY2UgaGF2ZSBiZWVuIGNvbmR1Y3RpbmcgZGFpbHkgcGF0cm9scyBuZWFyIHRoZSBzY2hvb2wgYW5kIHNjcmVlbmluZyBiYWNrcGFja3MgYW5kIGJvb2sgYmFncyBmb3Igd2VhcG9ucy4KRXJpayBDb3JhIHNhaWQgaGUgZmVlbHMgdGhlIG1lYXN1cmVzIGFyZSBleGNlc3NpdmUuCiJOb3cga2lkcyBhcmUgdHJ5aW5nIHRvIGZlZWwgc29ycnkgZm9yIG1lLCBhbmQgSSBkb24ndCB3YW50IGtpZHMgdG8gZmVlbCBzb3JyeSBmb3IgbWUsIiBoZSBzYWlkLgpPbiBUaGUgTmV0OgpXYXJ3aWNrIFNjaG9vbCBEaXN0cmljdDogaHR0cDovL3d3dy53YXJ3aWNrLmsxMi5wYS51cwo=
[(UmFjaXN0IEluY2lkZW50IFJvaWxzIFBhLgpIaWdoIFNjaG9vbAooQVApIC0gRm9yIHllYXJzLCBhIGNsaXF1ZSBvZiBoaWdoIHNjaG9vbCBzdHVkZW50cyBpbiB0aGlzIHByb3NwZXJvdXMgYW5kIG92ZXJ3aGVsbWluZ2x5IHdoaXRlIGJvcm91Z2ggaGF2ZSB3b3JuIGNsb3RoZXMgYWRvcm5lZCB3aXRoIENvbmZlZGVyYXRlIGZsYWdzIGFuZCBwYXJrZWQgdGhlaXIgcGlja3VwcyBpbiBhIHNlY3Rpb24gb2YgdGhlIHNjaG9vbCBwYXJraW5nIGxvdCBrbm93biBhcyAicmVkbmVjayByb3cuIgpUaGUgZGlzcGxheSwgc29tZSBwYXJlbnRzIG9mIG1pbm9yaXR5IHN0dWRlbnRzIHNheSwgd2FzIGp1c3Qgb25lIHN5bXB0b20gb2YgZmVzdGVyaW5nIHJhY2lzbSB0aGF0IHNjaG9vbCBvZmZpY2lhbHMgaWdub3JlZCB1bnRpbCBhbmltb3NpdGllcyBib2lsZWQgb3ZlciBsYXN0IHdlZWsuClRoYXQncyB3aGVuIHRocmVlIHdoaXRlIDE2LXllYXItb2xkIHN0dWRlbnRzIGFsbGVnZWRseSB5ZWxsZWQgcmFjaWFsIHNsdXJzIGFuZCB0aHJldyBwYXBlciB3YWRzIGF0IG1pbm9yaXR5IHN0dWRlbnRzIG91dHNpZGUgdGhlIDEsNjAwLSBzdHVkZW50IFdhcndpY2sgSGlnaCBTY2hvb2wuClNjaG9vbCBvZmZpY2lhbHMgdm93ZWQgdG8gZGlzY2lwbGluZSB0aGUgdGhyZWUgc3R1ZGVudHMsIHRpZ2h0ZW4gc2VjdXJpdHkgYW5kIGJhbiBDb25mZWRlcmF0ZSBmbGFncyBvbiBzY2hvb2wgcHJvcGVydHkuCk9uIFdlZG5lc2RheSwgcG9saWNlIGNoYXJnZWQgdGhlIHRocmVlIHdpdGggZGlzb3JkZXJseSBjb25kdWN0LgpUaGUgImRpc3R1cmJpbmcgYW5kIHJlcHVsc2l2ZSIgT2N0LiAzIGNvbmZyb250YXRpb24gd2FzIGEgIndha2UtdXAgY2FsbCIgZm9yIFdhcndpY2sgSGlnaCBTY2hvb2wgc2FpZCBTdXBlcmludGVuZGVudCBKb2huIEdlb3JnZS4KIlBlcmhhcHMgd2Ugd2VyZSBsdWxsZWQgaW50byBhIGZhbHNlIHNlbnNlIHRoYXQgb3VyIHNjaG9vbCBkaXN0cmljdCB3YXMgaW1tdW5lIHRvIHJhY2lzbSBhbmQgYmlnb3RyeSwiIGhlIHNhaWQuClNvbWUgc3R1ZGVudHMgc3VzcGVjdCB0aGUgcGVycGV0cmF0b3JzIHdlcmUgdHJ5aW5nIHRvIGltaXRhdGUgd2hpdGUgc3R1ZGVudHMgaW4gSmVuYSwgTGEuLCB3aG8gZmFubmVkIHJhY2lhbCB0ZW5zaW9ucyBsYXN0IHllYXIgYnkgaGFuZ2luZyBub29zZXMgZnJvbSBhIHRyZWUgb3V0c2lkZSBhIGhpZ2ggc2Nob29sLgpQb2xpY2UgQ2hpZWYgV2lsbGlhbSBTZWFzZSBzYWlkIHRoZXJlJ3Mgbm8gZXZpZGVuY2UgdGhlIHN1c3BlY3RzIHdlcmUgaW5mbHVlbmNlZCBieSB0aGUgSmVuYSBjYXNlLgpXaGF0IGlzIHJhY2lhbCBpbnRpbWlkYXRpb24/Ckl0J3MgdHJ5aW5nIHRvIGhhdmUgcG93ZXIgb3ZlciBzb21lb25lIGVsc2UsIiBTZWFzZSBzYWlkLgpJIHRoaW5rIHRoYXQncyB0aGVpciBtb3RpdmF0aW9uLgpFcmFzbW8gQ29yYSBKci4sIGEgUHVlcnRvIFJpY2FuIG5hdGl2ZSB3aG9zZSAxNC15ZWFyLW9sZCBzb24sIEVyaWssIHdhcyBhbW9uZyB0aGUgdmljdGltcywgc2FpZCB0aGUgc2Nob29sIHNob3VsZCBleHBlbCBhbGwgb2YgdGhlIHJvdWdobHkgZG96ZW4gc3R1ZGVudHMgd2hvIGFsbGVnZWRseSBlbmdhZ2VkIGluIHJhY2lzdCBiZWhhdmlvci4KIkknbSBub3QgZ29pbmcgdG8gcHV0IHVwIHdpdGggaXQgLSBteSBraWQgc2hvdWxkIGhhdmUgbmV2ZXIgd2VudCB0aHJvdWdoIHRoaXMsIiBDb3JhIHNhaWQuCkVpdGhlciB0aGV5IGFsbCBnZXQgb3V0LCBvciB3ZSdyZSBqdXN0IGdvaW5nIHRvIGhhdmUgdG8gbWFrZSBhIGJpZ2dlciBpc3N1ZSBvZiBpdC4KVGhlIGNvbmZyb250YXRpb24gY29tZXMgYXMgYSBtYWpvciBkaXNhcHBvaW50bWVudCB0byBDb3JhLgpIZSBtb3ZlZCBoaXMgZmFtaWx5IGZyb20gbmVhcmJ5IExhbmNhc3RlciBhYm91dCBhIHllYXIgYWdvLCBleHBlY3RpbmcgaGlzIHNvbiB0byByZWNlaXZlIGEgYmV0dGVyIGVkdWNhdGlvbiB0aGFuIGhlIGNvdWxkIGluIExhbmNhc3RlcidzIHRyb3VibGVkIHNjaG9vbHMuCkVyaWsgQ29yYSwgYSBmcmVzaG1hbiwgc2FpZCBoZSB3YXMgaGFuZ2luZyBvdXQgYnkgdGhlIGZsYWdwb2xlIHdpdGggdHdvIGJveXMgLSBvbmUgYmxhY2sgYW5kIG9uZSBiaXJhY2lhbCAtIHdoZW4gdGhlIHRhdW50aW5nIG9jY3VycmVkIGJlZm9yZSB0aGUgc3RhcnQgb2Ygc2Nob29sLgpJdCBicm9rZSB1cCB3aGVuIHRoZSBtb3JuaW5nIGJlbGwgcmFuZywgYnV0IGl0IGFsc28gc3Bhd25lZCBydW1vcnMgdGhhdCBzb21lIHN0dWRlbnRzIHBsYW5uZWQgdG8gYnJpbmcgZ3VucyB0byBzY2hvb2wgbGF0ZXIgaW4gdGhlIHdlZWsgYW5kIHN0YXJ0IHJpb3RzLgpBdCBhIGNvbW11bml0eSBtZWV0aW5nIE1vbmRheSwgc29tZSBwYXJlbnRzIHNhaWQgdGhlaXIgZWFybGllciBjb21wbGFpbnRzIGFib3V0IENvbmZlZGVyYXRlIGZsYWcgZGlzcGxheXMgYW5kIHJhY2lhbCBzbHVycyBmZWxsIG9uIGRlYWYgZWFycy4KT3RoZXJzIGNvbXBsYWluZWQgdGhhdCB0aGUgZGlzdHJpY3QgdG9vayB0b28gbG9uZyB0byBwdW5pc2ggdGhlIHBlcnBldHJhdG9ycy4KVGhlIHN1cGVyaW50ZW5kZW50IHNhaWQgdGhlIGluY2lkZW50IHdhcyByZXZlYWxlZCBvbmx5IGFmdGVyIGEgdGVhY2hlciBvdmVyaGVhcmQgb3RoZXIgc3R1ZGVudHMgZGlzY3Vzc2luZyBpdCBhbmQgYWxlcnRlZCBhZG1pbmlzdHJhdG9ycy4KQWx0aG91Z2ggc2Nob29sIG9mZmljaWFscyB3ZXJlIHByZXZpb3VzbHkgYXdhcmUgb2YgInJlZG5lY2sgcm93LCIgdGhleSBjb3VsZG4ndCBkaXNjaXBsaW5lIHN0dWRlbnRzIG1lcmVseSBmb3IgZGlzcGxheWluZyBhIENvbmZlZGVyYXRlIGZsYWcsIGEgc3ltYm9sIHRoYXQgaGFzIGJlZW4gcHJvdGVjdGVkIHVuZGVyIHRoZSBGaXJzdCBBbWVuZG1lbnQsIGhlIHNhaWQuCiJJZiB0aGVyZSB3ZXJlIHNpZ25zIG9mIHVucmVzdCwgdGhleSB3ZXJlIG5vdCBldmlkZW50IHRvIHVzIGF0IHRoYXQgcG9pbnQsIiBHZW9yZ2Ugc2FpZC4KVGhlIGhpZ2ggc2Nob29sIGlzIGp1c3QgYmxvY2tzIGF3YXkgZnJvbSBhIHBpY3R1cmVzcXVlIGRvd250b3duLCB0aGUgaHViIG9mIHRoZSBib3JvdWdoIG9mIGFib3V0IDksMDAwIHJlc2lkZW50cyBmb3VuZGVkIGluIDE3NTYuCkxpdGl0eiBpcyBrbm93biBmb3IgcXVhaW50IHNob3BzLCBhcnRpc3RzIGFuZCBTdHVyZ2lzIFByZXR6ZWwgSG91c2UsIHdoaWNoIGJpbGxzIGl0c2VsZiBhcyBBbWVyaWNhJ3MgZmlyc3QgcHJldHplbCBiYWtlcnksIGFuZCBpcyBuYW1lZCBhZnRlciBhIEJvaGVtaWFuIGNhc3RsZS4KVGFyeW4gQnVya21hbiwgd2hvIGF0dGVuZGVkIHRoZSBoaWdoIHNjaG9vbCBsYXN0IHllYXIsIHNhaWQgc2hlIGNvdWxkbid0IHJlbWVtYmVyIHRoZSAicmVkbmVjayByb3ciIGNsaXF1ZSBjYXVzaW5nIGFueSB0cm91YmxlIGluIHRoZSBwYXN0LgoiVGhleSBhbHdheXMgaGFkIHRoZSBmbGFncywgYnV0IHRoZXkgbmV2ZXIgZGlkIGFueXRoaW5nIHRvIHRoZSBibGFjayBraWRzLCIgc2FpZCBCdXJrbWFuLCAxNywgd2hvIGlzIHdoaXRlLgpJIGRvbid0IHVuZGVyc3RhbmQgd2h5IGl0IGFsbCBoYXBwZW5lZCB0aGlzIHllYXIuCk90aGVycyBzcGVjdWxhdGUgdGhhdCB0aGUgcGVycGV0cmF0b3JzIGZlbHQgdGhyZWF0ZW5lZCBieSBhIGdyb3dpbmcgYnV0IHN0aWxsIHRpbnkgbWlub3JpdHkgcG9wdWxhdGlvbiBhdCB0aGUgaGlnaCBzY2hvb2wuCkhpc3BhbmljcyBhY2NvdW50IGZvciByb3VnaGx5IDMgcGVyY2VudCBhbmQgYmxhY2tzIDIgcGVyY2VudCBvZiB0aGlzIHllYXIncyB0b3RhbCBlbnJvbGxtZW50LgoiTGFzdCB5ZWFyLCB0aGVyZSB3YXMgYSBsaXR0bGUgYml0IG9mIHJhY2lzbSwgYnV0IGl0IGRpZG4ndCBzdXJmYWNlIGFzIG11Y2ggYmVjYXVzZSB0aGVyZSB3ZXJlbid0IGFzIG1hbnkgbWlub3JpdGllcywiIHNhaWQgSmFzbWluZSBXaGFsZXksIGEgMTUteWVhci1vbGQgc29waG9tb3JlIHdobyBpcyBibGFjay4KSSBuZXZlciB0aG91Z2h0IEkgd2FzIGluIGRhbmdlciBvciBhbnl0aGluZywgYnV0IHRoaXMgeWVhciBpdCdzIHN0YXJ0aW5nIHRvIGVzY2FsYXRlIG1vcmUsIHNvIG5vdyBJJ20gc3RhcnRpbmcgdG8gZ2V0IGtpbmQgb2Ygd29ycmllZC4KU2luY2UgRnJpZGF5LCBwb2xpY2UgaGF2ZSBiZWVuIGNvbmR1Y3RpbmcgZGFpbHkgcGF0cm9scyBuZWFyIHRoZSBzY2hvb2wgYW5kIHNjcmVlbmluZyBiYWNrcGFja3MgYW5kIGJvb2sgYmFncyBmb3Igd2VhcG9ucy4KRXJpayBDb3JhIHNhaWQgaGUgZmVlbHMgdGhlIG1lYXN1cmVzIGFyZSBleGNlc3NpdmUuCiJOb3cga2lkcyBhcmUgdHJ5aW5nIHRvIGZlZWwgc29ycnkgZm9yIG1lLCBhbmQgSSBkb24ndCB3YW50IGtpZHMgdG8gZmVlbCBzb3JyeSBmb3IgbWUsIiBoZSBzYWlkLgpPbiBUaGUgTmV0OgpXYXJ3aWNrIFNjaG9vbCBEaXN0cmljdDogaHR0cDovL3d3dy53YXJ3aWNrLmsxMi5wYS51cwo=, 'DATE')]
V2lzY29uc2luIDkxMTogIkhlJ3MgU2hvb3RpbmcgdG8gS2lsbCIKKEFQKSAtIENyYW5kb24gUG9saWNlIE9mZmljZXIgR3JlZyBDYXJ0ZXIncyBmcmFudGljIGNhbGwgY2FtZSBpbnRvIGRpc3BhdGNoZXJzIGEgbGl0dGxlIGJlZm9yZSAzIGEubS4KIkhlIGlzIHNob290aW5nIHRvIGtpbGwsIiBDYXJ0ZXIgc2FpZC4KQ2FydGVyIHNob3dlZCB1cCBhdCB0aGUgZHVwbGV4IHdoZXJlIGp1c3QgbWludXRlcyBlYXJsaWVyIG9mZi1kdXR5IGRlcHV0eSBUeWxlciBQZXRlcnNvbiBoYWQgZ3VubmVkIGRvd24gc2l4IHlvdW5nIHBlb3BsZSBhbmQgd291bmRlZCBhIHNldmVudGguCkluIGEgZGVzcGVyYXRlIG1lc3NhZ2UgdG8gRm9yZXN0IENvdW50eSBkaXNwYXRjaGVycywgQ2FydGVyIHJlcG9ydGVkIFBldGVyc29uIGhhZCBmaXJlZCBhdCBoaW0gYW5kIGp1c3QgbWlzc2VkIGhpcyBoZWFkLgpDYXJ0ZXIncyBtZXNzYWdlIHdhcyBhbW9uZyBhYm91dCBhIGRvemVuIDkxMSByZWNvcmRpbmdzIHRoZSBzdGF0ZSBEZXBhcnRtZW50IG9mIEp1c3RpY2UgcmVsZWFzZWQgVGh1cnNkYXkgYXMgdGhlIGFnZW5jeSBzb3J0ZWQgdGhyb3VnaCBqdXN0IHdoYXQgaGFwcGVuZWQgaW4gdGhlIHRpbnkgbm9ydGh3b29kcyBjb21tdW5pdHkgU3VuZGF5IG1vcm5pbmcuCkludmVzdGlnYXRvcnMgc2F5IFBldGVyc29uJ3MgMTgteWVhci1vbGQgZXgtZ2lybGZyaWVuZCwgSm9yZGFubmUgTXVycmF5LCB3YXMgaW4gdGhlIGdyb3VwLCB3aGljaCBoYWQgZ2F0aGVyZWQgYXQgdGhlIGR1cGxleCBmb3IgYSBsYXRlLSBuaWdodCBwaXp6YSBhbmQgbW92aWUgcGFydHkuClRoZXkgc2F5IFBldGVyc29uIHNob3dlZCB1cCBhbmQgZ3JldyBhbmdyeSBhZnRlciBNdXJyYXkgcmVqZWN0ZWQgaGlzIGF0dGVtcHQgdG8gcmVjb25jaWxlLgpIZSB3ZW50IG91dCB0byBoaXMgdHJ1Y2ssIGdvdCBvdXQgYW4gQVItMTUgYXNzYXVsdCByaWZsZSwgd2VudCBiYWNrIGluc2lkZSBhbmQgc3RhcnRlZCBzaG9vdGluZywgaW52ZXN0aWdhdG9ycyBzYWlkLgpUaGVuIGhlIGZsZWQuClBldGVyc29uIGFsc28gZmF0YWxseSBzaG90IEJyYWRsZXkgU2NodWx0eiwgMjA7IExpYW5uYSBUaG9tYXMsIDE4OyBLYXRyaW5hIE1jQ29ya2xlLCAxOCwgYW5kIExpbmRzZXkgU3RhaGwsIDE0LgpBIHNldmVudGggdmljdGltLCBDaGFybGllIE5laXR6ZWwsIDIxLCB3YXMgaG9zcGl0YWxpemVkIGluIGZhaXIgY29uZGl0aW9uLgpQb2xpY2UgZmluYWxseSBjYXVnaHQgdXAgd2l0aCBQZXRlcnNvbiBhdCBhIGNhYmluIGluIHRoZSB0b3duIG9mIEFyZ29ubmUsIHdoZXJlIGludmVzdGlnYXRvcnMgc2F5IGhlIGZhdGFsbHkgc2hvdCBoaW1zZWxmIGFzIHRoZXkgY2xvc2VkIGluLgpUaGUgcmVjb3JkaW5ncyBpbGx1c3RyYXRlIGhvdyBjb25mdXNpb24gYW5kIGZlYXIgcmFjZWQgdGhyb3VnaCBDcmFuZG9uLCBhIHRvd24gb2YgMiwwMDAgYWJvdXQgMTAwIG1pbGVzIG5vcnRod2VzdCBvZiBHcmVlbiBCYXksIGFzIHdvcmQgb2YgdGhlIHNob290aW5ncyBzcHJlYWQuCk5laWdoYm9ycyBjb3VsZCBiZSBoZWFyZCBhc2tpbmcgaWYgdGhleSB3ZXJlIGluIGRhbmdlciBhbmQgd2hldGhlciB0aGV5IHNob3VsZCBmbGVlIHRoZWlyIGhvbWVzIGFzIGRvemVucyBvZiBjYWxscyBwb3VyZWQgaW4uClRoZSBlYXJsaWVzdCByZWNvcmRpbmcgdGhlIGFnZW5jeSByZWxlYXNlZCB3YXMgbWFkZSBhdCAyOjQ5IGEubS4KSW4gaXQsIG5laWdoYm9yIERvbm5lbGwgRGFjaGVsZXQgcmVwb3J0ZWQgc2hlIGhhZCBoZWFyZCB0d28gc2V0cyBvZiBzaG90cyBhbmQgaGFkIHNlZW4gYSBtYW4gcnVubmluZyBhd2F5LgpTaGUgdG9sZCB0aGUgZGlzcGF0Y2hlciB0aGUgbWFuIGdvdCBpbiBhIHBpY2t1cCB0cnVjayBhbmQgc3BlZCBhd2F5LgpJbiB0aGUgYmFja2dyb3VuZCBDYXJ0ZXIgY291bGQgYmUgaGVhcmQgc2F5aW5nIGhpcyBzcXVhZCBoYWQgYmVlbiBzaG90LgpNb21lbnRzIGxhdGVyIERhY2hlbGV0IGNvdWxkIGJlIGhlYXJkIHllbGxpbmc6ICJCb2IsIGdldCB0aGUga2lkcyBkb3duIQpHZXQgdGhlIGtpZHMgZG93biEKU2ltdWx0YW5lb3VzbHksIG5laWdoYm9yIEplYW4gQ2hpbGRlcnMgY2FsbGVkIGluIGFuZCBzYWlkIHNvbWV0aGluZyBpcyBnb2luZyBvbiwgImxpa2UgYXV0b21hdGljIHdlYXBvbnMuIgpDYXJ0ZXIgY291bGQgYmUgaGVhcmQgaW4gdGhlIGJhY2tncm91bmQgb2YgdGhhdCBjYWxsLCBicmVhdGhpbmcgaGVhdmlseS4KKEluYXVkaWJsZSkgc2hvb3Rlci4KSSBiZWxpZXZlIGl0J3MgRGVwdXR5IFBldGVyc29uLgpNeSBzcXVhZCdzIGJlZW4gc2hvdCAuLi4gYSByb3VuZCBhIGNvdXBsZSBjZW50aW1ldGVycyBmcm9tIG15IGhlYWQuCkl0IHdlbnQgdGhyb3VnaCBteSBzcXVhZC4KSGUgaXMgc2hvb3RpbmcgdG8ga2lsbC4KT3RoZXIgY2FsbGVycyBvdmVyIHRoZSBuZXh0IGZldyBtaW51dGVzIGRlc2NyaWJlZCBoZWFyaW5nIHNob3RzLgpEaXNwYXRjaGVycyB0b2xkIHRoZW0gdG8gc3RheSBpbiB0aGVpciBob21lcyBhbmQgYXZvaWQgd2luZG93cy4KQSBkaXNwYXRjaGVyIHRvbGQgb25lIGNhbGxlciB0aGV5J3ZlIHJlY2VpdmVkIDI1IGNhbGxzIGRlc2NyaWJpbmcgUGV0ZXJzb24ncyB0cnVjay4KSXQgd2FzIGEgYmxhY2sgVG95b3RhIFR1bmRyYSB0cnVjayB0aGF0IGp1c3Qgc3F1ZWFsZWQgb3V0IG9mIGhlcmUuCkxpa2UsIG1ham9ybHksIiBDaGlsZGVycyBzYWlkLgpFbGRyZWQgUGFnZWwgY2FsbGVkIGF0IDU6MjIgYS5tLiBhbmQgdG9sZCBhIGRpc3BhdGNoZXIgaGlzIHNvbiB3YXMgZ29pbmcgb3V0IHdpdGggb25lIG9mIHRoZSAiZ2FscyIgYXQgdGhlIGR1cGxleC4KSGUgd29uZGVyZWQgaWYgUGV0ZXJzb24gbWlnaHQgYmUgY29taW5nIGFmdGVyIGhpcyBmYW1pbHkgbmV4dC4KVGhlIGRpc3BhdGNoZXIgdG9sZCBoaW0gaGUgY2FuJ3QgcmVsZWFzZSBhbnkgaW5mb3JtYXRpb24gYW5kIHRvIHN0YXkgaW5kb29ycy4KIldlJ3JlIGtpbmQgb2YgaHVtcGVkIHVwIGhlcmUgd2l0aCBhIGJ1bmNoIG9mIHBlb3BsZSByaWdodCBub3csIiBQYWdlbCByZXBsaWVkLgpBdCAxMSBhLm0uLCBhcyB0aGUgc2VhcmNoIGZvciBQZXRlcnNvbiBjb250aW51ZWQsIERvbm5lbGwgRGFjaGVsZXQncyBzaXN0ZXItaW4tbGF3IERvbm5hIERhY2hlbGV0IGNhbGxlZCBhbmQgYXNrZWQgaWYgc2hlIGFuZCBoZXIgbmVpZ2hib3JzIHNob3VsZCBldmFjdWF0ZS4KIk5vIG9uZSBoYXMgY2FsbGVkIHVzIGFuZCB0b2xkIHVzIGFueXRoaW5nIGFib3V0IHRoaXMgdW50aWwgYSBsaXR0bGUgd2hpbGUgYWdvLCIgc2hlIHNhaWQuCkEgZGlzcGF0Y2hlciB0b2xkIGhlciB0byBzdGF5IHB1dC4KQWJvdXQgNDUgbWludXRlcyBsYXRlciwgUGhpbCBNY0NvcmtsZSwgd2hvc2UgZ3JhbmRkYXVnaHRlciB3YXMgc2xhaW4sIGNhbGxlZC4KU3BlYWtpbmcgY2FsbWx5LCBoZSB3b25kZXJlZCB3aHkgaGlzIGdyYW5kZGF1Z2h0ZXIncyBjYXIgd2FzIG91dHNpZGUgYSB0cmFpbGVyIGhvdXNlLgpJJ20gS2F0cmluYSdzIGdyYW5kZmF0aGVyLgpTaGUgd2FzIGluIHRoZSBzaG9vdGluZyB0aGlzIG1vcm5pbmcuCkhlciBjYXIgZm9yIHNvbWUgcmVhc29uIGlzIG91dCBoZXJlIG9uIHRoZSAoaW5hdWRpYmxlKSBsYW5lLCBhIGxpdHRsZSB0cmFpbGVyIGhvdXNlLgpBbmQgaXQgd2Fzbid0IGhlcmUgZWFybGllci4KSSBoZWFyIHRoZXkncmUgc3RpbGwgbG9va2luZyBmb3IgdGhhdCBndXkgYW5kIEkgZG9uJ3Qga25vdyBpZiBoZSdzIGdvdCBoZXIgY2FyIGFuZCBjb21lIG91dCBoZXJlIGFuZCB0b29rIG9mZiBpbiB0aGUgd29vZHMgb3Igd2hhdCwgYnV0IEkganVzdCB3YW50ZWQgdG8gcmVwb3J0IGl0LCIgaGUgc2FpZC4KQW4gaG91ciBsYXRlciBzdGF0ZSBEaXZpc2lvbiBvZiBDcmltaW5hbCBJbnZlc3RpZ2F0aW9uIGFnZW50IEpvZHkgV29ybWV0IGNhbGxlZCB0byByZXF1ZXN0IGEgbWVkaWNhbCBoZWxpY29wdGVyIGZvciBhIGd1bnNob3QgaW5qdXJ5LgpIZSBjYWxsZWQgYmFjayBhIG1pbnV0ZSBsYXRlciB0byBjYW5jZWwgdGhlIHJlcXVlc3QsIHNheWluZyB0aGUgc3ViamVjdCBpcyAiZG93bi4iCg==
[(V2lzY29uc2luIDkxMTogIkhlJ3MgU2hvb3RpbmcgdG8gS2lsbCIKKEFQKSAtIENyYW5kb24gUG9saWNlIE9mZmljZXIgR3JlZyBDYXJ0ZXIncyBmcmFudGljIGNhbGwgY2FtZSBpbnRvIGRpc3BhdGNoZXJzIGEgbGl0dGxlIGJlZm9yZSAzIGEubS4KIkhlIGlzIHNob290aW5nIHRvIGtpbGwsIiBDYXJ0ZXIgc2FpZC4KQ2FydGVyIHNob3dlZCB1cCBhdCB0aGUgZHVwbGV4IHdoZXJlIGp1c3QgbWludXRlcyBlYXJsaWVyIG9mZi1kdXR5IGRlcHV0eSBUeWxlciBQZXRlcnNvbiBoYWQgZ3VubmVkIGRvd24gc2l4IHlvdW5nIHBlb3BsZSBhbmQgd291bmRlZCBhIHNldmVudGguCkluIGEgZGVzcGVyYXRlIG1lc3NhZ2UgdG8gRm9yZXN0IENvdW50eSBkaXNwYXRjaGVycywgQ2FydGVyIHJlcG9ydGVkIFBldGVyc29uIGhhZCBmaXJlZCBhdCBoaW0gYW5kIGp1c3QgbWlzc2VkIGhpcyBoZWFkLgpDYXJ0ZXIncyBtZXNzYWdlIHdhcyBhbW9uZyBhYm91dCBhIGRvemVuIDkxMSByZWNvcmRpbmdzIHRoZSBzdGF0ZSBEZXBhcnRtZW50IG9mIEp1c3RpY2UgcmVsZWFzZWQgVGh1cnNkYXkgYXMgdGhlIGFnZW5jeSBzb3J0ZWQgdGhyb3VnaCBqdXN0IHdoYXQgaGFwcGVuZWQgaW4gdGhlIHRpbnkgbm9ydGh3b29kcyBjb21tdW5pdHkgU3VuZGF5IG1vcm5pbmcuCkludmVzdGlnYXRvcnMgc2F5IFBldGVyc29uJ3MgMTgteWVhci1vbGQgZXgtZ2lybGZyaWVuZCwgSm9yZGFubmUgTXVycmF5LCB3YXMgaW4gdGhlIGdyb3VwLCB3aGljaCBoYWQgZ2F0aGVyZWQgYXQgdGhlIGR1cGxleCBmb3IgYSBsYXRlLSBuaWdodCBwaXp6YSBhbmQgbW92aWUgcGFydHkuClRoZXkgc2F5IFBldGVyc29uIHNob3dlZCB1cCBhbmQgZ3JldyBhbmdyeSBhZnRlciBNdXJyYXkgcmVqZWN0ZWQgaGlzIGF0dGVtcHQgdG8gcmVjb25jaWxlLgpIZSB3ZW50IG91dCB0byBoaXMgdHJ1Y2ssIGdvdCBvdXQgYW4gQVItMTUgYXNzYXVsdCByaWZsZSwgd2VudCBiYWNrIGluc2lkZSBhbmQgc3RhcnRlZCBzaG9vdGluZywgaW52ZXN0aWdhdG9ycyBzYWlkLgpUaGVuIGhlIGZsZWQuClBldGVyc29uIGFsc28gZmF0YWxseSBzaG90IEJyYWRsZXkgU2NodWx0eiwgMjA7IExpYW5uYSBUaG9tYXMsIDE4OyBLYXRyaW5hIE1jQ29ya2xlLCAxOCwgYW5kIExpbmRzZXkgU3RhaGwsIDE0LgpBIHNldmVudGggdmljdGltLCBDaGFybGllIE5laXR6ZWwsIDIxLCB3YXMgaG9zcGl0YWxpemVkIGluIGZhaXIgY29uZGl0aW9uLgpQb2xpY2UgZmluYWxseSBjYXVnaHQgdXAgd2l0aCBQZXRlcnNvbiBhdCBhIGNhYmluIGluIHRoZSB0b3duIG9mIEFyZ29ubmUsIHdoZXJlIGludmVzdGlnYXRvcnMgc2F5IGhlIGZhdGFsbHkgc2hvdCBoaW1zZWxmIGFzIHRoZXkgY2xvc2VkIGluLgpUaGUgcmVjb3JkaW5ncyBpbGx1c3RyYXRlIGhvdyBjb25mdXNpb24gYW5kIGZlYXIgcmFjZWQgdGhyb3VnaCBDcmFuZG9uLCBhIHRvd24gb2YgMiwwMDAgYWJvdXQgMTAwIG1pbGVzIG5vcnRod2VzdCBvZiBHcmVlbiBCYXksIGFzIHdvcmQgb2YgdGhlIHNob290aW5ncyBzcHJlYWQuCk5laWdoYm9ycyBjb3VsZCBiZSBoZWFyZCBhc2tpbmcgaWYgdGhleSB3ZXJlIGluIGRhbmdlciBhbmQgd2hldGhlciB0aGV5IHNob3VsZCBmbGVlIHRoZWlyIGhvbWVzIGFzIGRvemVucyBvZiBjYWxscyBwb3VyZWQgaW4uClRoZSBlYXJsaWVzdCByZWNvcmRpbmcgdGhlIGFnZW5jeSByZWxlYXNlZCB3YXMgbWFkZSBhdCAyOjQ5IGEubS4KSW4gaXQsIG5laWdoYm9yIERvbm5lbGwgRGFjaGVsZXQgcmVwb3J0ZWQgc2hlIGhhZCBoZWFyZCB0d28gc2V0cyBvZiBzaG90cyBhbmQgaGFkIHNlZW4gYSBtYW4gcnVubmluZyBhd2F5LgpTaGUgdG9sZCB0aGUgZGlzcGF0Y2hlciB0aGUgbWFuIGdvdCBpbiBhIHBpY2t1cCB0cnVjayBhbmQgc3BlZCBhd2F5LgpJbiB0aGUgYmFja2dyb3VuZCBDYXJ0ZXIgY291bGQgYmUgaGVhcmQgc2F5aW5nIGhpcyBzcXVhZCBoYWQgYmVlbiBzaG90LgpNb21lbnRzIGxhdGVyIERhY2hlbGV0IGNvdWxkIGJlIGhlYXJkIHllbGxpbmc6ICJCb2IsIGdldCB0aGUga2lkcyBkb3duIQpHZXQgdGhlIGtpZHMgZG93biEKU2ltdWx0YW5lb3VzbHksIG5laWdoYm9yIEplYW4gQ2hpbGRlcnMgY2FsbGVkIGluIGFuZCBzYWlkIHNvbWV0aGluZyBpcyBnb2luZyBvbiwgImxpa2UgYXV0b21hdGljIHdlYXBvbnMuIgpDYXJ0ZXIgY291bGQgYmUgaGVhcmQgaW4gdGhlIGJhY2tncm91bmQgb2YgdGhhdCBjYWxsLCBicmVhdGhpbmcgaGVhdmlseS4KKEluYXVkaWJsZSkgc2hvb3Rlci4KSSBiZWxpZXZlIGl0J3MgRGVwdXR5IFBldGVyc29uLgpNeSBzcXVhZCdzIGJlZW4gc2hvdCAuLi4gYSByb3VuZCBhIGNvdXBsZSBjZW50aW1ldGVycyBmcm9tIG15IGhlYWQuCkl0IHdlbnQgdGhyb3VnaCBteSBzcXVhZC4KSGUgaXMgc2hvb3RpbmcgdG8ga2lsbC4KT3RoZXIgY2FsbGVycyBvdmVyIHRoZSBuZXh0IGZldyBtaW51dGVzIGRlc2NyaWJlZCBoZWFyaW5nIHNob3RzLgpEaXNwYXRjaGVycyB0b2xkIHRoZW0gdG8gc3RheSBpbiB0aGVpciBob21lcyBhbmQgYXZvaWQgd2luZG93cy4KQSBkaXNwYXRjaGVyIHRvbGQgb25lIGNhbGxlciB0aGV5J3ZlIHJlY2VpdmVkIDI1IGNhbGxzIGRlc2NyaWJpbmcgUGV0ZXJzb24ncyB0cnVjay4KSXQgd2FzIGEgYmxhY2sgVG95b3RhIFR1bmRyYSB0cnVjayB0aGF0IGp1c3Qgc3F1ZWFsZWQgb3V0IG9mIGhlcmUuCkxpa2UsIG1ham9ybHksIiBDaGlsZGVycyBzYWlkLgpFbGRyZWQgUGFnZWwgY2FsbGVkIGF0IDU6MjIgYS5tLiBhbmQgdG9sZCBhIGRpc3BhdGNoZXIgaGlzIHNvbiB3YXMgZ29pbmcgb3V0IHdpdGggb25lIG9mIHRoZSAiZ2FscyIgYXQgdGhlIGR1cGxleC4KSGUgd29uZGVyZWQgaWYgUGV0ZXJzb24gbWlnaHQgYmUgY29taW5nIGFmdGVyIGhpcyBmYW1pbHkgbmV4dC4KVGhlIGRpc3BhdGNoZXIgdG9sZCBoaW0gaGUgY2FuJ3QgcmVsZWFzZSBhbnkgaW5mb3JtYXRpb24gYW5kIHRvIHN0YXkgaW5kb29ycy4KIldlJ3JlIGtpbmQgb2YgaHVtcGVkIHVwIGhlcmUgd2l0aCBhIGJ1bmNoIG9mIHBlb3BsZSByaWdodCBub3csIiBQYWdlbCByZXBsaWVkLgpBdCAxMSBhLm0uLCBhcyB0aGUgc2VhcmNoIGZvciBQZXRlcnNvbiBjb250aW51ZWQsIERvbm5lbGwgRGFjaGVsZXQncyBzaXN0ZXItaW4tbGF3IERvbm5hIERhY2hlbGV0IGNhbGxlZCBhbmQgYXNrZWQgaWYgc2hlIGFuZCBoZXIgbmVpZ2hib3JzIHNob3VsZCBldmFjdWF0ZS4KIk5vIG9uZSBoYXMgY2FsbGVkIHVzIGFuZCB0b2xkIHVzIGFueXRoaW5nIGFib3V0IHRoaXMgdW50aWwgYSBsaXR0bGUgd2hpbGUgYWdvLCIgc2hlIHNhaWQuCkEgZGlzcGF0Y2hlciB0b2xkIGhlciB0byBzdGF5IHB1dC4KQWJvdXQgNDUgbWludXRlcyBsYXRlciwgUGhpbCBNY0NvcmtsZSwgd2hvc2UgZ3JhbmRkYXVnaHRlciB3YXMgc2xhaW4sIGNhbGxlZC4KU3BlYWtpbmcgY2FsbWx5LCBoZSB3b25kZXJlZCB3aHkgaGlzIGdyYW5kZGF1Z2h0ZXIncyBjYXIgd2FzIG91dHNpZGUgYSB0cmFpbGVyIGhvdXNlLgpJJ20gS2F0cmluYSdzIGdyYW5kZmF0aGVyLgpTaGUgd2FzIGluIHRoZSBzaG9vdGluZyB0aGlzIG1vcm5pbmcuCkhlciBjYXIgZm9yIHNvbWUgcmVhc29uIGlzIG91dCBoZXJlIG9uIHRoZSAoaW5hdWRpYmxlKSBsYW5lLCBhIGxpdHRsZSB0cmFpbGVyIGhvdXNlLgpBbmQgaXQgd2Fzbid0IGhlcmUgZWFybGllci4KSSBoZWFyIHRoZXkncmUgc3RpbGwgbG9va2luZyBmb3IgdGhhdCBndXkgYW5kIEkgZG9uJ3Qga25vdyBpZiBoZSdzIGdvdCBoZXIgY2FyIGFuZCBjb21lIG91dCBoZXJlIGFuZCB0b29rIG9mZiBpbiB0aGUgd29vZHMgb3Igd2hhdCwgYnV0IEkganVzdCB3YW50ZWQgdG8gcmVwb3J0IGl0LCIgaGUgc2FpZC4KQW4gaG91ciBsYXRlciBzdGF0ZSBEaXZpc2lvbiBvZiBDcmltaW5hbCBJbnZlc3RpZ2F0aW9uIGFnZW50IEpvZHkgV29ybWV0IGNhbGxlZCB0byByZXF1ZXN0IGEgbWVkaWNhbCBoZWxpY29wdGVyIGZvciBhIGd1bnNob3QgaW5qdXJ5LgpIZSBjYWxsZWQgYmFjayBhIG1pbnV0ZSBsYXRlciB0byBjYW5jZWwgdGhlIHJlcXVlc3QsIHNheWluZyB0aGUgc3ViamVjdCBpcyAiZG93bi4iCg==, 'PRODUCT')]
R2l1bGlhbmkgQmxhc3RzIENsaW50b24KUEVURVJCT1JPVUdILCBOLkguIChBUCkgLSBSZXB1YmxpY2FuIHByZXNpZGVudGlhbCBjYW5kaWRhdGUgUnVkeSBHaXVsaWFuaSBvbiBTdW5kYXkgYmxhc3RlZCBIaWxsYXJ5IFJvZGhhbSBDbGludG9uIGZvciB0YWxraW5nIGFib3V0IHdoYXQgc2hlIHdvdWxkIGRvIG9uIHRoZSBkaXBsb21hdGljIGZyb250IGJldHdlZW4gaGVyIHBvc3NpYmxlIGVsZWN0aW9uIGFuZCBpbmF1Z3VyYXRpb24uCkNsaW50b24gaGFzIHRvbGQgY3Jvd2RzIHNoZSB3b3VsZCBzZW5kICJkaXN0aW5ndWlzaGVkIEFtZXJpY2FucyBvZiBib3RoIHBvbGl0aWNhbCBwYXJ0aWVzIHRvIHRyYXZlbCBhcm91bmQgdGhlIHdvcmxkIG9uIG15IGJlaGFsZiB3aXRoIGEgdmVyeSBzaW1wbGUgbWVzc2FnZSB0byB0aGUgZ292ZXJubWVudHMgYW5kIHRoZSBwZW9wbGUgYWxpa2U6IFRoZSBlcmEgb2YgY293Ym95IGRpcGxvbWFjeSBpcyBvdmVyLiIKR2l1bGlhbmksIHBvaW50aW5nIHRvIGEgc3RvcnkgaW4gU3VuZGF5J3MgRGVzIE1vaW5lcyBSZWdpc3RlciBhYm91dCBoZXIgc3RhdGVtZW50cywgc2FpZCBzdWNoIGNvbW1lbnRzIGh1cnQgdGhlIFVuaXRlZCBTdGF0ZXMgYW5kIHVuZGVybWluZSB0aGUgYmFsYW5jZSBvZiBQcmVzaWRlbnQgQnVzaCdzIHRlcm0sIHdoaWNoIGVuZHMgSmFuLiAyMCwgMjAwOS4KIkkgdGhpbmsgdGhhdCBpdCdzIGltcG9ydGFudCB0aGF0IHdlIGNvbmR1Y3QgdGhpcyBkZWJhdGUgaW4gYSB3YXkgdGhhdCB3ZSBkb24ndCBpbnRlcmZlcmUgd2l0aCB0aGUgYWJpbGl0eSBvZiB0aGUgY291bnRyeSB0byBmdW5jdGlvbiBpbiBhIHByb3BlciB3YXksIGJldHdlZW4gdGhlIG5vdyBhbmQgKHRoZSBlbGVjdGlvbiksIiBHaXVsaWFuaSBzYWlkIGF0IHRoZSBzdGFydCBvZiBhIHRvd24gaGFsbC1zdHlsZSBtZWV0aW5nIGluIFBldGVyYm9yb3VnaC4KQ2FtcGFpZ25pbmcgd2l0aCBoaXMgd2lmZSwgSnVkaXRoLCB0aGUgZm9ybWVyIE5ldyBZb3JrIG1heW9yIHNhaWQgQ2xpbnRvbiBzaG91bGQgcmV0cmFjdCB0aGUgc3RhdGVtZW50cyBhbmQgcmVzcGVjdCBCdXNoJ3MgcmVzcG9uc2liaWxpdHkuClRoZSBwcmVzaWRlbnQgb2YgdGhlIFVuaXRlZCBTdGF0ZXMgaXMgcHJlc2lkZW50IG9mIHRoZSBVbml0ZWQgU3RhdGVzLgpIZSdzIGdvaW5nIHRvIGJlIHByZXNpZGVudCBvZiB0aGUgVW5pdGVkIFN0YXRlcyBmcm9tIG5vdyB1bnRpbCB0aGUgdGltZSBhIG5ldyBwcmVzaWRlbnQgdGFrZXMgb3Zlci4KVW50aWwgdGhlbiwgaGUncyB0aGUgb25seSBvbmUgY29uZHVjdGluZyBmb3JlaWduIHBvbGljeSBvZiB0aGlzIGNvdW50cnksIiBHaXVsaWFuaSBzYWlkLgpXZSBjYW4gaGF2ZSBvdXIgcG9saXRpY2FsIGRlYmF0ZSBpbiB0aGlzIGNvdW50cnkuIC4uLgpCdXQgbm9ib2R5IHNob3VsZCBiZSBjcmVhdGluZyB0aGUgc3BlY3RlciB0aGF0IHdlJ3JlIHNlbmRpbmcgZW1pc3NhcmllcyBvdXQgYXJvdW5kIHRoZSB3b3JsZCBiZWZvcmUgc29tZW9uZSBpcyBhY3R1YWxseSBzd29ybiBpbiBhcyBwcmVzaWRlbnQgb2YgdGhlIFVuaXRlZCBTdGF0ZXMuCiJJIHRoaW5rIGl0IHdvdWxkIGJlIGdvb2QgZm9yIHRoZSBjb3VudHJ5IGlmIE1ycy4gQ2xpbnRvbiwgU2VuYXRvciBDbGludG9uIHdvdWxkIGNvcnJlY3QgdGhhdCBzdGF0ZW1lbnQgbm93LCIgR2l1bGlhbmkgc2FpZC4KQSBzcG9rZXN3b21hbiBmb3IgQ2xpbnRvbiBzYWlkIEdpdWxpYW5pIG1pc3NlZCB0aGUgTmV3IFlvcmsgc2VuYXRvcidzIHBvaW50LgpTZW5hdG9yIENsaW50b24gYW5kIE1yLiBHaXVsaWFuaSBoYXZlIGEgZnVuZGFtZW50YWwgZGlzYWdyZWVtZW50LgpTaGUgd2lsbCBlbmQgdGhlIHdhciBpbiBJcmFxLCByZXZlcnNlIHRoZSBCdXNoIGVyYSBjb3dib3kgZGlwbG9tYWN5IGFuZCByZXN0b3JlIEFtZXJpY2EncyBzdGFuZGluZyBhcm91bmQgdGhlIHdvcmxkLCIgc2FpZCBLYXRobGVlbiBTdHJhbmQuCk1yLiBHaXVsaWFuaSB3YW50cyB0byBlc2NhbGF0ZSB0aGUgd2FyIGluIElyYXEgYW5kIHN1cHBvcnRzIFByZXNpZGVudCBCdXNoJ3MgZmFpbGVkIGZvcmVpZ24gcG9saWN5IGFwcHJvYWNoLgpHaXVsaWFuaSwgd2hvIGhhcyBzaGFwZWQgaGlzIHByaW1hcnkgY2FtcGFpZ24gYXMgYSBjb250ZXN0IGFnYWluc3QgaGlzIERlbW9jcmF0aWMgcml2YWxzIGFuZCBub3QgaGlzIFJlcHVibGljYW4gcGVlcnMsIHNhaWQgQ2xpbnRvbiBzaG91bGQgcmVtZW1iZXIgc2hlIGZpcnN0IGhhcyB0byBkZWZlYXQgYSBjcm93ZGVkIHByaW1hcnkgZmllbGQgaW4gaGVyIG93biBwYXJ0eS4KV2VsbCwgSGlsbGFyeSBpcyBub3QgcHJlc2lkZW50LWVsZWN0LCBsYXN0IHRpbWUgSSBjaGVja2VkLgpXZSdyZSBnb2luZyB0byBoYXZlIHNvbWV0aGluZyB0byBzYXkgYWJvdXQgdGhhdCwiIEdpdWxpYW5pIHNhaWQgdG8gbGF1Z2h0ZXIuCkhpbGxhcnkncyBub3QgZXZlbiB0aGUgbm9taW5lZSBvZiBoZXIgcGFydHkuCkl0J3MgdmVyeSwgdmVyeSBwcmVtYXR1cmUgdG8gYmUgdGFsa2luZyBhYm91dCBzZW5kaW5nIGFtYmFzc2Fkb3JzIGFsbCBhcm91bmQgdGhlIHdvcmxkIGV2ZW4gYmVmb3JlIHNoZSBiZWNvbWVzIHByZXNpZGVudCB0byBpbnRlcmZlcmUgd2l0aCB0aGUgZm9yZWlnbiBwb2xpY3kgb2YgdGhlIFVuaXRlZCBTdGF0ZXMuCkdpdWxpYW5pIHNhaWQgdGhlcmUgYXJlIHRvbyBtYW55IGRhbmdlcnMgaW4gdGhlIHdvcmxkIHRvIGxldCBDbGludG9uJ3MgY29tbWVudHMgZ28gdW5jaGVja2VkLgpUaGUgY291bnRyeSBpcyBhdCB3YXIuClNvbWV0aW1lcyBpdCBkb2Vzbid0IGZlZWwgbGlrZSBhIHdhciwgYmVjYXVzZSBpdCdzIGZhciBhd2F5LiAuLi4KV2UgaGF2ZSB0aGUgcG9zc2liaWxpdHkgb2YgYXR0YWNrIG9uIEFtZXJpY2EuCldlIGtub3cgdGhhdC4KSXQgaGFwcGVuZWQgYmVmb3JlLCIgc2FpZCBHaXVsaWFuaSwgd2hvIHdhcyBtYXlvciBkdXJpbmcgdGhlIDkvMTEgYXR0YWNrcy4K
[]
SnVkZ2UgdG8gUnVsZSBpZiBPLkouIFNob3VsZCBTdGFuZCBUcmlhbApMQVMgVkVHQVMgKEFQKSAtIFRoZSBraWRuYXBwaW5nIGFuZCByb2JiZXJ5IGNhc2UgYWdhaW5zdCBPLkouIFNpbXBzb24gd2FzIGJhc2VkIG9uIHRoZSBhY2NvdW50cyBvZiBjb24gYXJ0aXN0cyBhbmQgY3Jvb2tzLCBhbmQgdGhlIGNoYXJnZXMgc2hvdWxkIGJlIGRyb3BwZWQsIGRlZmVuc2UgYXR0b3JuZXlzIGFyZ3VlZCBXZWRuZXNkYXkgYXQgdGhlIGNsb3NlIG9mIGEgcHJlbGltaW5hcnkgaGVhcmluZyB0byBkZXRlcm1pbmUgd2hldGhlciBoZSBhbmQgdHdvIG90aGVyIG1lbiBzaG91bGQgc3RhbmQgdHJpYWwuClNpbXBzb24ncyBsYXd5ZXIsIEdhYnJpZWwgR3Jhc3NvLCB0b2xkIGEgTGFzIFZlZ2FzIGp1c3RpY2Ugb2YgdGhlIHBlYWNlIGl0IHdhcyB1bmNsZWFyIHdoZXRoZXIgcHJvc2VjdXRvcnMgY29uc2lkZXJlZCBhcyBraWRuYXBwaW5nIHRoZSBhY3Qgb2YgbHVyaW5nIHR3byBzcG9ydHMgbWVtb3JhYmlsaWEgZGVhbGVycyB0byBhIGhvdGVsIHJvb20gLSBvciB3aGV0aGVyIHRoZSBjaGFyZ2Ugd2FzIGJhc2VkIG9uIGEgY29uZnJvbnRhdGlvbiB0aGF0IGZvbGxvd2VkLgpKdXN0aWNlIG9mIHRoZSBQZWFjZSBKb2UgTS4gQm9uYXZlbnR1cmUgd2FzIHRvIGRlY2lkZSBsYXRlciBXZWRuZXNkYXkgd2hldGhlciB0aGUgZm9ybWVyIGZvb3RiYWxsIHN0YXIsIENsYXJlbmNlICJDLkouIgpIZSBoYXMgc2FpZCBoZSBpbnRlbmRlZCBvbmx5IHRvIHJldHJpZXZlIGl0ZW1zIHRoYXQgaGFkIGJlZW4gc3RvbGVuIGZyb20gaGltIGJ5IGEgZm9ybWVyIGFnZW50LCBpbmNsdWRpbmcgdGhlIHN1aXQgaGUgd29yZSB0aGUgZGF5IGhlIHdhcyBhY3F1aXR0ZWQgb2YgbXVyZGVyIGluIDE5OTUgaW4gdGhlIHNsYXlpbmdzIG9mIGhpcyB3aWZlLCBOaWNvbGUgQnJvd24gU2ltcHNvbiwgYW5kIGhlciBmcmllbmQgUm9uYWxkIEdvbGRtYW4uClNpbXBzb24gYW5kIHRoZSBvdGhlciBkZWZlbmRhbnRzIGRpZCBub3QgdGVzdGlmeSBpbiB0aGVpciBvd24gZGVmZW5zZSBhdCB0aGUgaGVhcmluZy4KSW4gdGhlaXIgY2xvc2luZyBhcmd1bWVudHMsIGF0dG9ybmV5cyBmb3IgU3Rld2FydCBhbmQgRWhybGljaCBxdWVzdGlvbmVkIHRoZSBjcmVkaWJpbGl0eSBvZiB0aGUgcHJvc2VjdXRpb24ncyB3aXRuZXNzZXMuCkJ1dCBwcm9zZWN1dG9yIENocmlzIE93ZW5zIHNhaWQgdGhlIHdpdG5lc3NlcyBjb3Jyb2JvcmF0ZWQgZWFjaCBvdGhlcidzIHN0b3JpZXMgYW5kIHJlY29yZGluZ3MsIHZpZGVvIGFuZCBwaG90b2dyYXBocyBzdXBwb3J0ZWQgdGhlIGNhc2UuCkJvbmF2ZW50dXJlIHNhaWQgaGUgd291bGQgdGFrZSBoaXMgdGltZSB0byBjb25zaWRlciB0aGUgYXR0b3JuZXlzJyBhcmd1bWVudHMsIHRoZSBleGhpYml0cyBhbmQgaGlzIG93biBub3RlcywgYnV0IHBsYW5uZWQgdG8gYW5ub3VuY2UgaGlzIGRlY2lzaW9uIGF0IDQgcC5tLgpEdXJpbmcgYXJndW1lbnRzLCBhIGRlZmVuc2UgbGF3eWVyIGNvbnRlbmRlZCB0aGF0IHRoZSBjYXNlIHdhcyBiYXNlZCBvbiB0aGUgYWNjb3VudHMgb2YgImNyYWNraGVhZHMgYW5kIGdyb3VwaWVzIGFuZCBwaW1wcyBhbmQgcHVydmV5b3JzIG9mIHN0b2xlbiBtZXJjaGFuZGlzZSBhbmQgZ3VuIGNhcnJpZXJzIGFuZCBjb24gYXJ0aXN0cyBhbmQgY3Jvb2tzLiIKVGhlc2UgZ3V5cyBhcmUgYmFkLgpUaGUgY291cnQgY2FuJ3QgYXNjcmliZSBhbnkgY3JlZGliaWxpdHkgdG8gd2hhdCBjYW1lIG91dCBvZiB0aGVpciBtb3V0aHMsIiBzYWlkIGF0dG9ybmV5IEpvaG4gTW9yYW4gSnIuLCB3aG8gcmVwcmVzZW50cyBFaHJsaWNoLgoiRXZlcnkgd2l0bmVzcyB1cCB0aGVyZSB3YXMgbG9va2luZyB0byBzZWxsIHRlc3RpbW9ueSBhbmQgbWFrZSBtb25leSBvZmYgb2YgdGhpcyBjYXNlLCIgTW9yYW4gc2FpZC4KT3dlbnMgb2ZmZXJlZCBubyBkZWZlbnNlIG9mIHRoZWlyIGNoYXJhY3RlciBidXQgc2FpZCwgIkl0J3Mgbm90IGxpa2UgdGhlIHN0YXRlIHdlbnQgb3V0IGFuZCBmb3VuZCB0aGUgd2l0bmVzc2VzLgpUaGVzZSBhcmUgcGVvcGxlIGFsaWduZWQgd2l0aCBPLkouIFNpbXBzb24uClRoZXNlIGFyZSB0aGUgcGVvcGxlIGhlIHN1cnJvdW5kcyBoaW1zZWxmIHdpdGguClVuZGVyIGNyb3NzLWV4YW1pbmF0aW9uIGJ5IG9uZSBvZiBTaW1wc29uJ3MgbGF3eWVycywgaGUgYmxhbWVkIFNpbXBzb24gZm9yIHRoZSBpbmNpZGVudC4KIllvdXIgY2xpZW50IHdhcyBmb29saXNoIGVub3VnaCB0byBsZXQgaXQgaGFwcGVuLCIgaGUgc2FpZC4KSGUgd2FzIGEgaGlnaC1wcm9maWxlIHBlcnNvbiBhbmQgcGVvcGxlIHdlcmUgd2FpdGluZyBmb3IgaGltIHRvIHNjcmV3IHVwLgpBbmQgaGUgc2NyZXdlZCB1cC4K
[]
S29yZWFzIHRvIExhdW5jaCBSZWd1bGFyIFRyYWluIFNlcnZpY2UKU0VPVUwsIFNvdXRoIEtvcmVhIChBUCkgLSBOb3J0aCBhbmQgU291dGggS29yZWEgYWdyZWVkIEZyaWRheSB0byBsYXVuY2ggY3Jvc3MtYm9yZGVyIHJhaWwgc2VydmljZSBmb3IgdGhlIGZpcnN0IHRpbWUgaW4gbW9yZSB0aGFuIGhhbGYgYSBjZW50dXJ5LCB0aGUgbGF0ZXN0IHNpZ24gb2YgaW1wcm92aW5nIHJlbGF0aW9ucyBiZXR3ZWVuIHRoZSB0d28gc2lkZXMuClRoZSByYWlsJ3MgRGVjLiAxMSBvcGVuaW5nIHdpbGwgYWxzbyBtYXJrIG9uZSBvZiB0aGUgZmlyc3QgdGFuZ2libGUgcmVzdWx0cyBvZiBhIHN1bW1pdCBsYXN0IG1vbnRoIGJldHdlZW4gU291dGggS29yZWFuIFByZXNpZGVudCBSb2ggTW9vLSBoeXVuIGFuZCBOb3J0aCBLb3JlYW4gbGVhZGVyIEtpbSBKb25nIElsIGluIFB5b25neWFuZy4KVGhlIHNlcnZpY2UsIHdoaWNoIHdpbGwgYmUgbGltaXRlZCB0byBmcmVpZ2h0IHRyYW5zcG9ydCwgd2lsbCBoYXZlIHRyYWlucyBydW5uaW5nIGFsb25nIGEgMTYtbWlsZSB0cmFjayBhY3Jvc3MgdGhlIGhlYXZpbHkgYXJtZWQgZnJvbnRpZXIgdG8gYSBqb2ludCBpbmR1c3RyaWFsIGNvbXBsZXggaW4gdGhlIE5vcnRoJ3MgYm9yZGVyIGNpdHkgb2YgS2Flc29uZy4KRnJpZGF5J3MgYWdyZWVtZW50LCByZWFjaGVkIGFmdGVyIHRocmVlIGRheXMgb2YgdGFsa3MgYmV0d2VlbiB0aGUgY291bnRyaWVzJyBwcmltZSBtaW5pc3RlcnMgaW4gU2VvdWwsIGFsc28gY2FsbHMgZm9yIHRoZSBTb3V0aCB0byBzdGFydCBidWlsZGluZyBzaGlweWFyZHMgaW4gTm9ydGggS29yZWEgYW5kIHJlcGFpcmluZyBhIG1ham9yIGhpZ2h3YXkgYW5kIGEgcmFpbHJvYWQgaW4gdGhlIGltcG92ZXJpc2hlZCBjb3VudHJ5IG5leHQgeWVhci4KVGhlIHR3byBzaWRlcyB3aWxsIGFsc28gc3RhcnQgc2V0dGluZyB1cCBhIGpvaW50IGZpc2hpbmcgYXJlYSBhcm91bmQgdGhlaXIgZGlzcHV0ZWQgd2VzdGVybiBzZWEgYm9yZGVyLgo=
[(S29yZWFzIHRvIExhdW5jaCBSZWd1bGFyIFRyYWluIFNlcnZpY2UKU0VPVUwsIFNvdXRoIEtvcmVhIChBUCkgLSBOb3J0aCBhbmQgU291dGggS29yZWEgYWdyZWVkIEZyaWRheSB0byBsYXVuY2ggY3Jvc3MtYm9yZGVyIHJhaWwgc2VydmljZSBmb3IgdGhlIGZpcnN0IHRpbWUgaW4gbW9yZSB0aGFuIGhhbGYgYSBjZW50dXJ5LCB0aGUgbGF0ZXN0IHNpZ24gb2YgaW1wcm92aW5nIHJlbGF0aW9ucyBiZXR3ZWVuIHRoZSB0d28gc2lkZXMuClRoZSByYWlsJ3MgRGVjLiAxMSBvcGVuaW5nIHdpbGwgYWxzbyBtYXJrIG9uZSBvZiB0aGUgZmlyc3QgdGFuZ2libGUgcmVzdWx0cyBvZiBhIHN1bW1pdCBsYXN0IG1vbnRoIGJldHdlZW4gU291dGggS29yZWFuIFByZXNpZGVudCBSb2ggTW9vLSBoeXVuIGFuZCBOb3J0aCBLb3JlYW4gbGVhZGVyIEtpbSBKb25nIElsIGluIFB5b25neWFuZy4KVGhlIHNlcnZpY2UsIHdoaWNoIHdpbGwgYmUgbGltaXRlZCB0byBmcmVpZ2h0IHRyYW5zcG9ydCwgd2lsbCBoYXZlIHRyYWlucyBydW5uaW5nIGFsb25nIGEgMTYtbWlsZSB0cmFjayBhY3Jvc3MgdGhlIGhlYXZpbHkgYXJtZWQgZnJvbnRpZXIgdG8gYSBqb2ludCBpbmR1c3RyaWFsIGNvbXBsZXggaW4gdGhlIE5vcnRoJ3MgYm9yZGVyIGNpdHkgb2YgS2Flc29uZy4KRnJpZGF5J3MgYWdyZWVtZW50LCByZWFjaGVkIGFmdGVyIHRocmVlIGRheXMgb2YgdGFsa3MgYmV0d2VlbiB0aGUgY291bnRyaWVzJyBwcmltZSBtaW5pc3RlcnMgaW4gU2VvdWwsIGFsc28gY2FsbHMgZm9yIHRoZSBTb3V0aCB0byBzdGFydCBidWlsZGluZyBzaGlweWFyZHMgaW4gTm9ydGggS29yZWEgYW5kIHJlcGFpcmluZyBhIG1ham9yIGhpZ2h3YXkgYW5kIGEgcmFpbHJvYWQgaW4gdGhlIGltcG92ZXJpc2hlZCBjb3VudHJ5IG5leHQgeWVhci4KVGhlIHR3byBzaWRlcyB3aWxsIGFsc28gc3RhcnQgc2V0dGluZyB1cCBhIGpvaW50IGZpc2hpbmcgYXJlYSBhcm91bmQgdGhlaXIgZGlzcHV0ZWQgd2VzdGVybiBzZWEgYm9yZGVyLgo=, 'GPE')]
TkVXIFlPUksgKEFQKSAtIEFtZXJpY2FucyBzdGFydGVkIGhlYWRpbmcgdG8gYWlycG9ydHMgYW5kIHRyYWluIHN0YXRpb25zIGhvdXJzIGFoZWFkIG9mIHRpbWUgV2VkbmVzZGF5IHRvIGdldCBhIGp1bXAgb24gd2hhdCB3YXMgcHJlZGljdGVkIHRvIGJlIHRoZSBsYXJnZXN0IFRoYW5rc2dpdmluZyBwaWxncmltYWdlIGV2ZXIgLSBkZXNwaXRlIHJpc2luZyBnYXMgcHJpY2VzIGFuZCBmZWFycyBvZiBhaXIgZGVsYXlzLgpTb21lIHdlcmUgaG9waW5nIHRvIGJlYXQgdGhlIGV2ZW5pbmcgcnVzaCBvbiB3aGF0IGlzIG9mdGVuIGNhbGxlZCB0aGUgYnVzaWVzdCB0cmF2ZWwgZGF5IG9mIHRoZSB5ZWFyLCBhbmQgYWlycG9ydCBjaGVjay1pbiBsaW5lcyBzdGFydGVkIGJ1aWxkaW5nIGJlZm9yZSBkYXlicmVhay4KU2FsbHkgYW5kIE5laWwgTWFjRG9uYWxkIG9mIFNhbmR5IEhvb2ssIENvbm4uLCB3ZXJlIGZseWluZyBmcm9tIE5ldyBZb3JrJ3MgTGFHdWFyZGlhIEFpcnBvcnQgd2l0aCB0aGVpciB0aHJlZSBjaGlsZHJlbiB0byBBcmthbnNhcyBmb3IgYSBiaWcgZmFtaWx5IHJldW5pb24uClNoZSBtYWRlIGhlciB0cmFkaXRpb25hbCBwdW1wa2luIGNoZWVzZWNha2UgZm9yIHRoZSBmZWFzdCBhbmQgY2FycmllZCBpdCBpbiBhIGNvdmVyZWQgcGxhc3RpYyBwaWUgcGxhdGUuCkF0IHRoZSBTYWx0IExha2UgQ2l0eSBhaXJwb3J0LCBEZW5uaXMgVG9zIHNldCBvdXQgZXZlbiBlYXJsaWVyLCBib2FyZGluZyBhIHJlZGV5ZSBmbGlnaHQgc2hvcnRseSBiZWZvcmUgbWlkbmlnaHQgVHVlc2RheS4KIlRoZSBxdWVzdGlvbiBiZWNvbWVzICdJcyAxMCBkb2xsYXJzIG9yIDE1IGRvbGxhcnMgbW9yZSBmb3IgZ2FzIGVub3VnaCB0byBjaGFuZ2UgdHJhdmVsIHBsYW5zPycgYW5kIG9idmlvdXNseSBtb3N0IEFtZXJpY2FucyBzYWlkICdubywnIiBzYWlkIEFBQSBNaWQtQXRsYW50aWMgc3Bva2VzbWFuIExvbiBBbmRlcnNvbiBhdCBXYXNoaW5ndG9uJ3MgUm9uYWxkIFJlYWdhbiBOYXRpb25hbCBBaXJwb3J0LgpUcmFpbnMgYWxzbyB3ZXJlIGJ1c3kuClRyYXZlbGVycyB0cmlja2xlZCBpbnRvIE5ldyBZb3JrJ3MgUGVubnN5bHZhbmlhIFN0YXRpb24gaW4gdGhlIHByZS1kYXduIGRhcmtuZXNzLgpDYXJyaWUgU2VsaWdzb24sIGEgMzgteWVhci1vbGQgY29uc3RydWN0aW9uIHdvcmtlciwgc2FpZCBzaGUgZ290IGEgYmV0dGVyIHJhdGUgYnkgYm9va2luZyBhIHNlYXQgb24gb25lIG9mIHRoZSBlYXJsaWVzdCB0cmFpbnMgdG8gV2FzaGluZ3Rvbiwgd2hlcmUgc2hlIHdhcyBnb2luZyB0byBzcGVuZCB0aGUgaG9saWRheSB3aXRoIGhlciBmYW1pbHkgYW5kIGF0dGVuZCBoZXIgMjB0aCBoaWdoIHNjaG9vbCByZXVuaW9uLgoiSSB3YXNuJ3Qgc3VyZSB3aGF0IEkgd2FzIGluIGZvciwiIHNhaWQgU2VsaWdzb24sIHdobyBhcnJpdmVkIGF0IFBlbm4gU3RhdGlvbiBhbiBob3VyIGJlZm9yZSBoZXIgc2NoZWR1bGVkIGRlcGFydHVyZS4KSG93ZXZlciwgdGhlIHNjZW5lIGF0IFBoaWxhZGVscGhpYSdzIDMwdGggU3RyZWV0IFN0YXRpb24gd2FzIHJlbWluaXNjZW50IG9mIGEgbm9ybWFsIHdlZWtkYXksIHdpdGggbm9uZSBvZiB0aGUgbGVuZ3RoeSBsaW5lcyB0aGF0IHNvbWV0aW1lcyBjdXJ2ZSBhY3Jvc3MgdGhlIHN0YXRpb24ncyBsYXJnZSBjb25jb3Vyc2UuClRoYXQgbWFkZSBpdCBlYXNpZXIgZm9yIFNoZWxseSBPJ0Nvbm5lbGwsIDQ5LCBvZiBQaGlsYWRlbHBoaWEsIHdobyBjYXVnaHQgYW4gODoxNSBhLm0uClNoZSBzYWlkIHNoZSBsZWZ0IGhvbWUgYSBsaXR0bGUgZWFybGllciBUdWVzZGF5IGluIGFudGljaXBhdGlvbiBvZiBoZWF2eSBjcm93ZHMuCkV2ZXJ5dGhpbmcgd2FzIHJ1bm5pbmcgc21vb3RobHkgZm9yIHRoZSBob2xpZGF5LCBDb2xlIHNhaWQuCkxpbmVzIHdlcmUgc2hvcnRlciBhdCBidXMgY29tcGFueSB0aWNrZXQgd2luZG93cyBpbiBOZXcgWW9yaydzIFBvcnQgQXV0aG9yaXR5IEJ1cyBUZXJtaW5hbC4KSmFzb24gQnV0bGVyLCAzNywgc2FpZCBoZSB3YXMgdGFraW5nIGEgYnVzIHRvIFBhdWwgU21pdGhzLCBOLlkuLCBuZWFyIHRoZSBDYW5hZGlhbiBib3JkZXIsIHRvIHZpc2l0IGhpcyBnaXJsZnJpZW5kIGJlY2F1c2UgIml0IHdvdWxkIGhhdmUgY29zdCBtZSBkb3VibGUgdG8gZHJpdmUuIgpUaGUgdHJpcCB3YXMgaW1wb3J0YW50IGJlY2F1c2UgVGhhbmtzZ2l2aW5nIG1lYW5zICJqdXN0IGJlaW5nIHdpdGggc29tZW9uZSBJIGxvdmUuIgpIaWdoIGdhcyBwcmljZXMgZGlkbid0IGFmZmVjdCBTb25qYSBDYXZhbnpvJ3MgZGVjaXNpb24gdG8gdGFrZSBhIDE0LSBob3VyIGJ1cyB0cmlwIGZyb20gTmV3IFlvcmsgdG8gQ29sdW1idXMsIE9oaW8sIHRvIHNwZW5kIHRoZSBob2xpZGF5IHdpdGggaGVyIGJveWZyaWVuZCBhbmQgaGlzIGZhbWlseS4KU2hlIGp1c3QgZW5qb3lzIHRoZSByaWRlLgpDYXZhbnpvLCAyMywgd2FzIHRha2luZyAiYSB0ZWRkeSBiZWFyIGZvciBteSBib3lmcmllbmQncyBtb3RoZXIsIGFuZCBhIENocmlzdG1hcyBvcm5hbWVudCBhbmQgbGl0dGxlIENocmlzdG1hcyB0cmVlIGZvciBteSBib3lmcmllbmQuIgpBbmQgc2hlIHBsYW5uZWQgdG8gaGVscCBoZXIgYm95ZnJpZW5kJ3MgbW90aGVyIHdpdGggYWxsIHRoZSBjb29raW5nLgpUaGUgcG9zc2liaWxpdHkgb2YgdHJhdmVsIGhhc3NsZXMgZGlkbid0IGJvdGhlciAxMC15ZWFyLW9sZCBMaWFuYSBNZXJkaW5nZXIgb2YgTG9uZyBCZWFjaCwgTi5ZLiwgd2FpdGluZyB3aXRoIGhlciBtb3RoZXIsIEpvYW4sIGZvciBhIGZsaWdodCBmcm9tIExhR3VhcmRpYSB0byBPcmxhbmRvLCBGbGEuCiJJIGFtIDEwIHllYXJzIG9sZCBhbmQgSSd2ZSBiZWVuIG9uIDEyIGNydWlzZXMsIiBMaWFuYSBzYWlkLgpUaGV5IHBsYW5uZWQgdG8gY29vayBhZnRlciB0aGV5IGFycml2ZS4KU3dlZXQgcG90YXRvZXMgYW5kIG1hcnNobWFsbG93cy4KVGhhdCdzIG15IGZhdm9yaXRlLCIgZGVjbGFyZWQgTGlhbmEuCkJ1dCB0aGF0IHdhc24ndCB0aGUgbW9zdCBpbXBvcnRhbnQgdGhpbmcgYWJvdXQgdGhlIGhvbGlkYXkuCiJJIHRoaW5rIGl0J3Mgc3BlbmRpbmcgdGltZSB3aXRoIGZhbWlseSwiIHNhaWQgTGlhbmEuCkhhbiBOZ3V5ZW4gd2FzIGVkZ3kgYWJvdXQgc2FmZXR5IGFuZCBkZWxheXMgYXMgc2hlIHdhaXRlZCBmb3IgaGVyIGZsaWdodCBmcm9tIERhbGxhcyBGb3J0IFdvcnRoLUludGVybmF0aW9uYWwgQWlycG9ydCB0byBMYXMgVmVnYXMgdG8gbWVldCBoZXIgaHVzYmFuZCBmb3IgdGhlIGhvbGlkYXkuCiJXaGVuIHlvdSB0aGluayBvZiBnb2luZyBvbiB0aGUgYWlycGxhbmUgeW91IGtpbmQgb2YgYWx3YXlzIGhhdmUgY3JhenkgaWRlYXMgaW4geW91ciBoZWFkIHRoYXQgc29tZXRoaW5nIGNvdWxkIGdvIHdyb25nLCIgc2hlIHNhaWQgYnkgcGhvbmUuCkRlbnZlciByZXNpZGVudCBLZXZpbiBMaWxsZWhlaSBib29rZWQgYSBzZXJpZXMgb2YgZmxpZ2h0cyB3aXRoIGEgNy0gaG91ciBjdXNoaW9uIGluIGFudGljaXBhdGlvbiBvZiBkZWxheXMsIGxpbmVzIGFuZCBtaXNzZWQgY29ubmVjdGlvbnMuCkhlIGFycml2ZWQgYXQgTWlhbWkgSW50ZXJuYXRpb25hbCBBaXJwb3J0IGZyb20gQ2hpbGUsIGFmdGVyIGEgY3J1aXNlIHRvIEFudGFyY3RpY2EsIGFuZCBwbGFubmVkIHRvIHNwZW5kIHRoZSBob2xpZGF5cyBpbiBNaW5uZWFwb2xpcy4KIkl0J3MgYmVlbiB2ZXJ5IGNhbG0sIiBMaWxsZWhlaSBzYWlkIG9mIE1pYW1pJ3MgYWlycG9ydC4KQnV0IGhlIHdhcyBjb25jZXJuZWQgYWJvdXQgdGhlIHJlc3Qgb2YgaGlzIHRyaXA6ICJZb3UgYWx3YXlzIGhhdmUgdG8gd29ycnkgYWJvdXQgc25vdyBhbmQgZGVsYXlzIGluIE1pbm5lYXBvbGlzLCBzbyBnZXR0aW5nIGJhY2sgU3VuZGF5IGlzIGdvaW5nIHRvIGJlIGEgaGl0IG9yIGEgbWlzcy4iCkhvd2V2ZXIsIHRoZSB3ZWF0aGVyIHNlZW1lZCB1bmxpa2VseSB0byBjYXVzZSBhbnkgc2lnbmlmaWNhbnQgZGVsYXlzIFdlZG5lc2RheS4KQXNzb2NpYXRlZCBQcmVzcyB3cml0ZXJzIEJyb2NrIFZlcmdha2lzIGluIFNhbHQgTGFrZSBDaXR5OyBNYXR0IEpveWNlIGluIEdyYXBldmluZSwgVGV4YXM7IFN1emV0dGUgTGFCb3kgaW4gTWlhbWk7IEpvQW5uIExvdmlnbGlvIGluIFBoaWxhZGVscGhpYTsgU29maWEgTWFubm9zIGFuZCBKYWNraWUgQnNoYXJhaCBpbiBXYXNoaW5ndG9uLCBhbmQgUmViZWNjYSBNaWxsZXIsIFBhdCBNaWx0b24sIERhdmlkIEIuIENhcnVzbyBpbiBOZXcgWW9yayBDaXR5IGNvbnRyaWJ1dGVkIHRvIHRoaXMgcmVwb3J0Lgo=
[(TkVXIFlPUksgKEFQKSAtIEFtZXJpY2FucyBzdGFydGVkIGhlYWRpbmcgdG8gYWlycG9ydHMgYW5kIHRyYWluIHN0YXRpb25zIGhvdXJzIGFoZWFkIG9mIHRpbWUgV2VkbmVzZGF5IHRvIGdldCBhIGp1bXAgb24gd2hhdCB3YXMgcHJlZGljdGVkIHRvIGJlIHRoZSBsYXJnZXN0IFRoYW5rc2dpdmluZyBwaWxncmltYWdlIGV2ZXIgLSBkZXNwaXRlIHJpc2luZyBnYXMgcHJpY2VzIGFuZCBmZWFycyBvZiBhaXIgZGVsYXlzLgpTb21lIHdlcmUgaG9waW5nIHRvIGJlYXQgdGhlIGV2ZW5pbmcgcnVzaCBvbiB3aGF0IGlzIG9mdGVuIGNhbGxlZCB0aGUgYnVzaWVzdCB0cmF2ZWwgZGF5IG9mIHRoZSB5ZWFyLCBhbmQgYWlycG9ydCBjaGVjay1pbiBsaW5lcyBzdGFydGVkIGJ1aWxkaW5nIGJlZm9yZSBkYXlicmVhay4KU2FsbHkgYW5kIE5laWwgTWFjRG9uYWxkIG9mIFNhbmR5IEhvb2ssIENvbm4uLCB3ZXJlIGZseWluZyBmcm9tIE5ldyBZb3JrJ3MgTGFHdWFyZGlhIEFpcnBvcnQgd2l0aCB0aGVpciB0aHJlZSBjaGlsZHJlbiB0byBBcmthbnNhcyBmb3IgYSBiaWcgZmFtaWx5IHJldW5pb24uClNoZSBtYWRlIGhlciB0cmFkaXRpb25hbCBwdW1wa2luIGNoZWVzZWNha2UgZm9yIHRoZSBmZWFzdCBhbmQgY2FycmllZCBpdCBpbiBhIGNvdmVyZWQgcGxhc3RpYyBwaWUgcGxhdGUuCkF0IHRoZSBTYWx0IExha2UgQ2l0eSBhaXJwb3J0LCBEZW5uaXMgVG9zIHNldCBvdXQgZXZlbiBlYXJsaWVyLCBib2FyZGluZyBhIHJlZGV5ZSBmbGlnaHQgc2hvcnRseSBiZWZvcmUgbWlkbmlnaHQgVHVlc2RheS4KIlRoZSBxdWVzdGlvbiBiZWNvbWVzICdJcyAxMCBkb2xsYXJzIG9yIDE1IGRvbGxhcnMgbW9yZSBmb3IgZ2FzIGVub3VnaCB0byBjaGFuZ2UgdHJhdmVsIHBsYW5zPycgYW5kIG9idmlvdXNseSBtb3N0IEFtZXJpY2FucyBzYWlkICdubywnIiBzYWlkIEFBQSBNaWQtQXRsYW50aWMgc3Bva2VzbWFuIExvbiBBbmRlcnNvbiBhdCBXYXNoaW5ndG9uJ3MgUm9uYWxkIFJlYWdhbiBOYXRpb25hbCBBaXJwb3J0LgpUcmFpbnMgYWxzbyB3ZXJlIGJ1c3kuClRyYXZlbGVycyB0cmlja2xlZCBpbnRvIE5ldyBZb3JrJ3MgUGVubnN5bHZhbmlhIFN0YXRpb24gaW4gdGhlIHByZS1kYXduIGRhcmtuZXNzLgpDYXJyaWUgU2VsaWdzb24sIGEgMzgteWVhci1vbGQgY29uc3RydWN0aW9uIHdvcmtlciwgc2FpZCBzaGUgZ290IGEgYmV0dGVyIHJhdGUgYnkgYm9va2luZyBhIHNlYXQgb24gb25lIG9mIHRoZSBlYXJsaWVzdCB0cmFpbnMgdG8gV2FzaGluZ3Rvbiwgd2hlcmUgc2hlIHdhcyBnb2luZyB0byBzcGVuZCB0aGUgaG9saWRheSB3aXRoIGhlciBmYW1pbHkgYW5kIGF0dGVuZCBoZXIgMjB0aCBoaWdoIHNjaG9vbCByZXVuaW9uLgoiSSB3YXNuJ3Qgc3VyZSB3aGF0IEkgd2FzIGluIGZvciwiIHNhaWQgU2VsaWdzb24sIHdobyBhcnJpdmVkIGF0IFBlbm4gU3RhdGlvbiBhbiBob3VyIGJlZm9yZSBoZXIgc2NoZWR1bGVkIGRlcGFydHVyZS4KSG93ZXZlciwgdGhlIHNjZW5lIGF0IFBoaWxhZGVscGhpYSdzIDMwdGggU3RyZWV0IFN0YXRpb24gd2FzIHJlbWluaXNjZW50IG9mIGEgbm9ybWFsIHdlZWtkYXksIHdpdGggbm9uZSBvZiB0aGUgbGVuZ3RoeSBsaW5lcyB0aGF0IHNvbWV0aW1lcyBjdXJ2ZSBhY3Jvc3MgdGhlIHN0YXRpb24ncyBsYXJnZSBjb25jb3Vyc2UuClRoYXQgbWFkZSBpdCBlYXNpZXIgZm9yIFNoZWxseSBPJ0Nvbm5lbGwsIDQ5LCBvZiBQaGlsYWRlbHBoaWEsIHdobyBjYXVnaHQgYW4gODoxNSBhLm0uClNoZSBzYWlkIHNoZSBsZWZ0IGhvbWUgYSBsaXR0bGUgZWFybGllciBUdWVzZGF5IGluIGFudGljaXBhdGlvbiBvZiBoZWF2eSBjcm93ZHMuCkV2ZXJ5dGhpbmcgd2FzIHJ1bm5pbmcgc21vb3RobHkgZm9yIHRoZSBob2xpZGF5LCBDb2xlIHNhaWQuCkxpbmVzIHdlcmUgc2hvcnRlciBhdCBidXMgY29tcGFueSB0aWNrZXQgd2luZG93cyBpbiBOZXcgWW9yaydzIFBvcnQgQXV0aG9yaXR5IEJ1cyBUZXJtaW5hbC4KSmFzb24gQnV0bGVyLCAzNywgc2FpZCBoZSB3YXMgdGFraW5nIGEgYnVzIHRvIFBhdWwgU21pdGhzLCBOLlkuLCBuZWFyIHRoZSBDYW5hZGlhbiBib3JkZXIsIHRvIHZpc2l0IGhpcyBnaXJsZnJpZW5kIGJlY2F1c2UgIml0IHdvdWxkIGhhdmUgY29zdCBtZSBkb3VibGUgdG8gZHJpdmUuIgpUaGUgdHJpcCB3YXMgaW1wb3J0YW50IGJlY2F1c2UgVGhhbmtzZ2l2aW5nIG1lYW5zICJqdXN0IGJlaW5nIHdpdGggc29tZW9uZSBJIGxvdmUuIgpIaWdoIGdhcyBwcmljZXMgZGlkbid0IGFmZmVjdCBTb25qYSBDYXZhbnpvJ3MgZGVjaXNpb24gdG8gdGFrZSBhIDE0LSBob3VyIGJ1cyB0cmlwIGZyb20gTmV3IFlvcmsgdG8gQ29sdW1idXMsIE9oaW8sIHRvIHNwZW5kIHRoZSBob2xpZGF5IHdpdGggaGVyIGJveWZyaWVuZCBhbmQgaGlzIGZhbWlseS4KU2hlIGp1c3QgZW5qb3lzIHRoZSByaWRlLgpDYXZhbnpvLCAyMywgd2FzIHRha2luZyAiYSB0ZWRkeSBiZWFyIGZvciBteSBib3lmcmllbmQncyBtb3RoZXIsIGFuZCBhIENocmlzdG1hcyBvcm5hbWVudCBhbmQgbGl0dGxlIENocmlzdG1hcyB0cmVlIGZvciBteSBib3lmcmllbmQuIgpBbmQgc2hlIHBsYW5uZWQgdG8gaGVscCBoZXIgYm95ZnJpZW5kJ3MgbW90aGVyIHdpdGggYWxsIHRoZSBjb29raW5nLgpUaGUgcG9zc2liaWxpdHkgb2YgdHJhdmVsIGhhc3NsZXMgZGlkbid0IGJvdGhlciAxMC15ZWFyLW9sZCBMaWFuYSBNZXJkaW5nZXIgb2YgTG9uZyBCZWFjaCwgTi5ZLiwgd2FpdGluZyB3aXRoIGhlciBtb3RoZXIsIEpvYW4sIGZvciBhIGZsaWdodCBmcm9tIExhR3VhcmRpYSB0byBPcmxhbmRvLCBGbGEuCiJJIGFtIDEwIHllYXJzIG9sZCBhbmQgSSd2ZSBiZWVuIG9uIDEyIGNydWlzZXMsIiBMaWFuYSBzYWlkLgpUaGV5IHBsYW5uZWQgdG8gY29vayBhZnRlciB0aGV5IGFycml2ZS4KU3dlZXQgcG90YXRvZXMgYW5kIG1hcnNobWFsbG93cy4KVGhhdCdzIG15IGZhdm9yaXRlLCIgZGVjbGFyZWQgTGlhbmEuCkJ1dCB0aGF0IHdhc24ndCB0aGUgbW9zdCBpbXBvcnRhbnQgdGhpbmcgYWJvdXQgdGhlIGhvbGlkYXkuCiJJIHRoaW5rIGl0J3Mgc3BlbmRpbmcgdGltZSB3aXRoIGZhbWlseSwiIHNhaWQgTGlhbmEuCkhhbiBOZ3V5ZW4gd2FzIGVkZ3kgYWJvdXQgc2FmZXR5IGFuZCBkZWxheXMgYXMgc2hlIHdhaXRlZCBmb3IgaGVyIGZsaWdodCBmcm9tIERhbGxhcyBGb3J0IFdvcnRoLUludGVybmF0aW9uYWwgQWlycG9ydCB0byBMYXMgVmVnYXMgdG8gbWVldCBoZXIgaHVzYmFuZCBmb3IgdGhlIGhvbGlkYXkuCiJXaGVuIHlvdSB0aGluayBvZiBnb2luZyBvbiB0aGUgYWlycGxhbmUgeW91IGtpbmQgb2YgYWx3YXlzIGhhdmUgY3JhenkgaWRlYXMgaW4geW91ciBoZWFkIHRoYXQgc29tZXRoaW5nIGNvdWxkIGdvIHdyb25nLCIgc2hlIHNhaWQgYnkgcGhvbmUuCkRlbnZlciByZXNpZGVudCBLZXZpbiBMaWxsZWhlaSBib29rZWQgYSBzZXJpZXMgb2YgZmxpZ2h0cyB3aXRoIGEgNy0gaG91ciBjdXNoaW9uIGluIGFudGljaXBhdGlvbiBvZiBkZWxheXMsIGxpbmVzIGFuZCBtaXNzZWQgY29ubmVjdGlvbnMuCkhlIGFycml2ZWQgYXQgTWlhbWkgSW50ZXJuYXRpb25hbCBBaXJwb3J0IGZyb20gQ2hpbGUsIGFmdGVyIGEgY3J1aXNlIHRvIEFudGFyY3RpY2EsIGFuZCBwbGFubmVkIHRvIHNwZW5kIHRoZSBob2xpZGF5cyBpbiBNaW5uZWFwb2xpcy4KIkl0J3MgYmVlbiB2ZXJ5IGNhbG0sIiBMaWxsZWhlaSBzYWlkIG9mIE1pYW1pJ3MgYWlycG9ydC4KQnV0IGhlIHdhcyBjb25jZXJuZWQgYWJvdXQgdGhlIHJlc3Qgb2YgaGlzIHRyaXA6ICJZb3UgYWx3YXlzIGhhdmUgdG8gd29ycnkgYWJvdXQgc25vdyBhbmQgZGVsYXlzIGluIE1pbm5lYXBvbGlzLCBzbyBnZXR0aW5nIGJhY2sgU3VuZGF5IGlzIGdvaW5nIHRvIGJlIGEgaGl0IG9yIGEgbWlzcy4iCkhvd2V2ZXIsIHRoZSB3ZWF0aGVyIHNlZW1lZCB1bmxpa2VseSB0byBjYXVzZSBhbnkgc2lnbmlmaWNhbnQgZGVsYXlzIFdlZG5lc2RheS4KQXNzb2NpYXRlZCBQcmVzcyB3cml0ZXJzIEJyb2NrIFZlcmdha2lzIGluIFNhbHQgTGFrZSBDaXR5OyBNYXR0IEpveWNlIGluIEdyYXBldmluZSwgVGV4YXM7IFN1emV0dGUgTGFCb3kgaW4gTWlhbWk7IEpvQW5uIExvdmlnbGlvIGluIFBoaWxhZGVscGhpYTsgU29maWEgTWFubm9zIGFuZCBKYWNraWUgQnNoYXJhaCBpbiBXYXNoaW5ndG9uLCBhbmQgUmViZWNjYSBNaWxsZXIsIFBhdCBNaWx0b24sIERhdmlkIEIuIENhcnVzbyBpbiBOZXcgWW9yayBDaXR5IGNvbnRyaWJ1dGVkIHRvIHRoaXMgcmVwb3J0Lgo=, 'GPE')]
T3Bwb3NpdGlvbiBMaW5pbmcgVXAgZm9yIFBha2lzdGFuIFZvdGUKSVNMQU1BQkFELCBQYWtpc3RhbiAoQVApIC0gRGVzcGl0ZSB0aGVpciBwcm90ZXN0cyB0aGF0IHBhcmxpYW1lbnRhcnkgZWxlY3Rpb25zIHdpbGwgYmUgYSBzaGFtLCBQYWtpc3RhbidzIHBvbGl0aWNhbCBvcHBvc2l0aW9uIHNlZW1lZCBGcmlkYXkgdG8gYmUgbGluaW5nIHVwIGZvciBhIGNoYW5jZSB0byB0YWtlIHBhcnQgLSB3aXRoIG9uZSBmb3JtZXIgcHJpbWUgbWluaXN0ZXIgcmVhZHlpbmcgaGVyIGNhbmRpZGF0ZXMgYW5kIGFub3RoZXIgdGFraW5nIHN0ZXBzIHRvIHJldHVybiBmcm9tIGV4aWxlLgpNZWFud2hpbGUsIGEgcGxpYW50IFN1cHJlbWUgQ291cnQgaW5zdGFsbGVkIGJ5IFByZXNpZGVudCBHZW4uIFBlcnZleiBNdXNoYXJyYWYgZ2F2ZSB0aGUgbWlsaXRhcnkgcnVsZXIgZnVydGhlciBsZWdhbCBjb3ZlciwgcnVsaW5nIHRoYXQgdGhlIHN0YXRlIG9mIGVtZXJnZW5jeSBoZSBkZWNsYXJlZCBvbiBOb3YuIDMgd2FzIGxlZ2FsLgpUaGUgY291cnQgb24gVGh1cnNkYXkgaGFkIHJ1bGVkIHRoYXQgTXVzaGFycmFmIGNvdWxkIGJlY29tZSBhIGNpdmlsaWFuIHByZXNpZGVudCwgY2xlYXJpbmcgdGhlIHdheSBmb3IgYSBuZXcgZml2ZS15ZWFyIHRlcm0uCkF0dG9ybmV5IEdlbmVyYWwgTWFsaWsgTW9oYW1tZWQgUWF5eXVtIHRvbGQgVGhlIEFzc29jaWF0ZWQgUHJlc3MgdGhhdCB0aGUgY291cnQgZGVjaXNpb24gLSB3aGljaCB3YXMgc2VudCBsYXRlIEZyaWRheSB0byB0aGUgRWxlY3Rpb24gQ29tbWlzc2lvbiBmb3IgcmF0aWZpY2F0aW9uIC0gZ2F2ZSBNdXNoYXJyYWYgdW50aWwgRGVjLiAxIHRvIHN0ZXAgZG93biBhcyBhcm15IGNoaWVmIGFuZCB0YWtlIHRoZSBvYXRoIG9mIG9mZmljZSBhcyBhIGNpdmlsaWFuIHByZXNpZGVudC4KUWF5eXVtIGhhcyBzYWlkIE11c2hhcnJhZiBjb3VsZCBxdWl0IGhpcyBhcm15IHBvc3QgYXMgZWFybHkgYXMgdGhpcyB3ZWVrZW5kLCB0aG91Z2ggbm8gZGF0ZSBoYXMgYmVlbiBzZXQuClRoZSBnZW5lcmFsIGhhcyByZXBlYXRlZGx5IHBsZWRnZWQgdG8gZ2l2ZSB1cCBoaXMgbWlsaXRhcnkgcG9zaXRpb24gYnkgdGhlIGVuZCBvZiB0aGUgbW9udGgsIGluIGhvcGVzIG9mIGNvb2xpbmcgZG9tZXN0aWMgYW5kIGZvcmVpZ24gY3JpdGljaXNtIG9mIGhpcyBjcmFja2Rvd24sIHdoaWNoIGluY2x1ZGVkIHRoZSBqYWlsaW5nIG9mIHRob3VzYW5kcyBvZiBvcHBvbmVudHMgYW5kIGEgY2xhbXBkb3duIG9uIGJvdGggdGhlIGp1ZGljaWFyeSBhbmQgdGhlIGNvdW50cnkncyBtZWRpYS4KTW9zdCBvcHBvbmVudHMgaGF2ZSBiZWVuIGZyZWVkIGluIHJlY2VudCBkYXlzLCBhbmQgYWxsIGJ1dCBvbmUgb2YgdGhlIG5ld3MgY2hhbm5lbHMgYXJlIGJhY2sgb24gdGhlIGFpci4KQnV0IGl0IHdhcyB0aGUgcG9saXRpY2FsIG1hbmV1dmVyaW5nIG9mIHR3byBmb3JtZXIgcHJpbWUgbWluaXN0ZXJzIC0gQmVuYXppciBCaHV0dG8gYW5kIE5hd2F6IFNoYXJpZiAtIHRoYXQgd2FzIHByb2R1Y2luZyB0aGUgbW9zdCBpbnRyaWd1ZSBpbiBhbiBldmVyLXNoaWZ0aW5nIHBvbGl0aWNhbCBsYW5kc2NhcGUuClVudGlsIHJlY2VudGx5LCBQYWtpc3RhbidzIHR3byBtYWluIG9wcG9zaXRpb24gcGFydGllcyAtIEJodXR0bydzIFBha2lzdGFuIFBlb3BsZSdzIFBhcnR5IGFuZCBTaGFyaWYncyBmYWN0aW9uIG9mIHRoZSBQYWtpc3RhbiBNdXNsaW0gTGVhZ3VlLCBrbm93biBhcyBQTUwtTiAtIGhhZCBiZWVuIGRpc2N1c3NpbmcgYSBib3ljb3R0IG9mIHBhcmxpYW1lbnRhcnkgZWxlY3Rpb25zIHNjaGVkdWxlZCBmb3IgSmFuLiA4LCBzYXlpbmcgYW55IHZvdGUgaGVsZCB1bmRlciBlbWVyZ2VuY3kgcnVsZSBsYWNrZWQgbGVnaXRpbWFjeS4KQnV0IHRoZXkgaGF2ZSBiZWVuIGNoYW5naW5nIHRoZWlyIHR1bmUuCkJodXR0byB3YXMgaW4gdGhlIGNhcGl0YWwsIElzbGFtYWJhZCwgb24gRnJpZGF5IGFzIHNoZSBwcmVwYXJlZCB0byBzdWJtaXQgYSBsaXN0IG9mIGNhbmRpZGF0ZXMgZm9yIHRoZSB2b3RlIGFoZWFkIG9mIGEgTW9uZGF5IGRlYWRsaW5lLgpXaGlsZSBzaGUgc2F5cyBzaGUgaGFzIG5vdCBtYWRlIGEgZmluYWwgZGVjaXNpb24gd2hldGhlciB0byB0YWtlIHBhcnQsIHNoZSBpbmRpY2F0ZWQgaW4gY29tbWVudHMgVGh1cnNkYXkgdGhhdCBzaGUgZGlkIG5vdCB3YW50IHRvIGhhbmQgTXVzaGFycmFmIGEgIndhbGtvdmVyIiB2aWN0b3J5IGJ5IHN0YXlpbmcgYXdheS4KQSBwb3dlcmZ1bCByZWxpZ2lvdXMgY29hbGl0aW9uLCB0aGUgTXV0dGFoaWRhIE1hamxpcy1lLUFtYWwsIGhhcyBhbHNvIHNhaWQgaXQgd291bGQgZmlsZSBwYXBlcnMgYW5kIHdhcyBsZWFuaW5nIHRvd2FyZCBwYXJ0aWNpcGF0aW5nIGluIHRoZSB2b3RlLCBhcyBsb25nIGFzIG90aGVyIG9wcG9zaXRpb24gcGFydGllcyBkaWQgdG9vLgpTaGFyaWYgd2FzIG1lZXRpbmcgd2l0aCBTYXVkaSBLaW5nIEFiZHVsbGFoIGluIFJpeWFkaCBvbiBGcmlkYXkgaW4gYW4gYXR0ZW1wdCB0byB3aW4gc3VwcG9ydCBmb3IgYSByZXR1cm4gaG9tZSBhaGVhZCBvZiB0aGUgdm90ZS4KVGhlIHZpY2UgcHJlc2lkZW50IG9mIGhpcyBwYXJ0eSwgWmFmYXIgQWxpIFNoYWgsIHNhaWQgdGhlIGV4aWxlZCBsZWFkZXIgd291bGQgYmUgYmFjayBpbiBQYWtpc3RhbiAibmV4dCB3ZWVrLiIKSGUgZGVjbGluZWQgdG8gc2F5IHdoZXRoZXIgU2hhcmlmIHdvdWxkIG1ha2UgaXQgYmFjayBpbiB0aW1lIHRvIGZpbGUgcGFwZXJzIGJlZm9yZSBNb25kYXkncyBkZWFkbGluZSBmb3IgcGFydGljaXBhdGlvbiBpbiB0aGUgSmFudWFyeSB2b3RlLgpTcGVjdWxhdGlvbiB0aGF0IFNhdWRpIEFyYWJpYSB3YW50ZWQgU2hhcmlmIHRvIGdvIGhvbWUgaGFkIGJlZW4gcmlmZSBzaW5jZSBNdXNoYXJyYWYgbWFkZSBhIHN1cnByaXNlIHRyaXAgdG8gdGhlIFNhdWRpIGNhcGl0YWwgZm9yIHRhbGtzIHdpdGggQWJkdWxsYWggb24gVHVlc2RheS4KUHJlc2lkZW50aWFsIHNwb2tlc21hbiBSYXNoaWQgUXVyZXNoaSBkZWNsaW5lZCB0byBzYXkgd2hhdCBNdXNoYXJyYWYgd291bGQgZG8gaWYgdGhlIG1hbiBoZSBvdXN0ZWQgaW4gMTk5OSB0cmllZCB0byBlbnRlciBQYWtpc3Rhbi4KVGhlIGxhc3QgdGltZSB0aGUgZm9ybWVyIHByaW1lIG1pbmlzdGVyIC0gb25lIG9mIHRoZSBnZW5lcmFsJ3MgbW9zdCB2ZWhlbWVudCBjcml0aWNzIC0gdHJpZWQgdG8gcmV0dXJuLCBoZSB3YXMgc3dpZnRseSBkZXBvcnRlZC4KQSBzZW5pb3Igb2ZmaWNpYWwgYXQgdGhlIHByZXNpZGVuY3kgdG9sZCBBUCBvbiBGcmlkYXkgdGhhdCBNdXNoYXJyYWYgaGFkICJzb2Z0ZW5lZCIgaGlzIHN0YW5jZSB0b3dhcmQgU2hhcmlmLCBhbmQgd2FzIGhvcGluZyBmb3Igc29tZSBsZXZlbCBvZiByZWNvbmNpbGlhdGlvbiwgcmFpc2luZyB0aGUgcG9zc2liaWxpdHkgdGhhdCBNdXNoYXJyYWYgbWlnaHQgdHJ5IHRvIGFsbHkgaGltc2VsZiB3aXRoIHRoZSBtYW4gaGUgdG9wcGxlZCwgaW4gb3JkZXIgdG8gZnJlZXplIEJodXR0byBvdXQuCiJUaGUgaG9wZSBpcyB0aGF0IGhlIChTaGFyaWYpIHdpbGwgbm90IGFjdCBsaWtlIEJlbmF6aXIgQmh1dHRvLCB3aG8gaXMgZm9sbG93aW5nIHRoZSBwb2xpdGljcyBvZiBjb25mcm9udGF0aW9uLCIgdGhlIG9mZmljaWFsIHNhaWQuClRoZSBvZmZpY2lhbCwgd2hvIHNwb2tlIG9uIGNvbmRpdGlvbiBvZiBhbm9ueW1pdHkgYmVjYXVzZSBvZiB0aGUgc2Vuc2l0aXZlIG5hdHVyZSBvZiB0aGUgaXNzdWUsIHNhaWQgY2xvc2UgYXNzb2NpYXRlcyBvZiBTaGFyaWYgYW5kIE11c2hhcnJhZiB3ZXJlIGluIHRvdWNoIHRvIHNlZSBob3cgdGhleSBjb3VsZCBlbmQgdGhlaXIgZmV1ZC4KV2hpbGUgYSBjb21wbGV0ZSBib3ljb3R0IG9mIHRoZSBKYW4uIDggcG9sbCB3b3VsZCBiZSBkaXNhc3Ryb3VzIGZvciBNdXNoYXJyYWYgLSBiZWx5aW5nIGhpcyBjbGFpbXMgdGhhdCBoZSBoYXMgbmF2aWdhdGVkIHRoZSBuYXRpb24gb24gYSBwYXRoIHRvd2FyZCBkZW1vY3JhY3kgLSBwYXJ0aWNpcGF0aW9uIGJ5IGJvdGggbWFqb3Igb3Bwb3NpdGlvbiBwYXJ0aWVzIGNvdWxkIHByb3ZlIGVxdWFsbHkgdHJpY2t5LCBwYXJ0aWN1bGFybHkgaWYgdGhleSBmb3JtIGEgY29hbGl0aW9uIGFnYWluc3QgaGltLgpUYXJpcSBBemltLCBhIHNwb2tlc21hbiBmb3IgdGhlIHByby1NdXNoYXJyYWYgUE1MLVEgcGFydHksIHNhaWQgaGlzIHBhcnR5IHdhcyBjb25maWRlbnQgb2YgYSBnb29kIHJlc3VsdCBpbiB0aGUgZWxlY3Rpb25zLgoiV2Ugd291bGQgYmUgaGFwcHkgdG8gZmFjZSBCZW5hemlyIEJodXR0byBvciBOYXdheiBTaGFyaWYsIG9yIGV2ZW4gYm90aCB0b2dldGhlciwiIGhlIHRvbGQgQVAuCldlIGFyZSBmdWxseSBwcmVwYXJlZC4gLi4uCldlIHdpbGwgZ2l2ZSB0aGVtIGEgdG91Z2ggZmlnaHQuCkFuYWx5c3RzIHNheSBNdXNoYXJyYWYgY291bGQgcGxheSBTaGFyaWYncyByZXR1cm4gdG8gaGlzIGFkdmFudGFnZSAtIGlmIGhlIGNhbiBrZWVwIHRoZSBvcHBvc2l0aW9uIHNwbGl0IC0gYnkgY2xhaW1pbmcgdGhhdCBoZSBoYXMgZmluYWxseSBicm91Z2h0IGEgbWVhc3VyZSBvZiByZWFsIGRlbW9jcmFjeSBiYWNrIHRvIFBha2lzdGFuLgoiSWYgdGhlIG1ham9yIHBhcnRpZXMgZG8gdGFrZSBwYXJ0IGluIGVsZWN0aW9ucywgdGhlbiB0aGUgY3Jpc2lzIHdpbGwgYmUgbGFyZ2VseSBvdmVyIGJlY2F1c2UgdGhlIHZvdGUgd2lsbCBwcm92aWRlIHRoZSBsZWdpdGltYWN5IGFuZCBjcmVkaWJpbGl0eSBNdXNoYXJyYWYgbmVlZHMsIiBzYWlkIEF5YXogQW1pciwgYSBmb3JtZXIgbGF3bWFrZXIgd2hvIGlzIGEgY29sdW1uaXN0IGZvciB0aGUgcmVzcGVjdGVkIERhd24gbmV3c3BhcGVyLgpUaGlzIGZpdHMgaW50byB3aGF0IHRoZSBpbnRlcm5hdGlvbmFsIGJhY2tlcnMgb2YgUGFraXN0YW4gYWxzbyB3YW50LCBhbiBvcmRlcmx5IHRyYW5zaXRpb24uCkFtaXIgcHJlZGljdGVkIHRoYXQgdGhlIGVtZXJnZW5jeSBpbXBvc2VkIG9uIE5vdi4gMyB3b3VsZCBiZSBsaWZ0ZWQgYWhlYWQgb2YgSmFudWFyeSdzIGJhbGxvdCwgImJlY2F1c2UgYWxsIG9mIHRoZSBhaW1zIG9mIHRoZSBlbWVyZ2VuY3kgd2lsbCBoYXZlIGJlZW4gYWNoaWV2ZWQuIgpBbHNvIEZyaWRheSwgdGhlIGdvdmVybm1lbnQgY29uZGVtbmVkIHRoZSBkZWNpc2lvbiBieSB0aGUgQ29tbW9ud2VhbHRoLCBhIDUzLW5hdGlvbiBncm91cGluZyBjb21wcmlzZWQgbWFpbmx5IG9mIEJyaXRhaW4gYW5kIGl0cyBmb3JtZXIgY29sb25pZXMsIHRvIHN1c3BlbmQgaXRzIG1lbWJlcnNoaXAuClBha2lzdGFuIHNhaWQgdGhlIGRlY2lzaW9uIHdhcyAidW5yZWFzb25hYmxlIGFuZCB1bmp1c3RpZmllZCIgYW5kIGZhaWxlZCB0byBhcHByZWNpYXRlIFBha2lzdGFuJ3MgInNlcmlvdXMgaW50ZXJuYWwgY3Jpc2lzLiIKQXNzb2NpYXRlZCBQcmVzcyB3cml0ZXJzIE11bmlyIEFobWFkIGFuZCBTbG9ib2RhbiBMZWtpYyBjb250cmlidXRlZCB0byB0aGlzIHJlcG9ydC4K
[(T3Bwb3NpdGlvbiBMaW5pbmcgVXAgZm9yIFBha2lzdGFuIFZvdGUKSVNMQU1BQkFELCBQYWtpc3RhbiAoQVApIC0gRGVzcGl0ZSB0aGVpciBwcm90ZXN0cyB0aGF0IHBhcmxpYW1lbnRhcnkgZWxlY3Rpb25zIHdpbGwgYmUgYSBzaGFtLCBQYWtpc3RhbidzIHBvbGl0aWNhbCBvcHBvc2l0aW9uIHNlZW1lZCBGcmlkYXkgdG8gYmUgbGluaW5nIHVwIGZvciBhIGNoYW5jZSB0byB0YWtlIHBhcnQgLSB3aXRoIG9uZSBmb3JtZXIgcHJpbWUgbWluaXN0ZXIgcmVhZHlpbmcgaGVyIGNhbmRpZGF0ZXMgYW5kIGFub3RoZXIgdGFraW5nIHN0ZXBzIHRvIHJldHVybiBmcm9tIGV4aWxlLgpNZWFud2hpbGUsIGEgcGxpYW50IFN1cHJlbWUgQ291cnQgaW5zdGFsbGVkIGJ5IFByZXNpZGVudCBHZW4uIFBlcnZleiBNdXNoYXJyYWYgZ2F2ZSB0aGUgbWlsaXRhcnkgcnVsZXIgZnVydGhlciBsZWdhbCBjb3ZlciwgcnVsaW5nIHRoYXQgdGhlIHN0YXRlIG9mIGVtZXJnZW5jeSBoZSBkZWNsYXJlZCBvbiBOb3YuIDMgd2FzIGxlZ2FsLgpUaGUgY291cnQgb24gVGh1cnNkYXkgaGFkIHJ1bGVkIHRoYXQgTXVzaGFycmFmIGNvdWxkIGJlY29tZSBhIGNpdmlsaWFuIHByZXNpZGVudCwgY2xlYXJpbmcgdGhlIHdheSBmb3IgYSBuZXcgZml2ZS15ZWFyIHRlcm0uCkF0dG9ybmV5IEdlbmVyYWwgTWFsaWsgTW9oYW1tZWQgUWF5eXVtIHRvbGQgVGhlIEFzc29jaWF0ZWQgUHJlc3MgdGhhdCB0aGUgY291cnQgZGVjaXNpb24gLSB3aGljaCB3YXMgc2VudCBsYXRlIEZyaWRheSB0byB0aGUgRWxlY3Rpb24gQ29tbWlzc2lvbiBmb3IgcmF0aWZpY2F0aW9uIC0gZ2F2ZSBNdXNoYXJyYWYgdW50aWwgRGVjLiAxIHRvIHN0ZXAgZG93biBhcyBhcm15IGNoaWVmIGFuZCB0YWtlIHRoZSBvYXRoIG9mIG9mZmljZSBhcyBhIGNpdmlsaWFuIHByZXNpZGVudC4KUWF5eXVtIGhhcyBzYWlkIE11c2hhcnJhZiBjb3VsZCBxdWl0IGhpcyBhcm15IHBvc3QgYXMgZWFybHkgYXMgdGhpcyB3ZWVrZW5kLCB0aG91Z2ggbm8gZGF0ZSBoYXMgYmVlbiBzZXQuClRoZSBnZW5lcmFsIGhhcyByZXBlYXRlZGx5IHBsZWRnZWQgdG8gZ2l2ZSB1cCBoaXMgbWlsaXRhcnkgcG9zaXRpb24gYnkgdGhlIGVuZCBvZiB0aGUgbW9udGgsIGluIGhvcGVzIG9mIGNvb2xpbmcgZG9tZXN0aWMgYW5kIGZvcmVpZ24gY3JpdGljaXNtIG9mIGhpcyBjcmFja2Rvd24sIHdoaWNoIGluY2x1ZGVkIHRoZSBqYWlsaW5nIG9mIHRob3VzYW5kcyBvZiBvcHBvbmVudHMgYW5kIGEgY2xhbXBkb3duIG9uIGJvdGggdGhlIGp1ZGljaWFyeSBhbmQgdGhlIGNvdW50cnkncyBtZWRpYS4KTW9zdCBvcHBvbmVudHMgaGF2ZSBiZWVuIGZyZWVkIGluIHJlY2VudCBkYXlzLCBhbmQgYWxsIGJ1dCBvbmUgb2YgdGhlIG5ld3MgY2hhbm5lbHMgYXJlIGJhY2sgb24gdGhlIGFpci4KQnV0IGl0IHdhcyB0aGUgcG9saXRpY2FsIG1hbmV1dmVyaW5nIG9mIHR3byBmb3JtZXIgcHJpbWUgbWluaXN0ZXJzIC0gQmVuYXppciBCaHV0dG8gYW5kIE5hd2F6IFNoYXJpZiAtIHRoYXQgd2FzIHByb2R1Y2luZyB0aGUgbW9zdCBpbnRyaWd1ZSBpbiBhbiBldmVyLXNoaWZ0aW5nIHBvbGl0aWNhbCBsYW5kc2NhcGUuClVudGlsIHJlY2VudGx5LCBQYWtpc3RhbidzIHR3byBtYWluIG9wcG9zaXRpb24gcGFydGllcyAtIEJodXR0bydzIFBha2lzdGFuIFBlb3BsZSdzIFBhcnR5IGFuZCBTaGFyaWYncyBmYWN0aW9uIG9mIHRoZSBQYWtpc3RhbiBNdXNsaW0gTGVhZ3VlLCBrbm93biBhcyBQTUwtTiAtIGhhZCBiZWVuIGRpc2N1c3NpbmcgYSBib3ljb3R0IG9mIHBhcmxpYW1lbnRhcnkgZWxlY3Rpb25zIHNjaGVkdWxlZCBmb3IgSmFuLiA4LCBzYXlpbmcgYW55IHZvdGUgaGVsZCB1bmRlciBlbWVyZ2VuY3kgcnVsZSBsYWNrZWQgbGVnaXRpbWFjeS4KQnV0IHRoZXkgaGF2ZSBiZWVuIGNoYW5naW5nIHRoZWlyIHR1bmUuCkJodXR0byB3YXMgaW4gdGhlIGNhcGl0YWwsIElzbGFtYWJhZCwgb24gRnJpZGF5IGFzIHNoZSBwcmVwYXJlZCB0byBzdWJtaXQgYSBsaXN0IG9mIGNhbmRpZGF0ZXMgZm9yIHRoZSB2b3RlIGFoZWFkIG9mIGEgTW9uZGF5IGRlYWRsaW5lLgpXaGlsZSBzaGUgc2F5cyBzaGUgaGFzIG5vdCBtYWRlIGEgZmluYWwgZGVjaXNpb24gd2hldGhlciB0byB0YWtlIHBhcnQsIHNoZSBpbmRpY2F0ZWQgaW4gY29tbWVudHMgVGh1cnNkYXkgdGhhdCBzaGUgZGlkIG5vdCB3YW50IHRvIGhhbmQgTXVzaGFycmFmIGEgIndhbGtvdmVyIiB2aWN0b3J5IGJ5IHN0YXlpbmcgYXdheS4KQSBwb3dlcmZ1bCByZWxpZ2lvdXMgY29hbGl0aW9uLCB0aGUgTXV0dGFoaWRhIE1hamxpcy1lLUFtYWwsIGhhcyBhbHNvIHNhaWQgaXQgd291bGQgZmlsZSBwYXBlcnMgYW5kIHdhcyBsZWFuaW5nIHRvd2FyZCBwYXJ0aWNpcGF0aW5nIGluIHRoZSB2b3RlLCBhcyBsb25nIGFzIG90aGVyIG9wcG9zaXRpb24gcGFydGllcyBkaWQgdG9vLgpTaGFyaWYgd2FzIG1lZXRpbmcgd2l0aCBTYXVkaSBLaW5nIEFiZHVsbGFoIGluIFJpeWFkaCBvbiBGcmlkYXkgaW4gYW4gYXR0ZW1wdCB0byB3aW4gc3VwcG9ydCBmb3IgYSByZXR1cm4gaG9tZSBhaGVhZCBvZiB0aGUgdm90ZS4KVGhlIHZpY2UgcHJlc2lkZW50IG9mIGhpcyBwYXJ0eSwgWmFmYXIgQWxpIFNoYWgsIHNhaWQgdGhlIGV4aWxlZCBsZWFkZXIgd291bGQgYmUgYmFjayBpbiBQYWtpc3RhbiAibmV4dCB3ZWVrLiIKSGUgZGVjbGluZWQgdG8gc2F5IHdoZXRoZXIgU2hhcmlmIHdvdWxkIG1ha2UgaXQgYmFjayBpbiB0aW1lIHRvIGZpbGUgcGFwZXJzIGJlZm9yZSBNb25kYXkncyBkZWFkbGluZSBmb3IgcGFydGljaXBhdGlvbiBpbiB0aGUgSmFudWFyeSB2b3RlLgpTcGVjdWxhdGlvbiB0aGF0IFNhdWRpIEFyYWJpYSB3YW50ZWQgU2hhcmlmIHRvIGdvIGhvbWUgaGFkIGJlZW4gcmlmZSBzaW5jZSBNdXNoYXJyYWYgbWFkZSBhIHN1cnByaXNlIHRyaXAgdG8gdGhlIFNhdWRpIGNhcGl0YWwgZm9yIHRhbGtzIHdpdGggQWJkdWxsYWggb24gVHVlc2RheS4KUHJlc2lkZW50aWFsIHNwb2tlc21hbiBSYXNoaWQgUXVyZXNoaSBkZWNsaW5lZCB0byBzYXkgd2hhdCBNdXNoYXJyYWYgd291bGQgZG8gaWYgdGhlIG1hbiBoZSBvdXN0ZWQgaW4gMTk5OSB0cmllZCB0byBlbnRlciBQYWtpc3Rhbi4KVGhlIGxhc3QgdGltZSB0aGUgZm9ybWVyIHByaW1lIG1pbmlzdGVyIC0gb25lIG9mIHRoZSBnZW5lcmFsJ3MgbW9zdCB2ZWhlbWVudCBjcml0aWNzIC0gdHJpZWQgdG8gcmV0dXJuLCBoZSB3YXMgc3dpZnRseSBkZXBvcnRlZC4KQSBzZW5pb3Igb2ZmaWNpYWwgYXQgdGhlIHByZXNpZGVuY3kgdG9sZCBBUCBvbiBGcmlkYXkgdGhhdCBNdXNoYXJyYWYgaGFkICJzb2Z0ZW5lZCIgaGlzIHN0YW5jZSB0b3dhcmQgU2hhcmlmLCBhbmQgd2FzIGhvcGluZyBmb3Igc29tZSBsZXZlbCBvZiByZWNvbmNpbGlhdGlvbiwgcmFpc2luZyB0aGUgcG9zc2liaWxpdHkgdGhhdCBNdXNoYXJyYWYgbWlnaHQgdHJ5IHRvIGFsbHkgaGltc2VsZiB3aXRoIHRoZSBtYW4gaGUgdG9wcGxlZCwgaW4gb3JkZXIgdG8gZnJlZXplIEJodXR0byBvdXQuCiJUaGUgaG9wZSBpcyB0aGF0IGhlIChTaGFyaWYpIHdpbGwgbm90IGFjdCBsaWtlIEJlbmF6aXIgQmh1dHRvLCB3aG8gaXMgZm9sbG93aW5nIHRoZSBwb2xpdGljcyBvZiBjb25mcm9udGF0aW9uLCIgdGhlIG9mZmljaWFsIHNhaWQuClRoZSBvZmZpY2lhbCwgd2hvIHNwb2tlIG9uIGNvbmRpdGlvbiBvZiBhbm9ueW1pdHkgYmVjYXVzZSBvZiB0aGUgc2Vuc2l0aXZlIG5hdHVyZSBvZiB0aGUgaXNzdWUsIHNhaWQgY2xvc2UgYXNzb2NpYXRlcyBvZiBTaGFyaWYgYW5kIE11c2hhcnJhZiB3ZXJlIGluIHRvdWNoIHRvIHNlZSBob3cgdGhleSBjb3VsZCBlbmQgdGhlaXIgZmV1ZC4KV2hpbGUgYSBjb21wbGV0ZSBib3ljb3R0IG9mIHRoZSBKYW4uIDggcG9sbCB3b3VsZCBiZSBkaXNhc3Ryb3VzIGZvciBNdXNoYXJyYWYgLSBiZWx5aW5nIGhpcyBjbGFpbXMgdGhhdCBoZSBoYXMgbmF2aWdhdGVkIHRoZSBuYXRpb24gb24gYSBwYXRoIHRvd2FyZCBkZW1vY3JhY3kgLSBwYXJ0aWNpcGF0aW9uIGJ5IGJvdGggbWFqb3Igb3Bwb3NpdGlvbiBwYXJ0aWVzIGNvdWxkIHByb3ZlIGVxdWFsbHkgdHJpY2t5LCBwYXJ0aWN1bGFybHkgaWYgdGhleSBmb3JtIGEgY29hbGl0aW9uIGFnYWluc3QgaGltLgpUYXJpcSBBemltLCBhIHNwb2tlc21hbiBmb3IgdGhlIHByby1NdXNoYXJyYWYgUE1MLVEgcGFydHksIHNhaWQgaGlzIHBhcnR5IHdhcyBjb25maWRlbnQgb2YgYSBnb29kIHJlc3VsdCBpbiB0aGUgZWxlY3Rpb25zLgoiV2Ugd291bGQgYmUgaGFwcHkgdG8gZmFjZSBCZW5hemlyIEJodXR0byBvciBOYXdheiBTaGFyaWYsIG9yIGV2ZW4gYm90aCB0b2dldGhlciwiIGhlIHRvbGQgQVAuCldlIGFyZSBmdWxseSBwcmVwYXJlZC4gLi4uCldlIHdpbGwgZ2l2ZSB0aGVtIGEgdG91Z2ggZmlnaHQuCkFuYWx5c3RzIHNheSBNdXNoYXJyYWYgY291bGQgcGxheSBTaGFyaWYncyByZXR1cm4gdG8gaGlzIGFkdmFudGFnZSAtIGlmIGhlIGNhbiBrZWVwIHRoZSBvcHBvc2l0aW9uIHNwbGl0IC0gYnkgY2xhaW1pbmcgdGhhdCBoZSBoYXMgZmluYWxseSBicm91Z2h0IGEgbWVhc3VyZSBvZiByZWFsIGRlbW9jcmFjeSBiYWNrIHRvIFBha2lzdGFuLgoiSWYgdGhlIG1ham9yIHBhcnRpZXMgZG8gdGFrZSBwYXJ0IGluIGVsZWN0aW9ucywgdGhlbiB0aGUgY3Jpc2lzIHdpbGwgYmUgbGFyZ2VseSBvdmVyIGJlY2F1c2UgdGhlIHZvdGUgd2lsbCBwcm92aWRlIHRoZSBsZWdpdGltYWN5IGFuZCBjcmVkaWJpbGl0eSBNdXNoYXJyYWYgbmVlZHMsIiBzYWlkIEF5YXogQW1pciwgYSBmb3JtZXIgbGF3bWFrZXIgd2hvIGlzIGEgY29sdW1uaXN0IGZvciB0aGUgcmVzcGVjdGVkIERhd24gbmV3c3BhcGVyLgpUaGlzIGZpdHMgaW50byB3aGF0IHRoZSBpbnRlcm5hdGlvbmFsIGJhY2tlcnMgb2YgUGFraXN0YW4gYWxzbyB3YW50LCBhbiBvcmRlcmx5IHRyYW5zaXRpb24uCkFtaXIgcHJlZGljdGVkIHRoYXQgdGhlIGVtZXJnZW5jeSBpbXBvc2VkIG9uIE5vdi4gMyB3b3VsZCBiZSBsaWZ0ZWQgYWhlYWQgb2YgSmFudWFyeSdzIGJhbGxvdCwgImJlY2F1c2UgYWxsIG9mIHRoZSBhaW1zIG9mIHRoZSBlbWVyZ2VuY3kgd2lsbCBoYXZlIGJlZW4gYWNoaWV2ZWQuIgpBbHNvIEZyaWRheSwgdGhlIGdvdmVybm1lbnQgY29uZGVtbmVkIHRoZSBkZWNpc2lvbiBieSB0aGUgQ29tbW9ud2VhbHRoLCBhIDUzLW5hdGlvbiBncm91cGluZyBjb21wcmlzZWQgbWFpbmx5IG9mIEJyaXRhaW4gYW5kIGl0cyBmb3JtZXIgY29sb25pZXMsIHRvIHN1c3BlbmQgaXRzIG1lbWJlcnNoaXAuClBha2lzdGFuIHNhaWQgdGhlIGRlY2lzaW9uIHdhcyAidW5yZWFzb25hYmxlIGFuZCB1bmp1c3RpZmllZCIgYW5kIGZhaWxlZCB0byBhcHByZWNpYXRlIFBha2lzdGFuJ3MgInNlcmlvdXMgaW50ZXJuYWwgY3Jpc2lzLiIKQXNzb2NpYXRlZCBQcmVzcyB3cml0ZXJzIE11bmlyIEFobWFkIGFuZCBTbG9ib2RhbiBMZWtpYyBjb250cmlidXRlZCB0byB0aGlzIHJlcG9ydC4K, 'ORG')]
Rm9yZWNhc3RlcnM6IEh1cnJpY2FuZSBTZWFzb24gV2FzIE1pbGQKKEFQKSAtIFRoZSAyMDA3IEF0bGFudGljIGh1cnJpY2FuZSBzZWFzb24gd2FzIGxlc3MgYWN0aXZlIHRoYW4gZm9yZWNhc3RlcnMgdGhvdWdodCBpdCB3b3VsZCBiZSwgd2l0aCBzaXggaHVycmljYW5lcyBkZXZlbG9waW5nIGluc3RlYWQgb2YgdGhlIG5pbmUgcHJlZGljdGVkLCBhIHRvcCB3ZWF0aGVyIHJlc2VhcmNoZXIgc2FpZCBUdWVzZGF5LgpDb29sZXIgd2F0ZXIgYW5kIHRoZSBwcmVzZW5jZSBvZiB3aW5kIHNoZWFycyBpbiB0aGUgY2VudHJhbCB0cm9waWNhbCBBdGxhbnRpYyBtYWRlIHRoaXMgYW4gYXZlcmFnZSBzZWFzb24gaW5zdGVhZCBvZiB0aGUgYWJvdmUtYXZlcmFnZSB5ZWFyIHRoZSB0ZWFtIGV4cGVjdGVkLCBzYWlkIFBoaWwgS2xvdHpiYWNoLCBhIG1lbWJlciBvZiByZXNlYXJjaGVyIFdpbGxpYW0gR3JheSdzIHRlYW0gYXQgQ29sb3JhZG8gU3RhdGUgVW5pdmVyc2l0eS4KQ29vbGVyIHRlbXBlcmF0dXJlcyBpbmhpYml0IGh1cnJpY2FuZSBmb3JtYXRpb24sIGFuZCB3aW5kIHNoZWFycyBjYW4gdGVhciBkZXZlbG9waW5nIGh1cnJpY2FuZXMgYXBhcnQuCkdyYXkgaGFzIGJlZW4gZm9yZWNhc3RpbmcgaHVycmljYW5lcyBmb3IgbW9yZSB0aGFuIHR3byBkZWNhZGVzLCBhbmQgaGlzIHByZWRpY3Rpb25zIGZvciB0aGUgc2Vhc29uIGFyZSB3YXRjaGVkIGNsb3NlbHkgYnkgZW1lcmdlbmN5IHJlc3BvbmRlcnMgYW5kIG90aGVycyBpbiBjb2FzdGFsIGFyZWFzLgpUaGUgQXRsYW50aWMgc2Vhc29uIHJ1bnMgZnJvbSBKdW5lIDEgdG8gTm92LiAzMC4KVGhpcyB5ZWFyLCBHcmF5J3MgQXByaWwgYW5kIEp1bmUgZm9yZWNhc3RzIGJvdGggcHJlZGljdGVkIDE3IG5hbWVkIHN0b3JtcywgaW5jbHVkaW5nIG5pbmUgaHVycmljYW5lcywgZml2ZSBvZiB0aGVtIG1ham9yLgpJbiBBdWd1c3QsIHRoZSB0ZWFtIGxvd2VyZWQgdGhhdCBmb3JlY2FzdCB0byAxNSBuYW1lZCBzdG9ybXMsIGluY2x1ZGluZyBlaWdodCBodXJyaWNhbmVzLCBmb3VyIG9mIHRoZW0gbWFqb3IuCkluc3RlYWQsIHRoZSB5ZWFyIHByb2R1Y2VkIDE0IG5hbWVkIHN0b3JtcywgaW5jbHVkaW5nIHNpeCBodXJyaWNhbmVzLCB0d28gb2YgdGhlbSBtYWpvci4KSXQncyB0aGUgc2Vjb25kIHN0cmFpZ2h0IHllYXIgdGhlIHRlYW0gcHJlZGljdGVkIG1vcmUgaHVycmljYW5lcyB0aGFuIGFjdHVhbGx5IG9jY3VycmVkLgo=
[]
TW90aGVyIG9mICdNYWRkaWUnIHRvIGJlIHF1ZXN0aW9uZWQgYWdhaW46IHBvbGljZSBzb3VyY2UKVGhlIG1vdGhlciBvZiBtaXNzaW5nIEJyaXRpc2ggdG9kZGxlciBNYWRlbGVpbmUgTWNDYW5uIHdpbGwgYmUgcXVlc3Rpb25lZCBhZ2FpbiBGcmlkYXkgbW9ybmluZyBieSBwb2xpY2UgaW52ZXN0aWdhdG9ycyBmb2xsb3dpbmcgMTEgaG91cnMgb2YgcXVlc3Rpb25pbmcgdGhlIGRheSBiZWZvcmUsIGEgcG9saWNlIHNvdXJjZSB0b2xkIHRoZSBQb3J0dWd1ZXNlIG5ld3MgYWdlbmN5IExVU0EuCkthdGUgTWNDYW5uIHdhcyBxdWVzdGlvbmVkIGZvciBuZWFybHkgMTEgaG91cnMgb24gVGh1cnNkYXkgYnkgcG9saWNlIGludmVzdGlnYXRpbmcgdGhlIGRpc2FwcGVhcmFuY2Ugb2YgaGVyIHRoZW4gdGhyZWUteWVhci1vbGQgZGF1Z2h0ZXIgb24gTWF5IDMgZnJvbSB0aGUgdmFjYXRpb24gYXBhcnRtZW50IHRoZXkgd2VyZSBzdGF5aW5nIGF0IGluIHRoZSBzZWFzaWRlIHJlc29ydCBvZiBQcmFpYSBkYSBMdXouCkhlciBodXNiYW5kIEdlcnJ5IHdhcyBhbHNvIGR1ZSB0byBiZSBxdWVzdGlvbmVkIG9uIEZyaWRheS4KRW1lcmdpbmcgZnJvbSB0aGUgcG9saWNlIHN0YXRpb24gYWZ0ZXIgdGhlIDExIGhvdXJzIG9mIHF1ZXN0aW9uaW5nLCBLYXRlIE1jQ2FubidzIGxhd3llciBzYWlkIHNoZSB3YXMgc3RpbGwgY29uc2lkZXJlZCBhIHdpdG5lc3MgYW5kIHRoZSBpbnZlc3RpZ2F0aW9uIHdhcyBjb250aW51aW5nLgpQb3J0dWd1ZXNlIGxhd3Mgc2V2ZXJlbHkgcmVzdHJpY3Qgd2hhdCB0aG9zZSBwcml2eSB0byBhbiBpbnZlc3RpZ2F0aW9uIG1heSBzYXkgcHVibGljbHkuClRoZSBQb3J0dWd1ZXNlIHBvbGljZSBoYXZlIGNvbmZpcm1lZCB0aGV5IHJlY2VpdmVkIG9uIFdlZG5lc2RheSBwYXJ0IG9mIHRoZSBmb3JlbnNpYyBsYWJvcmF0b3J5IHJlc3VsdHMgb2YgdHJhY2VzIG9mIGJsb29kIGZvdW5kIGluIHRoZSByb29tIGluIHRoZSBhcGFydG1lbnQgd2hlcmUgTWFkZWxlaW5lIGhhZCBiZWVuIHNsZWVwaW5nIGJlZm9yZSBzaGUgZGlzYXBwZWFyZWQuClRoZSBwb2xpY2UgaGF2ZSBtYWRlIG5vIHN0YXRlbWVudCBhcyB0byB3aGF0IHRoZSBsYWIgcmVzdWx0cyBzaG93ZWQsIG9yIHdoZXRoZXIgdGhlIGJsb29kIGJlbG9uZ2VkIHRvIHRoZSBjaGlsZCBvciB0byBzb21lb25lIGVsc2UuCg==
[]
VVMgdW5pb24sIGF1dG9tYWtlcnMgbmVhciBkZWFkbGluZSBpbiBjb250cmFjdCB0YWxrcwpFbWJhdHRsZWQgVVMgYXV0b21ha2VycyBhcmUgbmVhcmluZyBhIEZyaWRheSBkZWFkbGluZSBpbiBrZXkgY29udHJhY3QgdGFsa3Mgd2l0aCB0aGUgc2VjdG9yJ3MgbWFpbiB1bmlvbiB0aGUgVW5pdGVkIEF1dG8gV29ya2VycyBhbWlkIGRpc2FncmVlbWVudHMgb3ZlciBjb3N0bHkgaGVhbHRoIGJlbmVmaXRzIGFuZCB3YWdlIHBhY2thZ2VzLgpHZW5lcmFsIE1vdG9ycycgb2ZmaWNpYWxzIHNhaWQgcHJpdmF0ZWx5IHRoZXkgaGFkIGRvdWJ0cyBhYm91dCB3aGV0aGVyIHRoZXkgY291bGQgcmVhY2ggYW4gYWNjb3JkIGJ5IHRoZSBkZWFkbGluZSBvZiBtaWRuaWdodCBGcmlkYXkgKDA0MDAgR01UIFNhdHVyZGF5KSwgd2hpbGUgQ2hyeXNsZXIgYW5kIEZvcmQgc2FpZCB0aGVpciBleGlzdGluZyBjb250cmFjdHMgd2l0aCB0aGUgdW5pb24gaGF2ZSBiZWVuIGV4dGVuZGVkIGluZGVmaW5pdGVseS4KIkdpdmVuIHRoZSBjb21wbGV4aXR5IG9mIHRoZSBpc3N1ZXMgd2UncmUgZGVhbGluZyB3aXRoLCBpdCdzIHByb2JhYmx5IGRvdWJ0ZnVsLCIgc2FpZCBvbmUgR00gb2ZmaWNpYWwgd2hvIGFza2VkIG5vdCB0byBiZSBpZGVudGlmaWVkLgpJbiBKdWx5LCBHTSwgRm9yZCBhbmQgQ2hyeXNsZXIgZW50ZXJlZCB0aGUgdGFsa3MgZm9yIGEgbmV3IGZvdXIteWVhciBsYWJvciBjb250cmFjdCBpbiBhIHdlYWtlbmVkIGNvbmRpdGlvbiwgaGF2aW5nIGxvc3QgbW9yZSB0aGFuIDI1IGJpbGxpb24gZG9sbGFycyBpbiAyMDA1IGFuZCAyMDA2LCBhbmQgd2l0aCBmb3JlaWduIGNvbXBldGl0aW9uIHNsaWNpbmcgaW50byB0aGVpciBtYXJrZXQuClNvIGZhciwgdGhlIHVuaW9uIGhhcyBhdm9pZGVkIGFueSB0YWxrIG9mIGEgc3RyaWtlIGFuZCB0aGVyZSB3YXMgbm8gc2lnbiBvZiBzdHJpa2UgcHJlcGFyYXRpb25zIGF0IGEgR00gcGxhbnQgdmlzaXRlZCBieSBBRlAuCiJOb2JvZHkgaXMgZ29pbmcgdG8gd2luIGlmIHRoZXJlIGlzIGEgc3RyaWtlLCIgRXJpYyBNZXJrbGUgb2YgSVJOIEF1dG9tb3RpdmUgSW50ZWxsaWdlbmNlIGluIEdyYW5kIFJhcGlkcywgTWljaGlnYW4gc2FpZC4KSSBqdXN0IGRvbid0IHNlZSB0aGF0IGhhcHBlbmluZy4KQ3JpdGljYWwgaXNzdWVzIHN1Y2ggYXMgaGVhbHRoIGNhcmUgaGF2ZSBrZXB0IGJvdGggc2lkZXMgYXQgdGhlIHRhYmxlLCBvYnNlcnZlcnMgc2FpZC4KTG9jYWwgdW5pb24gb2ZmaWNpYWxzIGRlY2xpbmVkIHRvIGNvbW1lbnQgb24gdGhlIHRhbGtzIGJ1dCBDYWwgUmFwc29uLCB0aGUgaGVhZCBvZiB0aGUgVUFXIEdNIGRlcGFydG1lbnQsIHNlbnQgYSBsZXR0ZXIgdG8gbG9jYWwgdW5pb24gb2ZmaWNpYWxzLgoiV2UgYXJlIGRlYWxpbmcgd2l0aCBtYW55IGRpZmZpY3VsdCBpc3N1ZXMsIiBzYWlkIFJhcHNvbiwgYSBtZW1iZXIgb2YgdGhlIHVuaW9uJ3MgZXhlY3V0aXZlIGJvYXJkLgpKZXJyeSBUdWNrZXIsIGRpcmVjdG9yIG9mIHRoZSBDZW50ZXIgZm9yIExhYm9yIFJlbmV3YWwgaW4gU3QuIExvdWlzLCBNaXNzb3VyaSwgYW5kIGEgZm9ybWVyIG1lbWJlciBvZiBVQVcgYm9hcmQsIGFsc28gc2FpZCBoZSBkb3VidGVkIFVBVyBwcmVzaWRlbnQgUm9uIEdldHRlbGZpbmdlciB3YXMgbG9va2luZyBmb3IgYSBjb25mcm9udGF0aW9uLgpIZSBoYXNuJ3QgZXZlbiB0YWxrZWQgYWJvdXQgYSBzdHJpa2UuClRoZXJlIGhhc24ndCBiZWVuIGFueSBzYWJyZSByYXR0bGluZywiIHNhaWQgVHVja2VyLCB3aG8gbm90ZWQgdGhlIHVuaW9uIGhhcyBvdGhlciBvcHRpb25zIGluIGl0cyBhcnNlbmFsIGluY2x1ZGluZyBhIGRlbGliZXJhdGUgc2xvd2Rvd24uCkFzIHRoZSBkZWFkbGluZSBhcHByb2FjaGVkLCBoZWFsdGggY2FyZSB3YXMgdGhlIHByaW5jaXBhbCBpc3N1ZSBrZWVwaW5nIHRoZSB0d28gc2lkZXMgYXBhcnQuClRoZSB1bmlvbiBoYWQgYWdyZWVkIGluIHByaW5jaXBsZSwgc291cmNlcyBzYWlkLCB0byBzaGlmdGluZyBsaWFiaWxpdHkgZm9yIHJldGlyZWUgaGVhbHRoIGNhcmUgdG8gYSB2b2x1bnRhcnkgZW1wbG95ZWUgYmVuZWZpdCBhc3NvY2lhdGlvbiwgd2hpY2ggd291bGQgdHJhbnNmZXIgcmVzcG9uc2liaWxpdHkgZm9yIGJvdGggdHJ1c3RzJyBmaW5hbmNpYWwgYXNzZXRzIGFuZCBwYXltZW50IG9mIGhlYWx0aC1jYXJlIGNsYWltcyB0byB0aGUgdW5pb24uCiJUaGUgVUFXIGhhcyB0byB0YWtlIG9uIG1vcmUgb2YgdGhlIHJpc2ssIiBNZXJrbGUgc2FpZC4KSm9obiBNdXJwaHksIGFuIGFuYWx5c3Qgd2l0aCBNZXJyaWxsIEx5bmNoLCBzYWlkIGluIGEgcmVjZW50IHJlcG9ydCB0byBpbnZlc3RvcnMsIGhlIGJlbGlldmVkIGEgZGVhbCBvbiBoZWFsdGggY2FyZSB3b3VsZCBiZSBvZiBodWdlIGJlbmVmaXQgdG8gYm90aC4KIldlIGJlbGlldmUgdGhhdCB0aGUgbXVjaC1kaXNjdXNzZWQgaGVhbHRoIGNhcmUgZGVhbCBpcyBpbmNyZWFzaW5nbHkgbGlrZWx5IGF0IEdNIGFuZCBGb3JkLCIgaGUgc2FpZC4KIldlIGVzdGltYXRlIHRoZSBhbm51YWwgY2FzaCBzYXZpbmdzIGF0IEdNIG1heSBiZSBhcyBoaWdoIGFzIDIuNSBiaWxsaW9uIGFuZCBhdCBGb3JkIGFsbW9zdCA3NTAgbWlsbGlvbiwiIGhlIHNhaWQuClVuaW9uIG5lZ290aWF0b3JzLCBob3dldmVyLCB3ZXJlIHByZXNzaW5nIGZvciBoaWdoZXIgbGV2ZWxzIG9mIGZ1bmRpbmcgdGhhbiB0aGUgY29tcGFuaWVzIHdlcmUgd2lsbGluZyB0byBnaXZlLgpJbiBhZGRpdGlvbiwgdGhlIHVuaW9uIGFsc28gd2FudGVkIGFkZGl0aW9uYWwgYXNzdXJhbmNlcyBvbiBmdXR1cmUgaW52ZXN0bWVudC4KRnVsbHkgZnVuZGluZyB0aGUgVm9sdW50YXJ5IEVtcGxveWVlIEJlbmVmaXQgQWRtaW5pc3RyYXRpb24gKFZFQkEpIG9yIGhlYWx0aCBjYXJlIHRydXN0IGNvdWxkIGJlIGEgY2hhbGxlbmdlIGZvciB0aGUgYXV0b21ha2VycywgTWVya2xlIHNhaWQuCkJ5IGFuZCBsYXJnZSwgaG93ZXZlciwgdGhlIGV4cGVjdGF0aW9ucyBvZiB1bmlvbiBtZW1iZXJzIGdvaW5nIGludG8gdGhlIHRhbGtzIHdhcyByZWxhdGl2ZWx5IGxvdywgVHVja2VyIHNhaWQuClRoZXkgd291bGQgcHJvYmFibHkgc2F0aXNmaWVkIGlmIHRoZSBVQVcgbmVnb3RpYXRvcnMgaGVsZCB0aGUgbGluZSBvbiB0aGUgY29udHJhY3QgYW5kIG1hZGUgbm8gbWFqb3IgY29uY2Vzc2lvbnMuClVuaW9uaXplZCB3YWdlcyBhdCBVUyBhdXRvIHBsYW50cyBzdGFydCBhdCAyOCBkb2xsYXJzIHBlciBob3VyIGFuZCB0aGUgYmVuZWZpdHMgaW5jbHVkZSBvdmVydGltZSBndWFyYW50ZWVzLCBwZW5zaW9ucywgc2ljayBwYXkgYW5kIGxpZmUgaW5zdXJhbmNlIGFzIHdlbGwgYXMgaGVhbHRoIGNhcmUgcGFja2FnZS4KVGhlIHVuaW9uJ3MgY29udHJhY3RzIGNvdmVyIG1vcmUgdGhhbiAxODAsMDAwIGF0IEdlbmVyYWwgTW90b3JzLCBGb3JkIGFuZCBDaHJ5c2xlciwgd2hpY2ggaGF2ZSByZWNvcmRlZCBoZWF2eSBsb3NzZXMgc2luY2UgdGhlIHN0YXJ0IG9mIDIwMDUuClRoZSBhdXRvbWFrZXJzIGFsc28gaGF2ZSBhbm5vdW5jZWQgcGxhbnMgdG8gc2h1dCBtb3JlIHRoYW4gMzAgcGxhbnRzLgo=
[(VVMgdW5pb24sIGF1dG9tYWtlcnMgbmVhciBkZWFkbGluZSBpbiBjb250cmFjdCB0YWxrcwpFbWJhdHRsZWQgVVMgYXV0b21ha2VycyBhcmUgbmVhcmluZyBhIEZyaWRheSBkZWFkbGluZSBpbiBrZXkgY29udHJhY3QgdGFsa3Mgd2l0aCB0aGUgc2VjdG9yJ3MgbWFpbiB1bmlvbiB0aGUgVW5pdGVkIEF1dG8gV29ya2VycyBhbWlkIGRpc2FncmVlbWVudHMgb3ZlciBjb3N0bHkgaGVhbHRoIGJlbmVmaXRzIGFuZCB3YWdlIHBhY2thZ2VzLgpHZW5lcmFsIE1vdG9ycycgb2ZmaWNpYWxzIHNhaWQgcHJpdmF0ZWx5IHRoZXkgaGFkIGRvdWJ0cyBhYm91dCB3aGV0aGVyIHRoZXkgY291bGQgcmVhY2ggYW4gYWNjb3JkIGJ5IHRoZSBkZWFkbGluZSBvZiBtaWRuaWdodCBGcmlkYXkgKDA0MDAgR01UIFNhdHVyZGF5KSwgd2hpbGUgQ2hyeXNsZXIgYW5kIEZvcmQgc2FpZCB0aGVpciBleGlzdGluZyBjb250cmFjdHMgd2l0aCB0aGUgdW5pb24gaGF2ZSBiZWVuIGV4dGVuZGVkIGluZGVmaW5pdGVseS4KIkdpdmVuIHRoZSBjb21wbGV4aXR5IG9mIHRoZSBpc3N1ZXMgd2UncmUgZGVhbGluZyB3aXRoLCBpdCdzIHByb2JhYmx5IGRvdWJ0ZnVsLCIgc2FpZCBvbmUgR00gb2ZmaWNpYWwgd2hvIGFza2VkIG5vdCB0byBiZSBpZGVudGlmaWVkLgpJbiBKdWx5LCBHTSwgRm9yZCBhbmQgQ2hyeXNsZXIgZW50ZXJlZCB0aGUgdGFsa3MgZm9yIGEgbmV3IGZvdXIteWVhciBsYWJvciBjb250cmFjdCBpbiBhIHdlYWtlbmVkIGNvbmRpdGlvbiwgaGF2aW5nIGxvc3QgbW9yZSB0aGFuIDI1IGJpbGxpb24gZG9sbGFycyBpbiAyMDA1IGFuZCAyMDA2LCBhbmQgd2l0aCBmb3JlaWduIGNvbXBldGl0aW9uIHNsaWNpbmcgaW50byB0aGVpciBtYXJrZXQuClNvIGZhciwgdGhlIHVuaW9uIGhhcyBhdm9pZGVkIGFueSB0YWxrIG9mIGEgc3RyaWtlIGFuZCB0aGVyZSB3YXMgbm8gc2lnbiBvZiBzdHJpa2UgcHJlcGFyYXRpb25zIGF0IGEgR00gcGxhbnQgdmlzaXRlZCBieSBBRlAuCiJOb2JvZHkgaXMgZ29pbmcgdG8gd2luIGlmIHRoZXJlIGlzIGEgc3RyaWtlLCIgRXJpYyBNZXJrbGUgb2YgSVJOIEF1dG9tb3RpdmUgSW50ZWxsaWdlbmNlIGluIEdyYW5kIFJhcGlkcywgTWljaGlnYW4gc2FpZC4KSSBqdXN0IGRvbid0IHNlZSB0aGF0IGhhcHBlbmluZy4KQ3JpdGljYWwgaXNzdWVzIHN1Y2ggYXMgaGVhbHRoIGNhcmUgaGF2ZSBrZXB0IGJvdGggc2lkZXMgYXQgdGhlIHRhYmxlLCBvYnNlcnZlcnMgc2FpZC4KTG9jYWwgdW5pb24gb2ZmaWNpYWxzIGRlY2xpbmVkIHRvIGNvbW1lbnQgb24gdGhlIHRhbGtzIGJ1dCBDYWwgUmFwc29uLCB0aGUgaGVhZCBvZiB0aGUgVUFXIEdNIGRlcGFydG1lbnQsIHNlbnQgYSBsZXR0ZXIgdG8gbG9jYWwgdW5pb24gb2ZmaWNpYWxzLgoiV2UgYXJlIGRlYWxpbmcgd2l0aCBtYW55IGRpZmZpY3VsdCBpc3N1ZXMsIiBzYWlkIFJhcHNvbiwgYSBtZW1iZXIgb2YgdGhlIHVuaW9uJ3MgZXhlY3V0aXZlIGJvYXJkLgpKZXJyeSBUdWNrZXIsIGRpcmVjdG9yIG9mIHRoZSBDZW50ZXIgZm9yIExhYm9yIFJlbmV3YWwgaW4gU3QuIExvdWlzLCBNaXNzb3VyaSwgYW5kIGEgZm9ybWVyIG1lbWJlciBvZiBVQVcgYm9hcmQsIGFsc28gc2FpZCBoZSBkb3VidGVkIFVBVyBwcmVzaWRlbnQgUm9uIEdldHRlbGZpbmdlciB3YXMgbG9va2luZyBmb3IgYSBjb25mcm9udGF0aW9uLgpIZSBoYXNuJ3QgZXZlbiB0YWxrZWQgYWJvdXQgYSBzdHJpa2UuClRoZXJlIGhhc24ndCBiZWVuIGFueSBzYWJyZSByYXR0bGluZywiIHNhaWQgVHVja2VyLCB3aG8gbm90ZWQgdGhlIHVuaW9uIGhhcyBvdGhlciBvcHRpb25zIGluIGl0cyBhcnNlbmFsIGluY2x1ZGluZyBhIGRlbGliZXJhdGUgc2xvd2Rvd24uCkFzIHRoZSBkZWFkbGluZSBhcHByb2FjaGVkLCBoZWFsdGggY2FyZSB3YXMgdGhlIHByaW5jaXBhbCBpc3N1ZSBrZWVwaW5nIHRoZSB0d28gc2lkZXMgYXBhcnQuClRoZSB1bmlvbiBoYWQgYWdyZWVkIGluIHByaW5jaXBsZSwgc291cmNlcyBzYWlkLCB0byBzaGlmdGluZyBsaWFiaWxpdHkgZm9yIHJldGlyZWUgaGVhbHRoIGNhcmUgdG8gYSB2b2x1bnRhcnkgZW1wbG95ZWUgYmVuZWZpdCBhc3NvY2lhdGlvbiwgd2hpY2ggd291bGQgdHJhbnNmZXIgcmVzcG9uc2liaWxpdHkgZm9yIGJvdGggdHJ1c3RzJyBmaW5hbmNpYWwgYXNzZXRzIGFuZCBwYXltZW50IG9mIGhlYWx0aC1jYXJlIGNsYWltcyB0byB0aGUgdW5pb24uCiJUaGUgVUFXIGhhcyB0byB0YWtlIG9uIG1vcmUgb2YgdGhlIHJpc2ssIiBNZXJrbGUgc2FpZC4KSm9obiBNdXJwaHksIGFuIGFuYWx5c3Qgd2l0aCBNZXJyaWxsIEx5bmNoLCBzYWlkIGluIGEgcmVjZW50IHJlcG9ydCB0byBpbnZlc3RvcnMsIGhlIGJlbGlldmVkIGEgZGVhbCBvbiBoZWFsdGggY2FyZSB3b3VsZCBiZSBvZiBodWdlIGJlbmVmaXQgdG8gYm90aC4KIldlIGJlbGlldmUgdGhhdCB0aGUgbXVjaC1kaXNjdXNzZWQgaGVhbHRoIGNhcmUgZGVhbCBpcyBpbmNyZWFzaW5nbHkgbGlrZWx5IGF0IEdNIGFuZCBGb3JkLCIgaGUgc2FpZC4KIldlIGVzdGltYXRlIHRoZSBhbm51YWwgY2FzaCBzYXZpbmdzIGF0IEdNIG1heSBiZSBhcyBoaWdoIGFzIDIuNSBiaWxsaW9uIGFuZCBhdCBGb3JkIGFsbW9zdCA3NTAgbWlsbGlvbiwiIGhlIHNhaWQuClVuaW9uIG5lZ290aWF0b3JzLCBob3dldmVyLCB3ZXJlIHByZXNzaW5nIGZvciBoaWdoZXIgbGV2ZWxzIG9mIGZ1bmRpbmcgdGhhbiB0aGUgY29tcGFuaWVzIHdlcmUgd2lsbGluZyB0byBnaXZlLgpJbiBhZGRpdGlvbiwgdGhlIHVuaW9uIGFsc28gd2FudGVkIGFkZGl0aW9uYWwgYXNzdXJhbmNlcyBvbiBmdXR1cmUgaW52ZXN0bWVudC4KRnVsbHkgZnVuZGluZyB0aGUgVm9sdW50YXJ5IEVtcGxveWVlIEJlbmVmaXQgQWRtaW5pc3RyYXRpb24gKFZFQkEpIG9yIGhlYWx0aCBjYXJlIHRydXN0IGNvdWxkIGJlIGEgY2hhbGxlbmdlIGZvciB0aGUgYXV0b21ha2VycywgTWVya2xlIHNhaWQuCkJ5IGFuZCBsYXJnZSwgaG93ZXZlciwgdGhlIGV4cGVjdGF0aW9ucyBvZiB1bmlvbiBtZW1iZXJzIGdvaW5nIGludG8gdGhlIHRhbGtzIHdhcyByZWxhdGl2ZWx5IGxvdywgVHVja2VyIHNhaWQuClRoZXkgd291bGQgcHJvYmFibHkgc2F0aXNmaWVkIGlmIHRoZSBVQVcgbmVnb3RpYXRvcnMgaGVsZCB0aGUgbGluZSBvbiB0aGUgY29udHJhY3QgYW5kIG1hZGUgbm8gbWFqb3IgY29uY2Vzc2lvbnMuClVuaW9uaXplZCB3YWdlcyBhdCBVUyBhdXRvIHBsYW50cyBzdGFydCBhdCAyOCBkb2xsYXJzIHBlciBob3VyIGFuZCB0aGUgYmVuZWZpdHMgaW5jbHVkZSBvdmVydGltZSBndWFyYW50ZWVzLCBwZW5zaW9ucywgc2ljayBwYXkgYW5kIGxpZmUgaW5zdXJhbmNlIGFzIHdlbGwgYXMgaGVhbHRoIGNhcmUgcGFja2FnZS4KVGhlIHVuaW9uJ3MgY29udHJhY3RzIGNvdmVyIG1vcmUgdGhhbiAxODAsMDAwIGF0IEdlbmVyYWwgTW90b3JzLCBGb3JkIGFuZCBDaHJ5c2xlciwgd2hpY2ggaGF2ZSByZWNvcmRlZCBoZWF2eSBsb3NzZXMgc2luY2UgdGhlIHN0YXJ0IG9mIDIwMDUuClRoZSBhdXRvbWFrZXJzIGFsc28gaGF2ZSBhbm5vdW5jZWQgcGxhbnMgdG8gc2h1dCBtb3JlIHRoYW4gMzAgcGxhbnRzLgo=, 'GPE')]
VVMgaG9tZSBjb25zdHJ1Y3Rpb24gZHJvcHMgdG8gZnJlc2ggMTAteWVhciBsb3cgaW4gQXVndXN0ClVTIGhvdXNpbmcgc3RhcnRzIGZlbGwgaW4gQXVndXN0IHRvIHRoZWlyIGxvd2VzdCBsZXZlbHMgaW4gbW9yZSB0aGFuIGEgZGVjYWRlLCBhIGdvdmVybm1lbnQgcmVwb3J0IHNob3dlZCBXZWRuZXNkYXksIGhpZ2hsaWdodGluZyB0aGUgd29lcyBvZiB0aGUgcHJvcGVydHkgbWFya2V0LgpUaGUgQ29tbWVyY2UgRGVwYXJ0bWVudCBzYWlkIFVTIGhvdXNpbmcgc3RhcnRzIGluIEF1Z3VzdCBkcm9wcGVkIDIuNiBwZXJjZW50IHRvIGEgc2Vhc29uYWxseSBhZGp1c3RlZCByYXRlIG9mIDEuMzMxIG1pbGxpb24gdW5pdHMuClRoYXQgd2FzIHNoYXJwbHkgYmVsb3cgYW5hbHlzdHMnIGNvbnNlbnN1cyBmb3JlY2FzdCBvZiAxLjM0NSBtaWxsaW9uIGFuZCB0aGUgbG93ZXN0IGxldmVsIHNpbmNlIHRoZSAxLjI4MSBtaWxsaW9uIHVuaXQgcmF0ZSBpbiBKdW5lIDE5OTUuClRoZSBkZXBhcnRtZW50IGFsc28gcmV2aXNlZCBkb3dud2FyZCB0aGUgSnVseSBmaWd1cmVzLCB3aGljaCBoYWQgbWFya2VkIHRoZSBsb3dlc3QgbGV2ZWwgb2YgaG91c2luZyBzdGFydHMgaW4gYSBkZWNhZGUsIHRvIDEuMzY3IG1pbGxpb24gdW5pdHMsIGZyb20gMS4zODEgbWlsbGlvbi4KQnVpbGRpbmcgcGVybWl0cyBmZWxsIDUuOSBwZXJjZW50IHRvIGEgMS4zMDcgbWlsbGlvbiB1bml0IHJhdGUuClRoZXkgd2VyZSBkb3duIGZyb20gYSByZXZpc2VkIDEuMzg5IG1pbGxpb24gaW4gSnVseSBhbmQgYWxzbyBhdCB0aGUgbG93ZXN0IGxldmVsIHNpbmNlIEp1bmUgMTk5NSwgd2hlbiBwZXJtaXRzIHdlcmUgcnVubmluZyBhdCAxLjMwNSBtaWxsaW9uLgpPbiBhIDEyLW1vbnRoIGJhc2lzLCBuZXcgaG91c2luZyBzdGFydHMgd2VyZSBkb3duIDE5IHBlcmNlbnQsIHdpdGggc2luZ2xlLWZhbWlseSBzdGFydHMgb2ZmIDI3IHBlcmNlbnQuClBlcm1pdHMgd2VyZSBkb3duIDI0IHBlcmNlbnQgZnJvbSBBdWd1c3QgMjAwNiBhbmQgc2luZ2xlLWZhbWlseSBob21lIHBlcm1pdHMgd2VyZSBkb3duIDI4IHBlcmNlbnQuCkVjb25vbWlzdHMgd2VyZSBleHBlY3RpbmcgdGhlIGhvdXNpbmcgZG93bnRyZW5kIHRvIGNvbnRpbnVlIGFtaWQgdGlnaHQgY3JlZGl0IGxpbmtlZCB0byB0aGUgY3Jpc2lzIGluIHRoZSBzdWJwcmltZSBtb3J0Z2FnZSBzZWN0b3IsIHdoZXJlIGxvYW5zIGFyZSBnaXZlbiB0byBob21lYnV5ZXJzIHdpdGggd2VhayBjcmVkaXQgaGlzdG9yaWVzLgpDb25zZW5zdXMgZm9yZWNhc3RzIHNhdyBzdGFydHMgZmFsbGluZyB0byBhIDEuMzM5IG1pbGxpb24gcmF0ZSBhbmQgcGVybWl0cyBkcm9wcGluZyB0byAxLjM0MiBtaWxsaW9uLgpPbiBXZWRuZXNkYXksIHRoZSBGZWRlcmFsIFJlc2VydmUgY3V0IHJhdGVzIGJ5IGEgaGFsZi1wb2ludCBpbiBhbiBlZmZvcnQgdG8gZWFzZSBzdHJlc3MgaW4gaG91c2luZyBhbmQgY3JlZGl0IG1hcmtldHMsIGFsdGhvdWdoIGl0IG1heSB0YWtlIHRpbWUgZm9yIHRoZSBjdXRzIHRvIGJlIGZlbHQuClRoZSBBdWd1c3QgY29uc3RydWN0aW9uIGRlY2xpbmUgd2FzIGNvbmNlbnRyYXRlZCBpbiBzaW5nbGUtZmFtaWx5IGhvbWVzLCB3aGVyZSBzdGFydHMgZmVsbCA3LjEgcGVyY2VudCB0byBhIDk4OCwwMDAgdW5pdCBhbm51YWwgcmF0ZS4KQnkgY29udHJhc3QsIG11bHRpLWZhbWlseSBob3VzaW5nIHN0YXJ0cyB3ZXJlIHVwIDEyLjggcGVyY2VudCBsYXN0IG1vbnRoIHRvIGEgMzQzLDAwMCB1bml0IHJhdGUuCkJ1aWxkZXJzIGFyZSBoYXZpbmcgYSBoYXJkIHRpbWUgdW5sb2FkaW5nIGludmVudG9yaWVzIG9mIHVuc29sZCBob21lcyBpbiB0aGUgZmFjZSBvZiBtYWpvciBjdXRiYWNrcyBpbiBtb3J0Z2FnZSBsZW5kaW5nIGFuZCB3aGF0IGFuYWx5c3RzIHNheSBhcmUgbm93IHRoZSB0aWdodGVzdCBzdGFuZGFyZHMgc2luY2UgdGhlIGVhcmx5IDE5OTBzIHJlY2Vzc2lvbi4K
[(VVMgaG9tZSBjb25zdHJ1Y3Rpb24gZHJvcHMgdG8gZnJlc2ggMTAteWVhciBsb3cgaW4gQXVndXN0ClVTIGhvdXNpbmcgc3RhcnRzIGZlbGwgaW4gQXVndXN0IHRvIHRoZWlyIGxvd2VzdCBsZXZlbHMgaW4gbW9yZSB0aGFuIGEgZGVjYWRlLCBhIGdvdmVybm1lbnQgcmVwb3J0IHNob3dlZCBXZWRuZXNkYXksIGhpZ2hsaWdodGluZyB0aGUgd29lcyBvZiB0aGUgcHJvcGVydHkgbWFya2V0LgpUaGUgQ29tbWVyY2UgRGVwYXJ0bWVudCBzYWlkIFVTIGhvdXNpbmcgc3RhcnRzIGluIEF1Z3VzdCBkcm9wcGVkIDIuNiBwZXJjZW50IHRvIGEgc2Vhc29uYWxseSBhZGp1c3RlZCByYXRlIG9mIDEuMzMxIG1pbGxpb24gdW5pdHMuClRoYXQgd2FzIHNoYXJwbHkgYmVsb3cgYW5hbHlzdHMnIGNvbnNlbnN1cyBmb3JlY2FzdCBvZiAxLjM0NSBtaWxsaW9uIGFuZCB0aGUgbG93ZXN0IGxldmVsIHNpbmNlIHRoZSAxLjI4MSBtaWxsaW9uIHVuaXQgcmF0ZSBpbiBKdW5lIDE5OTUuClRoZSBkZXBhcnRtZW50IGFsc28gcmV2aXNlZCBkb3dud2FyZCB0aGUgSnVseSBmaWd1cmVzLCB3aGljaCBoYWQgbWFya2VkIHRoZSBsb3dlc3QgbGV2ZWwgb2YgaG91c2luZyBzdGFydHMgaW4gYSBkZWNhZGUsIHRvIDEuMzY3IG1pbGxpb24gdW5pdHMsIGZyb20gMS4zODEgbWlsbGlvbi4KQnVpbGRpbmcgcGVybWl0cyBmZWxsIDUuOSBwZXJjZW50IHRvIGEgMS4zMDcgbWlsbGlvbiB1bml0IHJhdGUuClRoZXkgd2VyZSBkb3duIGZyb20gYSByZXZpc2VkIDEuMzg5IG1pbGxpb24gaW4gSnVseSBhbmQgYWxzbyBhdCB0aGUgbG93ZXN0IGxldmVsIHNpbmNlIEp1bmUgMTk5NSwgd2hlbiBwZXJtaXRzIHdlcmUgcnVubmluZyBhdCAxLjMwNSBtaWxsaW9uLgpPbiBhIDEyLW1vbnRoIGJhc2lzLCBuZXcgaG91c2luZyBzdGFydHMgd2VyZSBkb3duIDE5IHBlcmNlbnQsIHdpdGggc2luZ2xlLWZhbWlseSBzdGFydHMgb2ZmIDI3IHBlcmNlbnQuClBlcm1pdHMgd2VyZSBkb3duIDI0IHBlcmNlbnQgZnJvbSBBdWd1c3QgMjAwNiBhbmQgc2luZ2xlLWZhbWlseSBob21lIHBlcm1pdHMgd2VyZSBkb3duIDI4IHBlcmNlbnQuCkVjb25vbWlzdHMgd2VyZSBleHBlY3RpbmcgdGhlIGhvdXNpbmcgZG93bnRyZW5kIHRvIGNvbnRpbnVlIGFtaWQgdGlnaHQgY3JlZGl0IGxpbmtlZCB0byB0aGUgY3Jpc2lzIGluIHRoZSBzdWJwcmltZSBtb3J0Z2FnZSBzZWN0b3IsIHdoZXJlIGxvYW5zIGFyZSBnaXZlbiB0byBob21lYnV5ZXJzIHdpdGggd2VhayBjcmVkaXQgaGlzdG9yaWVzLgpDb25zZW5zdXMgZm9yZWNhc3RzIHNhdyBzdGFydHMgZmFsbGluZyB0byBhIDEuMzM5IG1pbGxpb24gcmF0ZSBhbmQgcGVybWl0cyBkcm9wcGluZyB0byAxLjM0MiBtaWxsaW9uLgpPbiBXZWRuZXNkYXksIHRoZSBGZWRlcmFsIFJlc2VydmUgY3V0IHJhdGVzIGJ5IGEgaGFsZi1wb2ludCBpbiBhbiBlZmZvcnQgdG8gZWFzZSBzdHJlc3MgaW4gaG91c2luZyBhbmQgY3JlZGl0IG1hcmtldHMsIGFsdGhvdWdoIGl0IG1heSB0YWtlIHRpbWUgZm9yIHRoZSBjdXRzIHRvIGJlIGZlbHQuClRoZSBBdWd1c3QgY29uc3RydWN0aW9uIGRlY2xpbmUgd2FzIGNvbmNlbnRyYXRlZCBpbiBzaW5nbGUtZmFtaWx5IGhvbWVzLCB3aGVyZSBzdGFydHMgZmVsbCA3LjEgcGVyY2VudCB0byBhIDk4OCwwMDAgdW5pdCBhbm51YWwgcmF0ZS4KQnkgY29udHJhc3QsIG11bHRpLWZhbWlseSBob3VzaW5nIHN0YXJ0cyB3ZXJlIHVwIDEyLjggcGVyY2VudCBsYXN0IG1vbnRoIHRvIGEgMzQzLDAwMCB1bml0IHJhdGUuCkJ1aWxkZXJzIGFyZSBoYXZpbmcgYSBoYXJkIHRpbWUgdW5sb2FkaW5nIGludmVudG9yaWVzIG9mIHVuc29sZCBob21lcyBpbiB0aGUgZmFjZSBvZiBtYWpvciBjdXRiYWNrcyBpbiBtb3J0Z2FnZSBsZW5kaW5nIGFuZCB3aGF0IGFuYWx5c3RzIHNheSBhcmUgbm93IHRoZSB0aWdodGVzdCBzdGFuZGFyZHMgc2luY2UgdGhlIGVhcmx5IDE5OTBzIHJlY2Vzc2lvbi4K, 'PERSON')]
VVMgdG8gY29udHJpYnV0ZSA1IG1sbiBkbHJzIHRvIExlYmFub24ncyBIYXJpcmkgdHJpYnVuYWwKVGhlIFVuaXRlZCBTdGF0ZXMgd2lsbCBjb250cmlidXRlIGZpdmUgbWlsbGlvbiBkb2xsYXJzIHRvIHRoZSBVTi1iYWNrZWQgaW50ZXJuYXRpb25hbCB0cmlidW5hbCB0byB0cnkgc3VzcGVjdHMgaW4gdGhlIDIwMDUgbXVyZGVyIG9mIExlYmFuZXNlIGV4LXByZW1pZXIgUmFmaXEgSGFyaXJpLCBpdHMgVU4gYW1iYXNzYWRvciBzYWlkIFRodXJzZGF5LgpaYWxtYXkgS2hhbGlsemFkIHNhaWQgV2FzaGluZ3RvbiB3YXMgcHJvdmlkaW5nIHRoZSBmdW5kaW5nIHRvIGhlbHAgc3RhcnQgdXAgdGhlIHRyaWJ1bmFsICJ0byByZWZsZWN0IG91ciBjb21taXRtZW50IHRvIHRoZSBwcm9jZXNzIG9mIGFjY291bnRhYmlsaXR5IGZvciBwb2xpdGljYWwgbXVyZGVycywgYXNzYXNzaW5hdGlvbnMgdGhhdCBoYXZlIHRha2VuIHBsYWNlIGluIExlYmFub24uIgpGaWZ0eS1vbmUgcGVyY2VudCBvZiB0aGUgZXhwZW5zZXMgb2YgdGhlIHRyaWJ1bmFsIGFyZSB0byBiZSBib3JuZSBieSB2b2x1bnRhcnkgY29udHJpYnV0aW9ucyBmcm9tIFVOIG1lbWJlciBzdGF0ZXMgYW5kIDQ5IHBlcmNlbnQgYnkgdGhlIExlYmFuZXNlIGdvdmVybm1lbnQuCiJJdCBpcyB2ZXJ5IGltcG9ydGFudCB0aGF0IHRob3NlIHdobyBoYXZlIGJlZW4gcmVzcG9uc2libGUgZm9yIHRob3NlIGNyaW1lcyBiZSBicm91Z2h0IHRvIGp1c3RpY2UsIHRoYXQgdGhlcmUgaXMgbm8gaW1wdW5pdHkgZm9yIHBvbGl0aWNhbCBhc3Nhc3NpbmF0aW9ucywiIEtoYWxpbHphZCBhZGRlZC4KRGVzY3JpYmluZyBwb2xpdGljYWwgYXNzYXNzaW5hdGlvbnMgYXMgImEgdGhyZWF0IHRvIGludGVybmF0aW9uYWwgcGVhY2UgYW5kIHNlY3VyaXR5LCIgdGhlIFVTIGVudm95IHNhaWQgdGhhdCBldmVyeSBlZmZvcnQgaGFkIHRvIGJlIG1hZGUgdG8gYnJpbmcgdGhvc2UgcmVzcG9uc2libGUgdG8ganVzdGljZSBpbiBvcmRlciB0byBlbnN1cmUgYWNjb3VudGFiaWxpdHkgImJ1dCBhbHNvIHRvIGRldGVyIGZ1dHVyZSBjcmltZXMuIgpUaGUgY291cnQsIHdoaWNoIGlzIHRvIGJlIGJhc2VkIGluIHRoZSBOZXRoZXJsYW5kcywgd2lsbCB0cnkgc3VzcGVjdHMgaW4gdGhlIGFzc2Fzc2luYXRpb24gb2YgSGFyaXJpLCBhIHBvcHVsYXIgZml2ZS10aW1lIHByaW1lIG1pbmlzdGVyIHdobyB3YXMga2lsbGVkIGFsb25nIHdpdGggMjIgb3RoZXJzIGluIGEgbWFzc2l2ZSBleHBsb3Npb24gb24gdGhlIEJlaXJ1dCBzZWFmcm9udCBvbiBGZWJydWFyeSAxNCwgMjAwNS4KQW4gaW5pdGlhbCBVTiBpbnF1aXJ5IGltcGxpY2F0ZWQgRGFtYXNjdXMgYW5kIGl0cyBhbGxpZXMgaW4gTGViYW5vbiwgd2hlcmUgZm91ciBwcm8tU3lyaWFuIHNlY3VyaXR5IGNoaWVmcyB3ZXJlIGFycmVzdGVkIGluIGxhdGUgMjAwNS4KQnV0IFN5cmlhIGhhcyB2ZWhlbWVudGx5IGRlbmllZCBhbnkgaW52b2x2ZW1lbnQuClRoZSBjb3VydCBhbHNvIGhhcyBqdXJpc2RpY3Rpb24gb3ZlciBhdHRhY2tzIGFnYWluc3Qgb3RoZXIgYW50aS1TeXJpYW4gTGViYW5lc2UgZmlndXJlcyBjYXJyaWVkIG91dCBiZXR3ZWVuIE9jdG9iZXIgMjAwNCBhbmQgRGVjZW1iZXIgMjAwNSBpZiB0aGV5IGFyZSBsaW5rZWQgdG8gdGhlIEZlYnJ1YXJ5IDIwMDUgbXVyZGVyIG9mIEhhcmlyaS4K
[(VVMgdG8gY29udHJpYnV0ZSA1IG1sbiBkbHJzIHRvIExlYmFub24ncyBIYXJpcmkgdHJpYnVuYWwKVGhlIFVuaXRlZCBTdGF0ZXMgd2lsbCBjb250cmlidXRlIGZpdmUgbWlsbGlvbiBkb2xsYXJzIHRvIHRoZSBVTi1iYWNrZWQgaW50ZXJuYXRpb25hbCB0cmlidW5hbCB0byB0cnkgc3VzcGVjdHMgaW4gdGhlIDIwMDUgbXVyZGVyIG9mIExlYmFuZXNlIGV4LXByZW1pZXIgUmFmaXEgSGFyaXJpLCBpdHMgVU4gYW1iYXNzYWRvciBzYWlkIFRodXJzZGF5LgpaYWxtYXkgS2hhbGlsemFkIHNhaWQgV2FzaGluZ3RvbiB3YXMgcHJvdmlkaW5nIHRoZSBmdW5kaW5nIHRvIGhlbHAgc3RhcnQgdXAgdGhlIHRyaWJ1bmFsICJ0byByZWZsZWN0IG91ciBjb21taXRtZW50IHRvIHRoZSBwcm9jZXNzIG9mIGFjY291bnRhYmlsaXR5IGZvciBwb2xpdGljYWwgbXVyZGVycywgYXNzYXNzaW5hdGlvbnMgdGhhdCBoYXZlIHRha2VuIHBsYWNlIGluIExlYmFub24uIgpGaWZ0eS1vbmUgcGVyY2VudCBvZiB0aGUgZXhwZW5zZXMgb2YgdGhlIHRyaWJ1bmFsIGFyZSB0byBiZSBib3JuZSBieSB2b2x1bnRhcnkgY29udHJpYnV0aW9ucyBmcm9tIFVOIG1lbWJlciBzdGF0ZXMgYW5kIDQ5IHBlcmNlbnQgYnkgdGhlIExlYmFuZXNlIGdvdmVybm1lbnQuCiJJdCBpcyB2ZXJ5IGltcG9ydGFudCB0aGF0IHRob3NlIHdobyBoYXZlIGJlZW4gcmVzcG9uc2libGUgZm9yIHRob3NlIGNyaW1lcyBiZSBicm91Z2h0IHRvIGp1c3RpY2UsIHRoYXQgdGhlcmUgaXMgbm8gaW1wdW5pdHkgZm9yIHBvbGl0aWNhbCBhc3Nhc3NpbmF0aW9ucywiIEtoYWxpbHphZCBhZGRlZC4KRGVzY3JpYmluZyBwb2xpdGljYWwgYXNzYXNzaW5hdGlvbnMgYXMgImEgdGhyZWF0IHRvIGludGVybmF0aW9uYWwgcGVhY2UgYW5kIHNlY3VyaXR5LCIgdGhlIFVTIGVudm95IHNhaWQgdGhhdCBldmVyeSBlZmZvcnQgaGFkIHRvIGJlIG1hZGUgdG8gYnJpbmcgdGhvc2UgcmVzcG9uc2libGUgdG8ganVzdGljZSBpbiBvcmRlciB0byBlbnN1cmUgYWNjb3VudGFiaWxpdHkgImJ1dCBhbHNvIHRvIGRldGVyIGZ1dHVyZSBjcmltZXMuIgpUaGUgY291cnQsIHdoaWNoIGlzIHRvIGJlIGJhc2VkIGluIHRoZSBOZXRoZXJsYW5kcywgd2lsbCB0cnkgc3VzcGVjdHMgaW4gdGhlIGFzc2Fzc2luYXRpb24gb2YgSGFyaXJpLCBhIHBvcHVsYXIgZml2ZS10aW1lIHByaW1lIG1pbmlzdGVyIHdobyB3YXMga2lsbGVkIGFsb25nIHdpdGggMjIgb3RoZXJzIGluIGEgbWFzc2l2ZSBleHBsb3Npb24gb24gdGhlIEJlaXJ1dCBzZWFmcm9udCBvbiBGZWJydWFyeSAxNCwgMjAwNS4KQW4gaW5pdGlhbCBVTiBpbnF1aXJ5IGltcGxpY2F0ZWQgRGFtYXNjdXMgYW5kIGl0cyBhbGxpZXMgaW4gTGViYW5vbiwgd2hlcmUgZm91ciBwcm8tU3lyaWFuIHNlY3VyaXR5IGNoaWVmcyB3ZXJlIGFycmVzdGVkIGluIGxhdGUgMjAwNS4KQnV0IFN5cmlhIGhhcyB2ZWhlbWVudGx5IGRlbmllZCBhbnkgaW52b2x2ZW1lbnQuClRoZSBjb3VydCBhbHNvIGhhcyBqdXJpc2RpY3Rpb24gb3ZlciBhdHRhY2tzIGFnYWluc3Qgb3RoZXIgYW50aS1TeXJpYW4gTGViYW5lc2UgZmlndXJlcyBjYXJyaWVkIG91dCBiZXR3ZWVuIE9jdG9iZXIgMjAwNCBhbmQgRGVjZW1iZXIgMjAwNSBpZiB0aGV5IGFyZSBsaW5rZWQgdG8gdGhlIEZlYnJ1YXJ5IDIwMDUgbXVyZGVyIG9mIEhhcmlyaS4K, 'PERSON')]
S2VueWEgdGFwcyBGcmVuY2gtQW1lcmljYW4gZmlybSB0byBidWlsZCB1bmRlcnNlYSBjYWJsZQpLZW55YSBoYXMgdGFwcGVkIGEgRnJlbmNoLVVTIHRlbGVjb21zIGdpYW50IHRvIGJ1aWxkIGFuIHVuZGVyc2VhIGZpYnJlLW9wdGljIGNhYmxlIGxpbmtpbmcgZWFzdCBBZnJpY2EgdG8gdGhlIHJlc3Qgb2YgdGhlIHdvcmxkIGluIGEgYmlkIHRvIHNsYXNoIHRoZSBjb3N0IG9mIGludGVybmF0aW9uYWwgY2FsbHMgYW5kIEludGVybmV0IGFjY2VzcywgYW4gb2ZmaWNpYWwgc2FpZCBUaHVyc2RheS4KSW5mb3JtYXRpb24gTWluaXN0cnkgUGVybWFuZW50IFNlY3JldGFyeSBCaXRhbmdlIE5kZW1vIHNhaWQgdGhlIGNvbnRyYWN0IHdpdGggUGFyaXMtYmFzZWQgQWxjYXRlbC1MdWNlbnQgd2lsbCBiZSBzaWduZWQgd2l0aGluIDE0IGRheXMgYW5kIHdvcmsgaXMgZXhwZWN0ZWQgdG8gc3RhcnQgaW1tZWRpYXRlbHkuCihJdCkgd29uIHRoZSB0ZW5kZXIgYmVjYXVzZSBvZiB0aGUgcHJpY2UgdGhleSBxdW90ZWQgYW5kIGFsc28gdGhlIHNjaGVkdWxlLgpUaGV5IGhhZCBpbmRpY2F0ZWQgdGhhdCAoaXQgaXMpIGxpa2VseSB0byBjb21wbGV0ZSB0aGUgY29uc3RydWN0aW9uIG9mIHRoZSB1bmRlcnNlYSBjYWJsZSBzZXZlbiBtb250aHMgYWhlYWQgb2Ygb3RoZXJzLCIgTmRlbW8gdG9sZCBhIHByZXNzIGNvbmZlcmVuY2UuCkFsY2F0ZWwtTHVjZW50LCBmb3JtZWQgaW4gbGF0ZSAyMDA2IHRocm91Z2ggdGhlIG1lcmdlciBvZiBBbGNhdGVsIG9mIEZyYW5jZSBhbmQgTHVjZW50IG9mIHRoZSBVbml0ZWQgU3RhdGVzLCBlZGdlZCBvdXQgVHljbyBUZWxlY29tbXVuaWNhdGlvbiwgRnVqaXN0dSwgTkVDIGFuZCBIdWF3ZWkgVGVjaG5vbG9naWVzIHRvIHRha2UgdGhlIGNvbnRyYWN0LgpUaGUgNS41IGJpbGxpb24gc2hpbGxpbmdzICg4MiBtaWxsaW9uIGRvbGxhcnMpIEVhc3QgQWZyaWNhbiBNYXJpbmUgU3lzdGVtcyAoVEVBTVMpIHByb2plY3Qgd2lsbCBsaW5rIHRoZSBLZW55YW4gcG9ydCBjaXR5IG9mIE1vbWJhc2EgdG8gRnVqYWlyYWggaW4gdGhlIEd1bGYgb2YgT21hbiwgVW5pdGVkIEFyYWIgRW1pcmF0ZXMuClRoZSBoaWdoLWNhcGFjaXR5IGNhYmxlIGlzIGV4cGVjdGVkIHRvIGJlIGZpbmlzaGVkIGJ5IG1pZC0yMDA5LCBOZGVtbyBzYWlkLgpUaGUgS2VueWFuIGdvdmVybm1lbnQgd2lsbCBob2xkIDQwIHBlcmNlbnQgc3Rha2UsIEFidSBEaGFiaS1iYXNlZCBFdGlzYWxhdCB3b3VsZCBob2xkIDE1IHBlcmNlbnQsIHdoaWxlIHRoZSByZW1haW5pbmcgNDUgcGVyY2VudCB3b3VsZCBiZSBvcGVuIHRvIG5laWdoYm91cmluZyBzdGF0ZXMgb3IgS2VueWFuIGludmVzdG9ycy4KRGVzcGl0ZSBpbmZyYXN0cnVjdHVyZSBpbXByb3ZlbWVudHMsIG5vdGFibHkgaW4gbW9yZSBBZnJpY2EncyBtb3JlIGRldmVsb3BlZCBuYXRpb25zLCBvbmx5IDIuNSBwZXJjZW50IG9mIEFmcmljYW5zIGhhdmUgSW50ZXJuZXQgYWNjZXNzIGNvbXBhcmVkIHRvIDE3LjggcGVyY2VudCBpbiB0aGUgcmVzdCBvZiB0aGUgd29ybGQuCk9mZmljaWFscyBzYXkgS2VueWEsIHRoZSBiaWdnZXN0IGVjb25vbXkgaW4gZWFzdCBBZnJpY2EsIGlzIGtlZW4gb24gY3JlYXRpbmcgY29tbXVuaWNhdGlvbnMgbGlua3MgYXMgc29vbiBhcyBwb3NzaWJsZSB0byBtYXJrZXQgaXRzZWxmIGFzIGEgY2VudHJlIGZvciBidXNpbmVzcyBvdXRzb3VyY2luZywgbGlrZSBJbmRpYS4K
[]
UG9sYW5kJ3MgdWx0cmEtQ2F0aG9saWMgcmFkaW8gaXMgdm90ZS13aW5uZXIgZm9yIHBvd2VyIHR3aW5zClBvbGFuZCdzIHVsdHJhLUNhdGhvbGljIGJyb2FkY2FzdGVyIFJhZGlvIE1hcnlqYSBpcyBhIGNydWNpYWwgbW91dGhwaWVjZSBhbmQgdm90ZS1kcmF3IGZvciB0aGUgcnVsaW5nIGNvbnNlcnZhdGl2ZSBLYWN6eW5za2kgdHdpbnMsIHdobyByZXR1cm4gdGhlIGZhdm91ciBieSBzaGllbGRpbmcgaXQgZnJvbSBjcml0aWNzLgoiVGhpcyBpcyBSYWRpbyBNYXJ5amEsIHRoZSBDYXRob2xpYyB2b2ljZSBpbiB5b3VyIGhvbWUsIiB0aGUgc3RhdGlvbiByZW1pbmRzIGxpc3RlbmVycyBvbiB0aGUgaG91ciwgYXMgaXQgc2VydmVzIHVwIGEgZmFyZSBvZiBsaXZlIG1hc3NlcywgcHJheWVycywgc2xhbnRlZCBuZXdzLCBwbHVzIG9jY2FzaW9uYWwgYW50aS1TZW1pdGljIG91dGJ1cnN0cyBieSBwcmVzZW50ZXJzIHdoaWNoIGhhdmUgZ29uZSB1bnB1bmlzaGVkIGJ5IGp1c3RpY2UgYXV0aG9yaXRpZXMgb3IgUG9sYW5kJ3MgbWVkaWEgd2F0Y2hkb2cuClRoZSBDYXRob2xpYy1uYXRpb25hbGlzdCBGYXRoZXIgVGFkZXVzeiBSeWR5emssIHdobyBmb3VuZGVkIFJhZGlvIE1hcnlqYSAxNiB5ZWFycyBhZ28gYW5kIGhhcyBidWlsdCBpdCBpbnRvIGEgbWVkaWEgZW1waXJlIHdpdGggYSBzaXN0ZXIgdGVsZXZpc2lvbiBzdGF0aW9uIGFuZCBuZXdzcGFwZXIsIHJlZ3VsYXJseSByZWZ1c2VzIHRvIHNwZWFrIHRvIGZvcmVpZ24gam91cm5hbGlzdHMgb3IgUG9saXNoIHJlcG9ydGVycyB3aG8gZG8gbm90IHRvZSBoaXMgbGluZS4KSGlzIGxpc3RlbmVycyBhcmUgZmllcmNlbHkgcHJvdGVjdGl2ZSBvZiB0aGVpciBpY29uaWMgcHJpZXN0LCB3aG9tIG1hbnkgb2YgdGhlbSBzZWUgYXMgdmljdGltIG9mIHJlcGVhdGVkIGF0dGFja3MgYnkgUG9sYW5kJ3MgbGliZXJhbCBvcHBvc2l0aW9uIHNpbXBseSBiZWNhdXNlIGhlIHdhbnRzIHRvIGRlZmVuZCBoaXMgZmFpdGggYW5kIHRoZSBuYXRpb24sIGp1c3QgYXMgdGhlIENodXJjaCB3YXMgYSBidWx3YXJrIGFnYWluc3QgY29tbXVuaXNtLgoiVGhlIGNvbW11bmlzdHMgYXNzYXNzaW5hdGVkIHByaWVzdHMsIGFuZCB0b2RheSB0aGUgbGliZXJhbHMgd2FudCB0byBraWxsIFJ5ZHp5aywiIHNhaWQgYSB3b21hbiBpbiBhIHJlY2VudCBwaG9uZS1pbiBzaG93LgpUaGUgc3RhdGlvbiB3aWVsZHMgYSBwb3dlcmZ1bCBpbmZsdWVuY2UgaW4gYSBjb3VudHJ5IHdoZXJlIG1vcmUgdGhhbiA5MCBwZXJjZW50IG9mIHRoZSBwb3B1bGF0aW9uIG9mIDM3LjggbWlsbGlvbiBzYXkgdGhleSBhcmUgQ2F0aG9saWMuCkluIGEgc2lnbiBvZiBSYWRpbyBNYXJ5amEncyBzb2xpZCBiYWNraW5nIGZvciBQcmVzaWRlbnQgTGVjaCBLYWN6eW5za2kgYW5kIGhpcyBpZGVudGljYWwgdHdpbiBQcmltZSBNaW5pc3RlciBKYXJvc2xhdyBLYWN6eW5za2kgYWhlYWQgb2YgcGFybGlhbWVudGFyeSBlbGVjdGlvbnMgb24gT2N0b2JlciAyMSwgdGhlaXIgTGF3IGFuZCBKdXN0aWNlIChQaVMpIHBhcnR5IGlzIHRoZSBvbmx5IG9uZSBnZXR0aW5nIGFpci10aW1lLgoiRHVyaW5nIHRoZSBFdXJvcGVhbiBQYXJsaWFtZW50IGVsZWN0aW9ucyBpbiAyMDA0LCBGYXRoZXIgUnlkenlrIHN1cHBvcnRlZCBhbm90aGVyIHBhcnR5LCB0aGUgTGVhZ3VlIG9mIFBvbGlzaCBGYW1pbGllcyAoTFBSKSwgd2hpY2ggcGlja2VkIHVwIGFsbW9zdCBhbGwgaGlzIHZvdGVzLCIgbm90ZWQgSmFyb3NsYXcgWmJpZXJhbmVrLCBhIHBvbGl0aWNhbCBzY2llbnRpc3QgYXQgUG9sYW5kJ3MgSW5zdGl0dXRlIG9mIFB1YmxpYyBBZmZhaXJzLgoiVG9kYXksIFBpUyBoYXMgbWFuYWdlZCB0byBncmFiIGhvbGQgb2YgdGhlIFJhZGlvIE1hcnlqYSBlbGVjdG9yYXRlLCIgaGUgc2FpZC4KQSBzdHVkeSBwdWJsaXNoZWQgRnJpZGF5IGJ5IFBCUyBHREEgcG9sbGluZyBhZ2VuY3kgZm91bmQgdGhhdCA3NCBwZXJjZW50IG9mIGxpc3RlbmVycyB3aWxsIGJhY2sgUGlTLgpUaGUgc3RhdGlvbidzIGZvcm1lciBkYXJsaW5nIFJvbWFuIEdpZXJ0eWNoLCB0aGUgbGVhZGVyIG9mIHRoZSBmYXItcmlnaHQsIHVsdHJhLUNhdGhvbGljIExQUiwgd2hpY2ggd2FzIGluIGEgY29hbGl0aW9uIGdvdmVybm1lbnQgd2l0aCBQaVMgdW50aWwgQXVndXN0LCBub3cgY29tcGxhaW5zIGFib3V0IGEgImxhY2sgb2YgcGx1cmFsaXNtIiBvbiBpdHMgYWlyd2F2ZXMuCkdpZXJ0eWNoJ3MgcGFydHkgaXMgZmFjaW5nIGVsaW1pbmF0aW9uIGZyb20gcGFybGlhbWVudCwgYmVjYXVzZSBwb2xscyBzaG93IGl0IG1heSBub3QgY2xlYXIgdGhlIGh1cmRsZSBvZiBmaXZlIHBlcmNlbnQgb2YgdGhlIHZvdGUgd2hpY2ggaXMgcmVxdWlyZWQgdG8gd2luIHNlYXRzLgpCeSBiZXR0aW5nIG9uIFJhZGlvIE1hcnlqYSwgUHJpbWUgTWluaXN0ZXIgSmFyb3NsYXcgS2Fjenluc2tpIGhhcyBvcHRlZCBmb3IgaGlnaGx5IHByYWdtYXRpYyBzdHJhdGVneS4KVGhlIHJhZGlvJ3Mgc3VwcG9ydGVycyBhcmUgZGlzY2lwbGluZWQgYW5kIGFsd2F5cyB0dXJuIG91dCB0byB2b3RlLCIgc2FpZCBaYmllcmFuZWsuCkhlIGVzdGltYXRlZCB0aGF0IHRoZSByYWRpbyBjb3VsZCBkcnVtIHVwIDEuNSBtaWxsaW9uIHZvdGVzIGZvciBQaVMsIHdoaWNoIG9waW5pb24gcG9sbHMgc2hvdyBpcyBhbG1vc3QgbmVjayBhbmQgbmVjayB3aXRoIHRoZSBsaWJlcmFsIG9wcG9zaXRpb24uCkEgc3R1ZHkgYnkgdGhlIE1pbGx3YXJkQnJvd24gU01HL0tSQyBzdXJ2ZXkgaW5zdGl0dXRlIGZvdW5kIHRoYXQgUmFkaW8gTWFyanlhIGlzIFBvbGFuZCdzIGZpZnRoIG1vc3QgbGlzdGVuZWQtdG8gYnJvYWRjYXN0ZXIsIGRyYXdpbmcgYXQgc29tZSA4OTYsMDAwIHBlb3BsZSBhdCBsZWFzdCBvbmNlIGEgZGF5LgpCZXNpZGVzIGl0cyBvbi1haXIgYmFja2luZyBmb3IgUGlTLCBSYWRpbyBNYXJ5amEgaXMgYWxzbyB1c2luZyBpdHMgaGlnaGx5IGFjdGl2ZSBsaXN0ZW5lcnMnIGNsdWJzIHRvIG9yZ2FuaXNlIGNhbXBhaWduIG1lZXRpbmdzLgpBdCBhIHJlY2VudCBldmVudCBpbiB0aGUgY2VudHJhbCBQb2xpc2ggY2l0eSBvZiBQaW90cmtvdyBUcnlidW5hbHNraSwgdGhlIHNlYXNvbmVkIEthY3p5bnNraSBsb3lhbGlzdCBBbnRvbmkgTWFjaWVyZXdpY3ogd29ya2VkIGEgY3Jvd2Qgb2YgYXJvdW5kIDQwIG1vc3RseSBlbGRlcmx5IHBlb3BsZS4KVGhlIFNvdmlldHMgYXJlIHN0aWxsIGVhdGluZyBhd2F5IGF0IG91ciBjb3VudHJ5LgpXZSBtdXN0IHNuYXRjaCB0aGUgY291bnRyeSBmcm9tIHRoZWlyIGNsYXdzLCIgc2FpZCBNYWNpZXJld2ljeiwgd2hvIGhhcyBzdGVlcmVkIGVmZm9ydHMgdG8gdHJhY2sgZG93biBmb3JtZXIgc3VwcG9ydGVycyAtLSByZWFsIGFuZCBwdXJwb3J0ZWQgLS0gb2YgdGhlIGNvbW11bmlzdCByZWdpbWUgd2hpY2ggZmVsbCBpbiAxOTg5LgoiT25seSB0aGUgS2Fjenluc2tpcycgcGFydHkgY2FuIGRvIHRoaXMsIiBoZSBzYWlkLgpPdXRyYWdlZCBieSB0aGUgaGVhdnktaGFuZGVkIHBvbGl0aWNraW5nIG9mIFJhZGlvIE1hcnlqYSwgd2hpY2ggb2ZmaWNpYWxseSBmYWxscyB1bmRlciB0aGUgYXV0aG9yaXR5IG9mIHRoZSBDaHVyY2gsIHNvbWUgbWVtYmVycyBvZiBQb2xhbmQncyBDYXRob2xpYyBoaWVyYXJjaHksIHN1Y2ggYXMgQXJjaGJpc2hvcCBTdGFuaXNsYXcgRHppd2lzeiBvZiBLcmFrb3csIGhhdmUgZGVtYW5kZWQgdGhhdCB0aGUgc3RhdGlvbiBjaGFuZ2UgdGFjay4KQnV0IEphcm9zbGF3IEthY3p5bnNraSBoYXMgbm90IHNoaWVkIGF3YXkgZnJvbSBjcml0aWNpc2luZyBEeml3aXN6J3MgY29tbWVudHMsIGV2ZW4gdGhvdWdoIHRoZSBhcmNoYmlzaG9wIHdhcyB0aGUgY2xvc2VzdCBjb25maWRhbnQgb2YgUG9sYW5kJ3MgYmVsb3ZlZCBQb3BlIEpvaG4gUGF1bCBJSS4K
[(UG9sYW5kJ3MgdWx0cmEtQ2F0aG9saWMgcmFkaW8gaXMgdm90ZS13aW5uZXIgZm9yIHBvd2VyIHR3aW5zClBvbGFuZCdzIHVsdHJhLUNhdGhvbGljIGJyb2FkY2FzdGVyIFJhZGlvIE1hcnlqYSBpcyBhIGNydWNpYWwgbW91dGhwaWVjZSBhbmQgdm90ZS1kcmF3IGZvciB0aGUgcnVsaW5nIGNvbnNlcnZhdGl2ZSBLYWN6eW5za2kgdHdpbnMsIHdobyByZXR1cm4gdGhlIGZhdm91ciBieSBzaGllbGRpbmcgaXQgZnJvbSBjcml0aWNzLgoiVGhpcyBpcyBSYWRpbyBNYXJ5amEsIHRoZSBDYXRob2xpYyB2b2ljZSBpbiB5b3VyIGhvbWUsIiB0aGUgc3RhdGlvbiByZW1pbmRzIGxpc3RlbmVycyBvbiB0aGUgaG91ciwgYXMgaXQgc2VydmVzIHVwIGEgZmFyZSBvZiBsaXZlIG1hc3NlcywgcHJheWVycywgc2xhbnRlZCBuZXdzLCBwbHVzIG9jY2FzaW9uYWwgYW50aS1TZW1pdGljIG91dGJ1cnN0cyBieSBwcmVzZW50ZXJzIHdoaWNoIGhhdmUgZ29uZSB1bnB1bmlzaGVkIGJ5IGp1c3RpY2UgYXV0aG9yaXRpZXMgb3IgUG9sYW5kJ3MgbWVkaWEgd2F0Y2hkb2cuClRoZSBDYXRob2xpYy1uYXRpb25hbGlzdCBGYXRoZXIgVGFkZXVzeiBSeWR5emssIHdobyBmb3VuZGVkIFJhZGlvIE1hcnlqYSAxNiB5ZWFycyBhZ28gYW5kIGhhcyBidWlsdCBpdCBpbnRvIGEgbWVkaWEgZW1waXJlIHdpdGggYSBzaXN0ZXIgdGVsZXZpc2lvbiBzdGF0aW9uIGFuZCBuZXdzcGFwZXIsIHJlZ3VsYXJseSByZWZ1c2VzIHRvIHNwZWFrIHRvIGZvcmVpZ24gam91cm5hbGlzdHMgb3IgUG9saXNoIHJlcG9ydGVycyB3aG8gZG8gbm90IHRvZSBoaXMgbGluZS4KSGlzIGxpc3RlbmVycyBhcmUgZmllcmNlbHkgcHJvdGVjdGl2ZSBvZiB0aGVpciBpY29uaWMgcHJpZXN0LCB3aG9tIG1hbnkgb2YgdGhlbSBzZWUgYXMgdmljdGltIG9mIHJlcGVhdGVkIGF0dGFja3MgYnkgUG9sYW5kJ3MgbGliZXJhbCBvcHBvc2l0aW9uIHNpbXBseSBiZWNhdXNlIGhlIHdhbnRzIHRvIGRlZmVuZCBoaXMgZmFpdGggYW5kIHRoZSBuYXRpb24sIGp1c3QgYXMgdGhlIENodXJjaCB3YXMgYSBidWx3YXJrIGFnYWluc3QgY29tbXVuaXNtLgoiVGhlIGNvbW11bmlzdHMgYXNzYXNzaW5hdGVkIHByaWVzdHMsIGFuZCB0b2RheSB0aGUgbGliZXJhbHMgd2FudCB0byBraWxsIFJ5ZHp5aywiIHNhaWQgYSB3b21hbiBpbiBhIHJlY2VudCBwaG9uZS1pbiBzaG93LgpUaGUgc3RhdGlvbiB3aWVsZHMgYSBwb3dlcmZ1bCBpbmZsdWVuY2UgaW4gYSBjb3VudHJ5IHdoZXJlIG1vcmUgdGhhbiA5MCBwZXJjZW50IG9mIHRoZSBwb3B1bGF0aW9uIG9mIDM3LjggbWlsbGlvbiBzYXkgdGhleSBhcmUgQ2F0aG9saWMuCkluIGEgc2lnbiBvZiBSYWRpbyBNYXJ5amEncyBzb2xpZCBiYWNraW5nIGZvciBQcmVzaWRlbnQgTGVjaCBLYWN6eW5za2kgYW5kIGhpcyBpZGVudGljYWwgdHdpbiBQcmltZSBNaW5pc3RlciBKYXJvc2xhdyBLYWN6eW5za2kgYWhlYWQgb2YgcGFybGlhbWVudGFyeSBlbGVjdGlvbnMgb24gT2N0b2JlciAyMSwgdGhlaXIgTGF3IGFuZCBKdXN0aWNlIChQaVMpIHBhcnR5IGlzIHRoZSBvbmx5IG9uZSBnZXR0aW5nIGFpci10aW1lLgoiRHVyaW5nIHRoZSBFdXJvcGVhbiBQYXJsaWFtZW50IGVsZWN0aW9ucyBpbiAyMDA0LCBGYXRoZXIgUnlkenlrIHN1cHBvcnRlZCBhbm90aGVyIHBhcnR5LCB0aGUgTGVhZ3VlIG9mIFBvbGlzaCBGYW1pbGllcyAoTFBSKSwgd2hpY2ggcGlja2VkIHVwIGFsbW9zdCBhbGwgaGlzIHZvdGVzLCIgbm90ZWQgSmFyb3NsYXcgWmJpZXJhbmVrLCBhIHBvbGl0aWNhbCBzY2llbnRpc3QgYXQgUG9sYW5kJ3MgSW5zdGl0dXRlIG9mIFB1YmxpYyBBZmZhaXJzLgoiVG9kYXksIFBpUyBoYXMgbWFuYWdlZCB0byBncmFiIGhvbGQgb2YgdGhlIFJhZGlvIE1hcnlqYSBlbGVjdG9yYXRlLCIgaGUgc2FpZC4KQSBzdHVkeSBwdWJsaXNoZWQgRnJpZGF5IGJ5IFBCUyBHREEgcG9sbGluZyBhZ2VuY3kgZm91bmQgdGhhdCA3NCBwZXJjZW50IG9mIGxpc3RlbmVycyB3aWxsIGJhY2sgUGlTLgpUaGUgc3RhdGlvbidzIGZvcm1lciBkYXJsaW5nIFJvbWFuIEdpZXJ0eWNoLCB0aGUgbGVhZGVyIG9mIHRoZSBmYXItcmlnaHQsIHVsdHJhLUNhdGhvbGljIExQUiwgd2hpY2ggd2FzIGluIGEgY29hbGl0aW9uIGdvdmVybm1lbnQgd2l0aCBQaVMgdW50aWwgQXVndXN0LCBub3cgY29tcGxhaW5zIGFib3V0IGEgImxhY2sgb2YgcGx1cmFsaXNtIiBvbiBpdHMgYWlyd2F2ZXMuCkdpZXJ0eWNoJ3MgcGFydHkgaXMgZmFjaW5nIGVsaW1pbmF0aW9uIGZyb20gcGFybGlhbWVudCwgYmVjYXVzZSBwb2xscyBzaG93IGl0IG1heSBub3QgY2xlYXIgdGhlIGh1cmRsZSBvZiBmaXZlIHBlcmNlbnQgb2YgdGhlIHZvdGUgd2hpY2ggaXMgcmVxdWlyZWQgdG8gd2luIHNlYXRzLgpCeSBiZXR0aW5nIG9uIFJhZGlvIE1hcnlqYSwgUHJpbWUgTWluaXN0ZXIgSmFyb3NsYXcgS2Fjenluc2tpIGhhcyBvcHRlZCBmb3IgaGlnaGx5IHByYWdtYXRpYyBzdHJhdGVneS4KVGhlIHJhZGlvJ3Mgc3VwcG9ydGVycyBhcmUgZGlzY2lwbGluZWQgYW5kIGFsd2F5cyB0dXJuIG91dCB0byB2b3RlLCIgc2FpZCBaYmllcmFuZWsuCkhlIGVzdGltYXRlZCB0aGF0IHRoZSByYWRpbyBjb3VsZCBkcnVtIHVwIDEuNSBtaWxsaW9uIHZvdGVzIGZvciBQaVMsIHdoaWNoIG9waW5pb24gcG9sbHMgc2hvdyBpcyBhbG1vc3QgbmVjayBhbmQgbmVjayB3aXRoIHRoZSBsaWJlcmFsIG9wcG9zaXRpb24uCkEgc3R1ZHkgYnkgdGhlIE1pbGx3YXJkQnJvd24gU01HL0tSQyBzdXJ2ZXkgaW5zdGl0dXRlIGZvdW5kIHRoYXQgUmFkaW8gTWFyanlhIGlzIFBvbGFuZCdzIGZpZnRoIG1vc3QgbGlzdGVuZWQtdG8gYnJvYWRjYXN0ZXIsIGRyYXdpbmcgYXQgc29tZSA4OTYsMDAwIHBlb3BsZSBhdCBsZWFzdCBvbmNlIGEgZGF5LgpCZXNpZGVzIGl0cyBvbi1haXIgYmFja2luZyBmb3IgUGlTLCBSYWRpbyBNYXJ5amEgaXMgYWxzbyB1c2luZyBpdHMgaGlnaGx5IGFjdGl2ZSBsaXN0ZW5lcnMnIGNsdWJzIHRvIG9yZ2FuaXNlIGNhbXBhaWduIG1lZXRpbmdzLgpBdCBhIHJlY2VudCBldmVudCBpbiB0aGUgY2VudHJhbCBQb2xpc2ggY2l0eSBvZiBQaW90cmtvdyBUcnlidW5hbHNraSwgdGhlIHNlYXNvbmVkIEthY3p5bnNraSBsb3lhbGlzdCBBbnRvbmkgTWFjaWVyZXdpY3ogd29ya2VkIGEgY3Jvd2Qgb2YgYXJvdW5kIDQwIG1vc3RseSBlbGRlcmx5IHBlb3BsZS4KVGhlIFNvdmlldHMgYXJlIHN0aWxsIGVhdGluZyBhd2F5IGF0IG91ciBjb3VudHJ5LgpXZSBtdXN0IHNuYXRjaCB0aGUgY291bnRyeSBmcm9tIHRoZWlyIGNsYXdzLCIgc2FpZCBNYWNpZXJld2ljeiwgd2hvIGhhcyBzdGVlcmVkIGVmZm9ydHMgdG8gdHJhY2sgZG93biBmb3JtZXIgc3VwcG9ydGVycyAtLSByZWFsIGFuZCBwdXJwb3J0ZWQgLS0gb2YgdGhlIGNvbW11bmlzdCByZWdpbWUgd2hpY2ggZmVsbCBpbiAxOTg5LgoiT25seSB0aGUgS2Fjenluc2tpcycgcGFydHkgY2FuIGRvIHRoaXMsIiBoZSBzYWlkLgpPdXRyYWdlZCBieSB0aGUgaGVhdnktaGFuZGVkIHBvbGl0aWNraW5nIG9mIFJhZGlvIE1hcnlqYSwgd2hpY2ggb2ZmaWNpYWxseSBmYWxscyB1bmRlciB0aGUgYXV0aG9yaXR5IG9mIHRoZSBDaHVyY2gsIHNvbWUgbWVtYmVycyBvZiBQb2xhbmQncyBDYXRob2xpYyBoaWVyYXJjaHksIHN1Y2ggYXMgQXJjaGJpc2hvcCBTdGFuaXNsYXcgRHppd2lzeiBvZiBLcmFrb3csIGhhdmUgZGVtYW5kZWQgdGhhdCB0aGUgc3RhdGlvbiBjaGFuZ2UgdGFjay4KQnV0IEphcm9zbGF3IEthY3p5bnNraSBoYXMgbm90IHNoaWVkIGF3YXkgZnJvbSBjcml0aWNpc2luZyBEeml3aXN6J3MgY29tbWVudHMsIGV2ZW4gdGhvdWdoIHRoZSBhcmNoYmlzaG9wIHdhcyB0aGUgY2xvc2VzdCBjb25maWRhbnQgb2YgUG9sYW5kJ3MgYmVsb3ZlZCBQb3BlIEpvaG4gUGF1bCBJSS4K, 'ORG')]
R3V5YW5hIHVyZ2VzIENvbW1vbndlYWx0aCB0byBpbmZsdWVuY2UgVU4gY2xpbWF0ZSBzdW1taXQKR3V5YW5hJ3MgUHJlc2lkZW50IEJoYXJyYXQgSmFnZGVvIHVyZ2VkIENvbW1vbndlYWx0aCBmaW5hbmNlIG1pbmlzdGVycyBsYXRlIE1vbmRheSB0byBpbmZsdWVuY2UgdGhlIHVwY29taW5nIFVOIGNvbmZlcmVuY2Ugb24gY2xpbWF0ZSBjaGFuZ2UgYnkgcmFpc2luZyB0aGUgZWNvbm9taWMgcmVhc29ucyBiZWhpbmQgZ2xvYmFsIGRlZm9yZXN0YXRpb24uCkFjY29yZGluZyB0byBKYWdkZW8sIGZvcmVzdHMgYXJlIGN1dCBkb3duIGJ5IHBlb3BsZSBsaXZpbmcgaW4gdGhlIGFyZWEgb3IgZW5nYWdlZCBpbiBhZ3JpY3VsdHVyZSBhbmQgYnVzaW5lc3MgdG8gZ2VuZXJhdGUgcHJvZml0IGZvciBuYXRpb25hbCBkZXZlbG9wbWVudC4KIldlIG11c3Qgc3F1YXJlIHVwIHRvIHRoaXMgcmVhbGl0eSBhbmQgcmVjb2duaXplIHRoYXQgdGhlIHdheSB0byBzdG9wIGRlZm9yZXN0YXRpb24gaXMgdG8gZW5zdXJlIHRoYXQgdGhlcmUgaXMgYW4gZWNvbm9taWNhbGx5IHZpYWJsZSBhbHRlcm5hdGl2ZSwiIEphZ2RlbyB0b2xkIG1pbmlzdGVycyBvZiB0aGUgNTMtbmF0aW9uIENvbW1vbndlYWx0aCBhdCB0aGUgb2ZmaWNpYWwgb3BlbmluZyBvZiB0aGUgdGhyZWUtZGF5IG1lZXRpbmcuClRoZSBtZWV0aW5nIGlzIGJlaW5nIGhlbGQgb25lIHdlZWsgYmVmb3JlIGJvYXJkIG1lZXRpbmdzIG9mIHRoZSBJbnRlcm5hdGlvbmFsIE1vbmV0YXJ5IEZ1bmQgKElNRikgYW5kIFdvcmxkIEJhbmssIGFuZCBhaGVhZCBvZiB0aGUgRGVjZW1iZXIgMy0xNCBVTiBjb25mZXJlbmNlIG9uIGNsaW1hdGUgY2hhbmdlIGluIEJhbGksIEluZG9uZXNpYS4KSmFnZGVvIHVyZ2VkIGhpcyBhdWRpZW5jZSB0byBwdXNoIGZvciBpbmNlbnRpdmVzIGF0IHRoZSBCYWxpIGNvbmZlcmVuY2UgdG8gcmV3YXJkIG5vdCBvbmx5IHJlLXBsYW50aW5nIG9mIHRyb3BpY2FsIGZvcmVzdCB0cmVlcyBidXQgYWxzbyBwcmVzZXJ2YXRpb24gb2YgcHJpc3RpbmUgZm9yZXN0cy4KIlRoaXMgaXMgbm90IG9ubHkgbW9yYWxseSByaWdodCBiZWNhdXNlIGNvdW50cmllcyBsaWtlIEd1eWFuYSAuLi4gZGVzZXJ2ZSB0byBiZSByZXdhcmRlZCwiIGJ1dCBhbHNvICJiZWNhdXNlIHRvIG5vdCBkbyBzbyB3b3VsZCByZXN1bHQgaW4gZWNvbm9taWMgbGVha2FnZXMgYWNyb3NzIG5hdGlvbmFsIGJvcmRlcnMgaW4gdGhlIEFtYXpvbiByZWdpb24gYW5kIGVsc2V3aGVyZSwiIGhlIHNhaWQuCkphZ2RlbyBjYWxsZWQgb24gdGhlIENvbW1vbndlYWx0aCB0byB3b3JrIHdpdGggdGhlIFVuaXRlZCBTdGF0ZXMgYW5kIEF1c3RyYWxpYSwgd2hpY2ggaGF2ZSBub3QgcmF0aWZpZWQgdGhlIDE5OTcgS3lvdG8gUHJvdG9jb2wgdGhhdCBzZXRzIGxpbWl0cyBvbiBjYXJib24gZW1pc3Npb25zLgpIZSBhbHNvIHVyZ2VkIHRoZW0gdG8gZW5nYWdlIGRldmVsb3BpbmcgY291bnRyaWVzIGxpa2UgQ2hpbmEgYW5kIEluZGlhICJpbiBhIHdheSB3aGljaCByZWNvZ25pemVzIHRoYXQgb24gYSBwZXItY2FwaXRhIGJhc2lzLCB0aGV5IGFyZSBmYXIgbG93ZXIgZW1pdHRlcnMgb2YgZ3JlZW5ob3VzZSBnYXNlcyB0aGFuIG11Y2ggb2YgdGhlIHdvcmxkLiIKQWxzbyBhdCB0aGUgZXZlbnQgd2FzIEZpbmFuY2UgTWluaXN0ZXIgTmlrbyBMZWUgSGFuZyBvZiBTYW1vYSwgd2hvIGRlc2NyaWJlZCBob3cgY2xpbWF0ZSBjaGFuZ2VkIGhhcyByZXN1bHRlZCBpbiB3aGF0IHdhcyB0aGUgaXNsYW5kJ3MgbWFpbiBleHBvcnQgLS0gdHVuYSAtLSBtaWdyYXRpbmcgYXdheSBmcm9tIHRoZWlyIHJlZ2lvbi4KIldlIG11c3QgcmVjb2duaXplIHRoYXQgdGhlcmUgd2lsbCBiZSBpbmNyZWFzaW5nIGNvc3QgaW1wbGljYXRpb25zIG9uIG91ciBhbm51YWwgYnVkZ2V0cyB1bmxlc3MgZWFybHkgYWN0aW9uIGlzIHRha2VuIG5vdyB0byByZWR1Y2UgdGhlIGFkdmVyc2UgaW1wYWN0cyBvZiBjbGltYXRlIGNoYW5nZSwiIGhlIHNhaWQuCiJUaGUgbG9uZ2VyIGFjdGlvbiBpcyBkZWxheWVkLCB0aGUgbW9yZSBleHBlbnNpdmUgaXQgd2lsbCBiZWNvbWUgdG8gaW1wbGVtZW50IGFwcHJvcHJpYXRlIHNvbHV0aW9ucywiIGhlIGFkZGVkLgpUaGUgQ29tbW9ud2VhbHRoIG5hdGlvbnMsIHNvbWV0aW1lcyBrbm93biBhcyB0aGUgQnJpdGlzaCBDb21tb253ZWFsdGgsIGlzIGEgdm9sdW50YXJ5IGFzc29jaWF0aW9uIG9mIDUzIGZvcm1lciBCcml0aXNoIGNvbG9uaWVzIHdoaWNoIG5vdyBhcmUgc292ZXJlaWduIHN0YXRlcywgcGx1cyB0aGUgVW5pdGVkIEtpbmdkb20gaXRzZWxmIGFuZCBNb3phbWJpcXVlLgpUb2dldGhlciB0aGV5IHJlcHJlc2VudCBhYm91dCAzMCBwZXJjZW50IG9mIHRoZSB3b3JsZCdzIHBvcHVsYXRpb24uCg==
[(R3V5YW5hIHVyZ2VzIENvbW1vbndlYWx0aCB0byBpbmZsdWVuY2UgVU4gY2xpbWF0ZSBzdW1taXQKR3V5YW5hJ3MgUHJlc2lkZW50IEJoYXJyYXQgSmFnZGVvIHVyZ2VkIENvbW1vbndlYWx0aCBmaW5hbmNlIG1pbmlzdGVycyBsYXRlIE1vbmRheSB0byBpbmZsdWVuY2UgdGhlIHVwY29taW5nIFVOIGNvbmZlcmVuY2Ugb24gY2xpbWF0ZSBjaGFuZ2UgYnkgcmFpc2luZyB0aGUgZWNvbm9taWMgcmVhc29ucyBiZWhpbmQgZ2xvYmFsIGRlZm9yZXN0YXRpb24uCkFjY29yZGluZyB0byBKYWdkZW8sIGZvcmVzdHMgYXJlIGN1dCBkb3duIGJ5IHBlb3BsZSBsaXZpbmcgaW4gdGhlIGFyZWEgb3IgZW5nYWdlZCBpbiBhZ3JpY3VsdHVyZSBhbmQgYnVzaW5lc3MgdG8gZ2VuZXJhdGUgcHJvZml0IGZvciBuYXRpb25hbCBkZXZlbG9wbWVudC4KIldlIG11c3Qgc3F1YXJlIHVwIHRvIHRoaXMgcmVhbGl0eSBhbmQgcmVjb2duaXplIHRoYXQgdGhlIHdheSB0byBzdG9wIGRlZm9yZXN0YXRpb24gaXMgdG8gZW5zdXJlIHRoYXQgdGhlcmUgaXMgYW4gZWNvbm9taWNhbGx5IHZpYWJsZSBhbHRlcm5hdGl2ZSwiIEphZ2RlbyB0b2xkIG1pbmlzdGVycyBvZiB0aGUgNTMtbmF0aW9uIENvbW1vbndlYWx0aCBhdCB0aGUgb2ZmaWNpYWwgb3BlbmluZyBvZiB0aGUgdGhyZWUtZGF5IG1lZXRpbmcuClRoZSBtZWV0aW5nIGlzIGJlaW5nIGhlbGQgb25lIHdlZWsgYmVmb3JlIGJvYXJkIG1lZXRpbmdzIG9mIHRoZSBJbnRlcm5hdGlvbmFsIE1vbmV0YXJ5IEZ1bmQgKElNRikgYW5kIFdvcmxkIEJhbmssIGFuZCBhaGVhZCBvZiB0aGUgRGVjZW1iZXIgMy0xNCBVTiBjb25mZXJlbmNlIG9uIGNsaW1hdGUgY2hhbmdlIGluIEJhbGksIEluZG9uZXNpYS4KSmFnZGVvIHVyZ2VkIGhpcyBhdWRpZW5jZSB0byBwdXNoIGZvciBpbmNlbnRpdmVzIGF0IHRoZSBCYWxpIGNvbmZlcmVuY2UgdG8gcmV3YXJkIG5vdCBvbmx5IHJlLXBsYW50aW5nIG9mIHRyb3BpY2FsIGZvcmVzdCB0cmVlcyBidXQgYWxzbyBwcmVzZXJ2YXRpb24gb2YgcHJpc3RpbmUgZm9yZXN0cy4KIlRoaXMgaXMgbm90IG9ubHkgbW9yYWxseSByaWdodCBiZWNhdXNlIGNvdW50cmllcyBsaWtlIEd1eWFuYSAuLi4gZGVzZXJ2ZSB0byBiZSByZXdhcmRlZCwiIGJ1dCBhbHNvICJiZWNhdXNlIHRvIG5vdCBkbyBzbyB3b3VsZCByZXN1bHQgaW4gZWNvbm9taWMgbGVha2FnZXMgYWNyb3NzIG5hdGlvbmFsIGJvcmRlcnMgaW4gdGhlIEFtYXpvbiByZWdpb24gYW5kIGVsc2V3aGVyZSwiIGhlIHNhaWQuCkphZ2RlbyBjYWxsZWQgb24gdGhlIENvbW1vbndlYWx0aCB0byB3b3JrIHdpdGggdGhlIFVuaXRlZCBTdGF0ZXMgYW5kIEF1c3RyYWxpYSwgd2hpY2ggaGF2ZSBub3QgcmF0aWZpZWQgdGhlIDE5OTcgS3lvdG8gUHJvdG9jb2wgdGhhdCBzZXRzIGxpbWl0cyBvbiBjYXJib24gZW1pc3Npb25zLgpIZSBhbHNvIHVyZ2VkIHRoZW0gdG8gZW5nYWdlIGRldmVsb3BpbmcgY291bnRyaWVzIGxpa2UgQ2hpbmEgYW5kIEluZGlhICJpbiBhIHdheSB3aGljaCByZWNvZ25pemVzIHRoYXQgb24gYSBwZXItY2FwaXRhIGJhc2lzLCB0aGV5IGFyZSBmYXIgbG93ZXIgZW1pdHRlcnMgb2YgZ3JlZW5ob3VzZSBnYXNlcyB0aGFuIG11Y2ggb2YgdGhlIHdvcmxkLiIKQWxzbyBhdCB0aGUgZXZlbnQgd2FzIEZpbmFuY2UgTWluaXN0ZXIgTmlrbyBMZWUgSGFuZyBvZiBTYW1vYSwgd2hvIGRlc2NyaWJlZCBob3cgY2xpbWF0ZSBjaGFuZ2VkIGhhcyByZXN1bHRlZCBpbiB3aGF0IHdhcyB0aGUgaXNsYW5kJ3MgbWFpbiBleHBvcnQgLS0gdHVuYSAtLSBtaWdyYXRpbmcgYXdheSBmcm9tIHRoZWlyIHJlZ2lvbi4KIldlIG11c3QgcmVjb2duaXplIHRoYXQgdGhlcmUgd2lsbCBiZSBpbmNyZWFzaW5nIGNvc3QgaW1wbGljYXRpb25zIG9uIG91ciBhbm51YWwgYnVkZ2V0cyB1bmxlc3MgZWFybHkgYWN0aW9uIGlzIHRha2VuIG5vdyB0byByZWR1Y2UgdGhlIGFkdmVyc2UgaW1wYWN0cyBvZiBjbGltYXRlIGNoYW5nZSwiIGhlIHNhaWQuCiJUaGUgbG9uZ2VyIGFjdGlvbiBpcyBkZWxheWVkLCB0aGUgbW9yZSBleHBlbnNpdmUgaXQgd2lsbCBiZWNvbWUgdG8gaW1wbGVtZW50IGFwcHJvcHJpYXRlIHNvbHV0aW9ucywiIGhlIGFkZGVkLgpUaGUgQ29tbW9ud2VhbHRoIG5hdGlvbnMsIHNvbWV0aW1lcyBrbm93biBhcyB0aGUgQnJpdGlzaCBDb21tb253ZWFsdGgsIGlzIGEgdm9sdW50YXJ5IGFzc29jaWF0aW9uIG9mIDUzIGZvcm1lciBCcml0aXNoIGNvbG9uaWVzIHdoaWNoIG5vdyBhcmUgc292ZXJlaWduIHN0YXRlcywgcGx1cyB0aGUgVW5pdGVkIEtpbmdkb20gaXRzZWxmIGFuZCBNb3phbWJpcXVlLgpUb2dldGhlciB0aGV5IHJlcHJlc2VudCBhYm91dCAzMCBwZXJjZW50IG9mIHRoZSB3b3JsZCdzIHBvcHVsYXRpb24uCg==, 'ORG')]
TkhMIHBsYXllcnMgdW5pb24gdG8gaW50cm9kdWNlIG5ldyBleGVjdXRpdmUgZGlyZWN0b3IKVGhlIE5hdGlvbmFsIEhvY2tleSBMZWFndWUgUGxheWVycycgQXNzb2NpYXRpb24gaXMgcG9pc2VkIHRvIGludHJvZHVjZSBmb3JtZXIgVVMgcHJvc2VjdXRvciBQYXVsIEtlbGx5IGFzIHRoZWlyIG5ldyBleGVjdXRpdmUgZGlyZWN0b3IgYXQgYSBwcmVzcyBjb25mZXJlbmNlIG9uIFdlZG5lc2RheS4KS2VsbHksIHdobyB3YXMgbm9taW5hdGVkIGZvciB0aGUgam9iIG9uIE9jdG9iZXIgMTUsIG5lZWRlZCBhcHByb3ZhbCBieSBhIG1ham9yaXR5IG9mIHRoZSBOSExQQSdzIGV4ZWN1dGl2ZSBib2FyZCwgd2hpY2ggdm90ZWQgYnkgc2VjcmV0IGJhbGxvdC4KVGhhdCBwb2xsIG9mIHRoZSAzMCBwbGF5ZXIgcmVwcmVzZW50YXRpdmVzIHdhcyBjb21wbGV0ZWQgb24gVHVlc2RheS4KS2VsbHkgc3VjY2VlZHMgVGVkIFNhc2tpbiwgd2hvIHdhcyBmaXJlZCBieSB0aGUgZXhlY3V0aXZlIGJvYXJkIGluIE1heS4KU2Fza2luIGdvdCB0aGUgam9iIGFmdGVyIEJvYiBHb29kZW5vdyByZXNpZ25lZCBpbiBKdWx5IDIwMDUuCldoaWxlIGhlIHdhcyB2b3RlZCBpbiwgaGUgd2FzIG5ldmVyIG5vbWluYXRlZCBhY2NvcmRpbmcgdG8gdGhlIHVuaW9uJ3Mgb3duIHJ1bGVzLgpTYXNraW4gd2FzIGZ1cnRoZXIgYWNjdXNlZCBvZiBtaXNyZXByZXNlbnRhdGlvbiBvZiBzYWxhcnkgZmlndXJlcyBkdXJpbmcgY29udHJhY3QgbmVnb3RpYXRpb25zIHdpdGggTkhMIG93bmVyc2hpcCwgYW5kIGRpdmVydGluZyAxMHMgb2YgbWlsbGlvbnMgb2YgZG9sbGFycyBpbiB1bmlvbiBmdW5kcyBmb3IgaGlzIG93biBiZW5lZml0LgpIZSB3YXMgc3VlZCBieSBhIGdyb3VwIG9mIHNpeCBwbGF5ZXJzIG92ZXIgaGlzIGFsbGVnZWQgdmlvbGF0aW9ucyBvZiB0aGUgTkhMUEEgY29uc3RpdHV0aW9uLgpLZWxseSBpcyBhIHBhcnRuZXIgYXQgdGhlIEJvc3RvbiBsZWdhbCBmaXJtIG9mIEtlbGx5LCBMaWJieSBhbmQgSG9vcGVzLgpUaGUgY29tcGFueSBzcGVjaWFsaXplcyBpbiB3aGl0ZSBjb2xsYXIgY3JpbWluYWwgZGVmZW5zZSBhbmQgY2l2aWwgYW5kIGFkbWluaXN0cmF0aXZlIGxpdGlnYXRpb24uCkluIGhpcyBwcmV2aW91cyBqb2IgYXMgYSBVUyBkaXN0cmljdCBhdHRvcm5leSwgS2VsbHkgc3VjY2Vzc2Z1bGx5IHByb3NlY3V0ZWQgZm9ybWVyIE5ITFBBIGV4ZWN1dGl2ZSBkaXJlY3RvciBBbGFuIEVhZ2xlc29uLCB3aG8gbGVmdCB0aGUgam9iIGluIDE5OTEgYW1pZCBhbGxlZ2F0aW9ucyBvZiBlbWJlenpsaW5nIHBsYXllciBwZW5zaW9uIGZ1bmRzLgo=
[]
U3VzcGVjdCBpbiBQZWFybCdzIGtpbGxpbmcgZGllcyBhZnRlciBpbnRlcnJvZ2F0aW9uOiByZXBvcnQKQSBQYWtpc3RhbmkgYnVzaW5lc3NtYW4gc3VzcGVjdGVkIG9mIHBsYXlpbmcgYSByb2xlIGluIHRoZSBicnV0YWwgMjAwMiBraWxsaW5nIG9mIEFtZXJpY2FuIGpvdXJuYWxpc3QgRGFuaWVsIFBlYXJsIGRpZWQgZWFybGllciB0aGlzIHllYXIsIHNob3J0bHkgYWZ0ZXIgYmVpbmcgaW50ZXJyb2dhdGVkIGJ5IFVTIGFuZCBQYWtpc3RhbmkgaW50ZWxsaWdlbmNlLCBUaGUgV2FsbCBTdHJlZXQgSm91cm5hbCByZXBvcnRlZCBNb25kYXkuClBlYXJsLCBhIEthcmFjaGktYmFzZWQgY29ycmVzcG9uZGVudCBmb3IgdGhlIEpvdXJuYWwsIHdhcyBraWRuYXBwZWQgb24gSmFudWFyeSAyMywgMjAwMiwgYW5kIGtpbGxlZCBleGVjdXRpb24tc3R5bGUgc2hvcnRseSBhZnRlci4KVGhlIG5ld3NwYXBlciBzYWlkIEthcmFjaGkgYnVzaW5lc3NtYW4gU2F1ZCBNZW1vbiBiZWNhbWUgYSBrZXkgc3VzcGVjdCBpbiB0aGUgY2FzZSBiZWNhdXNlIGhlIG93bmVkIGEgbnVyc2VyeSB3aGVyZSBQZWFybCBoYWQgYmVlbiBoZWxkIGNhcHRpdmUuCkNpdGluZyBhbiB1bm5hbWVkIHNlbmlvciBVUyBsYXcgZW5mb3JjZW1lbnQgb2ZmaWNpYWwsIHRoZSByZXBvcnQgc2FpZCBNZW1vbiB3YXMgaW50ZXJyb2dhdGVkIGJ5IGJvdGggVVMgYW5kIFBha2lzdGFuaSBpbnRlbGxpZ2VuY2Ugc2VydmljZXMuClRoZSBpbnRlcnJvZ2F0aW9uIHByb2R1Y2VkIGluZm9ybWF0aW9uIHRoYXQgTWVtb24gd2FzIGhlbHBpbmcgQWwtUWFlZGEgZGV2ZWxvcCBhbnRocmF4IHN0cmFpbnMsIHRoZSBuZXdzcGFwZXIgc2FpZC4KSGUgd2FzICJpbiBhIGxvdCBvZiB0aGUgcm9vbXMgd2hlcmUgaW1wb3J0YW50IHRoaW5ncyB3ZXJlIGJlaW5nIGRpc2N1c3NlZCwiIHRoZSBwYXBlciBxdW90ZXMgdGhlIFVTIG9mZmljaWFsIGFzIHNheWluZy4KSGUga25ldyBzZW5pb3IgQWwtUWFlZGEgcGVvcGxlLCBhbmQgd2FzIG1vdmluZyBlcXVpcG1lbnQgYW5kIHN1cHBsaWVzLgpCdXQgTWVtb24ncyBmYW1pbHkgbWVtYmVycyBhbmQgaHVtYW4gcmlnaHRzIGdyb3VwcyBzYWlkIHRoYXQgaW4gQXByaWwsIHRoZSBidXNpbmVzc21hbiB3YXMgbGVmdCBpbiBmcm9udCBvZiBoaXMgS2FyYWNoaSBob21lIGJhZGx5IGluanVyZWQgYW5kIGVtYWNpYXRlZCwgd2VpZ2hpbmcganVzdCA4MCBwb3VuZHMgKDM2IGtpbG9ncmFtcyksIGFjY29yZGluZyB0byB0aGUgcmVwb3J0LgpBYm91dCBhIG1vbnRoIGxhdGVyLCBoZSBkaWVkIGZyb20gd2hhdCB3YXMgZGVzY3JpYmVkIGFzIGNvbXBsaWNhdGlvbnMgZnJvbSBtZW5pbmdpdGlzIGFuZCB0dWJlcmN1bG9zaXMsIHRoZSBKb3VybmFsIHNhaWQuClBha2lzdGFuaSBodW1hbiByaWdodHMgZ3JvdXBzIGhhdmUgYWNjdXNlZCB0aGUgbG9jYWwgaW50ZWxsaWdlbmNlIHNlcnZpY2Ugb2YgdG9ydHVyaW5nIE1lbW9uLCBhY2NvcmRpbmcgdG8gdGhlIHBhcGVyLgpCdXQgdGhlIHJlcG9ydCBtZW50aW9ucyBhbiB1bm5hbWVkIFBha2lzdGFuaSBwb2xpY2Ugb2ZmaWNpYWwgc2F5aW5nIE1lbW9uIHdhcyBhbHJlYWR5IGluIHBvb3IgY29uZGl0aW9uIHdoZW4gdGhlIFVuaXRlZCBTdGF0ZXMgZ2F2ZSBoaW0gYmFjayB0byB0aGUgUGFraXN0YW5pcy4K
[(U3VzcGVjdCBpbiBQZWFybCdzIGtpbGxpbmcgZGllcyBhZnRlciBpbnRlcnJvZ2F0aW9uOiByZXBvcnQKQSBQYWtpc3RhbmkgYnVzaW5lc3NtYW4gc3VzcGVjdGVkIG9mIHBsYXlpbmcgYSByb2xlIGluIHRoZSBicnV0YWwgMjAwMiBraWxsaW5nIG9mIEFtZXJpY2FuIGpvdXJuYWxpc3QgRGFuaWVsIFBlYXJsIGRpZWQgZWFybGllciB0aGlzIHllYXIsIHNob3J0bHkgYWZ0ZXIgYmVpbmcgaW50ZXJyb2dhdGVkIGJ5IFVTIGFuZCBQYWtpc3RhbmkgaW50ZWxsaWdlbmNlLCBUaGUgV2FsbCBTdHJlZXQgSm91cm5hbCByZXBvcnRlZCBNb25kYXkuClBlYXJsLCBhIEthcmFjaGktYmFzZWQgY29ycmVzcG9uZGVudCBmb3IgdGhlIEpvdXJuYWwsIHdhcyBraWRuYXBwZWQgb24gSmFudWFyeSAyMywgMjAwMiwgYW5kIGtpbGxlZCBleGVjdXRpb24tc3R5bGUgc2hvcnRseSBhZnRlci4KVGhlIG5ld3NwYXBlciBzYWlkIEthcmFjaGkgYnVzaW5lc3NtYW4gU2F1ZCBNZW1vbiBiZWNhbWUgYSBrZXkgc3VzcGVjdCBpbiB0aGUgY2FzZSBiZWNhdXNlIGhlIG93bmVkIGEgbnVyc2VyeSB3aGVyZSBQZWFybCBoYWQgYmVlbiBoZWxkIGNhcHRpdmUuCkNpdGluZyBhbiB1bm5hbWVkIHNlbmlvciBVUyBsYXcgZW5mb3JjZW1lbnQgb2ZmaWNpYWwsIHRoZSByZXBvcnQgc2FpZCBNZW1vbiB3YXMgaW50ZXJyb2dhdGVkIGJ5IGJvdGggVVMgYW5kIFBha2lzdGFuaSBpbnRlbGxpZ2VuY2Ugc2VydmljZXMuClRoZSBpbnRlcnJvZ2F0aW9uIHByb2R1Y2VkIGluZm9ybWF0aW9uIHRoYXQgTWVtb24gd2FzIGhlbHBpbmcgQWwtUWFlZGEgZGV2ZWxvcCBhbnRocmF4IHN0cmFpbnMsIHRoZSBuZXdzcGFwZXIgc2FpZC4KSGUgd2FzICJpbiBhIGxvdCBvZiB0aGUgcm9vbXMgd2hlcmUgaW1wb3J0YW50IHRoaW5ncyB3ZXJlIGJlaW5nIGRpc2N1c3NlZCwiIHRoZSBwYXBlciBxdW90ZXMgdGhlIFVTIG9mZmljaWFsIGFzIHNheWluZy4KSGUga25ldyBzZW5pb3IgQWwtUWFlZGEgcGVvcGxlLCBhbmQgd2FzIG1vdmluZyBlcXVpcG1lbnQgYW5kIHN1cHBsaWVzLgpCdXQgTWVtb24ncyBmYW1pbHkgbWVtYmVycyBhbmQgaHVtYW4gcmlnaHRzIGdyb3VwcyBzYWlkIHRoYXQgaW4gQXByaWwsIHRoZSBidXNpbmVzc21hbiB3YXMgbGVmdCBpbiBmcm9udCBvZiBoaXMgS2FyYWNoaSBob21lIGJhZGx5IGluanVyZWQgYW5kIGVtYWNpYXRlZCwgd2VpZ2hpbmcganVzdCA4MCBwb3VuZHMgKDM2IGtpbG9ncmFtcyksIGFjY29yZGluZyB0byB0aGUgcmVwb3J0LgpBYm91dCBhIG1vbnRoIGxhdGVyLCBoZSBkaWVkIGZyb20gd2hhdCB3YXMgZGVzY3JpYmVkIGFzIGNvbXBsaWNhdGlvbnMgZnJvbSBtZW5pbmdpdGlzIGFuZCB0dWJlcmN1bG9zaXMsIHRoZSBKb3VybmFsIHNhaWQuClBha2lzdGFuaSBodW1hbiByaWdodHMgZ3JvdXBzIGhhdmUgYWNjdXNlZCB0aGUgbG9jYWwgaW50ZWxsaWdlbmNlIHNlcnZpY2Ugb2YgdG9ydHVyaW5nIE1lbW9uLCBhY2NvcmRpbmcgdG8gdGhlIHBhcGVyLgpCdXQgdGhlIHJlcG9ydCBtZW50aW9ucyBhbiB1bm5hbWVkIFBha2lzdGFuaSBwb2xpY2Ugb2ZmaWNpYWwgc2F5aW5nIE1lbW9uIHdhcyBhbHJlYWR5IGluIHBvb3IgY29uZGl0aW9uIHdoZW4gdGhlIFVuaXRlZCBTdGF0ZXMgZ2F2ZSBoaW0gYmFjayB0byB0aGUgUGFraXN0YW5pcy4K, 'ORG')]
Rm9vdGJhbGw6IFRvcnJlcyBiYWlscyBvdXQgQmVuaXRlegpGZXJuYW5kbyBUb3JyZXMga2VwdCBMaXZlcnBvb2wncyBDaGFtcGlvbnMgTGVhZ3VlIHJlc2N1ZSBtaXNzaW9uIG9uIGNvdXJzZSBhbmQgZGlkIFJhZmEgQmVuaXRleiBhIGZhdm91ciBpbiB0aGUgcHJvY2VzcyBhcyBoaXMgZG91YmxlIHN0cmlrZSBpbnNwaXJlZCBhIDQtMSB3aW4gb3ZlciBQb3J0byBvbiBXZWRuZXNkYXkuClRvcnJlcyBzY29yZWQgdHdpY2UgZWl0aGVyIHNpZGUgb2YgTGlzYW5kcm8gTG9wZXoncyBlcXVhbGlzZXIgYXQgQW5maWVsZCBiZWZvcmUgU3RldmVuIEdlcnJhcmQgYW5kIFBldGVyIENyb3VjaCBzdHJ1Y2sgbGF0ZSBvbiB0byBjbGluY2ggYSB2aWN0b3J5IHRoYXQgbWVhbnMgQmVuaXRleidzIHNpZGUgY2FuIHN0aWxsIHJlYWNoIHRoZSBsYXN0IDE2LgpMaXZlcnBvb2wgbmVlZCB0byBiZWF0IE1hcnNlaWxsZSBpbiB0aGVpciBmaW5hbCBHcm91cCBGIGZpeHR1cmUgaW4gdGhlIHNvdXRoIG9mIEZyYW5jZSB0byBnbyB0aHJvdWdoLCBidXQgQmVuaXRleiB3aWxsIHRha2UgdGhhdCBhZnRlciBhIHRvcnJpZCB3ZWVrIGxvb2tlZCB0byBiZSByZWFjaGluZyBhbiB1bnBhbGV0YWJsZSBjb25jbHVzaW9uLgpXaGVuIExvcGV6IGJyb3VnaHQgUG9ydG8gbGV2ZWwgYmVmb3JlIGhhbGYtdGltZSwgTGl2ZXJwb29sIHdlcmUgaW4gZGFuZ2VyIG9mIGJlaW5nIGVsaW1pbmF0ZWQgZnJvbSB0aGUgY29tcGV0aXRpb24gdGhleSBoYXZlIHdvbiBmaXZlIHRpbWVzLgpUaGF0IHdvdWxkIGhhdmUgYmVlbiBhIHN1YnN0YW50aWFsIGJsb3cgdG8gQmVuaXRleiBhcyBoZSB0cmllcyB0byB3aW4gaGlzIHdvcmQgb2Ygd2FycyB3aXRoIHRoZSBjbHViJ3MgQW1lcmljYW4gb3duZXJzLgpCZW5pdGV6J3MgdmVyeSBwdWJsaWMgZGlzYWdyZWVtZW50cyB3aXRoIFRvbSBIaWNrcyBhbmQgR2VvcmdlIEdpbGxldHQgb3ZlciB0cmFuc2ZlciBwb2xpY3kgdGhyZWF0ZW5lZCB0byBwcm92ZSBhIGZhdGFsIGRpc3RyYWN0aW9uIGF0IHRoZSBwaXZvdGFsIG1vbWVudCBvZiBMaXZlcnBvb2wncyBFdXJvcGVhbiBjYW1wYWlnbi4KQnV0LCB3aXRoIHRoZSBjbHViIG9uIHRoZSBicmluayBvZiBjaXZpbCB3YXIsIEJlbml0ZXogaGFzIGJlZW4gYXQgcGFpbnMgdG8gc2F2ZSBoaXMgbmVjayBieSB1bmRlcmxpbmluZyBoaXMgaGFwcGluZXNzIGF0IEFuZmllbGQuClRoZSBmYW5zIG1hZGUgaXQgY2xlYXIgd2hlcmUgdGhlaXIgbG95YWx0aWVzIGxheS4KQXJvdW5kIDIsMDAwIHN0YWdlZCBhIHByb3Rlc3QgbWFyY2ggYWdhaW5zdCB0aGUgQW1lcmljYW5zIGVuIHJvdXRlIHRvIHRoZSBtYXRjaCBhbmQgdGhlIEtvcCByZXBlYXRlZGx5IHJvYXJlZCBCZW5pdGV6J3MgbmFtZSBiZWZvcmUgdGhlIG1hdGNoLgpCZW5pdGV6IHdhbnRlZCB0aGUgY3Jvd2QgdG8gYmFjayB0aGVpciB0ZWFtIGFuZCBmb3JnZXQgYWJvdXQgaGltIGFuZCBoZSBlbXBoYXNpc2VkIHRoYXQgbWVzc2FnZSBieSBicmllZmx5IGFja25vd2xlZGdpbmcgdGhlbSBhbmQgdGhlbiBnZXN0dXJpbmcgdG93YXJkcyB0aGUgcGxheWVycy4KTGl2ZXJwb29sJ3Mgd29lZnVsIHN0YXJ0IGluIEdyb3VwIEEgbGVmdCBubyBtYXJnYWluIGZvciBlcnJvciBhbmQgQmVuaXRleiBzZW50IG91dCBhIHRlYW0gcGFja2VkIHdpdGggYXR0YWNraW5nIG9wdGlvbnMgZm9yIGEgZ2FtZSBoZSBoYWQgdG8gd2luLgpUaGVyZSB3YXMgbm8gZG91YnRpbmcgTGl2ZXJwb29sJ3MgaW50ZW5zaXR5IGVhcmx5IG9uIGFzIHRoZXkgc25hcHBlZCBjcmlzcCBwYXNzZXMgYXJvdW5kIG1pZGZpZWxkLgpZb3NzaSBCZW5heW91biBjbGFpbWVkIGEgcGVuYWx0eSB3aGVuIGhpcyBjcm9zcyBoaXQgTWlsYW4gU3RlcGFub3YncyBhcm0gYnV0IHJlZmVyZWUgUm9iZXJ0byBSb3NldHRpIHdhdmVkIGF3YXkgdGhlIGFwcGVhbC4KVGhlIGhvc3RzIHdlcmVuJ3QgZ29pbmcgdG8gbGV0IFBvcnRvIHNldHRsZSBhbmQgVG9ycmVzIHJvYmJlZCBQYXVsbyBBc3N1bmNhbyBpbiB0aGUgY2VudHJlLWNpcmNsZSBiZWZvcmUgdGVzdGluZyBIZWx0b24gd2l0aCBhIGxvbmctcmFuZ2UgZWZmb3J0LgpJdCB3YXMgYSBzdGF0ZW1lbnQgb2YgaW50ZW50IHRoYXQgUG9ydG8gY291bGRuJ3QgbWF0Y2guCldoZW4gU3RldmUgRmlubmFuIHdvbiBhIGNvcm5lciBpbiB0aGUgMTl0aCBtaW51dGUsIFRvcnJlcyBzaG91bGQgaGF2ZSBiZWVuIHRoZSBmaXJzdCBwbGF5ZXIgdGhleSBtYXJrZWQuCkluc3RlYWQgTHVjaG8gR29uemFsZXogbGV0IHRoZSBTcGFpbiBzdHJpa2VyIHJ1biBmcmVlIHRvIG1lZXQgR2VycmFyZCdzIHNldC1waWVjZSB3aXRoIGEgZG93bndhcmRzIGhlYWRlciB0aGF0IHppcHBlZCBwYXN0IEhlbHRvbi4KQmVuaXRleidzIHNpZGUgd2VyZSBjb21mb3J0YWJseSB0aGUgYmV0dGVyIHNpZGUgYnV0IG91dCBvZiBub3doZXJlIFBvcnRvIHNuYXRjaGVkIGFuIGVxdWFsaXNlciBpbiB0aGUgMzNyZCBtaW51dGUuClByemVteXNsYXcgS2F6bWllcmN6YWsgc3VyZ2VkIHBhc3QgRmlubmFuIGFuZCB3aGlwcGVkIGluIGEgc3VwZXJiIGNyb3NzIHRvd2FyZHMgTG9wZXosIHdobyBsb3N0IEFsdmFybyBBcmJlbG9hIGFuZCBkaXJlY3RlZCBhIGRpdmluZyBoZWFkZXIgcGFzdCBKb3NlIFJlaW5hLgpMaXZlcnBvb2wgbG9va2VkIHJhdHRsZWQgZm9yIHRoZSBmaXJzdCB0aW1lIGFuZCB0aGV5IHdlcmUgZm9ydHVuYXRlIExvcGV6IGxvc3QgaGlzIGNvbXBvc3VyZSB3aGVuIEx1Y2hvJ3MgcGFzcyBzZW50IGhpbSBjbGVhciBtb21lbnRzIGxhdGVyLgpMb3BleidzIGNsaXBwZWQgc2hvdCB0cmlja2xlZCBwYXN0IGEgcG9zdCBidXQgdGhlIFJlZHMgd2VyZSByb2NraW5nLgpHZXJyYXJkIHRyaWVkIHRvIGxpZnQgaGlzIHNpZGUgd2l0aCBhIHBvd2VyZnVsIGZyZWUta2ljayB0aGF0IHN3ZXJ2ZWQgd2lkZSBidXQgdGhlIGhvc3RzIGZpbmlzaGVkIHRoZSBoYWxmIGxvb2tpbmcgaW5jcmVhc2luZ2x5IHVuc3VyZSBvZiB0aGVtc2VsdmVzLgpCZW5pdGV6IGhhZCBkb25lIHBsZW50eSBvZiB0YWxraW5nIGluIHRoZSBsYXN0IHdlZWsgYnV0IG5vdyBoZSBuZWVkZWQgdG8gZmluZCB0aGUgcmlnaHQgd29yZHMgdG8gc2F5IHRvIGhpcyBwbGF5ZXJzLgpBbmZpZWxkIGdyZXcgbW9yZSBhbnhpb3VzIGJ5IHRoZSBtaW51dGUgYXMgTGl2ZXJwb29sIHN0cmFpbmVkIGZvciBhIGdvYWwgYW5kIHdoZW4gUnlhbiBCYWJlbCBvcHRlZCB0byBwYXNzIGluc3RlYWQgb2Ygc2hvb3QgaG93bHMgb2YgZnJ1c3RyYXRpb24gcmV2ZXJiZXJhdGVkIGFyb3VuZCB0aGUgc3RhZGl1bS4KQmVuaXRleiByZXNwb25kZWQgYnkgc2VuZGluZyBvbiBIYXJyeSBLZXdlbGwgYW5kIENyb3VjaC4KQW5kIHdpdGggdGltZSBydW5uaW5nIG91dCBpdCB3YXMgS2V3ZWxsIHdobyBoZWxwZWQgcHJpc2Ugb3BlbiB0aGUgUG9ydG8gZGVmZW5jZSBpbiB0aGUgNzh0aCBtaW51dGUuClRoZSBBdXN0cmFsaWEgc2xpcHBlZCBhIHBhc3MgdGhyb3VnaCB0byBUb3JyZXMgYW5kIGhlIHNocnVnZ2VkIG9mZiBDZWNoIGJlZm9yZSBjYWxtbHkgcGxhbnRpbmcgaGlzIHNob3QgaW50byB0aGUgZmFyIGNvcm5lci4KR2VycmFyZCBwdXQgdGhlIHJlc3VsdCBiZXlvbmQgZG91YnQgZnJvbSB0aGUgcGVuYWx0eSBzcG90IHdpdGggc2V2ZW4gbWludXRlcyB0byBwbGF5IGFmdGVyIE1pbGFuU3RlcGFub3YgaGFkIGhhbmRsZWQgaGlzIGZyZWUga2ljayBpbiB0aGUgYXJlYS4KQ3JvdWNoIHNlYWxlZCBhIHNsaWdodGx5IGZsYXR0ZXJpbmcgdmljdG9yeSB3aGVuIGhlIGhlYWRlZCBpbiBHZXJyYXJkJ3MgY29ybmVyIGluIHRoZSA4OHRoIG1pbnV0ZSB0byBsZWF2ZSBCZW5pdGV6IGJyZWF0aGluZyBhIHNpZ2ggb2YgcmVsaWVmLgo=
[]
RmFtaWx5IGNhciByaXZlciBjcmFzaCAtIGNoaWxkIGRpZXMKQSB0aHJlZS15ZWFyLW9sZCBjaGlsZCBoYXMgZGllZCBhbmQgZm91ciBvdGhlciB5b3VuZ3N0ZXJzIGFyZSBjcml0aWNhbGx5IGlsbCBhZnRlciB0aGVpciBwYXJlbnRzJyA0eDQgY3Jhc2hlZCBpbnRvIGEgcml2ZXIuCkxpbmNvbG5zaGlyZSBQb2xpY2Ugc2FpZCBuaW5lIG1lbWJlcnMgb2YgdGhlIHNhbWUgZmFtaWx5IHdlcmUgYWxsIGluanVyZWQgd2hlbiB0aGUgTGFuZCBSb3ZlciBjcmFzaGVkIGludG8gdGhlIFJpdmVyIFdpdGhhbSBhdCBUYXR0ZXJzaGFsbCBCcmlkZ2UsIG5lYXIgQ29uaW5nc2J5LgpBIHBvbGljZSBzcG9rZXNtYW4gY29uZmlybWVkIHRoYXQgdGhlIHlvdW5nZXN0IG9mIHNldmVuIGNoaWxkcmVuIGluc2lkZSB0aGUgY2FyIGhhZCBkaWVkIGF0IExpbmNvbG4gQ291bnR5IEhvc3BpdGFsLgpJdCBpcyB0aG91Z2h0IHRoYXQgdGhlIHllbGxvdyBMYW5kIFJvdmVyIGVudGVyZWQgdGhlIHdhdGVyIGFmdGVyIHBhc3NpbmcgYW5vdGhlciB2ZWhpY2xlIG9uIGEgc2luZ2xlLXRyYWNrIHJvYWQgYXQgV2l0aGFtIEJhbmsuClRoZSBzcG9rZXNtYW4gc2FpZCBhbGwgbmluZSBvY2N1cGFudHMgZ290IG91dCBvZiB0aGUgTGFuZCBSb3Zlciwgd2hpY2ggaGFkIGNvbnRhaW5lZCB0d28gYWR1bHRzIGFuZCBzZXZlbiBjaGlsZHJlbiwgYWdlZCBiZXR3ZWVuIHRocmVlIGFuZCAxMy4KVHdvIG9mIHRoZSBjaGlsZHJlbiB3ZXJlIHRha2VuIHRvIEJvc3RvbidzIFBpbGdyaW0gSG9zcGl0YWwsIHdoaWxlIHRoZSBvdGhlciBjYXN1YWx0aWVzIHdlcmUgdGFrZW4gdG8gTGluY29sbiBDb3VudHkgSG9zcGl0YWwsIHdoZXJlIHRoZSB5b3VuZ2VzdCBjaGlsZCBkaWVkLgpGb3VyIG9mIHRoZSBjaGlsZHJlbiBhcmUgc2FpZCBieSBwb2xpY2UgdG8gaGF2ZSAicG90ZW50aWFsbHkgbGlmZS10aHJlYXRlbmluZyIgaW5qdXJpZXMgd2hpbGUgYm90aCBhZHVsdHMgZXNjYXBlZCBzZXJpb3VzIGluanVyeS4KT2ZmaWNlcnMgc2FpZCB0aGUgYWNjaWRlbnQgYXQgV2l0aGFtIEJhbmsgYWxzbyBpbnZvbHZlZCBhIG1pbmlidXMgdG93aW5nIGEgdHJhaWxlci4KQW55b25lIHdpdGggaW5mb3JtYXRpb24gYWJvdXQgZWl0aGVyIHZlaGljbGUgaXMgdXJnZWQgdG8gY29udGFjdCB0aGUgTGluY29sbnNoaXJlIFBvbGljZSB3aXRuZXNzIGhvdGxpbmUgb24gMDE1MjIgNTU4ODU1LiDCqSBDb3B5cmlnaHQgUHJlc3MgQXNzb2NpYXRpb24gTHRkIDIwMDcsIEFsbCBSaWdodHMgUmVzZXJ2ZWQuCg==
[]
TWFuIGRpZXMgaW4gQmxhY2twb29sIGhvdGVsIGJsYXplCkEgbWFuIGRpZWQgYWZ0ZXIgYSBibGF6ZSBicm9rZSBvdXQgYXQgYSBCbGFja3Bvb2wgaG90ZWwuClNldmVyYWwgc3Vycm91bmRpbmcgZ3Vlc3Rob3VzZXMgd2VyZSBhbHNvIGV2YWN1YXRlZC4KVHdlbHZlIGZpcmUgZW5naW5lcyB3ZXJlIHNlbnQgdG8gdGFja2xlIHRoZSBmaXJlIGF0IFRoZSBNYW5vciBIb3RlbCwgQ2VudHJhbCBQcm9tZW5hZGUsIHRoZSBmaXJlIHNlcnZpY2Ugc2FpZC4KQW4gYW1idWxhbmNlIHNlcnZpY2Ugc3Bva2Vzd29tYW4gc2FpZCB0aGF0IGEgbWFuIHdhcyB0cmVhdGVkIGZvciBhIGNhcmRpYWMgYXJyZXN0IHdoaWxlIGhlIHdhcyBiZWluZyB0YWtlbiB0byBob3NwaXRhbCwgYnV0IGhlIHdhcyBsYXRlciBjb25maXJtZWQgZGVhZC4KU2hlIGRpZCBub3Qga25vdyBpZiBoZSBoYWQgb3RoZXIgaW5qdXJpZXMuCkZvdXIgb3RoZXIgY2FzdWFsdGllcyB3ZXJlIHRyZWF0ZWQgZm9yIG1pbm9yIGNhc3VhbHRpZXMgYXQgdGhlIEJsYWNrcG9vbCBWaWN0b3JpYSBIb3NwaXRhbC4KU2hlIHNhaWQgZm91ciBob3RlbHMgd2VyZSBldmFjdWF0ZWQgYW5kICJoZWZ0eSByZXNvdXJjZXMiIHdlcmUgdXNlZC4KQ3Jld3Mgd2VyZSBjYWxsZWQgYXQgMy4yNWFtIHRvIHRoZSBob3RlbCwgd2hpY2ggaGFzIGZvdXIgZmxvb3JzIHBsdXMgYSBiYXNlbWVudC4KVGhlIHNwb2tlc3dvbWFuIGRpZCBub3QgaGF2ZSBhbnkgZnVydGhlciBkZXRhaWxzIGFib3V0IHdoZXJlIG9yIGhvdyB0aGUgZmlyZSBzdGFydGVkLgpMYW5jYXNoaXJlIEZpcmUgYW5kIFJlc2N1ZSBTZXJ2aWNlJ3Mgd2Vic2l0ZSBzYWlkIHRoYXQgdGhlIGZpcmUgaW52b2x2ZWQgdGhlIGJhc2VtZW50LCBncm91bmQgYW5kIGZpcnN0IGZsb29ycy4gwqkgQ29weXJpZ2h0IFByZXNzIEFzc29jaWF0aW9uIEx0ZCAyMDA3LCBBbGwgUmlnaHRzIFJlc2VydmVkLgo=
[]
UXVldWUgdGlwcyBmb3IgZm9yZWlnbiBzdHVkZW50cwpGb3JlaWduIHN0dWRlbnRzIHZpc2l0aW5nIHRoZSBVSyBhcmUgdG8gYmUgZWR1Y2F0ZWQgaW4gdGhlIGV0aXF1ZXR0ZSBvZiBxdWV1ZWluZyBmb3IgYnVzZXMgYWZ0ZXIgbG9jYWwgdXNlcnMgY29tcGxhaW5lZCBhYm91dCB0aGVtIHB1c2hpbmcgcGFzdC4KU291dGhlcm4gVmVjdGlzLCB3aGljaCBvcGVyYXRlcyBidXNlcyBvbiB0aGUgSXNsZSBvZiBXaWdodCwgcmVjZWl2ZWQgYSBudW1iZXIgb2YgY29tcGxhaW50cyBhYm91dCB0aGUgYmVoYXZpb3VyIG9mIHlvdW5nIHN0dWRlbnRzIHdobyBzdGF5IHdpdGggZmFtaWxpZXMgaW4gdGhlIGFyZWEgZHVyaW5nIHRoZSBzdW1tZXIgbW9udGhzLgpPcGVyYXRpb25zIG1hbmFnZXIgTWFyY2ggTW9yZ2FuIEh1d3Mgc2FpZCBoZSB3b3VsZCBiZSBjb250YWN0aW5nIHRoZSBsYW5ndWFnZSBzY2hvb2xzIG9uIHRoZSBpc2xhbmQsIGFza2luZyB0aGVtIHRvIHBhc3Mgb24gdGlwcyBvbiB0aGUgY29ycmVjdCB3YXkgdG8gcXVldWUgdG8gdGhlaXIgc3R1ZGVudHMuIMKpIENvcHlyaWdodCBQcmVzcyBBc3NvY2lhdGlvbiBMdGQgMjAwNywgQWxsIFJpZ2h0cyBSZXNlcnZlZC4K
[(UXVldWUgdGlwcyBmb3IgZm9yZWlnbiBzdHVkZW50cwpGb3JlaWduIHN0dWRlbnRzIHZpc2l0aW5nIHRoZSBVSyBhcmUgdG8gYmUgZWR1Y2F0ZWQgaW4gdGhlIGV0aXF1ZXR0ZSBvZiBxdWV1ZWluZyBmb3IgYnVzZXMgYWZ0ZXIgbG9jYWwgdXNlcnMgY29tcGxhaW5lZCBhYm91dCB0aGVtIHB1c2hpbmcgcGFzdC4KU291dGhlcm4gVmVjdGlzLCB3aGljaCBvcGVyYXRlcyBidXNlcyBvbiB0aGUgSXNsZSBvZiBXaWdodCwgcmVjZWl2ZWQgYSBudW1iZXIgb2YgY29tcGxhaW50cyBhYm91dCB0aGUgYmVoYXZpb3VyIG9mIHlvdW5nIHN0dWRlbnRzIHdobyBzdGF5IHdpdGggZmFtaWxpZXMgaW4gdGhlIGFyZWEgZHVyaW5nIHRoZSBzdW1tZXIgbW9udGhzLgpPcGVyYXRpb25zIG1hbmFnZXIgTWFyY2ggTW9yZ2FuIEh1d3Mgc2FpZCBoZSB3b3VsZCBiZSBjb250YWN0aW5nIHRoZSBsYW5ndWFnZSBzY2hvb2xzIG9uIHRoZSBpc2xhbmQsIGFza2luZyB0aGVtIHRvIHBhc3Mgb24gdGlwcyBvbiB0aGUgY29ycmVjdCB3YXkgdG8gcXVldWUgdG8gdGhlaXIgc3R1ZGVudHMuIMKpIENvcHlyaWdodCBQcmVzcyBBc3NvY2lhdGlvbiBMdGQgMjAwNywgQWxsIFJpZ2h0cyBSZXNlcnZlZC4K, 'ORG')]
TXVzaGFycmFmIHdpbnMgZWxlY3Rpb24gY291cnQgZmlnaHQKUGFraXN0YW4ncyBTdXByZW1lIENvdXJ0IGhhcyBkaXNtaXNzZWQgbGVnYWwgY2hhbGxlbmdlcyB0byBQcmVzaWRlbnQgUGVydmV6IE11c2hhcnJhZidzIGJpZCBmb3IgYSBuZXcgZml2ZS15ZWFyIHRlcm0uClRoZSA2LTMgZGVjaXNpb24gaW4gZmF2b3VyIG9mIHRoZSBtaWxpdGFyeSBsZWFkZXIgYWxsb3dzIGhpbSB0byBjb250ZXN0IHRoZSBlbGVjdGlvbiBvbiBPY3RvYmVyIDYgd2hpbGUgcmVtYWluaW5nIGFybXkgY2hpZWYgYW5kIHJlbW92ZXMgdGhlIG1haW4gb2JzdGFjbGUgdG8gaGlzIHN0YXlpbmcgaW4gb2ZmaWNlLgpUaGUgZ292ZXJubWVudCBoYXMgaW5zaXN0ZWQgYWxsIGFsb25nIHRoYXQgUHJlc2lkZW50IE11c2hhcnJhZiwgd2hvIHRvb2sgcG93ZXIgaW4gYSAxOTk5IGNvdXAsIGlzIGEgbGVnYWwgY2FuZGlkYXRlLgpDcml0aWNzIGNsYWltZWQgaGUgY291bGQgbm90IHJ1biBiZWNhdXNlIGhlIGhhcyByZXRhaW5lZCBoaXMgcG9zaXRpb24gaW4gY2hhcmdlIG9mIHRoZSBhcm15LgpXaXRoIGhpcyBwb3B1bGFyaXR5IGFuZCBhdXRob3JpdHkgZXJvZGluZywgdGhlIGdlbmVyYWwgaGFzIHNhaWQgaGUgd291bGQgcmVzaWduIHRoZSBtaWxpdGFyeSByb2xlIGlmIGhlIHdpbnMgYSBuZXcgcHJlc2lkZW50aWFsIHRlcm0uCkhlIGhhcyBmYWNlZCBncm93aW5nIHBvbGl0aWNhbCBvcHBvc2l0aW9uIHNpbmNlIGhpcyBmYWlsZWQgYXR0ZW1wdCB0byBvdXN0IFBha2lzdGFuJ3MgdG9wIGp1ZGdlIGluIE1hcmNoIGFuZCBpcyBzdHJ1Z2dsaW5nIHRvIGNvbnRhaW4gZ3Jvd2luZyBJc2xhbWljIG1pbGl0YW5jeS4KVGhlIHJ1bGluZyB3aWxsIGJpdHRlcmx5IGRpc2FwcG9pbnQgYWN0aXZpc3RzIGZyb20gdGhlIG9wcG9zaXRpb24gYW5kIHRoZSBsZWdhbCBmcmF0ZXJuaXR5IHdobyBzYXcgaXQgYXMgYSB0ZXN0IG9mIHdoZXRoZXIgdGhlIG1pbGl0YXJ5IGNvdWxkIGJlIGRpdm9yY2VkIGZyb20gcG9saXRpY3MuCkZhcmlkIFBpcmFjaGEsIGEgbGF3bWFrZXIgZnJvbSBQYWtpc3RhbidzIGJpZ2dlc3QgcmVsaWdpb3VzIHBhcnR5IEphbWFhdC1lLUlzbGFtaSwgd2hpY2ggaGFkIGZpbGVkIG9uZSBvZiB0aGUgc2V2ZXJhbCBwZXRpdGlvbnMgY2hhbGxlbmdpbmcgTXVzaGFycmFmJ3MgZWxpZ2liaWxpdHkgdG8gcnVuLCBzYWlkIGhlIHJlZnVzZWQgdG8gYWNjZXB0IHRoZSBydWxpbmcuCiJUaGUganVkZ2VzIGhhdmUgbm90IGZ1bGZpbGxlZCB0aGVpciBjb25zdGl0dXRpb25hbCBvYmxpZ2F0aW9uLCIgUGlyYWNoYSBzYWlkLgpOb3cgb3VyIGZpZ2h0IGFnYWluc3QgZGljdGF0b3JzaGlwIHdpbGwgYmUgb24gdGhlIHN0cmVldHMgLi4uClRoaXMgZGVjaXNpb24gZG9lcyBub3QgcmVmbGVjdCB0aGUgc2VudGltZW50cyBvZiB0aGUgcGVvcGxlLCBhbmQgaXQgd2lsbCBub3QgYmUgYWNjZXB0ZWQuIiDCqSBDb3B5cmlnaHQgUHJlc3MgQXNzb2NpYXRpb24gTHRkIDIwMDcsIEFsbCBSaWdodHMgUmVzZXJ2ZWQuCg==
[]
QSBiZWxhdGVkIHdlZGRpbmcgZ2lmdApBIGNvdXBsZSB3aG8gd2VyZSB1bmFibGUgdG8gYWZmb3JkIHRoZWlyIHdlZGRpbmcgYWxidW0gd2hlbiB0aGV5IG1hcnJpZWQgYXMgdGVlbmFnZXJzIDI3IHllYXJzIGFnbyBoYXZlIGZpbmFsbHkgYmVlbiBwcmVzZW50ZWQgd2l0aCBpdCBhZnRlciB0aGUgcGhvdG9ncmFwaGVyIHRyYWNrZWQgdGhlbSBkb3duLgpKaW0gV2FnbmVyLCB3aG8gaXMgbm93IDgwLCBmb3VuZCBpdCB3aGlsZSBjbGVhbmluZyBvdXQgaGlzIGF0dGljLCB0aGVuIGxvY2F0ZWQgS2FyZW4gYW5kIE1hcmsgQ2xpbmUgbGFzdCB3ZWVrIGluIE9oaW8uCk1ycyBDbGluZSBzYWlkIHNoZSB3YXMgMTggYXQgdGhlIHRpbWUsIGFuZCBmZWx0IHNpY2sgYmVjYXVzZSBzaGUgYW5kIGhlciBodXNiYW5kLCB3aG8gd2FzIDE5LCBjb3VsZCBub3QgYWZmb3JkIHRoZSAxNTAgZG9sbGFycyBmb3IgdGhlIGFsYnVtLgpJbnN0ZWFkLCBhbGwgdGhleSBoYWQgd2FzIGEgc2luZ2xlIHBob3RvIHRoYXQgc29tZW9uZSBlbHNlIHRvb2sgb2YgaGVyIHdhbGtpbmcgZG93biB0aGUgYWlzbGUuIMKpIENvcHlyaWdodCBQcmVzcyBBc3NvY2lhdGlvbiBMdGQgMjAwNywgQWxsIFJpZ2h0cyBSZXNlcnZlZC4K
[(QSBiZWxhdGVkIHdlZGRpbmcgZ2lmdApBIGNvdXBsZSB3aG8gd2VyZSB1bmFibGUgdG8gYWZmb3JkIHRoZWlyIHdlZGRpbmcgYWxidW0gd2hlbiB0aGV5IG1hcnJpZWQgYXMgdGVlbmFnZXJzIDI3IHllYXJzIGFnbyBoYXZlIGZpbmFsbHkgYmVlbiBwcmVzZW50ZWQgd2l0aCBpdCBhZnRlciB0aGUgcGhvdG9ncmFwaGVyIHRyYWNrZWQgdGhlbSBkb3duLgpKaW0gV2FnbmVyLCB3aG8gaXMgbm93IDgwLCBmb3VuZCBpdCB3aGlsZSBjbGVhbmluZyBvdXQgaGlzIGF0dGljLCB0aGVuIGxvY2F0ZWQgS2FyZW4gYW5kIE1hcmsgQ2xpbmUgbGFzdCB3ZWVrIGluIE9oaW8uCk1ycyBDbGluZSBzYWlkIHNoZSB3YXMgMTggYXQgdGhlIHRpbWUsIGFuZCBmZWx0IHNpY2sgYmVjYXVzZSBzaGUgYW5kIGhlciBodXNiYW5kLCB3aG8gd2FzIDE5LCBjb3VsZCBub3QgYWZmb3JkIHRoZSAxNTAgZG9sbGFycyBmb3IgdGhlIGFsYnVtLgpJbnN0ZWFkLCBhbGwgdGhleSBoYWQgd2FzIGEgc2luZ2xlIHBob3RvIHRoYXQgc29tZW9uZSBlbHNlIHRvb2sgb2YgaGVyIHdhbGtpbmcgZG93biB0aGUgYWlzbGUuIMKpIENvcHlyaWdodCBQcmVzcyBBc3NvY2lhdGlvbiBMdGQgMjAwNywgQWxsIFJpZ2h0cyBSZXNlcnZlZC4K, 'ORG')]
VS5TLiBib21iZXIgbWlzdGFrZW5seSBsb2FkZWQgd2l0aCBudWtlcwo1IChVUEkpIC0tIEZpdmUgY3J1aXNlIG1pc3NpbGVzIGFybWVkIHdpdGggbnVjbGVhciB3YXJoZWFkcyB3ZXJlIG1pc3Rha2VubHkgbG9hZGVkIG9udG8gYSBCLTUyIGJvbWJlciBhdCBhIE5vcnRoIERha290YSBtaWxpdGFyeSBiYXNlIGxhc3QgbW9udGgsIHNvdXJjZXMgc2FpZC4KVGhyZWUgbWlsaXRhcnkgb2ZmaWNlcnMsIHdobyBhc2tlZCBmb3IgYW5vbnltaXR5LCBhbGxlZ2VkIHRoYXQgZml2ZSBBZHZhbmNlZCBDcnVpc2UgTWlzc2lsZXMgd2l0aCBudWNsZWFyIHdhcmhlYWRzIHdlcmUgYWNjaWRlbnRhbGx5IHRyYW5zcG9ydGVkIGZyb20gTm9ydGggRGFrb3RhJ3MgTWlub3QgQWlyIEZvcmNlIEJhc2UgdG8gYSBMb3Vpc2lhbmEgbWlsaXRhcnkgZmFjaWxpdHksIHRoZSBNaWxpdGFyeSBUaW1lcyBzYWlkIFdlZG5lc2RheS4KVGhlIFUuUy4gbWlsaXRhcnkgaGFkIGJlZW4gdHJhbnNwb3J0aW5nIHRoZSBtaXNzaWxlcyBBdWcuIDMwIHRvIEJhcmtzZGFsZSBBaXIgRm9yY2UgQmFzZSwgd2hlcmUgdGhleSB3ZXJlIHRvIGJlIGRlY29tbWlzc2lvbmVkLCB0aGUgb2ZmaWNlcnMgc2FpZC4KVGhlIG1pbGl0YXJ5IHNvdXJjZXMgc2FpZCBpdCB3YXMgbm90IHVudGlsIHRoZSBhcm1lZCBtaXNzaWxlcyBhcnJpdmVkIGF0IHRoZSBMb3Vpc2lhbmEgYmFzZSB0aGF0IHRoZSBlcnJvciB3YXMgbm90aWNlZC4KQWx0aG91Z2ggdGhlIG51Y2xlYXIgd2FyaGVhZHMgd2VyZSBhcHBhcmVudGx5IHVuYWNjb3VudGVkIGZvciBkdXJpbmcgYSBmbGlnaHQgdGhhdCBsYXN0ZWQgbW9yZSB0aGFuIHRocmVlIGhvdXJzLCBBaXIgRm9yY2Ugc3Bva2VzbWFuIEx0LiBDb2wuIEVkIFRob21hcyBzYWlkIFUuUy4gY2l0aXplbnMgd2VyZSBuZXZlciBpbiBhbnkgcmVhbCBkYW5nZXIuCiJBaXIgRm9yY2Ugc3RhbmRhcmRzIGFyZSB2ZXJ5IGV4YWN0aW5nIHdoZW4gaXQgY29tZXMgdG8gbXVuaXRpb25zIGhhbmRsaW5nLCIgaGUgdG9sZCB0aGUgTWlsaXRhcnkgVGltZXMuClRoZSB3ZWFwb25zIHdlcmUgYWx3YXlzIGluIG91ciBjdXN0b2R5IGFuZCB0aGVyZSB3YXMgbmV2ZXIgYSBkYW5nZXIgdG8gdGhlIEFtZXJpY2FuIHB1YmxpYy4K
[(VS5TLiBib21iZXIgbWlzdGFrZW5seSBsb2FkZWQgd2l0aCBudWtlcwo1IChVUEkpIC0tIEZpdmUgY3J1aXNlIG1pc3NpbGVzIGFybWVkIHdpdGggbnVjbGVhciB3YXJoZWFkcyB3ZXJlIG1pc3Rha2VubHkgbG9hZGVkIG9udG8gYSBCLTUyIGJvbWJlciBhdCBhIE5vcnRoIERha290YSBtaWxpdGFyeSBiYXNlIGxhc3QgbW9udGgsIHNvdXJjZXMgc2FpZC4KVGhyZWUgbWlsaXRhcnkgb2ZmaWNlcnMsIHdobyBhc2tlZCBmb3IgYW5vbnltaXR5LCBhbGxlZ2VkIHRoYXQgZml2ZSBBZHZhbmNlZCBDcnVpc2UgTWlzc2lsZXMgd2l0aCBudWNsZWFyIHdhcmhlYWRzIHdlcmUgYWNjaWRlbnRhbGx5IHRyYW5zcG9ydGVkIGZyb20gTm9ydGggRGFrb3RhJ3MgTWlub3QgQWlyIEZvcmNlIEJhc2UgdG8gYSBMb3Vpc2lhbmEgbWlsaXRhcnkgZmFjaWxpdHksIHRoZSBNaWxpdGFyeSBUaW1lcyBzYWlkIFdlZG5lc2RheS4KVGhlIFUuUy4gbWlsaXRhcnkgaGFkIGJlZW4gdHJhbnNwb3J0aW5nIHRoZSBtaXNzaWxlcyBBdWcuIDMwIHRvIEJhcmtzZGFsZSBBaXIgRm9yY2UgQmFzZSwgd2hlcmUgdGhleSB3ZXJlIHRvIGJlIGRlY29tbWlzc2lvbmVkLCB0aGUgb2ZmaWNlcnMgc2FpZC4KVGhlIG1pbGl0YXJ5IHNvdXJjZXMgc2FpZCBpdCB3YXMgbm90IHVudGlsIHRoZSBhcm1lZCBtaXNzaWxlcyBhcnJpdmVkIGF0IHRoZSBMb3Vpc2lhbmEgYmFzZSB0aGF0IHRoZSBlcnJvciB3YXMgbm90aWNlZC4KQWx0aG91Z2ggdGhlIG51Y2xlYXIgd2FyaGVhZHMgd2VyZSBhcHBhcmVudGx5IHVuYWNjb3VudGVkIGZvciBkdXJpbmcgYSBmbGlnaHQgdGhhdCBsYXN0ZWQgbW9yZSB0aGFuIHRocmVlIGhvdXJzLCBBaXIgRm9yY2Ugc3Bva2VzbWFuIEx0LiBDb2wuIEVkIFRob21hcyBzYWlkIFUuUy4gY2l0aXplbnMgd2VyZSBuZXZlciBpbiBhbnkgcmVhbCBkYW5nZXIuCiJBaXIgRm9yY2Ugc3RhbmRhcmRzIGFyZSB2ZXJ5IGV4YWN0aW5nIHdoZW4gaXQgY29tZXMgdG8gbXVuaXRpb25zIGhhbmRsaW5nLCIgaGUgdG9sZCB0aGUgTWlsaXRhcnkgVGltZXMuClRoZSB3ZWFwb25zIHdlcmUgYWx3YXlzIGluIG91ciBjdXN0b2R5IGFuZCB0aGVyZSB3YXMgbmV2ZXIgYSBkYW5nZXIgdG8gdGhlIEFtZXJpY2FuIHB1YmxpYy4K, 'ORG')]
RmlqaSBpbXBvc2VzIGVtZXJnZW5jeSByZWd1bGF0aW9ucwpTVVZBLCBGaWppLCBTZXB0Lgo3IChVUEkpIC0tIFRoZSBpbnRlcmltIGdvdmVybm1lbnQgb2YgRmlqaSBpbXBvc2VkIGVtZXJnZW5jeSByZWd1bGF0aW9ucyBUaHVyc2RheSBhaW1lZCByZWR1Y2luZyB0aGUgaW5mbHVlbmNlIG9mIGZvcm1lciBQcmltZSBNaW5pc3RlciBMYWlzZW5pYSBRYXJhc2UgYW5kIGhpcyBwYXJ0eS4KSW50ZXJpbSBBdHRvcm5leS1HZW5lcmFsIEFpeWF6IFNheWVkLUtoYWl5dW0gc2FpZCByZWNlbnQgY29tbWVudHMgYnkgUWFyYXNlIGFuZCBvdGhlciBsZWFkZXJzIG9mIGhpcyBTb3Fvc29xbyBEdWF2YXRhIG5pIExld2VuaXZhbnVhIFBhcnR5IGhhdmUgdGVuZGVkIHRvIGJlIGRlc3RhYmlsaXppbmcsIFRoZSBGaWppIFRpbWVzIHJlcG9ydGVkLgpUaGUgZW1lcmdlbmN5IHJlZ3VsYXRpb25zIHdpbGwgYmUgaW4gZm9yY2UgZm9yIGF0IGxlYXN0IDMwIGRheXMuClRoZXkgaW5jbHVkZSBhIGJhbiBvbiBwdWJsaWMgbWVldGluZ3Mgd2l0aG91dCBhdXRob3JpemF0aW9uIG9mIHRoZSBwb2xpY2UgY29tbWlzc2lvbmVyOyBpbnRpbWlkYXRpb247IGFjdHMgb3IgdGhyZWF0cyBvZiB2aW9sZW5jZSBvciBhbnkgb3RoZXIgZGlzb3JkZXJseSBiZWhhdmlvcjsgYW5kIGFueSBvdGhlciBhY3Rpb24gdGhhdCBtaWdodCBlbmRhbmdlciB0aGUgcHVibGljLgpBdXN0cmFsaWEgYW5kIE5ldyBaZWFsYW5kIG9iamVjdGVkIHRvIHRoZSBlbWVyZ2VuY3kgcmVndWxhdGlvbnMuCkJvdGggY291bnRyaWVzIGlzc3VlZCB0cmF2ZWwgYWR2aXNvcmllcyB3YXJuaW5nIHRoZWlyIG5hdGlvbmFscyB0byBiZSBjb25zY2lvdXMgb2YgdGhlaXIgc2FmZXR5IGluIEZpamkuCg==
[]
TUxCOiBGbG9yaWRhIDYsIFBoaWxhZGVscGhpYSAzCjcgKFVQSSkgLS0gTWlndWVsIE9saXZvIGhpdCBhIHNvbG8gaG9tZSBydW4gYW5kIGFuIFJCSSBzaW5nbGUgRnJpZGF5IG5pZ2h0IGFzIHRoZSBGbG9yaWRhIE1hcmxpbnMgYmVhdCB0aGUgUGhpbGFkZWxwaGlhIFBoaWxsaWVzLCA2LTMuCk9saXZvJ3MgdHdvIFJCSSBrZXB0IHRoZSBNYXJsaW5zIGFoZWFkIGxhdGUgaW4gdGhlIGNvbnRlc3QuClRoZSBob21lciB3YXMgaGlzIDE1dGggdGhpcyBzZWFzb24uCk9uZSBydW4gc2NvcmVkIG9uIGEgZmllbGRlcidzIGNob2ljZSBpbiB0aGUgc2Vjb25kLCB3aGVuIHR3byBydW5zIGNhbWUgaW4gb24gUnlhbiBIb3dhcmQncyB0aHJvd2luZyBlcnJvci4KT2xpdm8gd2FzIG9uZSBvZiB0aHJlZSBwbGF5ZXJzIHdpdGggdHdvIGhpdHMgZm9yIHRoZSBNYXJsaW5zLCB3aG8gYnJva2UgYSB0aHJlZS1nYW1lIGxvc2luZyBzdHJlYWsuCldpbm5lciBCeXVuZy1IeXVuIEtpbSAoOS02KSB5aWVsZGVkIHRocmVlIGVhcm5lZCBydW5zIGFuZCBzZXZlbiBoaXRzIGluIHNpeCBpbm5pbmdzLgpDbG9zZXIgS2V2aW4gR3JlZ2cgZWFybmVkIGhpcyAyOXRoIHNhdmUuClBoaWxhZGVscGhpYSBzY29yZWQgYWxsIGl0cyBydW5zIGluIHRoZSB0aGlyZCBvbiBQYXQgQnVycmVsbCdzIDI2dGggaG9tZXIgb2YgdGhlIHNlYXNvbi4KTm8gcGxheWVyIGhhZCBtb3JlIHRoYW4gb25lIGhpdCBmb3IgdGhlIFBoaWxsaWVzLCB3aG8gaGF2ZSBsb3N0IGZvdXIgb2YgZml2ZS4KTG9zaW5nIHBpdGNoZXIgSi5ELiBEdXJiaW4gKDYtNSkgc3VycmVuZGVyZWQgZml2ZSBydW5zIC0tIHR3byBlYXJuZWQgLS0gYW5kIGZpdmUgaGl0cyBpbiA0IDEvMyBpbm5pbmdzLgo=
[(TUxCOiBGbG9yaWRhIDYsIFBoaWxhZGVscGhpYSAzCjcgKFVQSSkgLS0gTWlndWVsIE9saXZvIGhpdCBhIHNvbG8gaG9tZSBydW4gYW5kIGFuIFJCSSBzaW5nbGUgRnJpZGF5IG5pZ2h0IGFzIHRoZSBGbG9yaWRhIE1hcmxpbnMgYmVhdCB0aGUgUGhpbGFkZWxwaGlhIFBoaWxsaWVzLCA2LTMuCk9saXZvJ3MgdHdvIFJCSSBrZXB0IHRoZSBNYXJsaW5zIGFoZWFkIGxhdGUgaW4gdGhlIGNvbnRlc3QuClRoZSBob21lciB3YXMgaGlzIDE1dGggdGhpcyBzZWFzb24uCk9uZSBydW4gc2NvcmVkIG9uIGEgZmllbGRlcidzIGNob2ljZSBpbiB0aGUgc2Vjb25kLCB3aGVuIHR3byBydW5zIGNhbWUgaW4gb24gUnlhbiBIb3dhcmQncyB0aHJvd2luZyBlcnJvci4KT2xpdm8gd2FzIG9uZSBvZiB0aHJlZSBwbGF5ZXJzIHdpdGggdHdvIGhpdHMgZm9yIHRoZSBNYXJsaW5zLCB3aG8gYnJva2UgYSB0aHJlZS1nYW1lIGxvc2luZyBzdHJlYWsuCldpbm5lciBCeXVuZy1IeXVuIEtpbSAoOS02KSB5aWVsZGVkIHRocmVlIGVhcm5lZCBydW5zIGFuZCBzZXZlbiBoaXRzIGluIHNpeCBpbm5pbmdzLgpDbG9zZXIgS2V2aW4gR3JlZ2cgZWFybmVkIGhpcyAyOXRoIHNhdmUuClBoaWxhZGVscGhpYSBzY29yZWQgYWxsIGl0cyBydW5zIGluIHRoZSB0aGlyZCBvbiBQYXQgQnVycmVsbCdzIDI2dGggaG9tZXIgb2YgdGhlIHNlYXNvbi4KTm8gcGxheWVyIGhhZCBtb3JlIHRoYW4gb25lIGhpdCBmb3IgdGhlIFBoaWxsaWVzLCB3aG8gaGF2ZSBsb3N0IGZvdXIgb2YgZml2ZS4KTG9zaW5nIHBpdGNoZXIgSi5ELiBEdXJiaW4gKDYtNSkgc3VycmVuZGVyZWQgZml2ZSBydW5zIC0tIHR3byBlYXJuZWQgLS0gYW5kIGZpdmUgaGl0cyBpbiA0IDEvMyBpbm5pbmdzLgo=, 'GPE')]
UWF0YXIgQW5kIExpdGVyYWN5IERheSAvMi9kb2hhCkguRS4gU2hlaWtoYSBBbCBNYWhtb3VkIFNhaWQgUWF0YXIgSGFzIE1hZGUgR3JlYXQgUHJvZ3Jlc3MgSW4gRGV2ZWxvcGluZyBFZHVjYXRpb24gQW5kIE1ha2luZyBJdCBBdmFpbGFibGUgQW5kIEZyZWUgRm9yIEFsbCBXaGVyZSBUaGUgSWxsaXRlcmFjeSBQZXJjZW50YWdlIEhhcyBDb21lIERvd24gVG8gOSBQZXIgQ2VudCBUaGFua3MgVG8gVGhlIEdyZWF0IEVmZm9ydHMgQW5kIFN1cHBvcnQgRm9yIEVkdWNhdGlvbiBVbmRlciBUaGUgU3BvbnNvcnNoaXAgT2YgVGhlIEVtaXIgSGggU2hlaWtoIEhhbWFkIEJpbiBLaGFsaWZhIEFsIFRoYW5pIC4KSC5FLiBUaGUgRWR1YXRpb24gTWluaXN0ZXIgSGFzIFdpc2hlZCBTdWNjZXNzIEZvciBBbGwgRmFpdGhmdWwgRW5kZWF2b3VycyBEb25lIEluIFRoaXMgUmVzcGVjdCBVbmRlciBUaGUgV2lzZSBMZWFkZXJzaGlwIEluIFFhdGFyLiAocW5hKQo=
[]
TUxCOiBXYXNoaW5ndG9uIDcsIEF0bGFudGEgNAo5IChVUEkpIC0tIFJ5YW4gQ2h1cmNoIGhpdCBhIGtleSB0aHJlZS1ydW4gaG9tZXIgU3VuZGF5IGFmdGVybm9vbiwgYXMgdGhlIFdhc2hpbmd0b24gTmF0aW9uYWxzIGJlYXQgdGhlIEF0bGFudGEgQnJhdmVzLCA3LTQuCkNodXJjaCdzIDEydGggaG9tZXIgdGhpcyBzZWFzb24gcHV0IFdhc2hpbmd0b24gYWhlYWQsIDQtMywgaW4gdGhlIHNpeHRoLCBhIGxlYWQgdGhlIE5hdGlvbmFscyBoZWxkIHVudGlsIHRoZSBlbmQuCldhc2hpbmd0b24ncyBEJ0FuZ2VsbyBKaW1pbmV6IGhhZCB0aHJlZSBoaXRzIGFuZCB0aHJlZSBSQkkuClJ5YW4gWmltbWVybWFuIGhpdCBhIHNvbG8gaG9tZXIgaW4gdGhlIG5pbnRoLgpEbWl0cmkgWW91bmcgaGFkIHR3byBoaXRzLCBhbmQgZWlnaHQgcGxheWVycyBoYWQgb25lIGhpdCBlYWNoLCBhcyB0aGUgTmF0aW9uYWxzIGF2ZXJ0ZWQgYSB0aHJlZS1nYW1lIHN3ZWVwLgpUaGUgd2lubmVyIHdhcyBzdGFydGVyIEphc29uIEJlcmdtYW5uICg0LTUpLgpDbG9zZXIgQ2hhZCBDb3JkZXJvIGVhcm5lZCBoaXMgMzJuZCBzYXZlLgpBdGxhbnRhJ3MgQ2hpcHBlciBKb25lcyBoaXQgYSB0d28tcnVuIGhvbWVyIGluIHRoZSBmaXJzdC4KTWFyayBUZWl4ZWlyYSBoaXQgYSBzb2xvIGhvbWVyIGFuZCBhbiBSQkkgZG91YmxlIC0tIGFuZCB3YXMgdGhlIG9ubHkgQXRsYW50YSBwbGF5ZXIgd2l0aCBtb3JlIHRoYW4gb25lIGhpdCAtLSBhcyB0aGUgQnJhdmVzJyBjaGFuY2VzIG9mIG1ha2luZyB0aGUgTkwgcGxheW9mZnMgZGltbWVkLgpUaGUgbG9zaW5nIHBpdGNoZXIgd2FzIHN0YXJ0ZXIgTGFuY2UgQ29ybWllciAoMi01KS4K
[(TUxCOiBXYXNoaW5ndG9uIDcsIEF0bGFudGEgNAo5IChVUEkpIC0tIFJ5YW4gQ2h1cmNoIGhpdCBhIGtleSB0aHJlZS1ydW4gaG9tZXIgU3VuZGF5IGFmdGVybm9vbiwgYXMgdGhlIFdhc2hpbmd0b24gTmF0aW9uYWxzIGJlYXQgdGhlIEF0bGFudGEgQnJhdmVzLCA3LTQuCkNodXJjaCdzIDEydGggaG9tZXIgdGhpcyBzZWFzb24gcHV0IFdhc2hpbmd0b24gYWhlYWQsIDQtMywgaW4gdGhlIHNpeHRoLCBhIGxlYWQgdGhlIE5hdGlvbmFscyBoZWxkIHVudGlsIHRoZSBlbmQuCldhc2hpbmd0b24ncyBEJ0FuZ2VsbyBKaW1pbmV6IGhhZCB0aHJlZSBoaXRzIGFuZCB0aHJlZSBSQkkuClJ5YW4gWmltbWVybWFuIGhpdCBhIHNvbG8gaG9tZXIgaW4gdGhlIG5pbnRoLgpEbWl0cmkgWW91bmcgaGFkIHR3byBoaXRzLCBhbmQgZWlnaHQgcGxheWVycyBoYWQgb25lIGhpdCBlYWNoLCBhcyB0aGUgTmF0aW9uYWxzIGF2ZXJ0ZWQgYSB0aHJlZS1nYW1lIHN3ZWVwLgpUaGUgd2lubmVyIHdhcyBzdGFydGVyIEphc29uIEJlcmdtYW5uICg0LTUpLgpDbG9zZXIgQ2hhZCBDb3JkZXJvIGVhcm5lZCBoaXMgMzJuZCBzYXZlLgpBdGxhbnRhJ3MgQ2hpcHBlciBKb25lcyBoaXQgYSB0d28tcnVuIGhvbWVyIGluIHRoZSBmaXJzdC4KTWFyayBUZWl4ZWlyYSBoaXQgYSBzb2xvIGhvbWVyIGFuZCBhbiBSQkkgZG91YmxlIC0tIGFuZCB3YXMgdGhlIG9ubHkgQXRsYW50YSBwbGF5ZXIgd2l0aCBtb3JlIHRoYW4gb25lIGhpdCAtLSBhcyB0aGUgQnJhdmVzJyBjaGFuY2VzIG9mIG1ha2luZyB0aGUgTkwgcGxheW9mZnMgZGltbWVkLgpUaGUgbG9zaW5nIHBpdGNoZXIgd2FzIHN0YXJ0ZXIgTGFuY2UgQ29ybWllciAoMi01KS4K, 'ORG')]
QXBwZWFscyBjb3VydCBkaXNtaXNzZXMgTGEuIGFzc2F1bHQgY2FzZQoxNCAoVVBJKSAtLSBBIExvdWlzaWFuYSBhcHBlYWxzIGNvdXJ0IHJ1bGVkIEZyaWRheSB0aGF0IGEgYmxhY2sgdGVlbmFnZXIgd2FzIHdyb25nbHkgdHJpZWQgYXMgYW4gYWR1bHQgYW5kIGRpc21pc3NlZCBoaXMgY29udmljdGlvbiBpbiBhIHJhY2lhbGx5IGNoYXJnZWQgYmF0dGVyeSBjYXNlLgpNeWNoYWwgQmVsbCwgMTcsIGZhY2VkIGEgbG9uZyBwcmlzb24gdGVybSBmb3IgYmVhdGluZyBhIHdoaXRlIHN0dWRlbnQgYXQgSmVuYSBIaWdoIFNjaG9vbC4KRGVtb25zdHJhdGlvbnMgd2VyZSBwbGFubmVkIGZvciBoaXMgc2VudGVuY2luZyBuZXh0IHdlZWsuCkRpc3RyaWN0IEF0dG9ybmV5IFJlZWQgV2FsdGVycyBwbGFucyB0byBhcHBlYWwgdGhlIHJldmVyc2FsIHRvIHRoZSBzdGF0ZSBTdXByZW1lIENvdXJ0LCBUaGUgQ2hpY2FnbyBUcmlidW5lIHJlcG9ydGVkLgpUaGUgdHJvdWJsZSBpbiBKZW5hLCBhIHNtYWxsIHRvd24gaW4gbm9ydGgtY2VudHJhbCBMb3Vpc2lhbmEsIGJlZ2FuIHdoZW4gbm9vc2VzIHdlcmUgaHVuZyBmcm9tIGEgdHJlZSB0aGF0IGhhZCB0cmFkaXRpb25hbGx5IGJlZW4gYSBnYXRoZXJpbmcgcGxhY2UgZm9yIHdoaXRlIHN0dWRlbnRzLgpFdmVudHVhbGx5LCBzaXggYmxhY2sgc3R1ZGVudHMsIHdobyBoYXZlIGJlY29tZSBrbm93biBhcyB0aGUgSmVuYSA2LCB3ZXJlIGNoYXJnZWQgd2l0aCBhdHRlbXB0ZWQgbXVyZGVyIGFmdGVyIGFuIGF0dGFjayBvbiBhIHdoaXRlIHN0dWRlbnQuClNpbmNlIEJlbGwncyBjb252aWN0aW9uLCB0aGUgY2FzZSBoYXMgYXR0cmFjdGVkIG5hdGlvbmFsIGF0dGVudGlvbi4KT3JnYW5pemVycyBzYWlkIHRoZXkgaGFkIGV4cGVjdGVkIDIwLDAwMCB0byAzMCwwMDAgcGVvcGxlIHRvIHNob3cgdXAgZm9yIEJlbGwncyBzZW50ZW5jaW5nLgpUaGUgUmV2LiBKZXNzZSBKYWNrc29uIHNhaWQgRnJpZGF5IHRoYXQgdGhlIGNhc2UgImlzIG5vdCBvdmVyIHlldC4iCiJTbyBsb25nIGFzIHRoZXNlIGtpZHMgd2VyZSBpbiB0aGUgZGFyayB3aXRob3V0IHJlcHJlc2VudGF0aW9uLCB0aGV5IHdlcmUgYWxsIGdvaW5nIHVwIHRoZSByaXZlciwiIGhlIHNhaWQuCkRlZmVuc2UgbGF3eWVycyBwbGFuIHRvIGFzayB0aGUgdHJpYWwganVkZ2UgTW9uZGF5IHRvIHJlZHVjZSBCZWxsJ3MgYmFpbCwgZnJlZWluZyBoaW0gZnJvbSBqYWlsLgo=
[]
TUxCOiBPYWtsYW5kIDExLCBUZXhhcyA5CjE1IChVUEkpIC0tIE5pY2sgU3dpc2hlciBmaW5hbGx5IHB1dCBPYWtsYW5kIGluIGZyb250IGZvciBnb29kIHdpdGggYSBzaXh0aC1pbm5pbmcgaG9tZXIgRnJpZGF5IG5pZ2h0IGFzIHRoZSBBdGhsZXRpY3Mgd29uIGEgd2lsZCwgMTEtOSBkZWNpc2lvbiBvdmVyIFRleGFzLgpPYWtsYW5kIGNhbWUgYmFjayBmcm9tIGEgc2l4LXJ1biBkZWZpY2l0IGFuZCBvdmVyY2FtZSBhIGZpdmUgUkJJIG5pZ2h0IGJ5IHRoZSBSYW5nZXJzJyBTYW1teSBTb3NhLgpUZXhhcyBzY29yZWQgc2l4IHRpbWVzIGluIHRoZSB0aGlyZCwgYnV0IE9ha2xhbmQgY3V0IHRoZSBkZWZpY2l0IHRvIDYtMiBpbiB0aGUgYm90dG9tIGhhbGYgb2YgdGhlIGlubmluZy4KVGhlIEF0aGxldGljcyB0aGVuIHNjb3JlZCBzZXZlbiB0aW1lcyBpbiB0aGUgZmlmdGgsIHdpdGggSmFjayBDdXN0IGRyaXZpbmcgaW4gdHdvIG9mIHRoZSBydW5zIHdpdGggYSBzaW5nbGUuClR3byBtb3JlIHJ1bnMgc2NvcmVkIGluIHRoYXQgaW5uaW5nIG9uIGEgdGhyb3dpbmcgZXJyb3IgYnkgY2F0Y2hlciBHZXJhbGQgTGFpcmQuClNvc2EsIHdobyBoYWQgYSB0d28tcnVuIHNpbmdsZSBpbiB0aGUgdGhpcmQsIGhpdCBhIHRocmVlLXJ1biBob21lciBpbiB0aGUgc2l4dGggdG8gdGllIHRoZSBnYW1lIGF0IDktOS4KQnV0IFN3aXNoZXIgcHV0IHRoZSBBJ3MgYmFjayBpbiBmcm9udCBpbiB0aGUgYm90dG9tIGhhbGYgd2l0aCBoaXMgaG9tZXIgb2ZmIEpvaG4gUmhlaW5lY2tlciAoMi0yKSwgYW5kIEt1cnQgU3V6dWtpIHNpbmdsZWQgaG9tZSBhbm90aGVyIHJ1biBsYXRlciBpbiB0aGUgaW5uaW5nLgpUaGUgd2luIHdlbnQgdG8gQW5kcmV3IEJyb3duLCB0aGUgZm91cnRoIG9mIHNpeCBPYWtsYW5kIHBpdGNoZXJzLgpIZSBzdHJ1Y2sgb3V0IHR3byBvZiB0aGUgZm91ciBtZW4gaGUgZmFjZWQuCkh1c3RvbiBTdHJlZXQgcGlja2VkIHVwIGhpcyAxNnRoIHNhdmUuCg==
[]
MTcgKFVQSSkgLS0gSGVyZSdzIGhvdyB5b3UgZ3JvdyBtYXJpanVhbmEsIG9mZmljZXIgQ0lOQ0lOTkFUSSwgU2VwdC4KMTcgKFVQSSkgLS0gV2hlbiBwb2xpY2UgYXNrZWQgYW4gT2hpbyBtYW4gYWJvdXQgdGhlIHBvdHRlZCBtYXJpanVhbmEgcGxhbnQgaW4gaGlzIGZyb250IHlhcmQsIGhlIHRvbGQgdGhlbSBob3cgdG8gZ3JvdyB0aGVpciBvd24uClRoZSBmaXJzdCBsZWFmIG9mIHRoZSBzdG9yeSB1bmZvbGRlZCB3aGVuIGEgQ2luY2lubmF0aSBwb2xpY2Ugb2ZmaWNlciBhc2tlZCBCb2JieSBTdGV2ZW5zb24gdG8gZXhwbGFpbiB0aGUgZGlzdGluY3RpdmUgcGxhbnQgaW4gaGlzIGZyb250IHlhcmQsIFdDUE8tVFYgQ2luY2lubmF0aSByZXBvcnRlZC4KQXJpei4gbWFuIGZpeGF0ZWQgb24gYmVpbmcgc3Ryb25nZXN0IENIQU5ETEVSLCBBcml6LiwgU2VwdC4KMTcgKFVQSSkgLS0gQSAyMi15ZWFyLW9sZCBBcml6b25hIG1hbiBoYXMgYmVjb21lIHNvIGVuYW1vcmVkIHdpdGggdGhlIHRpdGxlIG9mIFdvcmxkJ3MgU3Ryb25nZXN0IE1hbiBoZSBoYXMgcmVvcmllbnRlZCBoaXMgbGlmZSB0byByZWFjaCB0aGF0IGdvYWwuCkEgZm9ybWVyIGhpZ2ggc2Nob29sIGJhc2tldGJhbGwgcGxheWVyLCBLZXZpbiBOZWUgb2YgQ2hhbmRsZXIsIHNhaWQgaGUgZGVjaWRlZCB0byBzd2l0Y2ggaGlzIGZvY3VzIGFuZCBvdmVyYWxsIGxpZmVzdHlsZSB0byBiZWNvbWUgYSBwcm9mZXNzaW9uYWwgc3Ryb25nbWFuIGFmdGVyIHdpbm5pbmcgYSB0ZWVuIHN0cm9uZ21hbiBjb21wZXRpdGlvbiwgVGhlIEFyaXpvbmEgUmVwdWJsaWMgcmVwb3J0ZWQuCkJlY29taW5nIGEgc3Ryb25nbWFuIG1lYW5zIGFkanVzdGluZyBvbmUncyBsaWZlIGFjY29yZGluZ2x5LCBmcm9tIHdlaWdodGxpZnRpbmcgcmVnaW1lbiB0byBlYXRpbmcgaGFiaXRzLgpUaGUgNi1mb290LTEsIDI3NS1wb3VuZGVyIGlzIHByZXBhcmluZyBmb3IgdGhpcyB3ZWVrJ3MgYW5udWFsIFdvcmxkJ3MgU3Ryb25nZXN0IE1hbiBjb21wZXRpdGlvbi4KIlRoaW5rIGFib3V0IGl0LCIgTmVlLCB3aG8gY2FuIGxpZnQgODY1IHBvdW5kcywgdG9sZCB0aGUgUmVwdWJsaWMuCldvbWFuIHRha2VzIG9uIGdpYW50IHB5dGhvbiB0byBzYXZlIGRvZyBIT05HIEtPTkcsIFNlcHQuCjE3IChVUEkpIC0tIEEgNDEteWVhci1vbGQgd29tYW4gaW4gSG9uZyBLb25nIGhhcyBzdXJ2aXZlZCBtb3J0YWwgY29tYmF0IHdpdGggYSBnaWFudCBweXRob24gdGhhdCBhdHRhY2tlZCBvbmUgb2YgaGVyIGRvZ3MuCkNhdGhlcmluZSBMZW9uYXJkIHNhaWQgd2hlbiBzaGUgc2F3IGEgMTUtZm9vdC1sb25nIEJ1cm1lc2UgcHl0aG9uIHdyYXBwZWQgYXJvdW5kIHRoZSBkb2csIGFsbCBzaGUgY291bGQgdGhpbmsgb2Ygd2FzIGEgc2ltaWxhciBhdHRhY2sgdGhhdCBvY2N1cnJlZCBpbiAyMDA2IGludm9sdmluZyBhIGxhcmdlIGRvZyBpbiB0aGUgYXJlYSwgVGhlIFNvdXRoIENoaW5hIE1vcm5pbmcgUG9zdCByZXBvcnRlZC4KRGVzcGl0ZSB0aGUgc2l6ZSBvZiB0aGUgc25ha2UsIExlb25hcmQgc2FpZCBzaGUgYXR0YWNrZWQgaXQgdW50aWwgaGVyIGRvZywgUG9wcHksIHdhcyBhYmxlIHRvIGVzY2FwZS4KIkknbSBub3Qgc3VyZSBleGFjdGx5IHdoYXQgSSBkaWQgYnV0IEkga2lja2VkIGl0IGFuZCBJIHRyaWVkIHRvIHB1bGwgUG9wcHkgZnJlZSwiIExlb25hcmQgc2FpZC4KU29tZWhvdyBQb3BweSBtYW5hZ2VkIHRvIGdldCBhd2F5IGFuZCB0aGUgcHl0aG9uIHNsaXRoZXJlZCBhd2F5LgpMZW9uYXJkIHNhaWQgaGVyIG5hdHVyYWwgaW5zdGluY3QgaGFkIHRlbXBvcmFyaWx5IHN1cnBhc3NlZCBoZXIgYmV0dGVyIGp1ZGdtZW50LgoiSWYgSSdkIGhhZCB0aGUgY2hhbmNlIHRvIHRoaW5rIGFib3V0IGl0LCBJIHdvdWxkbid0IGhhdmUgZG9uZSB3aGF0IEkgZGlkLCIgc2hlIHNhaWQsICJidXQgSSBoZWFyIHRoZSBkb2cgaW4gZGlzdHJlc3MgYW5kIEkganVzdCB3YWRlZCBpbiB0aGVyZS4iCk4uWS4gZHJ1bW1lciBkZW5pZXMgY2F1c2luZyBob3JzZSdzIGRlYXRoIE5FVyBZT1JLLCBTZXB0LgoxNyAoVVBJKSAtLSBBIG11c2ljaWFuIHdob3NlIGRydW1taW5nIGFsbGVnZWRseSBjYXVzZWQgYSBkZWFkbHkgaG9yc2UgcmFtcGFnZSBpbiBOZXcgWW9yaydzIENlbnRyYWwgUGFyayBsYXN0IHdlZWsgaGFzIGRlbmllZCBzcG9va2luZyB0aGUgaG9yc2UuCk11c2ljaWFuIEphbWVzIFdpbGxpYW1zLCA0Nywgc2FpZCBoaXMgZHJ1bW1pbmcgZGlkIG5vdCBhbGFybSBTbW9vdGhpZSB0aGUgaG9yc2UsIHNlbmRpbmcgdGhlIGFuaW1hbCBvbiBhIGZyaWdodGVuaW5nIGRhc2ggdGhhdCBsYXRlciBjbGFpbWVkIGl0cyBsaWZlLCBUaGUgTmV3IFlvcmsgRGFpbHkgTmV3cyByZXBvcnRlZC4KIkkgZG9uJ3QgbGlrZSB0byBraWxsIGZsaWVzIG9yIHJvYWNoZXMsIiBzYWlkIFdpbGxpYW1zLgpJIGRvbid0IGtpbGwgaG9yc2VzLgpDYXJyaWFnZSBkcml2ZXJzIHdobyB3ZXJlIGluIHRoZSBwYXJrIGF0IHRoZSB0aW1lIG9mIEZyaWRheSdzIGluY2lkZW50IHNhaWQgZHJ1bW1pbmcgaW4gdGhlIGFyZWEgd2FzIHNvIGxvdWQgaXQgc3Bvb2tlZCB0aGUgMTMteWVhci1vbGQgbWFyZS4KVGhlIGFuaW1hbCBicm9rZSBsb29zZSBmcm9tIGl0cyBjYXJyaWFnZSByYW4gaGVhZGxvbmcgaW50byBhIHRyZWUsIHN1ZmZlcmluZyBmYXRhbCBpbmp1cmllcy4KSG9yc2Ugb3duZXJzIGhhdmUgc2luY2UgYmVlbiBhdHRlbXB0aW5nIHRvIGhhdmUgbXVzaWNpYW5zIGJhbm5lZCBmcm9tIGFyZWFzIHdoZXJlIGhvcnNlcyB0cmF2ZWwuCldpbGxpYW1zIGlzIGFnYWluc3QgdGhhdC4K
[]
Q2hvbGVzdGVyb2wgYnlwcm9kdWN0IGJsb2NrcyBlc3Ryb2dlbiBoZWxwCjE4IChVUEkpIC0tIEEgYnlwcm9kdWN0IG9mIGNob2xlc3Rlcm9sIG1ldGFib2xpc20gaW50ZXJmZXJlcyB3aXRoIHRoZSBiZW5lZmljaWFsIGVmZmVjdHMgZXN0cm9nZW4gaGFzIG9uIHRoZSBjYXJkaW92YXNjdWxhciBzeXN0ZW0sIGEgVS5TLiBzdHVkeSBmb3VuZC4KUmVzZWFyY2hlcnMgYXQgdGhlIFVuaXZlcnNpdHkgb2YgVGV4YXMgU291dGh3ZXN0ZXJuIE1lZGljYWwgQ2VudGVyIGluIERhbGxhcyBmb3VuZCB0aGF0IGluIHJvZGVudHMsIGEgbW9sZWN1bGUgY2FsbGVkIDI3LWh5ZHJveHljaG9sZXN0ZXJvbCwgb3IgMjdIQywgYmluZHMgdG8gdGhlIHNhbWUgcmVjZXB0b3JzIGluIHRoZSBibG9vZCB2ZXNzZWxzIG9mIHRoZSBoZWFydCB0byB3aGljaCBlc3Ryb2dlbiBiaW5kcy4KU2VuaW9yIGF1dGhvciBEci4gRGF2aWQgTWFuZ2Vsc2RvcmYgc2FpZCB0aGUgZmluZGluZ3MgbWF5IGV4cGxhaW4gd2h5IGhvcm1vbmUgcmVwbGFjZW1lbnQgdGhlcmFweSBmYWlscyB0byBwcm90ZWN0IHNvbWUgcG9zdG1lbm9wYXVzYWwgd29tZW4gZnJvbSBoZWFydCBkaXNlYXNlLgpUaGUgc3R1ZHksIHB1Ymxpc2hlZCBpbiB0aGUgT2N0b2JlciBpc3N1ZSBvZiB0aGUgam91cm5hbCBOYXR1cmUgTWVkaWNpbmUsIGZvdW5kIHRoYXQgd2hlbiBlc3Ryb2dlbiBsZXZlbHMgZHJvcHBlZCByZWxhdGl2ZSB0byB0aGUgYW1vdW50IG9mIDI3SEMgY2lyY3VsYXRpbmcgaW4gdGhlIGJsb29kLCAyN0hDIHJlYWN0ZWQgYW5kIGJvdW5kIHRvIHRoZSBlc3Ryb2dlbiByZWNlcHRvcnMgaW4gdGhlIGNhcmRpb3Zhc2N1bGFyIHN5c3RlbSBhbmQgYmxvY2tlZCB0aGVpciBwcm90ZWN0aXZlIGZ1bmN0aW9uLCBwcmltYXJpbHkgYnkgaW5oaWJpdGluZyB0aGUgcHJvZHVjdGlvbiBvZiBuaXRyaWMgb3hpZGUuClJlZHVjZWQgbGV2ZWxzIG9mIG5pdHJpYyBveGlkZSBpbiBibG9vZCB2ZXNzZWxzIGhhcyBiZWVuIGxpbmtlZCB3aXRoIGhpZ2ggY2hvbGVzdGVyb2wgYW5kIGRpYWJldGVzLCB0aGUgc3R1ZHkgc2FpZC4K
[(Q2hvbGVzdGVyb2wgYnlwcm9kdWN0IGJsb2NrcyBlc3Ryb2dlbiBoZWxwCjE4IChVUEkpIC0tIEEgYnlwcm9kdWN0IG9mIGNob2xlc3Rlcm9sIG1ldGFib2xpc20gaW50ZXJmZXJlcyB3aXRoIHRoZSBiZW5lZmljaWFsIGVmZmVjdHMgZXN0cm9nZW4gaGFzIG9uIHRoZSBjYXJkaW92YXNjdWxhciBzeXN0ZW0sIGEgVS5TLiBzdHVkeSBmb3VuZC4KUmVzZWFyY2hlcnMgYXQgdGhlIFVuaXZlcnNpdHkgb2YgVGV4YXMgU291dGh3ZXN0ZXJuIE1lZGljYWwgQ2VudGVyIGluIERhbGxhcyBmb3VuZCB0aGF0IGluIHJvZGVudHMsIGEgbW9sZWN1bGUgY2FsbGVkIDI3LWh5ZHJveHljaG9sZXN0ZXJvbCwgb3IgMjdIQywgYmluZHMgdG8gdGhlIHNhbWUgcmVjZXB0b3JzIGluIHRoZSBibG9vZCB2ZXNzZWxzIG9mIHRoZSBoZWFydCB0byB3aGljaCBlc3Ryb2dlbiBiaW5kcy4KU2VuaW9yIGF1dGhvciBEci4gRGF2aWQgTWFuZ2Vsc2RvcmYgc2FpZCB0aGUgZmluZGluZ3MgbWF5IGV4cGxhaW4gd2h5IGhvcm1vbmUgcmVwbGFjZW1lbnQgdGhlcmFweSBmYWlscyB0byBwcm90ZWN0IHNvbWUgcG9zdG1lbm9wYXVzYWwgd29tZW4gZnJvbSBoZWFydCBkaXNlYXNlLgpUaGUgc3R1ZHksIHB1Ymxpc2hlZCBpbiB0aGUgT2N0b2JlciBpc3N1ZSBvZiB0aGUgam91cm5hbCBOYXR1cmUgTWVkaWNpbmUsIGZvdW5kIHRoYXQgd2hlbiBlc3Ryb2dlbiBsZXZlbHMgZHJvcHBlZCByZWxhdGl2ZSB0byB0aGUgYW1vdW50IG9mIDI3SEMgY2lyY3VsYXRpbmcgaW4gdGhlIGJsb29kLCAyN0hDIHJlYWN0ZWQgYW5kIGJvdW5kIHRvIHRoZSBlc3Ryb2dlbiByZWNlcHRvcnMgaW4gdGhlIGNhcmRpb3Zhc2N1bGFyIHN5c3RlbSBhbmQgYmxvY2tlZCB0aGVpciBwcm90ZWN0aXZlIGZ1bmN0aW9uLCBwcmltYXJpbHkgYnkgaW5oaWJpdGluZyB0aGUgcHJvZHVjdGlvbiBvZiBuaXRyaWMgb3hpZGUuClJlZHVjZWQgbGV2ZWxzIG9mIG5pdHJpYyBveGlkZSBpbiBibG9vZCB2ZXNzZWxzIGhhcyBiZWVuIGxpbmtlZCB3aXRoIGhpZ2ggY2hvbGVzdGVyb2wgYW5kIGRpYWJldGVzLCB0aGUgc3R1ZHkgc2FpZC4K, 'ORG')]
SG90ZWwgY2xhc3NpZmljYXRpb24gbGF3IGluIFNoYXJqYWggdG8gY29tZSBpbnRvIGZvcmNlIGluIEphbnVhcnkgJzA4ClNoYXJqYWgsIFNlcHQuMTl0aCwgMjAwNyAoV0FNKSAtLSBUaGUgU2hhcmphaCBDb21tZXJjZSBhbmQgVG91cmlzbSBEZXZlbG9wbWVudCBBdXRob3JpdHkgKFNDVERBKSBoYXMgYW5ub3VuY2VkIHRoYXQgYSBob3RlbCBjbGFzc2lmaWNhdGlvbiBsYXcgd2lsbCBiZSBicm91Z2h0IGludG8gZm9yY2UgYXQgdGhlIGJlZ2lubmluZyBvZiBuZXh0IHllYXIuLgpUaGUgbGF3IGNvbWVzIGluIGltcGVsZW1udGF0aW9uIG9mIHJlc29sdXRpb24gTm8uMTYgb2YgMjAwNyBpc3N1ZWQgYnkgdGhlIEV4ZWN1dGl2ZSBDb3VuY2lsIHJlZ2FyZGluZyB0aGUgY2xhc3NpZmljYXRpb24gb2YgU2hhcmphaCBob3RlbHMsIHJlc29ydHMgYW5kIGhvdGVsIGFwYXJ0bWVudHMgYW5kIHRoZSBhcHByb3ZhbCBvZiB0aGUgU0NUREEgQm9hcmQgb2YgRGlyZWN0b3JzIG9mIHRoZSBtZWNoYW5pc21zIHRvIGltcGxlbWVudCB0aGlzIGxhdy4KVGhlIFNoYXJqYWggRXhlY3V0aXZlIENvdW5jaWwgaGFzIGRlY2lkZWQgdG8gYWN0aXZhdGUgdGhlIGhvdGVsIGNsYXNzaWZpY2F0aW9uIHN0YW5kYXJkcywgdGFraW5nIGludG8gYWNjb3VudCBsYXcgTm8uMi0xOTk5IGFuZCBpdHMgcmVndWxhdGlvbnMgZm9yIGVzdGFibGlzaGluZyB0aGUgU2hhcmphaCBFeGVjdXRpdmUgQ291bmNpbCwgdGhlIEVtaXJpIERlY3JlZSBOby4KMTAgb2YgMjAwNyBmb3IgZXN0YWJsaXNoaW5nIHRoZSBTQ1REQSwgYW5kIG9uIHRoZSBiYXNpcyBvZiB0aGUgRXhlY3V0aXZlIENvdW5jaWwncyBhcHByb3ZhbCBvZiB0aGUgcHJvcG9zYWwgb2ZmZXJlZCBieSB0aGUgU0NUREEgQ2hhaXJtYW4sIFNoZWlraCBTdWx0YW4gQmluIEFobWVkIEFsIFFhc3NpbWksIFRoZSBFeGVjdXRpdmUgQ291bmNpbCBoYXMgYXV0aG9yaXplZCBTQ1REQSwgYnkgdmlydHVlIG9mIGFydGljbGUgTm8uMiwgdG8gb3ZlcnNlZSB0aGUgaW1wbGVtZW50YXRpb24gb2YgdGhpcyBsYXcsIGFuZCBsZWdhbGl6ZWQgYnkgdmlydHVlIG9mIGFydGljbGUgTm8uMywgdG8gYW1lbmQgdGhpcyBsYXcgdG8gbWVldCB0aGUgcmVxdWlyZW1lbnRzIG9mIGFueSBmdXR1cmUgZWNvbm9taWMgb3IgdG91cmlzdCBkZXZlbG9wbWVudCwgcHJvdmlkZWQgdGhhdCB0aGUgYW1lbmRtZW50IChzKSBzaGFsbCBiZSBkZXZlbG9wZWQgaW4gY29vcmRpbmF0aW9uIHdpdGggdGhlIGNvbmNlcm5lZCBwYXJ0aWVzLgpBcnRpY2xlIE5vLjQgaGFzIGdpdmVuIHRoZSBjaGFpcm1hbiBvZiB0aGUgU0NUREEgdGhlIGF1dGhvcml0eSB0byBpc3N1ZSB0aGUgb3JkZXJzIGFuZCByZWd1bGF0aW9ucyB0byBpbXBsZW1lbnQgdGhpcyBsYXcuCk1vaGFtZWQgQS4gQWwgTm9tYW4sIERpcmVjdG9yIEdlbmVyYWwgb2YgdGhlIFNDVERBLCBjb25maXJtZWQgdGhhdCBhbGwgdGhlIGhvdGVsIGNvbXBsZXhlcyBpbiBTaGFyamFoIHdpbGwgYmUgc3ViamVjdCB0byBjbGFzc2lmaWNhdGlvbiBhcyBmcm9tIHRoZSBiZWdpbm5pbmcgb2YgSmFudWFyeSAyMDA4LCBzdHJlc3NpbmcgdGhlIGltcG9ydGFuY2Ugb2Ygc3VjaCBhIG1vdmUgdG8gdGhlIGRldmVsb3BtZW50IG9mIHRoZSBob3RlbCBzZWN0b3IsIHdoaWNoIGlzIHRoZSBtb3N0IHZpdGFsIHRvdXJpc20gaW5mcmFzdHJ1Y3R1cmUgaW4gU2hhcmphaCBhbmQgd2lsbCBlbnN1cmUgdGhhdCBoaWdoIHF1YWxpdHkgc2VydmljZXMgYXJlIHByb3ZpZGVkIHdpdGhpbiB0aGUgaG90ZWxzIHNlY3Rvci4KU2luY2UgY29tbWVuY2luZyB0aGUgcHJvamVjdCwgdGhlIFNDVERBIGhhcyBjb25kdWN0ZWQgaW4tZGVwdGggcmVzZWFyY2ggdGhyb3VnaCBjb250cmFjdGluZyB3aXRoIGEgZGVkaWNhdGVkIGNvbnN1bHRhbnQgb2YgbG9jYWwsIHJlZ2lvbmFsIGFuZCBpbnRlcm5hdGlvbmFsIG1hcmtldHMuCldlIHN0dWRpZWQgdGhlIGhvdGVsIGNsYXNzaWZpY2F0aW9uIHN0YW5kYXJkcyBpbiBkaWZmZXJlbnQgY291bnRyaWVzLCBhbmQgc3Vic2VxdWVudGx5IHByb3ZpZGVkIGxvY2FsIGhvdGVsaWVycyB3aXRoIGRldGFpbGVkIGluZm9ybWF0aW9uIG9uIHRoZSBwcm9qZWN0LCBpdHMgb2JqZWN0aXZlcyBhbmQgdGhlIGJlbmVmaXRzIGl0IGhvbGRzIGZvciBTaGFyamFoJ3MgdG91cmlzbSBpbmR1c3RyeSwiIGhlIGFkZGVkLgpBbCBOb21hbiBleHBsYWluZWQ6ICJXZSBjb21tZW5jZWQgdGhlIGhvdGVsIGNsYXNzaWZpY2F0aW9uIHByb2plY3QgYnkgbWVhbnMgb2YgYW4gaW52ZW50b3J5IG9mIFNoYXJqYWggaG90ZWxzLCByZXNvcnRzIGFuZCBob3RlbCBhcGFydG1lbnRzLCB0aGUgZGF0YSB3ZSBjb2xsZWN0ZWQgaGFzIGJlZW4gdXNlZCBhcyBhIG1haW4gc291cmNlIGZvciBzZXR0aW5nIG5ldyBzdGFuZGFyZHMgYW5kIHJ1bGVzIHRvIGNsYXNzaWZ5IHRoZSBob3RlbCBzZWN0b3IsIGFzIHRoZSBhdXRob3JpdHkgaGFzIGRldmVsb3BlZCBzcGVjaWFsIG5ldyBzdGFuZGFyZHMgdG8gY2xhc3NpZnkgaG90ZWxzIGFuZCBob3RlbCBhcGFydG1lbnRzLgpUaGVzZSBuZXcgc3RhbmRhcmRzIGNvbWJpbmUgaW50ZXJuYXRpb25hbCBzdGFuZGFyZHMgd2l0aCB0aGUgbG9jYWwgcmVxdWlyZW1lbnRzLi4KVGhlIFNDVERBIGhlbGQgc2VwYXJhdGUgbWVldGluZ3Mgd2l0aCBob3RlbGllcnMgdG8gaW5mb3JtIHRoZW0gb2YgdGhlIGdyYWRlIHRoZXkgYXJlIGVudGl0bGVkIHRvIGFuZCBkaXNjdXNzZWQgd2l0aCB0aGVtIHRoZSBpbXBvcnRhbmNlIG9mIGhvdGVsIGNsYXNzaWZpY2F0aW9uLCBhcyB0aGVzZSBob3RlbHMgYXJlIHBhcnQgYW5kIHBhcmNlbCBvZiBTaGFyamFoJ3MgdG91cmlzbSBzZWN0b3IuCkhvdGVsaWVycyB3ZXJlIGdpdmVuIHRoZSBvcHBvcnR1bml0eSB0byBjb21wbHkgd2l0aCB0aGUgcnVsZXMsIGVpdGhlciBieSBhY2NlcHRpbmcgdGhlIHN0YXR1cy1xdW8gY2xhc3NpZmljYXRpb24gb3IgYnkgcmVxdWVzdGluZyBhbiB1cGdyYWRlLCBmb3Igd2hpY2ggdGhleSBoYWQgdG8gZnVsZmlsbCBjZXJ0YWluIHJlcXVpcmVtZW50cyB3aXRoaW4gYSBwcmUtZGV0ZXJtaW5lZCB0aW1lIHNjaGVkdWxlLi4KQWwgTm9tYW4gZXh0ZW5kZWQgaGlzIHRoYW5rcyB0byBhbGwgaG90ZWxpZXJzIGluIFNoYXJqYWggZm9yIHRoZWlyIHByb2R1Y3RpdmUgY29vcGVyYXRpb24gaW4gdGhlIGV2YWx1YXRpb24gb2YgdGhlaXIgZWZmb3J0cywgYXNzdXJpbmcgdGhlbSB0aGF0IHRoZSBjbGFzc2lmaWNhdGlvbiBwcm9jZXNzIHdhcyBmbGV4aWJsZSB0aHJvdWdob3V0IGFsbCB0aGUgcGhhc2VzLCBhbmQgZXhwcmVzc2VkIGhpcyBob3BlIHRoYXQgaXQgd291bGQgd291bGQgcmVzdWx0IGluIHRoZSBkZXNpcmVkIHF1YWxpdHkgbGVhcCBpbiB0aGUgZW1pcmF0ZSdzIHRvdXJpc20gc2VjdG9yLgpIb3RlbGllcnMgaGF2ZSBzaG93biBhIHBvc2l0aXZlIHJlc3BvbnNlIGFuZCBoYXZlIGNvb3BlcmF0ZWQsIGVzcGVjaWFsbHkgaW4gdGhlIGZpbmFsIHBoYXNlcyBvZiB0aGUgcHJvamVjdC4KVGhleSBoYXZlIG5vdyBiZWVuIGluZm9ybWVkIG9mIHRoZWlyIGhvdGVsIGNsYXNzaWZpY2F0aW9ucywgYW5kIHRoZSBTQ1REQSBoYXMgZ2l2ZW4gY29udmVuaWVudCBkZWFkbGluZXMgZm9yIGhvdGVsaWVycyB0byBjb21wbHkgd2l0aCB0aGUgcmVsZXZhbnQgcmVxdWlyZW1lbnRzLCBhbmQgdGhleSBhcmUgbm93IHdvcmtpbmcgdG8gdXBncmFkZSB0aGVpciBjbGFzc2VzIGFzIHBlciB0aGUgc3RhbmRhcmRzIHNldCBieSB0aGUgU0NUREEsIiBBbCBOb21hbiBhZGRlZC4uCldBTS9URiAxMSAyMiBDQ0NDUVEgQ29weXJpZ2h0IDIwMDcgYnkgRW1pcmF0ZXMgTmV3cyBBZ2VuY3kgRGlzdHJpYnV0ZWQgYnkgVVBJCg==
[]
UHJlc2lkZW50IEFsLUJhc2hpciBhdHRlbmRzIFJhbWFkYW4gYnJlYWtmYXN0IGJhbnF1ZXQgZ2l2ZW4gYnkgRmlyc3QgVmljZSBQcmVzaWRlbnQgU2FsdmEgS2lpcgoxOSAoU1VOQSkgLSBQcmVzaWRlbnQgb2YgdGhlIFJlcHVibGljIEZpZWxkIE1hcnNoYWwgT21lciBBbC1CYXNoaXIgYXR0ZW5kZWQgUmFtYWRhbiBicmVha2Zhc3QgYmFucXVldCBnaXZlbiBieSBGaXJzdCBWaWNlIFByZXNpZGVudCBvZiB0aGUgUmVwdWJsaWMgYW5kIFByZXNpZGVudCBvZiB0aGUgR292ZXJubWVudCBvZiBTb3V0aGVybiBTdWRhbiBTYWx2YSBLaWlyIE1heWFyZGl0IGF0IGhpcyByZXNpZGVuY2UgaW4gS2hhcnRvdW0gV2VkbmVzZGF5IGluIHRoZSBwcmVzZW5jZSBTZW5pb3IgQXNzaXN0YW50IG9mIHRoZSBQcmVzaWRlbnQgb2YgdGhlIFJlcHVibGljIE1lbmkgQXJrbyBNZW5hd2kgYW5kIEFzc2lzdGFudCBvZiB0aGUgUHJlc2lkZW50IE11c2EgTW9oYW1lZCBBaG1lZC4uClRoZSBGaXJzdCBWaWNlIFByZXNpZGVudCBNYXlhcmRpdCBkZW5pZWQgaW4gYSBwcmVzcyBzdGF0ZW1lbnQgZXhpc3RlbmNlIG9mIGRpZmZlcmVuY2VzIGJldHdlZW4gdGhlIFN1ZGFuIFBlb3BsZSdzIExpYmVyYXRpb24gTW92ZW1lbnQgKFNQTE0pIGFuZCB0aGUgTmF0aW9uYWwgQ29uZ3Jlc3MuLgpIZSBwb2ludGVkIG91dCB0aGF0IHBhcnRpY2lwYXRpb24gb2YgdGhlIFByZXNpZGVudCBvZiB0aGUgUmVwdWJsaWMgaW4gdGhlIFJhbWFkYW4gYnJlYWtmYXN0IGJhbnF1ZXQgcmVwcmVzZW50cyBvbmUgb2YgdGhlIHZhbHVlcyBvZiB0aGUgU3VkYW5lc2Ugc29jaWV0eSwgd2hpY2ggaXMgY2hhcmFjdGVyaXplZCBieSBicm90aGVyaG9vZCBhbmQgbG92ZS4uCk1heWFyZGl0IGFmZmlybWVkIGtlZW5uZXNzIG9mIHRoZSBTUExNIGFuZCB0aGUgTmF0aW9uYWwgQ29uZ3Jlc3Mgb24gaW1wbGVtZW50YXRpb24gb2YgdGhlIENvbXByZWhlbnNpdmUgUGVhY2UgQWdyZWVtZW50IChDUEEpIHRvIHJlYWxpemUgc2VjdXJpdHkgYW5kIHN0YWJpbGl0eSBpbiB0aGUgY291bnRyeS4uClJlc3BvbmRpbmcgdG8gYSBxdWVzdGlvbiBvbiB0aGUgcm9sZSBvZiBTUExNIGluIHJlc29sdmluZyBEYXJmdXIgaXNzdWUsIE1heWFyZGl0IGNhbGxlZCBvbiBBYmRlbC1XYWhpZCBNb2hhbWVkIE51ciB0byBwYXJ0aWNpcGF0ZSBpbiB0aGUgY29taW5nIG5lZ290aWF0aW9ucyBpbiBUcmlwb2xpLCBhZmZpcm1pbmcgdGhlIFNQTE0ga2Vlbm5lc3Mgb24gZmluZGluZyBhIHNvbHV0aW9uIHRvIERhcmZ1ciBpc3N1ZSB0byByZWFsaXplIHBlYWNlIGFsbCBvdmVyIFN1ZGFuLi4KVGhlIEZpcnN0IFZpY2UgUHJlc2lkZW50IG9mIHRoZSBSZXB1YmxpYyBhbmQgUHJlc2lkZW50IG9mIHRoZSBHb3Zlcm5tZW50IG9mIFNvdXRoZXJuIFN1ZGFuIFNhbHZhIEtpaXIgTWF5YXJkaXQgcmVhZmZpcm1lZCB0aGUga2Vlbm5lc3Mgb2YgdGhlIEdvdmVybm1lbnQgb2YgU291dGhlcm4gU3VkYW4gdG8gbWFpbnRhaW4gc2VjdXJpdHkgYW5kIHN0YWJpbGl0eSB0byBhdHRyYWN0IGludmVzdG9ycyB0byBzb3V0aGVybiBTdWRhbiwgcmVmZXJyaW5nIHRvIHRoZSByb2xlIG9mIHRoZSBwcml2YXRlIHNlY3RvciBpbiB0aGlzIHJlZ2FyZC4uCg==
[(UHJlc2lkZW50IEFsLUJhc2hpciBhdHRlbmRzIFJhbWFkYW4gYnJlYWtmYXN0IGJhbnF1ZXQgZ2l2ZW4gYnkgRmlyc3QgVmljZSBQcmVzaWRlbnQgU2FsdmEgS2lpcgoxOSAoU1VOQSkgLSBQcmVzaWRlbnQgb2YgdGhlIFJlcHVibGljIEZpZWxkIE1hcnNoYWwgT21lciBBbC1CYXNoaXIgYXR0ZW5kZWQgUmFtYWRhbiBicmVha2Zhc3QgYmFucXVldCBnaXZlbiBieSBGaXJzdCBWaWNlIFByZXNpZGVudCBvZiB0aGUgUmVwdWJsaWMgYW5kIFByZXNpZGVudCBvZiB0aGUgR292ZXJubWVudCBvZiBTb3V0aGVybiBTdWRhbiBTYWx2YSBLaWlyIE1heWFyZGl0IGF0IGhpcyByZXNpZGVuY2UgaW4gS2hhcnRvdW0gV2VkbmVzZGF5IGluIHRoZSBwcmVzZW5jZSBTZW5pb3IgQXNzaXN0YW50IG9mIHRoZSBQcmVzaWRlbnQgb2YgdGhlIFJlcHVibGljIE1lbmkgQXJrbyBNZW5hd2kgYW5kIEFzc2lzdGFudCBvZiB0aGUgUHJlc2lkZW50IE11c2EgTW9oYW1lZCBBaG1lZC4uClRoZSBGaXJzdCBWaWNlIFByZXNpZGVudCBNYXlhcmRpdCBkZW5pZWQgaW4gYSBwcmVzcyBzdGF0ZW1lbnQgZXhpc3RlbmNlIG9mIGRpZmZlcmVuY2VzIGJldHdlZW4gdGhlIFN1ZGFuIFBlb3BsZSdzIExpYmVyYXRpb24gTW92ZW1lbnQgKFNQTE0pIGFuZCB0aGUgTmF0aW9uYWwgQ29uZ3Jlc3MuLgpIZSBwb2ludGVkIG91dCB0aGF0IHBhcnRpY2lwYXRpb24gb2YgdGhlIFByZXNpZGVudCBvZiB0aGUgUmVwdWJsaWMgaW4gdGhlIFJhbWFkYW4gYnJlYWtmYXN0IGJhbnF1ZXQgcmVwcmVzZW50cyBvbmUgb2YgdGhlIHZhbHVlcyBvZiB0aGUgU3VkYW5lc2Ugc29jaWV0eSwgd2hpY2ggaXMgY2hhcmFjdGVyaXplZCBieSBicm90aGVyaG9vZCBhbmQgbG92ZS4uCk1heWFyZGl0IGFmZmlybWVkIGtlZW5uZXNzIG9mIHRoZSBTUExNIGFuZCB0aGUgTmF0aW9uYWwgQ29uZ3Jlc3Mgb24gaW1wbGVtZW50YXRpb24gb2YgdGhlIENvbXByZWhlbnNpdmUgUGVhY2UgQWdyZWVtZW50IChDUEEpIHRvIHJlYWxpemUgc2VjdXJpdHkgYW5kIHN0YWJpbGl0eSBpbiB0aGUgY291bnRyeS4uClJlc3BvbmRpbmcgdG8gYSBxdWVzdGlvbiBvbiB0aGUgcm9sZSBvZiBTUExNIGluIHJlc29sdmluZyBEYXJmdXIgaXNzdWUsIE1heWFyZGl0IGNhbGxlZCBvbiBBYmRlbC1XYWhpZCBNb2hhbWVkIE51ciB0byBwYXJ0aWNpcGF0ZSBpbiB0aGUgY29taW5nIG5lZ290aWF0aW9ucyBpbiBUcmlwb2xpLCBhZmZpcm1pbmcgdGhlIFNQTE0ga2Vlbm5lc3Mgb24gZmluZGluZyBhIHNvbHV0aW9uIHRvIERhcmZ1ciBpc3N1ZSB0byByZWFsaXplIHBlYWNlIGFsbCBvdmVyIFN1ZGFuLi4KVGhlIEZpcnN0IFZpY2UgUHJlc2lkZW50IG9mIHRoZSBSZXB1YmxpYyBhbmQgUHJlc2lkZW50IG9mIHRoZSBHb3Zlcm5tZW50IG9mIFNvdXRoZXJuIFN1ZGFuIFNhbHZhIEtpaXIgTWF5YXJkaXQgcmVhZmZpcm1lZCB0aGUga2Vlbm5lc3Mgb2YgdGhlIEdvdmVybm1lbnQgb2YgU291dGhlcm4gU3VkYW4gdG8gbWFpbnRhaW4gc2VjdXJpdHkgYW5kIHN0YWJpbGl0eSB0byBhdHRyYWN0IGludmVzdG9ycyB0byBzb3V0aGVybiBTdWRhbiwgcmVmZXJyaW5nIHRvIHRoZSByb2xlIG9mIHRoZSBwcml2YXRlIHNlY3RvciBpbiB0aGlzIHJlZ2FyZC4uCg==, 'ORG')]
TWFya2V0IGZvciBidWlsZGluZyBtYW5hZ2VtZW50IHN5c3RlbXMgaW4gdGhlIE1pZGRsZSBFYXN0IGJvb21pbmcKTWFya2V0IGZvciBidWlsZGluZyBtYW5hZ2VtZW50IHN5c3RlbXMgaW4gdGhlIE1pZGRsZSBFYXN0IGJvb21pbmcgRHViYWksU2VwdCAyOXRoLCAyMDA3IChXQU0pIC0tIFRoZSBzZXJpZXMgb2YgY29uc3RydWN0aW9uIHByb2plY3RzIGludmFyaWFibHkgdW5kZXJ3YXkgaW4gdGhlIE1pZGRsZSBFYXN0IGJhY2tlZCBieSBoaWdoIG9pbCByZXZlbnVlcywgZWFzaW5nIHByb3BlcnR5IGxhd3MgYW5kIHRoZSBlZmZvcnQgdG8gZGl2ZXJzaWZ5IGxvY2FsIGVjb25vbWllcywgaGFzIHN0aW11bGF0ZWQgdGhlIG1hcmtldCBmb3IgYnVpbGRpbmcgbWFuYWdlbWVudCBzeXN0ZW1zIChCTVMpIGluIHRoZSByZWdpb24gJ0V4Y2x1ZGluZyBTYXVkaSBBcmFiaWEsIHRoZSBHQ0MgbWFya2V0IGZvciBCTVMgcHJvZHVjdHMgd2FzIGVzdGltYXRlZCBhdCBBRUQgMzAxIG1pbGxpb24gKCQ4MiBtaWxsaW9uKSBpbiAyMDA2LCcgYWNjb3JkaW5nIHRvIENocmlzIEZvdW50YWluLCBFdmVudCBEaXJlY3RvciBvZiBVSydzIENNUGksIG9yZ2FuaXNlcnMgb2YgV29ya2luZyBCdWlsZGluZ3MgTWlkZGxlIEVhc3QsIHdoaWNoIGlzIHNjaGVkdWxlZCB0byB0YWtlIHBsYWNlIGluIHRoZSBBYnUgRGhhYmkgTmF0aW9uYWwgRXhoaWJpdGlvbiBDZW50cmUgZnJvbSAxMCB0byAxMiBEZWNlbWJlci4KTXIuIEZvdW50YWluIG5vdGVkIHRoYXQgdGhpcyBmaWd1cmUgZG9lcyBub3QgaW5jbHVkZSBpbnN0YWxsYXRpb24sIHdoaWNoIHdvdWxkIGFkZCBhbiBlc3RpbWF0ZWQgYWRkaXRpb25hbCAxNS0yMCUgb24gdG9wIG9mIHByb2R1Y3QgcmV2ZW51ZXMgYW5kIGV4Y2x1ZGVzIGFmdGVyIHNhbGUgc2VydmljZXMuClRoZSBvdmVyYWxsIG1hcmtldCBpcyBmb3JlY2FzdCB0byBhbG1vc3QgdHJlYmxlIGFuZCByZWFjaCBhcm91bmQgQUVEIDgxMCBtaWxsaW9uICgkMjIwLjYgbWlsbGlvbikgYnkgMjAxMiwgZ3Jvd2luZyBhdCBhIENBR1IgKGNvbXBvdW5kIGFubnVhbCBncm93dGggcmF0ZSkgb2YgMTcuOSUuClRoaXMgaXMgYW4gaW1wcmVzc2l2ZSBncm93dGgsIGVzcGVjaWFsbHkgd2hlbiBjb21wYXJlZCB0byBFdXJvcGUsIHdoZXJlIHRoZSBtYXJrZXQgaXMgZ3Jvd2luZyBhdCBhIENBR1Igb2YgbGVzcyB0aGFuIDIlIG92ZXIgdGhlIHNhbWUgcGVyaW9kLCcgcmVtYXJrZWQgTXIuIEZvdW50YWluLgpUaGUgbWFqb3IgZHJpdmVyIGJlaGluZCB0aGUgZ3Jvd2luZyBtYXJrZXQgZm9yIEJNUyBwcm9kdWN0cyBpbiB0aGUgR0NDIGNvdW50cmllcyBpcyBjbGVhcmx5IHRoZSBjb250aW51b3VzIG5lZWQgZm9yIGFuZCBpbnZlc3RtZW50IGluIGNvbnN0cnVjdGlvbi4KV2hpbGUgaW4gdGhlIHBhc3Qgb25seSBldmVyeSBvdGhlciBidWlsZGluZyBvcHRlZCBmb3IgYSBCTVMsIHRvZGF5IGl0IGlzIGEgbXVzdCBmb3IgZXZlcnkgb25lIG9mIHRoZW0uClRoaXMgaXMgbm90IG9ubHkgZm9yIHRoZSBzYWtlIG9mIGNvbWZvcnQgb3IgYmVjYXVzZSBvZiB0aGUgcG90ZW50aWFsIGZvciByZWR1Y2VkIG9wZXJhdGlvbiBjb3N0cyBhbmQgZW5lcmd5IGNvbnN1bXB0aW9uLCBidXQgbW9yZSBpbXBvcnRhbnRseSwgdGhlIGhpZ2ggbnVtYmVyIG9mIGx1eHVyeSBkZXZlbG9wbWVudHMgY291bGQgbm90IHJlYWxseSBmdW5jdGlvbiB3aXRob3V0IHN1Y2ggYW4gZXNzZW50aWFsIGRldmljZS4KJ0Fsc28sIGFzIGxhcmdlIHByb2plY3RzIHR1cm4gaW50byBzby1jYWxsZWQgbWVnYSBkZXZlbG9wbWVudHMgLSB3aGVyZSB3aG9sZSBjaXRpZXMgb3IgaXNsYW5kcyB3aXRoIGJvdGggY29tbWVyY2lhbCBhbmQgcmVzaWRlbnRpYWwgY29tcGxleGVzIGdyb3cgb3V0IG9mIG5vd2hlcmUgLSBhIEJNUyBzeXN0ZW0gYmVjb21lcyBjcml0aWNhbCB0byBjb25uZWN0IHRoZSBidWlsZGluZ3MgYXMgd2VsbCBhcyAndGhlIGNpdHknLCdvYnNlcnZlZCBNci4gLgpGb3VudGFpbi4KQ29tZm9ydCBpcyB0aGUgY3VycmVudCB0b3AgcHJpb3JpdHkgb2YgQk1TIGZlYXR1cmVzLgpUaGlzIGlzIHBhcnRpY3VsYXJseSBpbXBvcnRhbnQgaW4gYSByZWdpb24sIHdoZXJlIGR1ZSB0byBpdHMgY2xpbWF0ZSwgLCB0aGUgdXNlIG9mIGFpci1jb25kaXRpb25pbmcgZXF1aXBtZW50IGlzIGV4Y2VwdGlvbmFsbHkgaGlnaC4KSG93ZXZlciwgaW4gdGhlIGxvbmdlciB0ZXJtLCBCTVMgcHJvZHVjdHMgY291bGQgYmUgaW5jcmVhc2luZ2x5IHVzZWQgZm9yIG9wdGltaXNlZCBlbmVyZ3kgY29uc3VtcHRpb24sIHRvby4KQXQgcHJlc2VudCwgbW9zdCBvZiB0aGUgb3Bwb3J0dW5pdGllcyBsaWUgaW4gdGhlIGVtaXJhdGVzLCB3aGVyZSBhbHRob3VnaCBEdWJhaSBpcyBzdGlsbCB0aGUgbGFyZ2VzdCBhbmQgb25lIG9mIHRoZSBmYXN0ZXN0IGdyb3dpbmcgbWFya2V0cyBpbiB0aGUgTWlkZGxlIEVhc3QsIEFidSBEaGFiaSBpcyByYXBpZGx5IHBpY2tpbmcgdXAuCkFub3RoZXIgZW1lcmdpbmcgbWFya2V0IGlzIFFhdGFyLgpHcm93dGggaXMgZXhwZWN0ZWQgZnJvbSB0aGUgcmVsYXhhdGlvbiBvZiBwcm9wZXJ0eSBsYXdzLCB3aGljaCBub3cgYWxsb3dzIGZvcmVpZ24gbmF0aW9uYWxzIHRvIG93biBmcmVlaG9sZCB0aXRsZSB0byBhbnkgcmVhbCBlc3RhdGUsIGFuZCB0aGUgYXR0ZW1wdCB0byBkaXZlcnNpZnkgdGhlIGNvdW50cnkncyBlY29ub215IGF3YXkgZnJvbSBvaWwuClRoZSBtYXJrZXQgZm9yIEJNUyBpcyBsaWtlbHkgdG8gZ3JvdyBleGNlcHRpb25hbGx5IGZhc3QgaW4gdGhlIG5leHQgZmV3IHllYXJzLgpBbHRob3VnaCBzdGFydGluZyBmcm9tIGEgcmVsYXRpdmVseSBsb3cgbGV2ZWwsIHRoZSBjdXJyZW50IG1hcmtldCBzaXplIGlzIGZvcmVjYXN0IHRvIHF1YWRydXBsZSBieSAyMDEyLgpFdmVuIHRob3VnaCBPbWFuIGlzIGEgbGFyZ2UgY291bnRyeSwgaXRzIEJNUyBtYXJrZXQgaXMgcmVsYXRpdmVseSBzbWFsbCwgZHVlIHRvIHRoZSBsb3cgbnVtYmVyIG9mIG9uZ29pbmcgY29uc3RydWN0aW9uIHByb2plY3RzLgpJbiB0aGUgcGFzdCBtb3N0IG9mIHRoZSBwcm9qZWN0cyB3ZXJlIGluIHRoZSBwdWJsaWMgc2VjdG9yIGFuZCBmdW5kZWQgYnkgdGhlIGdvdmVybm1lbnQuClRoZXJlIGhhcyBiZWVuIGEgcmVjZW50IHNoaWZ0IHRvd2FyZHMgdG91cmlzbSByZWxhdGVkIGRldmVsb3BtZW50cywgYXMgdGhlIGNvdW50cnkgdHJpZXMgdG8gZm9sbG93IHRoZSBzdGVwcyBvZiBpdHMgbmVpZ2hib3VycyBhbmQgaW5jcmVhc2UgdGhlIHNlY3RvcidzIGNvbnRyaWJ1dGlvbiB0byB0aGUgbmF0aW9uYWwgR0RQLgpIb3dldmVyLCB0aGlzIGNhbiBiZSBhIGRpZmZpY3VsdCB0YXNrIGhhdmluZyB0byBjb21wZXRlIHdpdGggb3RoZXIgbW9yZSBsaWJlcmFsIGRlc3RpbmF0aW9ucywgc3VjaCBhcyBEdWJhaSBpbiBpdHMgY2xvc2UgcHJveGltaXR5LgpUaGUgcmVtYWluaW5nIEdDQyBjb3VudHJpZXMsIG5hbWVseSBLdXdhaXQgYW5kIEJhaHJhaW4sIGFyZSByZWxhdGl2ZWx5IG1hdHVyZSBtYXJrZXRzIHdpdGggbGVzcyBpbXByZXNzaXZlIGdyb3d0aCBwb3RlbnRpYWwuCldvcmtpbmcgQnVpbGRpbmdzIE1pZGRsZSBFYXN0IHdpbGwgcHJvdmlkZSBhIHZhbHVhYmxlIG9wcG9ydHVuaXR5IGZvciBsb2NhbCBhbmQgaW50ZXJuYXRpb25hbCBjb21wYW5pZXMgdG8gc2hvd2Nhc2UgdGhlaXIgcHJvZHVjdHMgYW5kIHNlcnZpY2VzIHRvIHRoZSBpbmNyZWFzaW5nbHkgaW1wb3J0YW50IE1pZGRsZSBFYXN0IG1hcmtldC4KVGhlIG5ldyBldmVudCBoYXMgYmVlbiBkZXNpZ25lZCB0byB0YXJnZXQgYWxsIHRob3NlIGludm9sdmVkIGluIHRoZSBtYW5hZ2VtZW50IGFuZCBtYWludGVuYW5jZSBvZiBidWlsZGluZ3MgYW5kIHByb3BlcnR5LgpXb3JraW5nIEJ1aWxkaW5ncyBNaWRkbGUgRWFzdCB3aWxsIGV4cGxvcmUgdGhlIGxhdGVzdCBwcm9kdWN0cywgc2VydmljZXMgYW5kIGJlc3QtcHJhY3RpY2UgZXhhbXBsZXMgcmVsYXRpbmcgdG8gdGhlIGNvbXBsZXRlIGxpZmUgY3ljbGUgb2YgYSBidWlsZGluZy4uCg==
[]
TmVlZCBUbyBNb2Rlcm5pemUgTmFtIE1lY2hhbmlzbQpEb2hhLCBTZXB0ZW1iZXIgMzAgKHFuYSkgLSBBcmFiaWMgRGFpbHkgLy9hbCBXYXRhbi8vIE5ld3NwYXBlciBIYXMgRWRpdG9yaWFsbHkgSGlnaGxpZ2h0ZWQgUWF0YXIncyBJbXBvcnRhbnQgQ2FsbCBGb3IgTW9kZXJuaXppbmcgTWVjaGFuaXNtIE9mIFRoZSBOb24tYWxpZ25lZCBNb3ZlbWVudCAobmFtKSBBcyBGYXIgQXMgVGhlIE9iamVjdGl2ZSAsICwgUHJvY2VkdXJhbCBBbmQgU3RydWN0dXJhbCBBc3BlY3RzIEFyZSBDb25jZXJuZWQgU28gVGhhdCBUaGUgTmFtIFdvdWxkIEJlIEFibGUgVG8gRGVhbCBXaXRoIFRob3NlIElzc3VlcyBPZiBKb2ludCBJbnRlcmVzdCBXaXRoIE1vcmUgVmlnb3VyICwgVHJhbnNwYXJlbmN5ICwgRnJhbmtuZXNzICwgUmVhbGl0eSAsIEVmZmVjdGl2ZW5lc3MgQW5kIEJhbGFuY2UgLgpEZXNjcmliaW5nIFN1Y2ggQSBDYWxsIEFzIEEgUWF0YXJpIFVuaXF1ZSBEaXBsb21hdGljIEluaXRpYXRpdmUgLCAvL2FsIFdhdGFuLy8gTmV3c3BhcGVyIEhhcyBHaXZlbiBQcm9taW5lbmNlIFRvIFRoZSBRYXRhcmkgRGlwbG9tYWN5IEhoIFRoZSBFbWlyIFNoZWlraCBIYW1hZCBCaW4gS2hhbGlmYSBBbCBUaGFuaSBIYXMgTGFpZCBJdHMgVGVuZGVuY2llcyBBbmQgUHJpbmNpcGxlcy4KSW4gQW4gRWRpdG9yaWFsIENvbW1lbnQgUHVibGlzaGVkIEhlcmUgT24gU3VuZGF5LCAvL2FsIFdhdGFuLy8gRGFpbHkgU2FpZCBUaGF0IFN1Y2ggQSBEaXBsb21hY3kgSGFzIEZ1bGx5IFJlYWxpemVkIFRoYXQgVGhlIFJlY2VudCBXb3JsZCBDaGFuZ2VzIEVydXB0ZWQgU2luY2UgVGhlIEluY2VwdGlvbiBPZiBUaGUgTmFtICwgNTAgWWVhcnMgQWdvLCBUaGUgTWF0dGVyIFdoaWNoIE1ha2VzIEl0IEluY3VtYmVudCBUbyBSZXZpZXcgQW5kIFJlY29uc2lkZXIgVGhlIE5hbSBQcmluY2lwbGVzIEFuZCBPYmplY3RpdmVzIEFuZXcuCkNvbmNsdWRpbmcgVGhlIFBhcGVyIFNhaWQgVGhhdCBTdWNoIEEgUWF0YXJpIERpcGxvbXRpYyBJbml0aWF0aXZlIEhhcyBDb21lIFRvIEFtZW5kIFRoZSBDb3Vyc2UgT2YgVGhlIE5hbSBGb3IgVGhlIEludGVyZXN0IE9mIFRoZSBUaGlyZCBXb3JsZCBQZW9wbGVzLiAocW5hKSBxbmEgMDYyOSBHbXQgMjAwNy8wOS8zMDwK
[(TmVlZCBUbyBNb2Rlcm5pemUgTmFtIE1lY2hhbmlzbQpEb2hhLCBTZXB0ZW1iZXIgMzAgKHFuYSkgLSBBcmFiaWMgRGFpbHkgLy9hbCBXYXRhbi8vIE5ld3NwYXBlciBIYXMgRWRpdG9yaWFsbHkgSGlnaGxpZ2h0ZWQgUWF0YXIncyBJbXBvcnRhbnQgQ2FsbCBGb3IgTW9kZXJuaXppbmcgTWVjaGFuaXNtIE9mIFRoZSBOb24tYWxpZ25lZCBNb3ZlbWVudCAobmFtKSBBcyBGYXIgQXMgVGhlIE9iamVjdGl2ZSAsICwgUHJvY2VkdXJhbCBBbmQgU3RydWN0dXJhbCBBc3BlY3RzIEFyZSBDb25jZXJuZWQgU28gVGhhdCBUaGUgTmFtIFdvdWxkIEJlIEFibGUgVG8gRGVhbCBXaXRoIFRob3NlIElzc3VlcyBPZiBKb2ludCBJbnRlcmVzdCBXaXRoIE1vcmUgVmlnb3VyICwgVHJhbnNwYXJlbmN5ICwgRnJhbmtuZXNzICwgUmVhbGl0eSAsIEVmZmVjdGl2ZW5lc3MgQW5kIEJhbGFuY2UgLgpEZXNjcmliaW5nIFN1Y2ggQSBDYWxsIEFzIEEgUWF0YXJpIFVuaXF1ZSBEaXBsb21hdGljIEluaXRpYXRpdmUgLCAvL2FsIFdhdGFuLy8gTmV3c3BhcGVyIEhhcyBHaXZlbiBQcm9taW5lbmNlIFRvIFRoZSBRYXRhcmkgRGlwbG9tYWN5IEhoIFRoZSBFbWlyIFNoZWlraCBIYW1hZCBCaW4gS2hhbGlmYSBBbCBUaGFuaSBIYXMgTGFpZCBJdHMgVGVuZGVuY2llcyBBbmQgUHJpbmNpcGxlcy4KSW4gQW4gRWRpdG9yaWFsIENvbW1lbnQgUHVibGlzaGVkIEhlcmUgT24gU3VuZGF5LCAvL2FsIFdhdGFuLy8gRGFpbHkgU2FpZCBUaGF0IFN1Y2ggQSBEaXBsb21hY3kgSGFzIEZ1bGx5IFJlYWxpemVkIFRoYXQgVGhlIFJlY2VudCBXb3JsZCBDaGFuZ2VzIEVydXB0ZWQgU2luY2UgVGhlIEluY2VwdGlvbiBPZiBUaGUgTmFtICwgNTAgWWVhcnMgQWdvLCBUaGUgTWF0dGVyIFdoaWNoIE1ha2VzIEl0IEluY3VtYmVudCBUbyBSZXZpZXcgQW5kIFJlY29uc2lkZXIgVGhlIE5hbSBQcmluY2lwbGVzIEFuZCBPYmplY3RpdmVzIEFuZXcuCkNvbmNsdWRpbmcgVGhlIFBhcGVyIFNhaWQgVGhhdCBTdWNoIEEgUWF0YXJpIERpcGxvbXRpYyBJbml0aWF0aXZlIEhhcyBDb21lIFRvIEFtZW5kIFRoZSBDb3Vyc2UgT2YgVGhlIE5hbSBGb3IgVGhlIEludGVyZXN0IE9mIFRoZSBUaGlyZCBXb3JsZCBQZW9wbGVzLiAocW5hKSBxbmEgMDYyOSBHbXQgMjAwNy8wOS8zMDwK, 'ORG')]
TXViYXJhayBBbmQgQWJiYXMgRGlzY3Vzc2VzIEJlZm9yZSBQZWFjZSBDb25mZXJlbmNlCk11YmFyYWsgQW5kIEFiYmFzIERpc2N1c3NlcyBCZWZvcmUgUGVhY2UgQ29uZmVyZW5jZSBjYWlybywgU2VwdGVtYmVyIDMwIChxbmEpIC0gRWd5cHRpYW4gUHJlc2lkZW50IEhvc25pIE11YmFyYWsgUmVjZWl2ZWQgSGVyZSBUb2RheSBQYWxlc3RpbmlhbiBQcmVzaWRlbnQgTWFobW91ZCBBYmJhcyBBbmQgRGlzY3Vzc2VkIFRoZSBVLnMuLXNwb25zb3JlZCBNaWRkbGUgRWFzdCBDb25mZXJlbmNlLiBmb2xsb3dpbmcgSGlzIFRhbGtzIFdpdGggSG9zbmkgTXViYXJhaywgQWJiYXMgU2FpZCBUaGUgQWdlbmRhIE9mIEFuIFVwY29taW5nIE1pZGRsZSBFYXN0IENvbmZlcmVuY2UgSGFzIFRvIEJlIFZlcnkgQ2xlYXIgU28gVGhhdCBJdCBQcm9kdWNlcyBUYW5naWJsZSBSZXN1bHRzLgpUaGlzIEFnZW5kYSBXYXMgVG8gQmUgU2V0IFNvb24sIEhlIFNhaWQuICJ0aGlzIEFnZW5kYSBIYXMgVG8gQmUgVmVyeSBDbGVhciBCZWNhdXNlIChpbnRlcm5hdGlvbmFsKSBQcmVzZW5jZSBXaWxsIEJlIFdlaWdodHksIFdpdGggMzYgQ291bnRyaWVzIEF0dGVuZGluZyAodGhlIENvbmZlcmVuY2UpLCIgSGUgU2FpZC4Kd2UgSGF2ZSBUbyBHbyBUaGVyZSBXaXRoIEEgQ2xlYXIgQW5kIFByZWNpc2UgRG9jdW1lbnQuCkFmdGVyIFRoYXQgV2UgQ2FuIEJlZ2luIE5lZ290aWF0aW9ucyBPbiBUaGUgRGV0YWlscyBPZiBXaGF0IFdlIENhbGwgVGhlIEZpbmFsIFNldHRsZW1lbnQsIiBIZSBBZGRlZC4KQWJiYXMgQWxzbyBCcmllZmVkIE11YmFyYWsgT24gVGhlIE91dGNvbWVzIE9mIEhpcyBSZWNlbnQgVGFsa3MgT24gVGhlIFNpZGVsaW5lcyBPZiBUaGUgVW4gR2VuZXJhbCBBc3NlbWJseSBSZWdhcmRpbmcgVGhlIENvbWluZyBQZWFjZSBDb25mZXJlbmNlLiAocW5hKSBxbmEgMTYwNyBHbXQgMjAwNy8wOS8zMDwK
[]
VGFtcGEgQmF5IDgsIFRvcm9udG8gNQozMCAoVVBJKSAtLSBKdXN0aW4gUnVnZ2lhbm8gaGFkIHR3byBSQkkgU3VuZGF5LCBhcyB0aGUgVGFtcGEgQmF5IERldmlsIFJheXMgZW5kZWQgdGhlaXIgbG9zaW5nIHNlYXNvbiBvbiBhIHdpbm5pbmcgbm90ZSB3aXRoIGFuIDgtNSB2aWN0b3J5IG92ZXIgVG9yb250by4KUnVnZ2lhbm8gY2FwcGVkIGEgZml2ZS1ydW4gc2l4dGggaW5uaW5nIGZvciB0aGUgRGV2aWwgUmF5cyB3aXRoIGEgcnVuLXNjb3Jpbmcgc2luZ2xlIHRoYXQgaGVscGVkIHNuYXAgYSBmb3VyLWdhbWUgbG9zaW5nIHN0cmVhay4KVGFtcGEgQmF5IGNhbWUgYmFjayBmcm9tIGEgNC0yIGRlZmljaXQgaW4gdGhlIHNpeHRoLCB3aGljaCB3YXMgaGlnaGxpZ2h0ZWQgYnkgYW4gUkJJIHRyaXBsZSBvZmYgdGhlIGJhdCBvZiBKb2VsIEd1em1hbi4KQSB3YWxrIGFuZCB0aHJlZSBjb25zZWN1dGl2ZSBzaW5nbGVzIHRpZWQgdGhlIGNvbnRlc3QsIDQtNC4KUnVnZ2lhbm8gYWxzbyBoYWQgYSBydW4tc2NvcmluZyBncm91bmQgYmFsbCBpbiB0aGUgZmlmdGguCkphc29uIEhhbW1lbCAoMy01KSBnYXZlIHVwIGZvdXIgcnVucyBvbiBzZXZlbiBoaXRzIG92ZXIgZml2ZSBpbm5pbmdzIGZvciB0aGUgdmljdG9yeS4KQS5KLiBCdXJuZXR0ICgxMC04KSB0b29rIHRoZSBsb3NzIHdpdGggc2V2ZW4gcnVucyBiZWZvcmUgZGVwYXJ0aW5nIGluIHRoZSBzaXh0aC4KQ2FybG9zIFBlbmEgaG9tZXJlZCBhbmQgQWtpbm9yaSBJd2FtdXJhIGhhZCBhbiBSQkkgdHJpcGxlIGZvciB0aGUgRGV2aWxzIFJheXMuCg==
[(VGFtcGEgQmF5IDgsIFRvcm9udG8gNQozMCAoVVBJKSAtLSBKdXN0aW4gUnVnZ2lhbm8gaGFkIHR3byBSQkkgU3VuZGF5LCBhcyB0aGUgVGFtcGEgQmF5IERldmlsIFJheXMgZW5kZWQgdGhlaXIgbG9zaW5nIHNlYXNvbiBvbiBhIHdpbm5pbmcgbm90ZSB3aXRoIGFuIDgtNSB2aWN0b3J5IG92ZXIgVG9yb250by4KUnVnZ2lhbm8gY2FwcGVkIGEgZml2ZS1ydW4gc2l4dGggaW5uaW5nIGZvciB0aGUgRGV2aWwgUmF5cyB3aXRoIGEgcnVuLXNjb3Jpbmcgc2luZ2xlIHRoYXQgaGVscGVkIHNuYXAgYSBmb3VyLWdhbWUgbG9zaW5nIHN0cmVhay4KVGFtcGEgQmF5IGNhbWUgYmFjayBmcm9tIGEgNC0yIGRlZmljaXQgaW4gdGhlIHNpeHRoLCB3aGljaCB3YXMgaGlnaGxpZ2h0ZWQgYnkgYW4gUkJJIHRyaXBsZSBvZmYgdGhlIGJhdCBvZiBKb2VsIEd1em1hbi4KQSB3YWxrIGFuZCB0aHJlZSBjb25zZWN1dGl2ZSBzaW5nbGVzIHRpZWQgdGhlIGNvbnRlc3QsIDQtNC4KUnVnZ2lhbm8gYWxzbyBoYWQgYSBydW4tc2NvcmluZyBncm91bmQgYmFsbCBpbiB0aGUgZmlmdGguCkphc29uIEhhbW1lbCAoMy01KSBnYXZlIHVwIGZvdXIgcnVucyBvbiBzZXZlbiBoaXRzIG92ZXIgZml2ZSBpbm5pbmdzIGZvciB0aGUgdmljdG9yeS4KQS5KLiBCdXJuZXR0ICgxMC04KSB0b29rIHRoZSBsb3NzIHdpdGggc2V2ZW4gcnVucyBiZWZvcmUgZGVwYXJ0aW5nIGluIHRoZSBzaXh0aC4KQ2FybG9zIFBlbmEgaG9tZXJlZCBhbmQgQWtpbm9yaSBJd2FtdXJhIGhhZCBhbiBSQkkgdHJpcGxlIGZvciB0aGUgRGV2aWxzIFJheXMuCg==, 'ORG')]
QW1pciBPZiBLdXdhaXQgUmVjZWl2ZXMgU2luaW9yYQpBbWlyIE9mIEt1d2FpdCBSZWNlaXZlcyBTaW5pb3JhIG9jdG9iZXIgMDIsIDIwMDcga3V3YWl0LCBPY3QuIDIsIChibmEpIC0tIEFtaXIgT2YgS3V3YWl0IFNoYWlraCBTYWJhaCBBbCBBaG1lZCBBbCBKYWJlciBBbCBTYWJhaCBSZWNlaXZlZCBIZXJlIFRoaXMgQWZ0ZXJub29uIExlYmFuZXNlIFByaW1lIE1pbmlzdGVyIEZ1YWQgU2luaW9yYSBXaG8gQXJyaXZlZCBJbiBLdXdhaXQgRWFybGllciBUb2RheSBDb21pbmcgRnJvbSBUaGUgVWFlLgpTaGFpa2ggU2FiYWggQXNzZXJ0ZWQgSGlzIENvdW50cnlzIEtlZW5uZXNzIFRvIEJhY2sgVXAgQWxsIEluaXRpYXRpdmVzIEFpbWVkIEF0IFJlc3RvcmluZyBTZWN1cml0eSBBbmQgU3RhYmlsaXR5IEFsbCBPdmVyIExlYmFub24sIFdpc2hpbmcgVGhlIExlYmFuZXNlIFBlb3BsZSBQcm9zcGVyaXR5IEFuZCBXZWxmYXJlLiBobXEvbXQgMDItb2N0LTIwMDcgMjE6MzMK
[(QW1pciBPZiBLdXdhaXQgUmVjZWl2ZXMgU2luaW9yYQpBbWlyIE9mIEt1d2FpdCBSZWNlaXZlcyBTaW5pb3JhIG9jdG9iZXIgMDIsIDIwMDcga3V3YWl0LCBPY3QuIDIsIChibmEpIC0tIEFtaXIgT2YgS3V3YWl0IFNoYWlraCBTYWJhaCBBbCBBaG1lZCBBbCBKYWJlciBBbCBTYWJhaCBSZWNlaXZlZCBIZXJlIFRoaXMgQWZ0ZXJub29uIExlYmFuZXNlIFByaW1lIE1pbmlzdGVyIEZ1YWQgU2luaW9yYSBXaG8gQXJyaXZlZCBJbiBLdXdhaXQgRWFybGllciBUb2RheSBDb21pbmcgRnJvbSBUaGUgVWFlLgpTaGFpa2ggU2FiYWggQXNzZXJ0ZWQgSGlzIENvdW50cnlzIEtlZW5uZXNzIFRvIEJhY2sgVXAgQWxsIEluaXRpYXRpdmVzIEFpbWVkIEF0IFJlc3RvcmluZyBTZWN1cml0eSBBbmQgU3RhYmlsaXR5IEFsbCBPdmVyIExlYmFub24sIFdpc2hpbmcgVGhlIExlYmFuZXNlIFBlb3BsZSBQcm9zcGVyaXR5IEFuZCBXZWxmYXJlLiBobXEvbXQgMDItb2N0LTIwMDcgMjE6MzMK, 'ORG')]
Q2hpbmVzZSBJc2xhbWljIEFydCBleGhpYml0aW9uIGFubm91bmNlZApDaGluZXNlIElzbGFtaWMgQXJ0IGV4aGliaXRpb24gYW5ub3VuY2VkIFdBTSBXQU0gQWJ1IERoYWJpLCBPY3QgMDNyZCwgMjAwNyAoV0FNKTogVW5kZXIgdGhlIHBhdHJvbmFnZSBvZiBTaGVpa2ggTmFoeWFuIGJpbiBNdWJhcmFrIEFsIE5haHlhbiwgTWluaXN0ZXIgb2YgSGlnaGVyIEVkdWNhdGlvbiBhbmQgU2NpZW50aWZpYyBSZXNlYXJjaCB0aGUgQW5hc2kgQ29tcGFueSB3aWxsIG9yZ2FuaXplIGEgQ2hpbmVzZSBJc2xhbWljIEFydCBFeGhpYml0aW9uIGF0IEFidSBEaGFiaSBDdWx0dXJhbCBGb3VuZGF0aW9uIGZyb20gMTcgdG8gMTkgdGhpcyBtb250aC4uClRoZSBFeGhpYml0aW9uIHdpbGwgc2hvd2Nhc2Ugb3ZlciAyMDAgc3R1bm5pbmcgcGllY2VzIG9mIGFydCBieSB0aGUgd29ybGQgZmFtb3VzIENoaW5lc2UgTXVzbGltIGFydGlzdCBIYWpqaSBOb29yIERlZW4gd2hvIGNvbWJpbmVzIG9yaWVudGFsIHN0eWxlIHdpdGggSXNsYW1pYyB0cmFkaXRpb25hbCBzdHlsZXMgdG8gcHJvZHVjZSBiZWF1dGlmdWwgYm9sZCBhcnQuLgpBbm5vdW5jaW5nIHRoZSBleGhpYml0aW9uIGF0IGEgcHJlc3MgQ29uZmVyZW5jZSwgU2hlaWtoYSBBbHlheml5YSBCaW50IE5haHlhbiBCaW4gTXViYXJhaywgdGhlIGZvdW5kZXIgb2YgdGhlIGNvbXBhbnkgb3JnYW5pemluZyB0aGUgZXhoaWJpdGlvbiwgc2FpZCB0aGF0IHRoZSBleGhpYml0aW9uIHdpbGwgc2hvd2Nhc2Ugc29tZSBvZiB0aGUgd29ybGQncyBmaW5lc3QgcGllY2VzIG9mIGFydCB3aGljaCB0aGUgY29tcGFueSBoYXZlIHJlY2VudGx5IG9idGFpbmVkIGluIGl0cyBlZmZvcnQgdG8gZW5oYW5jZSBhcnQgYW5kIGN1bHR1cmUuClRoaXMgd2lsbCBhbHNvIGJ1aWxkIGJyaWRnZXMgYmV0d2VlbiB2YXJpb3VzIGN1bHR1cmVzIGFuZCBjaXZpbGl6YXRpb25zLCBTaGVpa2hhIEFseWF6aXlhIHNhaWQuLgpTaGUgaGFpbGVkIHRoZSBzdXBwb3J0IGdpdmVuIHRvIGN1bHR1cmUgYW5kIHRoZSBtb3ZlbWVudCBvZiBhcnQgYnkgUHJlc2lkZW50IEguSC4gU2hlaWtoIEtoYWxpZmEgYmluIFpheWVkIEFsIE5haHlhbiBhbmQgR2VuZXJhbCBTaGVpa2ggTW9oYW1tZWQgYmluIFpheWVkIEFsIE5haHlhbiwgQ3Jvd24gUHJpbmNlIG9mIEFidSBEaGFiaSBhbmQgRGVwdXR5IFN1cHJlbWUgQ29tbWFuZGVyIG9mIHRoZSBVQUUgQXJtZWQgRm9yY2VzLi4K
[(Q2hpbmVzZSBJc2xhbWljIEFydCBleGhpYml0aW9uIGFubm91bmNlZApDaGluZXNlIElzbGFtaWMgQXJ0IGV4aGliaXRpb24gYW5ub3VuY2VkIFdBTSBXQU0gQWJ1IERoYWJpLCBPY3QgMDNyZCwgMjAwNyAoV0FNKTogVW5kZXIgdGhlIHBhdHJvbmFnZSBvZiBTaGVpa2ggTmFoeWFuIGJpbiBNdWJhcmFrIEFsIE5haHlhbiwgTWluaXN0ZXIgb2YgSGlnaGVyIEVkdWNhdGlvbiBhbmQgU2NpZW50aWZpYyBSZXNlYXJjaCB0aGUgQW5hc2kgQ29tcGFueSB3aWxsIG9yZ2FuaXplIGEgQ2hpbmVzZSBJc2xhbWljIEFydCBFeGhpYml0aW9uIGF0IEFidSBEaGFiaSBDdWx0dXJhbCBGb3VuZGF0aW9uIGZyb20gMTcgdG8gMTkgdGhpcyBtb250aC4uClRoZSBFeGhpYml0aW9uIHdpbGwgc2hvd2Nhc2Ugb3ZlciAyMDAgc3R1bm5pbmcgcGllY2VzIG9mIGFydCBieSB0aGUgd29ybGQgZmFtb3VzIENoaW5lc2UgTXVzbGltIGFydGlzdCBIYWpqaSBOb29yIERlZW4gd2hvIGNvbWJpbmVzIG9yaWVudGFsIHN0eWxlIHdpdGggSXNsYW1pYyB0cmFkaXRpb25hbCBzdHlsZXMgdG8gcHJvZHVjZSBiZWF1dGlmdWwgYm9sZCBhcnQuLgpBbm5vdW5jaW5nIHRoZSBleGhpYml0aW9uIGF0IGEgcHJlc3MgQ29uZmVyZW5jZSwgU2hlaWtoYSBBbHlheml5YSBCaW50IE5haHlhbiBCaW4gTXViYXJhaywgdGhlIGZvdW5kZXIgb2YgdGhlIGNvbXBhbnkgb3JnYW5pemluZyB0aGUgZXhoaWJpdGlvbiwgc2FpZCB0aGF0IHRoZSBleGhpYml0aW9uIHdpbGwgc2hvd2Nhc2Ugc29tZSBvZiB0aGUgd29ybGQncyBmaW5lc3QgcGllY2VzIG9mIGFydCB3aGljaCB0aGUgY29tcGFueSBoYXZlIHJlY2VudGx5IG9idGFpbmVkIGluIGl0cyBlZmZvcnQgdG8gZW5oYW5jZSBhcnQgYW5kIGN1bHR1cmUuClRoaXMgd2lsbCBhbHNvIGJ1aWxkIGJyaWRnZXMgYmV0d2VlbiB2YXJpb3VzIGN1bHR1cmVzIGFuZCBjaXZpbGl6YXRpb25zLCBTaGVpa2hhIEFseWF6aXlhIHNhaWQuLgpTaGUgaGFpbGVkIHRoZSBzdXBwb3J0IGdpdmVuIHRvIGN1bHR1cmUgYW5kIHRoZSBtb3ZlbWVudCBvZiBhcnQgYnkgUHJlc2lkZW50IEguSC4gU2hlaWtoIEtoYWxpZmEgYmluIFpheWVkIEFsIE5haHlhbiBhbmQgR2VuZXJhbCBTaGVpa2ggTW9oYW1tZWQgYmluIFpheWVkIEFsIE5haHlhbiwgQ3Jvd24gUHJpbmNlIG9mIEFidSBEaGFiaSBhbmQgRGVwdXR5IFN1cHJlbWUgQ29tbWFuZGVyIG9mIHRoZSBVQUUgQXJtZWQgRm9yY2VzLi4K, 'PERSON')]
RHViYWkgQ3VzdG9tcyBmb2lscyBhIGRhcmluZyBhdHRlbXB0IHRvIHNtdWdnbGUgMSwwMDAgZ21zIG9mIGhlcm9pbmUKRHViYWkgQ3VzdG9tcyBmb2lscyBhIGRhcmluZyBhdHRlbXB0IHRvIHNtdWdnbGUgMSwwMDAgZ21zIG9mIGhlcm9pbmUgV0FNIFdBTSBEdWJhaSwgT2N0LjEwdGgsMjAwNyAoV0FNKSAtLSBDb250aW51aW5nIHRoZWlyIGJyaWxsaWFudCBhY2hpZXZlbWVudHMgaW4gc2FmZWd1YXJkaW5nIHRoZSBzb2NpZXR5IGFnYWluc3QgdmFyaW91cyBkYW5nZXJzLCBEdWJhaSBBaXJwb3J0IEN1c3RvbXMgQ2VudGVyIHN1Y2NlZWRlZCBpbiBmb2lsaW5nIGEgZGFyaW5nIGF0dGVtcHQgdG8gc211Z2dsZSBoZXJvaW5lIGludG8gRHViYWkgYnkgYSBwYXNzZW5nZXIgY29taW5nIGZyb20gUGFraXN0YW4uLgpJbnNwZWN0b3JzIGF0IER1YmFpIEFpcnBvcnQgQ3VzdG9tcyBDZW50ZXIgc3VzcGVjdGVkIGluIGEgcGFzc2VuZ2VyIGFycml2aW5nIGZyb20gS2FyYWNoaSBhbmQgdG9vayBoaW0gdG8gdGhlIHByaXZhdGUgaW5zcGVjdGlvbiByb29tIHdoZXJlIGhlIHdhcyBjaGVja2VkIHVwIHVzaW5nIGEgc3BlY2lhbCBYLXJheSBkZXRlY3Rpb24gZGV2aWNlLgpUaGUgcmVzdWx0IGNhbWUgcG9zaXRpdmUgYXMgc3RyYW5nZSBtYXRlcmlhbHMgd2VyZSBzZWVuIGluIHRoZSBzdXNwZWN0P3MgaW50ZXN0aW5lcy4uClRoZSBwYXNzZW5nZXIgd2hvIGRlbmllZCBhdCBmaXJzdCB0aGF0IHRoZXJlIGlzIGFueSBtYXRlcmlhbHMgaW4gaGlzIGludGVzdGluZXMsIGNvbmZlc3NlZCBhZnRlciBhIHdoaWxlIGFuZCBhcHByb3ZlZCB0aGF0IGhlIHdhcyBjYXJyeWluZyBoZXJvaW5lIGNhcHN1bGVzIGhpZGRlbiBpbnNpZGUgaGlzIGJvZHkuLgpBcm91bmQgMTAwIGNhcHN1bGVzIG9mIGhlcm9pbmUgd2VyZSByZW1vdmVkIGZyb20gdGhlIHBhc3Nlbmdlcj9zIGludGVzdGluZXMsIGVhY2ggd2VpZ2hpbmcgYXJvdW5kIDEwIGdtLCB3aXRoIGFuIGVzdGltYXRlZCB0b3RhbCBhbW91bnQgb2YgMTAwMCBHcmFtcy4uClRoaXMgb3BlcmF0aW9uIHJlZmxlY3RzIHRoZSBoYXJkIGVmZm9ydHMgb2YgRHViYWkgQ3VzdG9tcyBpbnNwZWN0b3JzLCB0aGUgd2F0Y2hmdWwgZXllcyBtb25pdG9yaW5nIGFsbCB0aGUgcG9ydHMgb2YgZW50cmllcyB0byBEdWJhaSB0byBzYWZlZ3VhcmQgdGhlIHNvY2lldHkuClRoZWlyIGhpZ2ggYWxlcnQgcHJldmVudGVkIGEgcmVhbCB0cmFnZWR5IGZyb20gb2NjdXJyaW5nIGFuZCBzYXZlZCB0aGUgbGl2ZXMgb2YgbWFueSBmYW1pbGllcy4uCg==
[]
QmFocmFpbiwgUGlvbmVlcmluZyBFZmZvcnRzIEluIEZpZ2h0aW5nIFBvdmVydHkKQmFocmFpbiwgUGlvbmVlcmluZyBFZmZvcnRzIEluIEZpZ2h0aW5nIFBvdmVydHkgb2N0b2JlciAxNSwgMjAwNwpNYW5hbWEgT2N0IDE1IChibmEpIEJhaHJhaW4gSXMgQ29uc2lkZXJlZCBPbmUgT2YgVGhlIExlYWRpbmcgQ291bnRyaWVzIEluIFRoZSBFZmZvcnRzIEZvciBUaGUgRXJhZGljYXRpb24gT2YgUG92ZXJ0eS4KSXQgSGFzIFNldCBVcCBWYXJpb3VzIFByb2dyYW1tZXMgQW5kIE1lY2hhbmlzbXMgVG8gRGVhbCBXaXRoIFRoaXMgUHJvYmxlbS4gdGhlc2UgSW5jbHVkZSBQZXJtYW5lbnQgU29jaWFsIEFpZHMgUHJvZ3JhbSBBbmQgUHJvZHVjdGl2aXR5IEFuZCBTZWxmLSBSZWxpYW5jZSBQbGFucyBMaWtlIFRoZSBQcm9kdWN0aXZlIEZhbWlsaWVzIFByb2plY3QsIEFsIEphc3JhIENyYWZ0c21lbiBQcm9qZWN0IEFuZCBUaGUgTWljcm8tc3RhcnQgUHJvamVjdCBXaGljaCBBbGwgQWltIFRvIEhlbHAgQ3JlYXRpdmUgQW5kIEVuZXJnZXRpYyBCYWhyYWluaSBDaXRpemVucyBMYXVuY2ggU21hbGwgQW5kIE1lZGl1bSBQcm9qZWN0cy4gYmFocmFpbnMgRGVhbGluZyBXaXRoIFBvdmVydHkgV2FzIEJhc2VkIE9uIEl0cyBSZWFsaXNhdGlvbiBUaGF0IEl0IFdhcyBBIEdsb2JhbCBQcm9ibGVtIEFuZCBUaGF0IFRoZSBNYWluIENoYWxsZW5nZSBGYWNpbmcgQW55IENvdW50cnkgV2FzIFJlY29nbml6aW5nIEl0IEFzIEFuIEluaXRpYWwgU3RlcCBBbmQgVGhlbiBXb3JraW5nIFRocm91Z2ggV2VsbCBTdHVkaWVkIFByb2dyYW1tZXMgTGF1bmNoZWQgQ29vcGVyYXRpdmVseSBCeSBUaGUgRXhlY3V0aXZlIEFuZCBMZWdpc2xhdGl2ZSBBdXRob3JpdGllcy4gY2l2aWwgU29jaWV0eSBJbnN0aXR1dGlvbnMgQWxzbyBQbGF5IEEgQ3J1Y2lhbCBSb2xlIEluIFRoaXMgQmF0dGxlIFRocm91Z2ggU29jaWFsIENsdWJzIEFuZCBDaGFyaXRpZXMgVGhhdCBFYXNlIFRoZSBTdWZmZXJpbmcgT2YgVGhlIFBvb3IgQW5kIFRoZSBOZWVkeSBOYXRpb253aWRlIEJ5IFJhaXNpbmcgRmluYW5jaWFsIFN1cHBvcnQgVGhhdCBDb3ZlcnMgVGhlIFNjaG9vbGluZyBPZiBQb29yIEZhbWlsaWVzIENoaWxkcmVuIEVzcGVjaWFsbHkgSW4gQ29sbGVnZXMgQW5kIEluc3RpdHV0ZXMuIHBvb3IgRmFtaWxpZXMgTGl2aW5nIENvbmRpdGlvbnMgSGF2ZSBTdWJzdGFudGlhbGx5IEltcHJvdmVkIFRoYW5rcyBUbyBIaXMgTWFqZXN0eSBUaGUgS2luZ3MgR2VuZXJvdXMgQWN0cyBXaGljaCBCZWVmZWQgVXAgQWlkIEFtb3VudHMsIEN1dCBEb3duIFdhdGVyIEFuZCBFbGVjdHJpY2l0eSBGZWVzIEFuZCBIZWxwZWQgTmVlZHkgRmFtaWxpZXMgQ3JlYXRlIEEgUGVybWFuZW50IFNvdXJjZSBPZiBJbmNvbWUgQnkgRW5yb2xsaW5nIFRoZWlyIENoaWxkcmVuIEluIFZvY2F0aW9uYWwgVHJhaW5pbmcgUHJvZ3JhbXMsIEVtcGxveWluZyBBbmQgRXhlbXB0aW5nIFRoZW0gT2YgSGlnaGVyIEVkdWNhdGlvbiBGZWVzLgo=
[(QmFocmFpbiwgUGlvbmVlcmluZyBFZmZvcnRzIEluIEZpZ2h0aW5nIFBvdmVydHkKQmFocmFpbiwgUGlvbmVlcmluZyBFZmZvcnRzIEluIEZpZ2h0aW5nIFBvdmVydHkgb2N0b2JlciAxNSwgMjAwNwpNYW5hbWEgT2N0IDE1IChibmEpIEJhaHJhaW4gSXMgQ29uc2lkZXJlZCBPbmUgT2YgVGhlIExlYWRpbmcgQ291bnRyaWVzIEluIFRoZSBFZmZvcnRzIEZvciBUaGUgRXJhZGljYXRpb24gT2YgUG92ZXJ0eS4KSXQgSGFzIFNldCBVcCBWYXJpb3VzIFByb2dyYW1tZXMgQW5kIE1lY2hhbmlzbXMgVG8gRGVhbCBXaXRoIFRoaXMgUHJvYmxlbS4gdGhlc2UgSW5jbHVkZSBQZXJtYW5lbnQgU29jaWFsIEFpZHMgUHJvZ3JhbSBBbmQgUHJvZHVjdGl2aXR5IEFuZCBTZWxmLSBSZWxpYW5jZSBQbGFucyBMaWtlIFRoZSBQcm9kdWN0aXZlIEZhbWlsaWVzIFByb2plY3QsIEFsIEphc3JhIENyYWZ0c21lbiBQcm9qZWN0IEFuZCBUaGUgTWljcm8tc3RhcnQgUHJvamVjdCBXaGljaCBBbGwgQWltIFRvIEhlbHAgQ3JlYXRpdmUgQW5kIEVuZXJnZXRpYyBCYWhyYWluaSBDaXRpemVucyBMYXVuY2ggU21hbGwgQW5kIE1lZGl1bSBQcm9qZWN0cy4gYmFocmFpbnMgRGVhbGluZyBXaXRoIFBvdmVydHkgV2FzIEJhc2VkIE9uIEl0cyBSZWFsaXNhdGlvbiBUaGF0IEl0IFdhcyBBIEdsb2JhbCBQcm9ibGVtIEFuZCBUaGF0IFRoZSBNYWluIENoYWxsZW5nZSBGYWNpbmcgQW55IENvdW50cnkgV2FzIFJlY29nbml6aW5nIEl0IEFzIEFuIEluaXRpYWwgU3RlcCBBbmQgVGhlbiBXb3JraW5nIFRocm91Z2ggV2VsbCBTdHVkaWVkIFByb2dyYW1tZXMgTGF1bmNoZWQgQ29vcGVyYXRpdmVseSBCeSBUaGUgRXhlY3V0aXZlIEFuZCBMZWdpc2xhdGl2ZSBBdXRob3JpdGllcy4gY2l2aWwgU29jaWV0eSBJbnN0aXR1dGlvbnMgQWxzbyBQbGF5IEEgQ3J1Y2lhbCBSb2xlIEluIFRoaXMgQmF0dGxlIFRocm91Z2ggU29jaWFsIENsdWJzIEFuZCBDaGFyaXRpZXMgVGhhdCBFYXNlIFRoZSBTdWZmZXJpbmcgT2YgVGhlIFBvb3IgQW5kIFRoZSBOZWVkeSBOYXRpb253aWRlIEJ5IFJhaXNpbmcgRmluYW5jaWFsIFN1cHBvcnQgVGhhdCBDb3ZlcnMgVGhlIFNjaG9vbGluZyBPZiBQb29yIEZhbWlsaWVzIENoaWxkcmVuIEVzcGVjaWFsbHkgSW4gQ29sbGVnZXMgQW5kIEluc3RpdHV0ZXMuIHBvb3IgRmFtaWxpZXMgTGl2aW5nIENvbmRpdGlvbnMgSGF2ZSBTdWJzdGFudGlhbGx5IEltcHJvdmVkIFRoYW5rcyBUbyBIaXMgTWFqZXN0eSBUaGUgS2luZ3MgR2VuZXJvdXMgQWN0cyBXaGljaCBCZWVmZWQgVXAgQWlkIEFtb3VudHMsIEN1dCBEb3duIFdhdGVyIEFuZCBFbGVjdHJpY2l0eSBGZWVzIEFuZCBIZWxwZWQgTmVlZHkgRmFtaWxpZXMgQ3JlYXRlIEEgUGVybWFuZW50IFNvdXJjZSBPZiBJbmNvbWUgQnkgRW5yb2xsaW5nIFRoZWlyIENoaWxkcmVuIEluIFZvY2F0aW9uYWwgVHJhaW5pbmcgUHJvZ3JhbXMsIEVtcGxveWluZyBBbmQgRXhlbXB0aW5nIFRoZW0gT2YgSGlnaGVyIEVkdWNhdGlvbiBGZWVzLgo=, 'GPE')]
MTYgQ2hpbmVzZSBtaW5lcnMgZGVhZCwgMyBtaXNzaW5nCkZFTkdDSEVORywgQ2hpbmEsIE9jdC4gMTUgKFVQSSkgLS0gUmVzY3VlcnMgaGF2ZSBzYWlkIHRoZXJlIGlzIGxpdHRsZSBob3BlIGZvciB0aHJlZSByZW1haW5pbmcgbWluZXJzIHRyYXBwZWQgdW5kZXJncm91bmQgaW4gYSBDaGluZXNlIGNvYWwgbWluZXIgd2hlcmUgMTYgY28td29ya2VycyBwZXJpc2hlZC4KQXMgb2YgTW9uZGF5IHRoZSBib2RpZXMgb2YgMTYgbWluZXJzIGhhZCBiZWVuIHB1bGxlZCBmcm9tIHRoZSBydWJibGUgZm9sbG93aW5nIHRoZSB3ZWVrZW5kIGdhcyBleHBsb3Npb24gaW4gdGhlIEppYW5neGkgUHJvdmluY2UgbWluZSwgdGhlIFhpbmh1YSBuZXdzIGFnZW5jeSByZXBvcnRlZC4KVGhlIGFjY2lkZW50IG9jY3VycmVkIFNhdHVyZGF5IGF0IHRoZSBKaWFueGluIENvbGxpZXJ5IG5lYXIgRmVuZ2NoZW5nIENpdHkuCkFib3V0IDI4MyBtaW5lcnMgd2VyZSB3b3JraW5nIHVuZGVyZ3JvdW5kIHdoZW4gMzYwIHRvbnMgb2YgY29hbCBmcmFnbWVudHMgZmlsbGVkIHVwIGEgMzIuOC15YXJkLWxvbmcgdHVubmVsLgpTbyBmYXIgMjQgeWFyZHMgb2YgdGhlIHR1bm5lbCBoYWQgYmVlbiBjbGVhcmVkLgpUaGUgSmlhbnhpbiBjb2FsIG1pbmUgaXMgdGhlIGxhcmdlc3Qgc3RhdGUtb3duZWQgbWluZSBhbmQgd2FzIGVzdGFibGlzaGVkIGluIDE5NTguCkppYW5neGkgQ29hbCBHcm91cCBDby4gaW5mb3JtZWQgaXRzIGluc3VyZXIgdG8gcHJvdmlkZSBjb21wZW5zYXRpb25zIHRvIGZhbWlsaWVzIG9mIHRoZSB2aWN0aW1zLgo=
[]
Q3J1ZGUgb2lsIHByaWNlcyBzdGFydCB0aGUgZGF5IGxvd2VyCk5FVyBZT1JLLCBPY3QuIDI0IChVUEkpIC0tIENydWRlIG9pbCBwcmljZXMgYmVnYW4gdGhlIFdlZG5lc2RheSBzZXNzaW9uIG9uIHRoZSBOZXcgWW9yayBNZXJjYW50aWxlIEV4Y2hhbmdlIG9mZiAxNyBjZW50cywgc2VsbGluZyBmb3IgJDg1LjEwIGEgYmFycmVsIGluIG1vcm5pbmcgdHJhZGluZy4KUHJpY2VzIHdlcmUgZG93biBmb3IgZ2Fzb2xpbmUgYW5kIG5hdHVyYWwgZ2FzLCB3aGlsZSBoZWF0aW5nIG9pbCBiZWdhbiB0aGUgZGF5IHVwLgpHYXNvbGluZSB3YXMgc2VsbGluZyBmb3IgJDIuMTA0MyBhIGdhbGxvbiwgb2ZmIDAuMDA0NiBjZW50cy4KVGhlIHByaWNlIHBlciBtaWxsaW9uIEJyaXRpc2ggdGhlcm1hbCB1bml0cyBvZiBuYXR1cmFsIGdhcyB3YXMgJDYuNzMwLCBkb3duIDAuMDMxIGNlbnRzLgpBdCAkMi4zMDMwLCBoZWF0aW5nIG9pbCBzaG93ZWQgYSBnYWluIG9mIDAuMDAzMiBjZW50cyBpbiBtb3JuaW5nIHRyYWRpbmcuCkF0IHRoZSBwdW1wLCB0aGUgQUFBIERhaWx5IEZ1ZWwgR2F1Z2UgUmVwb3J0IHNob3dlZCB0aGUgcHJpY2UgZm9yIGEgZ2FsbG9uIG9mIHJlZ3VsYXIgdW5sZWFkZWQgZ2Fzb2xpbmUgd2FzICQyLjgyMiwgdXAgZnJvbSAkMi44MjAgcmVwb3J0ZWQgVHVlc2RheS4K
[(Q3J1ZGUgb2lsIHByaWNlcyBzdGFydCB0aGUgZGF5IGxvd2VyCk5FVyBZT1JLLCBPY3QuIDI0IChVUEkpIC0tIENydWRlIG9pbCBwcmljZXMgYmVnYW4gdGhlIFdlZG5lc2RheSBzZXNzaW9uIG9uIHRoZSBOZXcgWW9yayBNZXJjYW50aWxlIEV4Y2hhbmdlIG9mZiAxNyBjZW50cywgc2VsbGluZyBmb3IgJDg1LjEwIGEgYmFycmVsIGluIG1vcm5pbmcgdHJhZGluZy4KUHJpY2VzIHdlcmUgZG93biBmb3IgZ2Fzb2xpbmUgYW5kIG5hdHVyYWwgZ2FzLCB3aGlsZSBoZWF0aW5nIG9pbCBiZWdhbiB0aGUgZGF5IHVwLgpHYXNvbGluZSB3YXMgc2VsbGluZyBmb3IgJDIuMTA0MyBhIGdhbGxvbiwgb2ZmIDAuMDA0NiBjZW50cy4KVGhlIHByaWNlIHBlciBtaWxsaW9uIEJyaXRpc2ggdGhlcm1hbCB1bml0cyBvZiBuYXR1cmFsIGdhcyB3YXMgJDYuNzMwLCBkb3duIDAuMDMxIGNlbnRzLgpBdCAkMi4zMDMwLCBoZWF0aW5nIG9pbCBzaG93ZWQgYSBnYWluIG9mIDAuMDAzMiBjZW50cyBpbiBtb3JuaW5nIHRyYWRpbmcuCkF0IHRoZSBwdW1wLCB0aGUgQUFBIERhaWx5IEZ1ZWwgR2F1Z2UgUmVwb3J0IHNob3dlZCB0aGUgcHJpY2UgZm9yIGEgZ2FsbG9uIG9mIHJlZ3VsYXIgdW5sZWFkZWQgZ2Fzb2xpbmUgd2FzICQyLjgyMiwgdXAgZnJvbSAkMi44MjAgcmVwb3J0ZWQgVHVlc2RheS4K, 'PERSON')]
V0FTSElOR1RPTiwgT2N0LiAzMSAoVVBJKSAtLSBHYXpwcm9tIE5lZnQgbXVsbHMgdmVudHVyZSB3aXRoIExVS29pbCBHYXpwcm9tIE5lZnQgaXMgY29uc2lkZXJpbmcgc2V0dGluZyB1cCBhIGpvaW50IHZlbnR1cmUgd2l0aCBMVUtvaWwgYXQgYSBtZWV0aW5nIGluIG1pZC1Ob3ZlbWJlciwgc2FpZCBBbGV4YW5kZXIgRHl1a292LCBwcmVzaWRlbnQgb2YgR2F6cHJvbSBOZWZ0LgpObyBkZWNpc2lvbiBoYXMgYmVlbiBwYXNzZWQgb24gdGhlIGpvaW50IHZlbnR1cmUgdGh1cyBmYXIgYmVjYXVzZSAidGhlcmUgaGFzbid0IGJlZW4gYSBuZWVkIGZvciB0aGlzLCIgaGUgc2FpZC4KV2UgbmVlZGVkIHRpbWUgdG8gZGVmaW5lIHRoZSB6b25lIG9mIG11dHVhbCBpbnRlcmVzdHMgaW4gdGhlIGZyYW1ld29yayBvZiBhIG1lbW9yYW5kdW0gdGhlIHR3byBjb21wYW5pZXMgcmVhY2hlZC4KVGhlIGNvbXBhbmllcyBzaWduZWQgdGhlIG1lbW9yYW5kdW0gaW4gTWF5IDIwMDcuCkdhenByb20gTmVmdCBpcyB0byBob2xkIDUxIHBlcmNlbnQgYW5kIExVS29pbCA0OSBwZXJjZW50IGluIHRoZSBqb2ludCB2ZW50dXJlLCB3aXRoIG1hbmFnZW1lbnQgb24gYSBwYXJpdHkgYmFzaXMuCk5ldyBwcm9qZWN0cyB3aWxsIGJlIGNhcnJpZWQgb3V0IGFzIHBhcnQgb2YgdGhlIGpvaW50IHZlbnR1cmUsIGFsdGhvdWdoIGl0IGNvdWxkIGFsc28gam9pbnRseSBkZXZlbG9wIHRoZSBjb21wYW5pZXMnIGV4aXN0aW5nIGZpZWxkcywgaGUgc2FpZC4KRXhwbG9yYXRpb24gYW5kIGV4dHJhY3Rpb24gd2lsbCBiZSBhIHByaW9yaXR5IChpbiB0aGUgd29yayBvZiB0aGUgam9pbnQgdmVudHVyZSkuCkpvaW50IHdvcmsgb24gdGhlIHNoZWxmIGlzIG5vdCBiZWluZyBjb25zaWRlcmVkLCB3ZSB3aWxsIHdvcmsgb24gdGhlIGNvbnRpbmVudCwiIGhlIHNhaWQuCkR5dWtvdiBhbHNvIHNhaWQgdGhhdCBHYXpwcm9tIE5lZnQgcHJvcG9zZWQgdGhhdCBzZXZlcmFsIGZvcmVpZ24gb2lsIGNvbXBhbmllcyB0YWtlIHBhcnQgaW4gdGhlIGpvaW50IHJlYWxpemF0aW9uIG9mIHByb2plY3RzIGludm9sdmluZyB0aGUgZ2VvbG9naWNhbCBleHBsb3JhdGlvbiBhdCB0aGUgY29tcGFueSdzIGxpY2Vuc2VkIG9pbCBmaWVsZHMgaW4gZWFzdGVybiBSdXNzaWEsIGluIHBhcnRpY3VsYXIgdGhlIExvcHVraG92c2t5IGJsb2NrIG9uIFNha2hhbGluIGFuZCBpbiB0aGUgQ2h1a290a2EgQXV0b25vbW91cyBEaXN0cmljdC4KV2UgaGF2ZSB5ZXQgdG8gcmVhY2ggYW55IGFncmVlbWVudHMgb24gc3VjaCBjb29wZXJhdGlvbiB3aXRoIGFueW9uZS4KSWYgd2UgYWdyZWUsIHRoZSByZWFsaXphdGlvbiBvZiB0aGUgcHJvamVjdHMgd2lsbCBiZSBjYXJyaWVkIG91dCBhcyBwYXJ0IG9mIHRoZSBqb2ludCB2ZW50dXJlLCIgaGUgc2FpZCwgYWRkaW5nIHRoYXQgdGhlIGNvbXBhbnkgaXNzdWVkIHByb3Bvc2FscyB0byBDaGV2cm9uLCBTaGVsbCBhbmQgU3RhdG9pbC4KR2F6cHJvbSBOZWZ0IHRvIGludmVzdCAkNTBCIGJ5IDIwMjAgR2F6cHJvbSBvaWwgc3Vic2lkaWFyeSBwbGFucyB0byBpbnZlc3QgJDQgYmlsbGlvbiBhbm51YWxseSB1bnRpbCAyMDIwIHRvIGRvdWJsZSBvaWwgb3V0cHV0LCB0aGUgY29tcGFueSdzIGNoaWVmIGV4ZWN1dGl2ZSB0b2xkIHJlcG9ydGVycy4KR2F6cHJvbSBOZWZ0LCBSdXNzaWEncyBmaWZ0aC1sYXJnZXN0IG9pbCBwcm9kdWNlciwgaXMgc3RydWdnbGluZyB3aXRoIGR3aW5kbGluZyBvaWwgcHJvZHVjdGlvbiBzaW5jZSBpdHMgZm9ybWVyIG93bmVyLCBiaWxsaW9uYWlyZSBSb21hbiBBYnJhbW92aWNoLCBzb2xkIHRoZSBmaXJtLCB0aGVuIGNhbGxlZCBTaWJuZWZ0LCB0byB0aGUgZ2FzIGdpYW50IGluIDIwMDUsIHRoZSBJcmlzaCBJbmRlcGVuZGVudCByZXBvcnRlZC4KVGhlIGNvbXBhbnksIHdoaWNoIGluIDIwMDYgcHJvZHVjZWQgYXJvdW5kIDQzIG1pbGxpb24gdG9ucyBvZiBvaWwgaW5jbHVkaW5nIGl0cyBzaGFyZSBpbiBvaWwgdmVudHVyZSBTbGF2bmVmdCwgYXBwcm92ZWQgYSBkZXZlbG9wbWVudCBzdHJhdGVneSBsYXN0IHllYXIgdGhhdCBlbnZpc2FnZXMgcHJvZHVjdGlvbiBncm93dGggdG8gYXQgbGVhc3QgODAgbWlsbGlvbiB0b25zIGJ5IDIwMjAuCkdhenByb20gTmVmdCBQcmVzaWRlbnQgQWxleGFuZGVyIER5dWtvdiBzYWlkIGhlIGV4cGVjdGVkIEdhenByb20gdG8gdHJhbnNmZXIgdGhlIHJpZ2h0IHRvIGRldmVsb3AgYWxsIG9mIGl0cyAxMSBvaWwgZGVwb3NpdHMgdG8gR2F6cHJvbSBOZWZ0IHdpdGhpbiB0aGUgbmV4dCB0d28gdG8gdGhyZWUgeWVhcnMsIHdoaWNoIG1pZ2h0IGhlbHAgYm9vc3QgcHJvZHVjdGlvbi4KR2F6cHJvbSBOZWZ0IGhhcyBub3QgYWNxdWlyZWQgYSBzaW5nbGUgbWFqb3IgYXNzZXQgc2luY2UgYXBwcm92aW5nIGl0cyBhbWJpdGlvdXMgZ3Jvd3RoIHN0cmF0ZWd5LgpBbmFseXN0cyBzYWlkIHRoZXkgc3VzcGVjdCB0aGUgS3JlbWxpbiBoYXMgZGVjaWRlZCB0aGF0IEdhenByb20gc2hvdWxkIGZvY3VzIG9uIGdhcyB3aGlsZSB0aGUgc3RhdGUgaW5jcmVhc2VzIGl0cyBncmlwIG92ZXIgdGhlIG9pbCBpbmR1c3RyeS4KRHl1a292IHNhaWQgR2F6cHJvbSBOZWZ0IHdhcyBzdGlsbCBjb25zaWRlcmluZyBhY3F1aXNpdGlvbnMuClRoZSBjb21wYW55IGVhcmxpZXIgdGhpcyB5ZWFyIHRvb2sgYSAkMi4yIGJpbGxpb24gZm9yZWlnbiBsb2FuLgpJbmRvbmVzaWEncyBkb21lc3RpYyBhaXJsaW5lcyB0byByYWlzZSBmdWVsIHN1cmNoYXJnZXMgSW5kb25lc2lhbiBkb21lc3RpYyBhaXJsaW5lcyBwbGFuIHRvIHJhaXNlIGZ1ZWwgc3VyY2hhcmdlcyBkdWUgdG8gcmlzaW5nIGdsb2JhbCBjcnVkZSBwcmljZXMuCkxpb24gQWlyLCB3aGljaCBpcyBrbm93biBhcyBhIGJ1ZGdldCBjYXJyaWVyLCB3YXMgZXhwZWN0ZWQgdG8gcmFpc2UgaXRzIGZ1ZWwgc3VyY2hhcmdlLCBIYXN5aW0gQXJzYWwgQWxoYWJzeSwgaXRzIHB1YmxpYyByZWxhdGlvbnMgbWFuYWdlciwgc2FpZCBNb25kYXkuClRoaXMgaXMgaW5ldml0YWJsZSBpbiB2aWV3IG9mIGluY3JlYXNpbmcgY3J1ZGUgb2lsIHByaWNlcywgd2hpY2ggYXJlIGV4cGVjdGVkIHRvIGhpdCBhbm90aGVyIHJlY29yZCBoaWdoIG9mICQxMDAgcGVyIGJhcnJlbC4KQnV0IGlmIGxhdGVyIHRoZSBjcnVkZSBwcmljZXMgZ28gZG93biwgdGhlIGZ1ZWwgc3VyY2hhcmdlIHdpbGwgYmUgbG93ZXJlZCBhY2NvcmRpbmdseSwiIGhlIHdhcyBjaXRlZCBhcyBzYXlpbmcgYnkgQXNpYSBQdWxzZS4KSGUgc2FpZCB0aGUgaW1wYWN0IG9mIGZ1ZWwgcHJpY2VzIG9uIHByb2R1Y3Rpb24gY29zdHMgdmFyaWVkLCBkZXBlbmRpbmcgb24gdGhlIHR5cGVzIG9mIGFpcnBsYW5lcy4KIkZvciBCNzM3LTQwMHMgYW5kIEI3MzctMzAwcyBpdCBpcyBzdGlsbCByYW5naW5nIGZyb20gMzUgcGVyY2VudCB0byA0MCBwZXJjZW50OyBmb3IgQjczNy05MDBzIGl0IGlzIGFib3ZlIDMwIHBlcmNlbnQgYW5kIGZvciBCNzM3LTIwMHMgaXQgZXhjZWVkcyA0MCBwZXJjZW50LCIgaGUgc2FpZC4KRGVzcGl0ZSB0aGUgaW5jcmVhc2UgaW4gZnVlbCBzdXJjaGFyZ2UsIExpb24gQWlyJ3MgYmFzaWMgZmxpZ2h0IHRhcmlmZnMgY2xhc3NpZmllZCBpbnRvIG5pbmUgc3ViLWNsYXNzZXMgcmVtYWluZWQgdW5jaGFuZ2VkLCBoZSBzYWlkLgpUaGUgaW1wYWN0IGlzIGV4cGVjdGVkIHRvIGJlIG5vdGljZWFibGUgZWFybHkgaW4gTm92ZW1iZXIuCldpbGwgZGVtYW5kIGluY3JlYXNlIG9yIHZpY2UgdmVyc2E/IiBoZSBzYWlkLgpDbG9zaW5nIG9pbCBwcmljZXMsIE9jdC4gMzEsIDMgcC5tLgpCcmVudCBjcnVkZSBvaWw6ICQ4Ny45MApXZXN0IFRleGFzIEludGVybWVkaWF0ZSBjcnVkZSBvaWw6ICQ5MC40OQo=
[(V0FTSElOR1RPTiwgT2N0LiAzMSAoVVBJKSAtLSBHYXpwcm9tIE5lZnQgbXVsbHMgdmVudHVyZSB3aXRoIExVS29pbCBHYXpwcm9tIE5lZnQgaXMgY29uc2lkZXJpbmcgc2V0dGluZyB1cCBhIGpvaW50IHZlbnR1cmUgd2l0aCBMVUtvaWwgYXQgYSBtZWV0aW5nIGluIG1pZC1Ob3ZlbWJlciwgc2FpZCBBbGV4YW5kZXIgRHl1a292LCBwcmVzaWRlbnQgb2YgR2F6cHJvbSBOZWZ0LgpObyBkZWNpc2lvbiBoYXMgYmVlbiBwYXNzZWQgb24gdGhlIGpvaW50IHZlbnR1cmUgdGh1cyBmYXIgYmVjYXVzZSAidGhlcmUgaGFzbid0IGJlZW4gYSBuZWVkIGZvciB0aGlzLCIgaGUgc2FpZC4KV2UgbmVlZGVkIHRpbWUgdG8gZGVmaW5lIHRoZSB6b25lIG9mIG11dHVhbCBpbnRlcmVzdHMgaW4gdGhlIGZyYW1ld29yayBvZiBhIG1lbW9yYW5kdW0gdGhlIHR3byBjb21wYW5pZXMgcmVhY2hlZC4KVGhlIGNvbXBhbmllcyBzaWduZWQgdGhlIG1lbW9yYW5kdW0gaW4gTWF5IDIwMDcuCkdhenByb20gTmVmdCBpcyB0byBob2xkIDUxIHBlcmNlbnQgYW5kIExVS29pbCA0OSBwZXJjZW50IGluIHRoZSBqb2ludCB2ZW50dXJlLCB3aXRoIG1hbmFnZW1lbnQgb24gYSBwYXJpdHkgYmFzaXMuCk5ldyBwcm9qZWN0cyB3aWxsIGJlIGNhcnJpZWQgb3V0IGFzIHBhcnQgb2YgdGhlIGpvaW50IHZlbnR1cmUsIGFsdGhvdWdoIGl0IGNvdWxkIGFsc28gam9pbnRseSBkZXZlbG9wIHRoZSBjb21wYW5pZXMnIGV4aXN0aW5nIGZpZWxkcywgaGUgc2FpZC4KRXhwbG9yYXRpb24gYW5kIGV4dHJhY3Rpb24gd2lsbCBiZSBhIHByaW9yaXR5IChpbiB0aGUgd29yayBvZiB0aGUgam9pbnQgdmVudHVyZSkuCkpvaW50IHdvcmsgb24gdGhlIHNoZWxmIGlzIG5vdCBiZWluZyBjb25zaWRlcmVkLCB3ZSB3aWxsIHdvcmsgb24gdGhlIGNvbnRpbmVudCwiIGhlIHNhaWQuCkR5dWtvdiBhbHNvIHNhaWQgdGhhdCBHYXpwcm9tIE5lZnQgcHJvcG9zZWQgdGhhdCBzZXZlcmFsIGZvcmVpZ24gb2lsIGNvbXBhbmllcyB0YWtlIHBhcnQgaW4gdGhlIGpvaW50IHJlYWxpemF0aW9uIG9mIHByb2plY3RzIGludm9sdmluZyB0aGUgZ2VvbG9naWNhbCBleHBsb3JhdGlvbiBhdCB0aGUgY29tcGFueSdzIGxpY2Vuc2VkIG9pbCBmaWVsZHMgaW4gZWFzdGVybiBSdXNzaWEsIGluIHBhcnRpY3VsYXIgdGhlIExvcHVraG92c2t5IGJsb2NrIG9uIFNha2hhbGluIGFuZCBpbiB0aGUgQ2h1a290a2EgQXV0b25vbW91cyBEaXN0cmljdC4KV2UgaGF2ZSB5ZXQgdG8gcmVhY2ggYW55IGFncmVlbWVudHMgb24gc3VjaCBjb29wZXJhdGlvbiB3aXRoIGFueW9uZS4KSWYgd2UgYWdyZWUsIHRoZSByZWFsaXphdGlvbiBvZiB0aGUgcHJvamVjdHMgd2lsbCBiZSBjYXJyaWVkIG91dCBhcyBwYXJ0IG9mIHRoZSBqb2ludCB2ZW50dXJlLCIgaGUgc2FpZCwgYWRkaW5nIHRoYXQgdGhlIGNvbXBhbnkgaXNzdWVkIHByb3Bvc2FscyB0byBDaGV2cm9uLCBTaGVsbCBhbmQgU3RhdG9pbC4KR2F6cHJvbSBOZWZ0IHRvIGludmVzdCAkNTBCIGJ5IDIwMjAgR2F6cHJvbSBvaWwgc3Vic2lkaWFyeSBwbGFucyB0byBpbnZlc3QgJDQgYmlsbGlvbiBhbm51YWxseSB1bnRpbCAyMDIwIHRvIGRvdWJsZSBvaWwgb3V0cHV0LCB0aGUgY29tcGFueSdzIGNoaWVmIGV4ZWN1dGl2ZSB0b2xkIHJlcG9ydGVycy4KR2F6cHJvbSBOZWZ0LCBSdXNzaWEncyBmaWZ0aC1sYXJnZXN0IG9pbCBwcm9kdWNlciwgaXMgc3RydWdnbGluZyB3aXRoIGR3aW5kbGluZyBvaWwgcHJvZHVjdGlvbiBzaW5jZSBpdHMgZm9ybWVyIG93bmVyLCBiaWxsaW9uYWlyZSBSb21hbiBBYnJhbW92aWNoLCBzb2xkIHRoZSBmaXJtLCB0aGVuIGNhbGxlZCBTaWJuZWZ0LCB0byB0aGUgZ2FzIGdpYW50IGluIDIwMDUsIHRoZSBJcmlzaCBJbmRlcGVuZGVudCByZXBvcnRlZC4KVGhlIGNvbXBhbnksIHdoaWNoIGluIDIwMDYgcHJvZHVjZWQgYXJvdW5kIDQzIG1pbGxpb24gdG9ucyBvZiBvaWwgaW5jbHVkaW5nIGl0cyBzaGFyZSBpbiBvaWwgdmVudHVyZSBTbGF2bmVmdCwgYXBwcm92ZWQgYSBkZXZlbG9wbWVudCBzdHJhdGVneSBsYXN0IHllYXIgdGhhdCBlbnZpc2FnZXMgcHJvZHVjdGlvbiBncm93dGggdG8gYXQgbGVhc3QgODAgbWlsbGlvbiB0b25zIGJ5IDIwMjAuCkdhenByb20gTmVmdCBQcmVzaWRlbnQgQWxleGFuZGVyIER5dWtvdiBzYWlkIGhlIGV4cGVjdGVkIEdhenByb20gdG8gdHJhbnNmZXIgdGhlIHJpZ2h0IHRvIGRldmVsb3AgYWxsIG9mIGl0cyAxMSBvaWwgZGVwb3NpdHMgdG8gR2F6cHJvbSBOZWZ0IHdpdGhpbiB0aGUgbmV4dCB0d28gdG8gdGhyZWUgeWVhcnMsIHdoaWNoIG1pZ2h0IGhlbHAgYm9vc3QgcHJvZHVjdGlvbi4KR2F6cHJvbSBOZWZ0IGhhcyBub3QgYWNxdWlyZWQgYSBzaW5nbGUgbWFqb3IgYXNzZXQgc2luY2UgYXBwcm92aW5nIGl0cyBhbWJpdGlvdXMgZ3Jvd3RoIHN0cmF0ZWd5LgpBbmFseXN0cyBzYWlkIHRoZXkgc3VzcGVjdCB0aGUgS3JlbWxpbiBoYXMgZGVjaWRlZCB0aGF0IEdhenByb20gc2hvdWxkIGZvY3VzIG9uIGdhcyB3aGlsZSB0aGUgc3RhdGUgaW5jcmVhc2VzIGl0cyBncmlwIG92ZXIgdGhlIG9pbCBpbmR1c3RyeS4KRHl1a292IHNhaWQgR2F6cHJvbSBOZWZ0IHdhcyBzdGlsbCBjb25zaWRlcmluZyBhY3F1aXNpdGlvbnMuClRoZSBjb21wYW55IGVhcmxpZXIgdGhpcyB5ZWFyIHRvb2sgYSAkMi4yIGJpbGxpb24gZm9yZWlnbiBsb2FuLgpJbmRvbmVzaWEncyBkb21lc3RpYyBhaXJsaW5lcyB0byByYWlzZSBmdWVsIHN1cmNoYXJnZXMgSW5kb25lc2lhbiBkb21lc3RpYyBhaXJsaW5lcyBwbGFuIHRvIHJhaXNlIGZ1ZWwgc3VyY2hhcmdlcyBkdWUgdG8gcmlzaW5nIGdsb2JhbCBjcnVkZSBwcmljZXMuCkxpb24gQWlyLCB3aGljaCBpcyBrbm93biBhcyBhIGJ1ZGdldCBjYXJyaWVyLCB3YXMgZXhwZWN0ZWQgdG8gcmFpc2UgaXRzIGZ1ZWwgc3VyY2hhcmdlLCBIYXN5aW0gQXJzYWwgQWxoYWJzeSwgaXRzIHB1YmxpYyByZWxhdGlvbnMgbWFuYWdlciwgc2FpZCBNb25kYXkuClRoaXMgaXMgaW5ldml0YWJsZSBpbiB2aWV3IG9mIGluY3JlYXNpbmcgY3J1ZGUgb2lsIHByaWNlcywgd2hpY2ggYXJlIGV4cGVjdGVkIHRvIGhpdCBhbm90aGVyIHJlY29yZCBoaWdoIG9mICQxMDAgcGVyIGJhcnJlbC4KQnV0IGlmIGxhdGVyIHRoZSBjcnVkZSBwcmljZXMgZ28gZG93biwgdGhlIGZ1ZWwgc3VyY2hhcmdlIHdpbGwgYmUgbG93ZXJlZCBhY2NvcmRpbmdseSwiIGhlIHdhcyBjaXRlZCBhcyBzYXlpbmcgYnkgQXNpYSBQdWxzZS4KSGUgc2FpZCB0aGUgaW1wYWN0IG9mIGZ1ZWwgcHJpY2VzIG9uIHByb2R1Y3Rpb24gY29zdHMgdmFyaWVkLCBkZXBlbmRpbmcgb24gdGhlIHR5cGVzIG9mIGFpcnBsYW5lcy4KIkZvciBCNzM3LTQwMHMgYW5kIEI3MzctMzAwcyBpdCBpcyBzdGlsbCByYW5naW5nIGZyb20gMzUgcGVyY2VudCB0byA0MCBwZXJjZW50OyBmb3IgQjczNy05MDBzIGl0IGlzIGFib3ZlIDMwIHBlcmNlbnQgYW5kIGZvciBCNzM3LTIwMHMgaXQgZXhjZWVkcyA0MCBwZXJjZW50LCIgaGUgc2FpZC4KRGVzcGl0ZSB0aGUgaW5jcmVhc2UgaW4gZnVlbCBzdXJjaGFyZ2UsIExpb24gQWlyJ3MgYmFzaWMgZmxpZ2h0IHRhcmlmZnMgY2xhc3NpZmllZCBpbnRvIG5pbmUgc3ViLWNsYXNzZXMgcmVtYWluZWQgdW5jaGFuZ2VkLCBoZSBzYWlkLgpUaGUgaW1wYWN0IGlzIGV4cGVjdGVkIHRvIGJlIG5vdGljZWFibGUgZWFybHkgaW4gTm92ZW1iZXIuCldpbGwgZGVtYW5kIGluY3JlYXNlIG9yIHZpY2UgdmVyc2E, 'GPE')]
VW4gU2VjcmV0YXJ5IEdlbmVyYWwgQXJyaXZlcyBJbiBBbmthcmEKQW5rYXJhLCBOb3ZlbWJlciAwMiAocW5hKSAtIFRoZSBVLm4uClNlY3JldGFyeSBHZW5lcmFsIEJhbiBLaSBNb29uIEFycml2ZWQgSGVyZSBGcmlkYXkgRm9yIFRhbGtzIFdpdGggVHVya2lzaCBTZW5pb3IgT2ZmaWNpYWxzIE9uIFRoZSBMYXRlc3QgRGV2ZWxvcG1lbnRzIEFsb25nIFRoZSBUdXJraXNoLWlyYXFpIEJvcmRlcnMgQW5kIFRoZSBUdXJraXNoIERlY2lzaW9uIEZvciBMYXVuY2hpbmcgTWlsaXRhcnkgT3BlcmF0aW9ucyBJbiBOb3J0aGVybiBUbyBDcnVzaCBUaGUgS3VyZGlzdGFuIFdvcmtlcnMgUGFydHkgKHBwaykgRWxlbWVudHMuCkZvbGxvd2luZyBIaXMgVGFsa3MgV2l0aCBUaGUgVHVya2lzaCBPZmZpY2lhbHMsIE1vb24gV2lsbCBQcm9jZWVkIFRvIElzdGFuYnVsIFRvIEF0dGVuZCBUaGUgRW5sYXJnZWQgSW50ZXJuYXRpb25hbCBDb25mZXJlbmNlIE9uIElyYXEncyBTZWN1cml0eS4KVGhlIElyYXEtbmVpZ2hib3VyaW5nIENvdW50cmllcydzdW1taXQgR2V0IFRvZ2V0aGVyIFJlcHJlc2VudGF0aXZlcyBPZiBUaGUgU2VjdXJpdHkgQ291bmNpbCBGaXZlIFBlcm1hbmVudCBNZW1iZXJzLCBUaGUgQXJhYiBMZWFndWUgQW5kIFRoZSBFdXJvcGVhbiBVbmlvbi4gKHFuYSkgcW5hIDA5NTEgR210IDIwMDcvMTEvMDI8Cg==
[(VW4gU2VjcmV0YXJ5IEdlbmVyYWwgQXJyaXZlcyBJbiBBbmthcmEKQW5rYXJhLCBOb3ZlbWJlciAwMiAocW5hKSAtIFRoZSBVLm4uClNlY3JldGFyeSBHZW5lcmFsIEJhbiBLaSBNb29uIEFycml2ZWQgSGVyZSBGcmlkYXkgRm9yIFRhbGtzIFdpdGggVHVya2lzaCBTZW5pb3IgT2ZmaWNpYWxzIE9uIFRoZSBMYXRlc3QgRGV2ZWxvcG1lbnRzIEFsb25nIFRoZSBUdXJraXNoLWlyYXFpIEJvcmRlcnMgQW5kIFRoZSBUdXJraXNoIERlY2lzaW9uIEZvciBMYXVuY2hpbmcgTWlsaXRhcnkgT3BlcmF0aW9ucyBJbiBOb3J0aGVybiBUbyBDcnVzaCBUaGUgS3VyZGlzdGFuIFdvcmtlcnMgUGFydHkgKHBwaykgRWxlbWVudHMuCkZvbGxvd2luZyBIaXMgVGFsa3MgV2l0aCBUaGUgVHVya2lzaCBPZmZpY2lhbHMsIE1vb24gV2lsbCBQcm9jZWVkIFRvIElzdGFuYnVsIFRvIEF0dGVuZCBUaGUgRW5sYXJnZWQgSW50ZXJuYXRpb25hbCBDb25mZXJlbmNlIE9uIElyYXEncyBTZWN1cml0eS4KVGhlIElyYXEtbmVpZ2hib3VyaW5nIENvdW50cmllcydzdW1taXQgR2V0IFRvZ2V0aGVyIFJlcHJlc2VudGF0aXZlcyBPZiBUaGUgU2VjdXJpdHkgQ291bmNpbCBGaXZlIFBlcm1hbmVudCBNZW1iZXJzLCBUaGUgQXJhYiBMZWFndWUgQW5kIFRoZSBFdXJvcGVhbiBVbmlvbi4gKHFuYSkgcW5hIDA5NTEgR210IDIwMDcvMTEvMDI8Cg==, 'PRODUCT')]
TXVzaGFycmFmIHNob3VsZCByZW1vdmUgaGlzIHVuaWZvcm0KTU9VTlQgVkVSTk9OLCBWYS4sIE5vdi4gNyAoVVBJKSAtLSBVLlMuIFByZXNpZGVudCBHZW9yZ2UgQnVzaCBzYWlkIGhlIHRvbGQgUGFraXN0YW4gUHJlc2lkZW50IEdlbi4gUGVydmV6IE11c2hhcnJhZiB0aGF0IGhpcyBjb3VudHJ5IHNob3VsZCBoYXZlIGVsZWN0aW9ucyBzb29uIGFuZCB0byByZW1vdmUgaGlzIHVuaWZvcm0uCkJ1c2ggYW5kIEZyZW5jaCBQcmVzaWRlbnQgTmljb2xhcyBTYXJrb3p5IG1ldCB3aXRoIHJlcG9ydGVycyBkdXJpbmcgYSB2aXNpdCB0byB0aGUgTW91bnQgVmVybm9uLCBWYS4sIGhvbWUgb2YgR2VvcmdlIFdhc2hpbmd0b24sIHRoZSBmaXJzdCBVLlMuIHByZXNpZGVudC4KIkkgaGFkIGEgdmVyeSBmcmFuayBkaXNjdXNzaW9uIHdpdGggaGltLCIgQnVzaCBzYWlkLCBhZGRpbmcgdGhhdCBoZSB0b2xkIE11c2hhcnJhZiwgIllvdSBjYW4ndCBiZSB0aGUgUHJlc2lkZW50IGFuZCB0aGUgaGVhZCBvZiB0aGUgbWlsaXRhcnkgYXQgdGhlIHNhbWUgdGltZS4iCkFza2VkIHdoeSBoZSBjYW1lIGRvd24gaGFyZGVyIG9uIE15YW5tYXIncyBjcmFja2Rvd24gb24gcHJvLWRlbW9jcmFjeSBkZW1vbnN0cmF0b3JzIHRoYW4gb24gTXVzaGFycmFmJ3MgYWN0aW9ucywgQnVzaCBzYWlkLCAiUGFraXN0YW4gaGFzIGJlZW4gb24gdGhlIHBhdGggdG8gZGVtb2NyYWN5OyBCdXJtYSBoYWRuJ3QgYmVlbiBvbiB0aGUgcGF0aCB0byBkZW1vY3JhY3kuCkFuZCBpdCByZXF1aXJlcyBkaWZmZXJlbnQgdGFjdGljcyB0byBhY2hpZXZlIHRoZSBjb21tb24gb2JqZWN0aXZlLgpUaGUgcHJlc2lkZW50IHJlaXRlcmF0ZWQgaGlzIG1lc3NhZ2UgdG8gTXVzaGFycmFmLCBzYXlpbmcsICIgKE15KSBtZXNzYWdlIHdhcyB2ZXJ5IC0tIHZlcnkgcGxhaW4sIHZlcnkgZWFzeSB0byB1bmRlcnN0YW5kLCBhbmQgdGhhdCBpcywgdGhlIFVuaXRlZCBTdGF0ZXMgd2FudHMgeW91IHRvIGhhdmUgdGhlIGVsZWN0aW9ucyBhcyBzY2hlZHVsZWQgYW5kIHRha2UgeW91ciB1bmlmb3JtIG9mZi4iCg==
[(TXVzaGFycmFmIHNob3VsZCByZW1vdmUgaGlzIHVuaWZvcm0KTU9VTlQgVkVSTk9OLCBWYS4sIE5vdi4gNyAoVVBJKSAtLSBVLlMuIFByZXNpZGVudCBHZW9yZ2UgQnVzaCBzYWlkIGhlIHRvbGQgUGFraXN0YW4gUHJlc2lkZW50IEdlbi4gUGVydmV6IE11c2hhcnJhZiB0aGF0IGhpcyBjb3VudHJ5IHNob3VsZCBoYXZlIGVsZWN0aW9ucyBzb29uIGFuZCB0byByZW1vdmUgaGlzIHVuaWZvcm0uCkJ1c2ggYW5kIEZyZW5jaCBQcmVzaWRlbnQgTmljb2xhcyBTYXJrb3p5IG1ldCB3aXRoIHJlcG9ydGVycyBkdXJpbmcgYSB2aXNpdCB0byB0aGUgTW91bnQgVmVybm9uLCBWYS4sIGhvbWUgb2YgR2VvcmdlIFdhc2hpbmd0b24sIHRoZSBmaXJzdCBVLlMuIHByZXNpZGVudC4KIkkgaGFkIGEgdmVyeSBmcmFuayBkaXNjdXNzaW9uIHdpdGggaGltLCIgQnVzaCBzYWlkLCBhZGRpbmcgdGhhdCBoZSB0b2xkIE11c2hhcnJhZiwgIllvdSBjYW4ndCBiZSB0aGUgUHJlc2lkZW50IGFuZCB0aGUgaGVhZCBvZiB0aGUgbWlsaXRhcnkgYXQgdGhlIHNhbWUgdGltZS4iCkFza2VkIHdoeSBoZSBjYW1lIGRvd24gaGFyZGVyIG9uIE15YW5tYXIncyBjcmFja2Rvd24gb24gcHJvLWRlbW9jcmFjeSBkZW1vbnN0cmF0b3JzIHRoYW4gb24gTXVzaGFycmFmJ3MgYWN0aW9ucywgQnVzaCBzYWlkLCAiUGFraXN0YW4gaGFzIGJlZW4gb24gdGhlIHBhdGggdG8gZGVtb2NyYWN5OyBCdXJtYSBoYWRuJ3QgYmVlbiBvbiB0aGUgcGF0aCB0byBkZW1vY3JhY3kuCkFuZCBpdCByZXF1aXJlcyBkaWZmZXJlbnQgdGFjdGljcyB0byBhY2hpZXZlIHRoZSBjb21tb24gb2JqZWN0aXZlLgpUaGUgcHJlc2lkZW50IHJlaXRlcmF0ZWQgaGlzIG1lc3NhZ2UgdG8gTXVzaGFycmFmLCBzYXlpbmcsICIgKE15KSBtZXNzYWdlIHdhcyB2ZXJ5IC0tIHZlcnkgcGxhaW4sIHZlcnkgZWFzeSB0byB1bmRlcnN0YW5kLCBhbmQgdGhhdCBpcywgdGhlIFVuaXRlZCBTdGF0ZXMgd2FudHMgeW91IHRvIGhhdmUgdGhlIGVsZWN0aW9ucyBhcyBzY2hlZHVsZWQgYW5kIHRha2UgeW91ciB1bmlmb3JtIG9mZi4iCg==, 'ORG')]
Q3AgTGVhdmVzIEZvciBFZ3lwdApDcCBMZWF2ZXMgRm9yIEVneXB0IG5vdmVtYmVyIDExLCAyMDA3IG1hbmFtYSwgTm92LiAxMSAoYm5hKSAtLSBUaGUgQ3Jvd24gUHJpbmNlIEFuZCBCZGYgQ29tbWFuZGVyIC0gSW4gLSBDaGllZiBTaGFpa2ggU2FsbWFuIEJpbiBIYW1hZCBBbCBLaGFsaWZhIEFuZCBQcmVzaWRlbnQgT2YgU3VwcmVtZSBDb3VuY2lsIEZvciBTcG9ydCBBbmQgWW91dGggTGVmdCBIZXJlIFRvZGF5IEZvciBFZ3lwdCBPbiBCZWhhbGYgT2YgSE0gS2luZyBIYW1hZCBCaW4gSXNhIEFsIEtoYWxpZmEgVG8gQXR0ZW5kIFRoZSBPcGVuaW5nIENlcmVtb255IE9mIFRoZSAxMXRoIEFyYWIgQXRobGV0aWNzIFdoaWNoIFdpbGwgQmUgSW5hdWd1cmF0ZWQgVW5kZXIgVGhlIFBhdHJvbmFnZSBPZiBFZ3lwdGlhbiBQcmVzaWRlbnQgSG9zbmkgTXViYXJhay4KVGhlIENyb3duIFByaW5jZSBXYXMgU2VlbiBPZmYgQXQgVGhlIEFpcnBvcnQgQnkgSGlzIFNvbiBTaGFpa2ggSXNhIEJpbiBTYWxtYW4gQmluIEhhbWFkIEFsIEtoYWxpZmEsIEdvdmVybm9yIE9mIE11aGFycmFxIFNhbG1hbiBCaW4gSGluZGkgQW5kIEVneXB0aWFuIEFtYmFzc2Fkb3IgVG8gQmFocmFpbiBBem1pIEtoYWxpZmEuIGVtLy8gMTEtbm92LTIwMDcgMTY6MDIK
[]
R2l1bGlhbmkgY291cnRzIE5BU0NBUiBmYW5zCkhPTUVTVEVBRCwgRmxhLiwgTm92LiAxOSAoVVBJKSAtLSBVLlMuIFJlcHVibGljYW4gcHJlc2lkZW50aWFsIGhvcGVmdWwgUnVkeSBHaXVsaWFuaSBzYWlkIHdvdWxkLWJlIHZvdGVycyBmcm9tIHRoZSBmYXN0IHRyYWNrIG9mIE5BU0NBUiByYWNpbmcgYXJlIGNsb3NlIHRvIGhpcyBzcG9ydGluZyBoZWFydC4KVGhpcyBpcyBhIHF1aW50ZXNzZW50aWFsbHkgQW1lcmljYW4gc3BvcnQuCkl0IHJlcHJlc2VudHMgdGhlIGJlc3Qgb2YgQW1lcmljYSwiIEdpdWxpYW5pIHRvbGQgZmFucyBTdW5kYXkgYXQgTkFTQ0FSJ3MgRm9yZCA0MDAgYXQgdGhlIEhvbWVzdGVhZC1NaWFtaSBTcGVlZHdheS4KR2l1bGlhbmksIGEgZm9ybWVyIG1heW9yIG9mIE5ldyBZb3JrLCBzbyBmYXIgaW4gdGhlIGNhbXBhaWduIGhhcyBtYWRlIHR3byBzdG9wcyBhdCBOQVNDQVIgcmFjZXMgaW4gRmxvcmlkYSBhbmQgb25lIGluIE5ldyBIYW1wc2hpcmUuCkdpdWxpYW5pIGxhc3Qgc3VtbWVyIHNhaWQgaGUgcHJlcGFyZWQgYnkgcmVhZGluZyAiVGhlIEZlbWFsZSBGYW4gR3VpZGUgdG8gTW90b3JzcG9ydHMsIiBUaGUgV2FzaGluZ3RvbiBQb3N0IHJlcG9ydGVkIE1vbmRheS4KTkFTQ0FSIHdvcmtlcnMgaGF2ZSBnaXZlbiBtb3JlIHRoYW4gJDUwLDAwMCB0byBHaXVsaWFuaSdzIGNhbXBhaWduLCB0aGUgUG9zdCByZXBvcnRlZCwgd2l0aCBkcml2ZXJzIEplZmYgR29yZG9uLCBKaW1taWUgSm9obnNvbiBhbmQgQ2FzZXkgTWVhcnMgZWFjaCBkb25hdGluZyAkMiwzMDAsIHRoZSBtYXhpbXVtIGFsbG93ZWQgYnkgbGF3Lgo=
[]
VlAgZG9uYXRlcyBBRUQgMS43IGJpbGxpb24gdG8gJ0R1YmFpIENhcmVzIiBjYW1wYWlnbgpWUCBkb25hdGVzIEFFRCAxLjcgYmlsbGlvbiB0byAnRHViYWkgQ2FyZXMiIGNhbXBhaWduIFdBTSBXQU0gRHViYWksIE5vdi4gMjV0aCwgMjAwNyAoV0FNKSAtLUguSC4gU2hlaWtoIE1vaGFtbWVkIGJpbiBSYXNoaWQgQWwgTWFrdG91bSBWaWNlLVByZXNpZGVudCwgUHJpbWUgTWluaXN0ZXIgb2YgVUFFIGFuZCBSdWxlciBvZiBEdWJhaSBhbm5vdW5jZWQgYXQgdGhlIGNsb3NpbmcgY2VyZW1vbnkgb2YgIkR1YmFpIENhcmVzIiBjYW1wYWlnbiBoZXJlIHRvZGF5IGhpcyBkb25hdGlvbiBvZiBBRUQgMS43IGJpbGxpb24gdG8gdGhlICJEdWJhaSBDYXJlcyIgY2FtcGFpZ24uClRoZSBjZXJlbW9ueSB3YXMgaGVsZCBhdCBKb3doZXJhIGhhbGwgYXQgSnVtZWlyYWggZGlzdHJpY3QgaW4gRHViYWkuLgpUaGUgdHdvIG1vbnRoIGZ1bmQgcmFpc2luZyBldmVudCBiYWdnZWQgQUVEIDEuNyBiaWxsaW9uLgpTaGVpa2ggTW9oYW1tZWQncyBjb250cmlidXRpb24gaGFzIGRvdWJsZWQgdGhlIGFtb3VudCBlYXJtYXJrZWQgZm9yIHByb3ZpZGluZyBiYXNpYyBlZHVjYXRpb24gZm9yIG9uZSBtaWxsaW9uIGNoaWxkcmVuIGluIHBvb3IgY291bnRyaWVzLiAuCg==
[]
U3RlbSBjZWxsIHRoZXJhcHkgdGFrZXMgYSB0b2xsIG9uIHNleCBsaXZlcwpORVcgWU9SSyAoUmV1dGVycyBIZWFsdGgpIC0gQSBsb25nLXRlcm0gc3R1ZHkgc2hvd3MgdGhhdCBzZXh1YWwgZHlzZnVuY3Rpb24gaXMgYSBtYWpvciBwcm9ibGVtIHRoYXQgZG9lcyBub3QgZnVsbHkgc3Vic2lkZSBhZnRlciBhIHR5cGUgb2Ygc3RlbSBjZWxsIHRoZXJhcHkgY2FsbGVkIGhlbWF0b3BvaWV0aWMgY2VsbCB0cmFuc3BsYW50YXRpb24sIG9yIEhDVC4KVGhpcyBpcyB0cnVlIGluIGJvdGggbWVuIGFuZCB3b21lbi4KSGlnaC1kb3NlIGNoZW1vdGhlcmFweSBhbmQgSENUIGlzIG9mdGVuIHVzZWQgZm9yIHBlb3BsZSB3aG8gaGF2ZSBsaWZlLXRocmVhdGVuaW5nIGJsb29kIGRpc2Vhc2VzLCBzdWNoIGFzIGxldWtlbWlhIGFuZCBseW1waG9tYS4KIlRoZSBwcmV2YWxlbmNlIGFuZCBleHRlbnQgb2Ygc2V4dWFsIHByb2JsZW1zIChhZnRlciBIQ1QpIG1hbmRhdGVzIHRoYXQgc3Vydml2b3JzIGJlIG1hZGUgYXdhcmUgb2YgcG90ZW50aWFsIGNoYW5nZXMgYW5kIGdpdmVuIHJlc291cmNlcyB0byBhZGRyZXNzIHRoZXNlIG5lZWRzLCIgd3JpdGUgcmVzZWFyY2hlcnMgaW4gdGhlIGpvdXJuYWwgQmxvb2QuCiJTdXJ2aXZhbCB3aXRob3V0IGEgc2V4IGxpZmUgc2hvdWxkIG5vdCBiZSB3aGF0IGNhbmNlciBzdXJ2aXZvcnMgc2V0dGxlIGZvciBvciB3aGF0IGhlYWx0aCBjYXJlIHByb2Zlc3Npb25hbHMgY29uc2lkZXIgYSBzdWNjZXNzZnVsIG91dGNvbWUgb2YgY2FuY2VyIHRyZWF0bWVudCwiIHNhaWQgRHIuIEthcmVuIFN5cmphbGEsIGNvLWRpcmVjdG9yIG9mIHRoZSBTdXJ2aXZvcnNoaXAgUHJvZ3JhbSBhdCB0aGUgRnJlZCBIdXRjaGluc29uIENhbmNlciBSZXNlYXJjaCBDZW50ZXIsIFNlYXR0bGUsIFdhc2hpbmd0b24uCiJTZXh1YWwgZHlzZnVuY3Rpb24gaW4gc3Vydml2b3JzIG9mIGNhbmNlciBuZWVkcyB0byBiZWNvbWUgYSBwcmlvcml0eSBmb3IgcmVzZWFyY2ggZnVuZGluZyBhbmQgYSByb3V0aW5lIHRvcGljIG9mIGRpc2N1c3Npb24gYmV0d2VlbiBkb2N0b3JzIGFuZCB0aGVpciBwYXRpZW50cyBhZnRlciBjYW5jZXIgdHJlYXRtZW50LCIgc2hlIGFkZGVkLgpTeXJqYWxhIGFuZCBjb2xsZWFndWVzIGhhZCAxNjEgcGF0aWVudHMgY29tcGxldGUgYW4gYXNzZXNzbWVudCBvZiB0aGVpciBzZXh1YWwgaGVhbHRoIGJlZm9yZSBIQ1QgYW5kIGF0IHNldmVyYWwgdGltZSBwb2ludHMgdXAgdG8gNSB5ZWFycyBhZnRlciBIQ1QuCkFsbCBvZiB0aGVtIGNvbXBsZXRlZCBvbmUgb3IgbW9yZSBzdXJ2ZXlzIGR1cmluZyB0aGUgNS15ZWFyIHBlcmlvZC4KQXQgdGhlIDUteWVhciBtYXJrLCB0aGVzZSBhc3Nlc3NtZW50cyB3ZXJlIGNvbXBhcmVkIGFnYWluc3QgYSBtYXRjaGVkIGNvbnRyb2wgZ3JvdXAgbWFkZSB1cCBvZiBzaWJsaW5ncywgZnJpZW5kcywgYW5kIHZvbHVudGVlcnMgZnJvbSB0aGUgY29tbXVuaXR5LgpUaGUgcmVzdWx0cyBzaG93ZWQgdGhhdCBib3RoIG1lbiBhbmQgd29tZW4gd2VyZSBoYXZpbmcgbGVzcyBzZXggNiBtb250aHMgYWZ0ZXIgSENUIHRoYW4gYmVmb3JlLCBidXQsIGJ5IDEgeWVhciwgc2V4dWFsIGFjdGl2aXR5IGZvciBtb3N0IG9mIHRoZSBtZW4gKDc0IHBlcmNlbnQpIGhhZCByZWNvdmVyZWQgdG8gcHJlLUhDVCBsZXZlbHMuCkZvciB3b21lbiwgcmVjb3Zlcnkgb2Ygc2V4dWFsIGFjdGl2aXR5IHRvb2sgbG9uZ2VyLCB3aXRoIGp1c3Qgb3ZlciBoYWxmICg1NSBwZXJjZW50KSByZXR1cm5pbmcgdG8gc2V4dWFsIGFjdGl2aXR5IGFmdGVyIDIgeWVhcnMuCkZvciB0aG9zZSB3aG8gd2VyZSBzZXh1YWxseSBhY3RpdmUgNSB5ZWFycyBhZnRlciBIQ1QsIGhvd2V2ZXIsIDQ2IHBlcmNlbnQgb2YgbWVuIGFuZCA4MCBwZXJjZW50IG9mIHdvbWVuIHNhaWQgdGhleSBoYWQgcHJvYmxlbXMgdGhhdCBkaXNydXB0ZWQgc2V4dWFsIGZ1bmN0aW9uLgpNb3Jlb3ZlciwgNSB5ZWFycyBhZnRlciBIQ1QsIHRoZSByYXRlcyBvZiBzZXh1YWwgYWN0aXZpdHkgYW5kIGxldmVsIG9mIHNleHVhbCBmdW5jdGlvbiB3ZXJlIGJlbG93IHRob3NlIG9mIHRoZSBjb250cm9sIGdyb3VwLCBzdWdnZXN0aW5nIHRoYXQgSENUIHJlY2lwaWVudHMgZGlkIG5vdCBmdWxseSByZWNvdmVyIGZyb20gdGhlIGVmZmVjdHMgb2YgdGhlIGNhbmNlciBpdHNlbGYgb3IgY2FuY2VyIHRyZWF0bWVudHMuCiJPbmUgdmVyeSBwb3NpdGl2ZSBhc3BlY3Qgb2YgdGhpcyByZXNlYXJjaCwiIFN5cmphbGEgdG9sZCBSZXV0ZXJzIEhlYWx0aCwgImlzIHRoYXQgYm90aCBtZW4gYW5kIHdvbWVuIGFyZSBtb3JlIHdpbGxpbmcgdG8gZGlzY3VzcyB0aGVpciAoc2V4dWFsKSBkaWZmaWN1bHRpZXMgdGhhbiB0aGV5IHdlcmUgYSBkZWNhZGUgYWdvLgpUaGlzIG1ha2VzIGl0IHBvc3NpYmxlIGZvciB1cyB0byBsZWFybiB3aGF0IG1lbiBhbmQgd29tZW4gbmVlZCBhbmQgdG8gZmluZCBvdXQgd2hhdCB3b3JrcyB0byBpbXByb3ZlIHRoZWlyIHNleCBsaXZlcy4KU09VUkNFOiBCbG9vZCwgb25saW5lIFNlcHRlbWJlciAxOCwgMjAwNy4K
[(U3RlbSBjZWxsIHRoZXJhcHkgdGFrZXMgYSB0b2xsIG9uIHNleCBsaXZlcwpORVcgWU9SSyAoUmV1dGVycyBIZWFsdGgpIC0gQSBsb25nLXRlcm0gc3R1ZHkgc2hvd3MgdGhhdCBzZXh1YWwgZHlzZnVuY3Rpb24gaXMgYSBtYWpvciBwcm9ibGVtIHRoYXQgZG9lcyBub3QgZnVsbHkgc3Vic2lkZSBhZnRlciBhIHR5cGUgb2Ygc3RlbSBjZWxsIHRoZXJhcHkgY2FsbGVkIGhlbWF0b3BvaWV0aWMgY2VsbCB0cmFuc3BsYW50YXRpb24sIG9yIEhDVC4KVGhpcyBpcyB0cnVlIGluIGJvdGggbWVuIGFuZCB3b21lbi4KSGlnaC1kb3NlIGNoZW1vdGhlcmFweSBhbmQgSENUIGlzIG9mdGVuIHVzZWQgZm9yIHBlb3BsZSB3aG8gaGF2ZSBsaWZlLXRocmVhdGVuaW5nIGJsb29kIGRpc2Vhc2VzLCBzdWNoIGFzIGxldWtlbWlhIGFuZCBseW1waG9tYS4KIlRoZSBwcmV2YWxlbmNlIGFuZCBleHRlbnQgb2Ygc2V4dWFsIHByb2JsZW1zIChhZnRlciBIQ1QpIG1hbmRhdGVzIHRoYXQgc3Vydml2b3JzIGJlIG1hZGUgYXdhcmUgb2YgcG90ZW50aWFsIGNoYW5nZXMgYW5kIGdpdmVuIHJlc291cmNlcyB0byBhZGRyZXNzIHRoZXNlIG5lZWRzLCIgd3JpdGUgcmVzZWFyY2hlcnMgaW4gdGhlIGpvdXJuYWwgQmxvb2QuCiJTdXJ2aXZhbCB3aXRob3V0IGEgc2V4IGxpZmUgc2hvdWxkIG5vdCBiZSB3aGF0IGNhbmNlciBzdXJ2aXZvcnMgc2V0dGxlIGZvciBvciB3aGF0IGhlYWx0aCBjYXJlIHByb2Zlc3Npb25hbHMgY29uc2lkZXIgYSBzdWNjZXNzZnVsIG91dGNvbWUgb2YgY2FuY2VyIHRyZWF0bWVudCwiIHNhaWQgRHIuIEthcmVuIFN5cmphbGEsIGNvLWRpcmVjdG9yIG9mIHRoZSBTdXJ2aXZvcnNoaXAgUHJvZ3JhbSBhdCB0aGUgRnJlZCBIdXRjaGluc29uIENhbmNlciBSZXNlYXJjaCBDZW50ZXIsIFNlYXR0bGUsIFdhc2hpbmd0b24uCiJTZXh1YWwgZHlzZnVuY3Rpb24gaW4gc3Vydml2b3JzIG9mIGNhbmNlciBuZWVkcyB0byBiZWNvbWUgYSBwcmlvcml0eSBmb3IgcmVzZWFyY2ggZnVuZGluZyBhbmQgYSByb3V0aW5lIHRvcGljIG9mIGRpc2N1c3Npb24gYmV0d2VlbiBkb2N0b3JzIGFuZCB0aGVpciBwYXRpZW50cyBhZnRlciBjYW5jZXIgdHJlYXRtZW50LCIgc2hlIGFkZGVkLgpTeXJqYWxhIGFuZCBjb2xsZWFndWVzIGhhZCAxNjEgcGF0aWVudHMgY29tcGxldGUgYW4gYXNzZXNzbWVudCBvZiB0aGVpciBzZXh1YWwgaGVhbHRoIGJlZm9yZSBIQ1QgYW5kIGF0IHNldmVyYWwgdGltZSBwb2ludHMgdXAgdG8gNSB5ZWFycyBhZnRlciBIQ1QuCkFsbCBvZiB0aGVtIGNvbXBsZXRlZCBvbmUgb3IgbW9yZSBzdXJ2ZXlzIGR1cmluZyB0aGUgNS15ZWFyIHBlcmlvZC4KQXQgdGhlIDUteWVhciBtYXJrLCB0aGVzZSBhc3Nlc3NtZW50cyB3ZXJlIGNvbXBhcmVkIGFnYWluc3QgYSBtYXRjaGVkIGNvbnRyb2wgZ3JvdXAgbWFkZSB1cCBvZiBzaWJsaW5ncywgZnJpZW5kcywgYW5kIHZvbHVudGVlcnMgZnJvbSB0aGUgY29tbXVuaXR5LgpUaGUgcmVzdWx0cyBzaG93ZWQgdGhhdCBib3RoIG1lbiBhbmQgd29tZW4gd2VyZSBoYXZpbmcgbGVzcyBzZXggNiBtb250aHMgYWZ0ZXIgSENUIHRoYW4gYmVmb3JlLCBidXQsIGJ5IDEgeWVhciwgc2V4dWFsIGFjdGl2aXR5IGZvciBtb3N0IG9mIHRoZSBtZW4gKDc0IHBlcmNlbnQpIGhhZCByZWNvdmVyZWQgdG8gcHJlLUhDVCBsZXZlbHMuCkZvciB3b21lbiwgcmVjb3Zlcnkgb2Ygc2V4dWFsIGFjdGl2aXR5IHRvb2sgbG9uZ2VyLCB3aXRoIGp1c3Qgb3ZlciBoYWxmICg1NSBwZXJjZW50KSByZXR1cm5pbmcgdG8gc2V4dWFsIGFjdGl2aXR5IGFmdGVyIDIgeWVhcnMuCkZvciB0aG9zZSB3aG8gd2VyZSBzZXh1YWxseSBhY3RpdmUgNSB5ZWFycyBhZnRlciBIQ1QsIGhvd2V2ZXIsIDQ2IHBlcmNlbnQgb2YgbWVuIGFuZCA4MCBwZXJjZW50IG9mIHdvbWVuIHNhaWQgdGhleSBoYWQgcHJvYmxlbXMgdGhhdCBkaXNydXB0ZWQgc2V4dWFsIGZ1bmN0aW9uLgpNb3Jlb3ZlciwgNSB5ZWFycyBhZnRlciBIQ1QsIHRoZSByYXRlcyBvZiBzZXh1YWwgYWN0aXZpdHkgYW5kIGxldmVsIG9mIHNleHVhbCBmdW5jdGlvbiB3ZXJlIGJlbG93IHRob3NlIG9mIHRoZSBjb250cm9sIGdyb3VwLCBzdWdnZXN0aW5nIHRoYXQgSENUIHJlY2lwaWVudHMgZGlkIG5vdCBmdWxseSByZWNvdmVyIGZyb20gdGhlIGVmZmVjdHMgb2YgdGhlIGNhbmNlciBpdHNlbGYgb3IgY2FuY2VyIHRyZWF0bWVudHMuCiJPbmUgdmVyeSBwb3NpdGl2ZSBhc3BlY3Qgb2YgdGhpcyByZXNlYXJjaCwiIFN5cmphbGEgdG9sZCBSZXV0ZXJzIEhlYWx0aCwgImlzIHRoYXQgYm90aCBtZW4gYW5kIHdvbWVuIGFyZSBtb3JlIHdpbGxpbmcgdG8gZGlzY3VzcyB0aGVpciAoc2V4dWFsKSBkaWZmaWN1bHRpZXMgdGhhbiB0aGV5IHdlcmUgYSBkZWNhZGUgYWdvLgpUaGlzIG1ha2VzIGl0IHBvc3NpYmxlIGZvciB1cyB0byBsZWFybiB3aGF0IG1lbiBhbmQgd29tZW4gbmVlZCBhbmQgdG8gZmluZCBvdXQgd2hhdCB3b3JrcyB0byBpbXByb3ZlIHRoZWlyIHNleCBsaXZlcy4KU09VUkNFOiBCbG9vZCwgb25saW5lIFNlcHRlbWJlciAxOCwgMjAwNy4K, 'ORG')]
VS5TLiBzZWVuIGRvbWluYXRpbmcgc2NpZW5jZSBOb2JlbHMgLS0gZm9yIG5vdwpCeSBTaW1vbiBKb2huc29uClNUT0NLSE9MTSAoUmV1dGVycykgLSBIZWF2eSBzcGVuZGluZyBieSB0aGUgVW5pdGVkIFN0YXRlcyBvbiByZXNlYXJjaCBpcyBsaWtlbHkgdG8gcGF5IG9mZiBhZ2FpbiBuZXh0IHdlZWssIHdpdGggaXRzIGxlYWRpbmcgc2NpZW50aXN0cyB0aXBwZWQgdG8gZG9taW5hdGUgdGhlIE5vYmVsIGF3YXJkcyBpbiBwaHlzaWNzLCBjaGVtaXN0cnkgYW5kIG1lZGljaW5lLgpCdXQgcGFzdCB3aW5uZXJzIGFuZCBleHBlcnRzIHNheSB0aGUgVS5TLiBzY2llbmNlIHN1cHJlbWFjeSBvZiB0aGUgbGFzdCBmZXcgeWVhcnMgbWF5IG5vdCBsYXN0IGZvcmV2ZXIuClN0b2NraG9sbSdzIEthcm9saW5za2EgSW5zdGl0dXRlIGFubm91bmNlcyB0aGUgMjAwNyBMYXVyZWF0ZSBmb3IgcGh5c2lvbG9neSBvciBtZWRpY2luZSBvbiBPY3RvYmVyIDguClRoZSBSb3lhbCBTd2VkaXNoIEFjYWRlbXkgb2YgU2NpZW5jZXMgdGhlbiBwcmVzZW50cyB0aGUgYXdhcmQgZm9yIHBoeXNpY3Mgb24gT2N0b2JlciA5IHdpdGggY2hlbWlzdHJ5IGZvbGxvd2luZyBvbiBPY3RvYmVyIDEwLgpVLlMuIHNjaWVudGlzdHMgYW5kIGluc3RpdHV0aW9ucyBoYXZlIGRvbWluYXRlZCB0aGUgd2lubmVycycgcm9zdGVyIGZvciB0aGUgMTAgbWlsbGlvbiBjcm93biAoJDEuNTQgbWlsbGlvbikgcHJpemUgYWNyb3NzIGFsbCB0aHJlZSBzY2llbmNlcyBpbiByZWNlbnQgeWVhcnMgd2l0aCBhIGNsZWFuIHN3ZWVwIGluIDIwMDYuCk1hbnkgc2F5IHRoZSBVLlMuIHN0cmFuZ2xlaG9sZCByZXN1bHRzIGZyb20gZ2VuZXJvdXMgZnVuZGluZyBmb3IgcmVzZWFyY2ggZnJvbSBhY3Jvc3MgdGhlIHdvcmxkJ3MgcmljaGVzdCBlY29ub215LgoiVGhlIFUuUy5BLiBoYXMgZ292ZXJubWVudCwgaW5kdXN0cnksIGFuZCBwaGlsYW50aHJvcGljIGZ1bmRpbmcgd2hlcmVhcyBtb3N0IGNvdW50cmllcywgbGlrZSBBdXN0cmFsaWEsIGhhdmUgb25seSBvbmUgcG9zc2libGUgbGFyZ2Ugc291cmNlLCIgc2FpZCBBdXN0cmFsaWFuIEJhcnJ5IE1hcnNoYWxsLCB3aG8gc2hhcmVkIHRoZSBOb2JlbCBNZWRpY2luZSBwcml6ZSBpbiAyMDA1LgpFdmVuIHRob3VnaCB0aGVzZSBwcm9ncmFtcyBkb24ndCBzZXQgb3V0IHRvIHdpbiBhIE5vYmVsIFByaXplLCB0aGV5IGVuZCB1cCBhdHRyYWN0aW5nIHNvIG1hbnkgc21hcnQgcGVvcGxlIHRoYXQgdGhlIHNwaW4tb2ZmIGlzIGEgTm9iZWwgUHJpemUtd2lubmluZyBkaXNjb3ZlcnkuClRoZSBVbml0ZWQgU3RhdGVzIHNwZW5kcyBhYm91dCAyLjcgcGVyY2VudCBvZiBpdHMgZ3Jvc3MgZG9tZXN0aWMgcHJvZHVjdCBvbiByZXNlYXJjaCBhbmQgZGV2ZWxvcG1lbnQgY29tcGFyZWQgd2l0aCBhYm91dCAxLjggcGVyY2VudCBpbiBFdXJvcGUuCkNoaW5hIGludmVzdHMgYWJvdXQgMS4zIHBlcmNlbnQuClRoZSBFVSBhaW1zIHRvIHNwZW5kIDMgcGVyY2VudCBvZiBncm9zcyBkb21lc3RpYyBwcm9kdWN0IG9uIHJlc2VhcmNoIGJ5IDIwMTAgc2luY2UgaXQgc2VlcyBpbm5vdmF0aW9uIGFzIGEgZ3Jvd3RoIGVuZ2luZS4KT3VyIG1lc3NhZ2UgaXMgdGhhdCB3ZSBhcmUgYmVoaW5kLgpOb3QganVzdCB0aGUgVS5TLiwgYnV0IENoaW5hIGFuZCBJbmRpYSBhcmUgY2F0Y2hpbmcgdXMgdXAsIiBzYWlkIEFudG9uaWEgTW9jaGFuLCBhdCB0aGUgRVUncyBEaXJlY3RvcmF0ZSBHZW5lcmFsIGZvciBTY2llbmNlIGFuZCBSZXNlYXJjaC4KU3RpbGwsIHRoZSBOb2JlbCBkb21pbmFuY2Ugb2YgdGhlIFVuaXRlZCBTdGF0ZXMgaXMgbGlrZWx5IHRvIHBlcnNpc3QsIGF0IGxlYXN0IGZvciB0aGUgdGltZSBiZWluZy4KVGhlIE5vYmVsIGp1ZGdlcyBvZnRlbiByZXdhcmQgZGlzY292ZXJpZXMgbWFkZSB5ZWFycywgaWYgbm90IGRlY2FkZXMsIGFnbywgZmF2b3JpbmcgZXN0YWJsaXNoZWQgdW5pdmVyc2l0aWVzIGFuZCBzY2llbnRpc3RzLgpBbHRob3VnaCBjb3VudHJpZXMgc3VjaCBhcyBDaGluYSBhbmQgSW5kaWEgYXJlIHB1bXBpbmcgZXZlci1sYXJnZXIgc3VtcyBpbnRvIHNjaWVuY2UsIGl0IG1heSBiZSBzb21lIHRpbWUgYmVmb3JlIHRoZSB3b3JrIG5vdyB1bmRlcndheSB3aW5zIHJlY29nbml0aW9uLgpMZWFkaW5nIHNjaWVudGlzdHMgYWxzbyBhdHRyYWN0IHRoZSBiZXN0IG9mIHRoZSBuZXh0IGdlbmVyYXRpb24gdG8gdGhlaXIgbGFicywgcGVycGV0dWF0aW5nIHRoZWlyIHN1Y2Nlc3MuCiJUaGVyZSBpcyBhIHN0cmF0ZWd5IGZvciBhIE5vYmVsIGFuZCBzZXZlcmFsIFUuUy4gaW5zdGl0dXRpb25zIGhhdmUgZXhwZXJpZW5jZSB3aXRoIE5vYmVscyBhbHJlYWR5IGFuZCB0aGVyZWZvcmUga25vdyBob3cgdG8gcHJvdGVjdCBhbmQgbnVydHVyZSB0aGVpciBwb3RlbnRpYWwgd2lubmVycywiIHNhaWQgTWFyc2hhbGwsIHdobyB3b24gdGhlIG1lZGljaW5lIHByaXplIGZvciB3b3JrIG9uIHBlcHRpYyB1bGNlcnMuClRoaW5ncyBtYXkgY2hhbmdlLgoiUHJlZG9taW5hbmNlIGZvciB0aGUgVS5TLiBhbmQgZm9yIFdlc3Rlcm4gRXVyb3BlYW4gY291bnRyaWVzIHdpbGwgbm90IGJlIGZvcmV2ZXIsIiBzYWlkIEpvaG4gTWF0aGVyLCBQaHlzaWNzIExhdXJlYXRlIGluIDIwMDYgZm9yIHdvcmsgb24gdGhlIG9yaWdpbnMgb2YgdGhlIHVuaXZlcnNlLgpUaGUgVW5pdGVkIFN0YXRlcyBtYXkgZXZlbiBiZSBleGNsdWRpbmcgaXRzZWxmIGZyb20gc29tZSBhcmVhcyBvZiBwb3RlbnRpYWxseSBwcml6ZS13aW5uaW5nIHJlc2VhcmNoLCBNYXRoZXIgc2FpZCwgY2l0aW5nIHN0ZW0gY2VsbHMgYW5kIEhJVi9BSURTIC0tIHJlc2VhcmNoIGFyZWFzIHRoYXQgaGF2ZSBhcm91c2VkIGNvbnRyb3ZlcnN5IGluIHRoZSBVbml0ZWQgU3RhdGVzLgoiVGhlIFUuUy4gaGFzIG1hZGUgaXQgZGlmZmljdWx0IGZvciBpdHMgcmVzZWFyY2hlcnMgaW4gc29tZSBhcmVhcywiIGhlIHNhaWQuClNvbWUgcmVzZWFyY2ggaXMgcG9saXRpY2FsLgpEZXZlbG9waW5nIGNvdW50cmllcyBhcmUgYWxzbyBhZG9wdGluZyBjbGVhciBzdHJhdGVnaWVzIHRvIGJvb3N0IHNjaWVudGlmaWMgZW5kZWF2b3IuCiJGaWZ0eSB5ZWFycyBmcm9tIG5vdywgdGhlIFUuUy4gZG9taW5hbmNlIHdpbGwgaGF2ZSBkZWNyZWFzZWQgcmVtYXJrYWJseSwiIHNhaWQgSGFycmlldCBXYWxsYmVyZy1IZW5yaWtzc29uLCBhIHByZXNpZGVudCBvZiBTd2VkZW4ncyBLYXJvbGluc2thIEluc3RpdHV0ZSBhbmQgcGFuZWwgbWVtYmVyIGZvciB0aGUgbWVkaWNpbmUgcHJpemUuCk15IGd1ZXNzIGlzIHRoYXQgeW91IHdpbGwgc2VlIG1vcmUgYW5kIG1vcmUgcHJpemUtd2lubmVycyBmcm9tIEFzaWEuCkFkZGl0aW9uYWwgcmVwb3J0aW5nIGJ5IE1pY2hhZWwgUGVycnkgaW4gU3lkbmV5Cg==
[(VS5TLiBzZWVuIGRvbWluYXRpbmcgc2NpZW5jZSBOb2JlbHMgLS0gZm9yIG5vdwpCeSBTaW1vbiBKb2huc29uClNUT0NLSE9MTSAoUmV1dGVycykgLSBIZWF2eSBzcGVuZGluZyBieSB0aGUgVW5pdGVkIFN0YXRlcyBvbiByZXNlYXJjaCBpcyBsaWtlbHkgdG8gcGF5IG9mZiBhZ2FpbiBuZXh0IHdlZWssIHdpdGggaXRzIGxlYWRpbmcgc2NpZW50aXN0cyB0aXBwZWQgdG8gZG9taW5hdGUgdGhlIE5vYmVsIGF3YXJkcyBpbiBwaHlzaWNzLCBjaGVtaXN0cnkgYW5kIG1lZGljaW5lLgpCdXQgcGFzdCB3aW5uZXJzIGFuZCBleHBlcnRzIHNheSB0aGUgVS5TLiBzY2llbmNlIHN1cHJlbWFjeSBvZiB0aGUgbGFzdCBmZXcgeWVhcnMgbWF5IG5vdCBsYXN0IGZvcmV2ZXIuClN0b2NraG9sbSdzIEthcm9saW5za2EgSW5zdGl0dXRlIGFubm91bmNlcyB0aGUgMjAwNyBMYXVyZWF0ZSBmb3IgcGh5c2lvbG9neSBvciBtZWRpY2luZSBvbiBPY3RvYmVyIDguClRoZSBSb3lhbCBTd2VkaXNoIEFjYWRlbXkgb2YgU2NpZW5jZXMgdGhlbiBwcmVzZW50cyB0aGUgYXdhcmQgZm9yIHBoeXNpY3Mgb24gT2N0b2JlciA5IHdpdGggY2hlbWlzdHJ5IGZvbGxvd2luZyBvbiBPY3RvYmVyIDEwLgpVLlMuIHNjaWVudGlzdHMgYW5kIGluc3RpdHV0aW9ucyBoYXZlIGRvbWluYXRlZCB0aGUgd2lubmVycycgcm9zdGVyIGZvciB0aGUgMTAgbWlsbGlvbiBjcm93biAoJDEuNTQgbWlsbGlvbikgcHJpemUgYWNyb3NzIGFsbCB0aHJlZSBzY2llbmNlcyBpbiByZWNlbnQgeWVhcnMgd2l0aCBhIGNsZWFuIHN3ZWVwIGluIDIwMDYuCk1hbnkgc2F5IHRoZSBVLlMuIHN0cmFuZ2xlaG9sZCByZXN1bHRzIGZyb20gZ2VuZXJvdXMgZnVuZGluZyBmb3IgcmVzZWFyY2ggZnJvbSBhY3Jvc3MgdGhlIHdvcmxkJ3MgcmljaGVzdCBlY29ub215LgoiVGhlIFUuUy5BLiBoYXMgZ292ZXJubWVudCwgaW5kdXN0cnksIGFuZCBwaGlsYW50aHJvcGljIGZ1bmRpbmcgd2hlcmVhcyBtb3N0IGNvdW50cmllcywgbGlrZSBBdXN0cmFsaWEsIGhhdmUgb25seSBvbmUgcG9zc2libGUgbGFyZ2Ugc291cmNlLCIgc2FpZCBBdXN0cmFsaWFuIEJhcnJ5IE1hcnNoYWxsLCB3aG8gc2hhcmVkIHRoZSBOb2JlbCBNZWRpY2luZSBwcml6ZSBpbiAyMDA1LgpFdmVuIHRob3VnaCB0aGVzZSBwcm9ncmFtcyBkb24ndCBzZXQgb3V0IHRvIHdpbiBhIE5vYmVsIFByaXplLCB0aGV5IGVuZCB1cCBhdHRyYWN0aW5nIHNvIG1hbnkgc21hcnQgcGVvcGxlIHRoYXQgdGhlIHNwaW4tb2ZmIGlzIGEgTm9iZWwgUHJpemUtd2lubmluZyBkaXNjb3ZlcnkuClRoZSBVbml0ZWQgU3RhdGVzIHNwZW5kcyBhYm91dCAyLjcgcGVyY2VudCBvZiBpdHMgZ3Jvc3MgZG9tZXN0aWMgcHJvZHVjdCBvbiByZXNlYXJjaCBhbmQgZGV2ZWxvcG1lbnQgY29tcGFyZWQgd2l0aCBhYm91dCAxLjggcGVyY2VudCBpbiBFdXJvcGUuCkNoaW5hIGludmVzdHMgYWJvdXQgMS4zIHBlcmNlbnQuClRoZSBFVSBhaW1zIHRvIHNwZW5kIDMgcGVyY2VudCBvZiBncm9zcyBkb21lc3RpYyBwcm9kdWN0IG9uIHJlc2VhcmNoIGJ5IDIwMTAgc2luY2UgaXQgc2VlcyBpbm5vdmF0aW9uIGFzIGEgZ3Jvd3RoIGVuZ2luZS4KT3VyIG1lc3NhZ2UgaXMgdGhhdCB3ZSBhcmUgYmVoaW5kLgpOb3QganVzdCB0aGUgVS5TLiwgYnV0IENoaW5hIGFuZCBJbmRpYSBhcmUgY2F0Y2hpbmcgdXMgdXAsIiBzYWlkIEFudG9uaWEgTW9jaGFuLCBhdCB0aGUgRVUncyBEaXJlY3RvcmF0ZSBHZW5lcmFsIGZvciBTY2llbmNlIGFuZCBSZXNlYXJjaC4KU3RpbGwsIHRoZSBOb2JlbCBkb21pbmFuY2Ugb2YgdGhlIFVuaXRlZCBTdGF0ZXMgaXMgbGlrZWx5IHRvIHBlcnNpc3QsIGF0IGxlYXN0IGZvciB0aGUgdGltZSBiZWluZy4KVGhlIE5vYmVsIGp1ZGdlcyBvZnRlbiByZXdhcmQgZGlzY292ZXJpZXMgbWFkZSB5ZWFycywgaWYgbm90IGRlY2FkZXMsIGFnbywgZmF2b3JpbmcgZXN0YWJsaXNoZWQgdW5pdmVyc2l0aWVzIGFuZCBzY2llbnRpc3RzLgpBbHRob3VnaCBjb3VudHJpZXMgc3VjaCBhcyBDaGluYSBhbmQgSW5kaWEgYXJlIHB1bXBpbmcgZXZlci1sYXJnZXIgc3VtcyBpbnRvIHNjaWVuY2UsIGl0IG1heSBiZSBzb21lIHRpbWUgYmVmb3JlIHRoZSB3b3JrIG5vdyB1bmRlcndheSB3aW5zIHJlY29nbml0aW9uLgpMZWFkaW5nIHNjaWVudGlzdHMgYWxzbyBhdHRyYWN0IHRoZSBiZXN0IG9mIHRoZSBuZXh0IGdlbmVyYXRpb24gdG8gdGhlaXIgbGFicywgcGVycGV0dWF0aW5nIHRoZWlyIHN1Y2Nlc3MuCiJUaGVyZSBpcyBhIHN0cmF0ZWd5IGZvciBhIE5vYmVsIGFuZCBzZXZlcmFsIFUuUy4gaW5zdGl0dXRpb25zIGhhdmUgZXhwZXJpZW5jZSB3aXRoIE5vYmVscyBhbHJlYWR5IGFuZCB0aGVyZWZvcmUga25vdyBob3cgdG8gcHJvdGVjdCBhbmQgbnVydHVyZSB0aGVpciBwb3RlbnRpYWwgd2lubmVycywiIHNhaWQgTWFyc2hhbGwsIHdobyB3b24gdGhlIG1lZGljaW5lIHByaXplIGZvciB3b3JrIG9uIHBlcHRpYyB1bGNlcnMuClRoaW5ncyBtYXkgY2hhbmdlLgoiUHJlZG9taW5hbmNlIGZvciB0aGUgVS5TLiBhbmQgZm9yIFdlc3Rlcm4gRXVyb3BlYW4gY291bnRyaWVzIHdpbGwgbm90IGJlIGZvcmV2ZXIsIiBzYWlkIEpvaG4gTWF0aGVyLCBQaHlzaWNzIExhdXJlYXRlIGluIDIwMDYgZm9yIHdvcmsgb24gdGhlIG9yaWdpbnMgb2YgdGhlIHVuaXZlcnNlLgpUaGUgVW5pdGVkIFN0YXRlcyBtYXkgZXZlbiBiZSBleGNsdWRpbmcgaXRzZWxmIGZyb20gc29tZSBhcmVhcyBvZiBwb3RlbnRpYWxseSBwcml6ZS13aW5uaW5nIHJlc2VhcmNoLCBNYXRoZXIgc2FpZCwgY2l0aW5nIHN0ZW0gY2VsbHMgYW5kIEhJVi9BSURTIC0tIHJlc2VhcmNoIGFyZWFzIHRoYXQgaGF2ZSBhcm91c2VkIGNvbnRyb3ZlcnN5IGluIHRoZSBVbml0ZWQgU3RhdGVzLgoiVGhlIFUuUy4gaGFzIG1hZGUgaXQgZGlmZmljdWx0IGZvciBpdHMgcmVzZWFyY2hlcnMgaW4gc29tZSBhcmVhcywiIGhlIHNhaWQuClNvbWUgcmVzZWFyY2ggaXMgcG9saXRpY2FsLgpEZXZlbG9waW5nIGNvdW50cmllcyBhcmUgYWxzbyBhZG9wdGluZyBjbGVhciBzdHJhdGVnaWVzIHRvIGJvb3N0IHNjaWVudGlmaWMgZW5kZWF2b3IuCiJGaWZ0eSB5ZWFycyBmcm9tIG5vdywgdGhlIFUuUy4gZG9taW5hbmNlIHdpbGwgaGF2ZSBkZWNyZWFzZWQgcmVtYXJrYWJseSwiIHNhaWQgSGFycmlldCBXYWxsYmVyZy1IZW5yaWtzc29uLCBhIHByZXNpZGVudCBvZiBTd2VkZW4ncyBLYXJvbGluc2thIEluc3RpdHV0ZSBhbmQgcGFuZWwgbWVtYmVyIGZvciB0aGUgbWVkaWNpbmUgcHJpemUuCk15IGd1ZXNzIGlzIHRoYXQgeW91IHdpbGwgc2VlIG1vcmUgYW5kIG1vcmUgcHJpemUtd2lubmVycyBmcm9tIEFzaWEuCkFkZGl0aW9uYWwgcmVwb3J0aW5nIGJ5IE1pY2hhZWwgUGVycnkgaW4gU3lkbmV5Cg==, 'ORG')]
VG9ycmUgcmVqZWN0cyBvZmZlciwgWWFua3Mgc2VlayBuZXcgbWFuYWdlcgpORVcgWU9SSyAoUmV1dGVycykgLSBMb25nLXRpbWUgbWFuYWdlciBKb2UgVG9ycmUgaGFzIHR1cm5lZCBkb3duIGEgb25lLXllYXIgZGVhbCB0byBjb21lIGJhY2sgYW5kIGxlYWQgdGhlIE5ldyBZb3JrIFlhbmtlZXMsIG9mZmljaWFscyBvZiB0aGUgQW1lcmljYW4gTGVhZ3VlIHRlYW0gc2FpZCBvbiBUaHVyc2RheSwgYWRkaW5nIHRoZXkgd2VyZSBub3cgbG9va2luZyBmb3IgYSBuZXcgbWFuYWdlci4KVG9ycmUsIHdobyBtYWRlIG92ZXIgJDcgbWlsbGlvbiBsYXN0IHNlYXNvbiBpbiB0aGUgbGFzdCB5ZWFyIG9mIGEgdGhyZWUteWVhciBwYWN0LCB3YXMgb2ZmZXJlZCBiYXNlIHBheSBvZiAkNSBtaWxsaW9uIGFuZCBhICQxIG1pbGxpb24gYm9udXMgZm9yIHJlYWNoaW5nIGVhY2ggc3VjY2Vzc2l2ZSByb3VuZCBvZiBwbGF5b2ZmcywgdGVhbSBwcmVzaWRlbnQgUmFuZHkgTGV2aW5lIHRvbGQgYSBjb25mZXJlbmNlIGNhbGwuCiJKb2UgVG9ycmUgdHVybmVkIHRoYXQgb2ZmZXIgZG93biB0b2RheSwiIHNhaWQgTGV2aW5lLCB3aG8gYWRkZWQgdGhlcmUgd2FzIGFuIG9wdGlvbiBmb3IgVG9ycmUgdG8gcmV0dXJuIGZvciBhbm90aGVyIHNlYXNvbiBhdCAkOCBtaWxsaW9uIGlmIHRoZSBjbHViIGdvdCB0byB0aGUgMjAwOCBXb3JsZCBTZXJpZXMuClRvcnJlLCA2Nywgd2FzIG5vdCBpbW1lZGlhdGVseSBhdmFpbGFibGUgZm9yIGNvbW1lbnQuCiJUaGUgZ29hbCBvZiB0aGlzIGZyYW5jaGlzZSBpcyB0byB3aW4gdGhlIFdvcmxkIFNlcmllcywiIExldmluZSBzYWlkIGFib3V0IHRoZSBjbHViIHRoYXQgaGFzIHdvbiBhIHJlY29yZCAyNiBNYWpvciBMZWFndWUgQmFzZWJhbGwgY3Jvd25zLgpVbmZvcnR1bmF0ZWx5LCB3ZSBoYXZlIG5vdCBtZXQgdGhhdCBnb2FsIGZvciBzZXZlbiB5ZWFycy4KSXQncyBub2JvZHkncyBmYXVsdCwgbm90IG9uZSBwZXJzb24ncyBmYXVsdCB3ZSBkaWRuJ3Qgd2luIHRoZSBXb3JsZCBTZXJpZXMuCkl0J3MgY29sbGVjdGl2ZWx5IGFsbCBvdXIgZmF1bHQuCkxldmluZSBzYWlkIFRvcnJlIGZsZXcgZG93biB0byBUYW1wYSwgRmxvcmlkYSwgVGh1cnNkYXkgbW9ybmluZyB0byBtZWV0IHdpdGggdGhlIFlhbmtlZXMgaGllcmFyY2h5IGFuZCB0aGF0IHRoZSBwcm9jZXNzIGhhZCBiZWVuIGNvbmR1Y3RlZCB3aXRoIGRpZ25pdHkgb24gYm90aCBzaWRlcy4KV2UgcmVzcGVjdCBKb2UgVG9ycmUgYW4gYXdmdWwgbG90LgpIZSBpcyBhIGdyZWF0LCBncmVhdCBwZXJzb24gYW5kIGEgZ3JlYXQgWWFua2VlLgpBbGwgd2UgY291bGQgZG8gdG9nZXRoZXIgYXMgYSBncm91cCBpcyBtYWtlIGhpbSB0aGUgYmVzdCBvZmZlciB3ZSBjb3VsZCB0aGF0IHdhcyB0aGUgYmVzdCBmb3IgdGhlIE5ldyBZb3JrIFlhbmtlZXMuClRvcnJlIGxhc3Qgc2Vhc29uIG1hZGUgbW9yZSB0aGFuIGRvdWJsZSB0aGUgbmV4dCBoaWdoZXN0IHBhaWQgbWFuYWdlciBpbiB0aGUgbWFqb3IgbGVhZ3VlcywgTG91IFBpbmllbGxhIG9mIHRoZSBDaGljYWdvIEN1YnMgYXQgJDMuNSBtaWxsaW9uLgpUaGUgWWFua2VlcyB3ZXJlIGVsaW1pbmF0ZWQgZnJvbSB0aGUgcGxheW9mZnMgaW4gdGhlIGZpcnN0IHJvdW5kIGVhcmxpZXIgdGhpcyBtb250aCBieSB0aGUgQ2xldmVsYW5kIEluZGlhbnMgZm9yIHRoZWlyIHRoaXJkIHN1Y2Nlc3NpdmUgZmlyc3Qtcm91bmQgb3VzdGVyLgpEdXJpbmcgdGhlIHNlcmllcyBhZ2FpbnN0IENsZXZlbGFuZCwgWWFua2VlcyBvd25lciBHZW9yZ2UgU3RlaW5icmVubmVyIHNhaWQgaW4gYSBuZXdzcGFwZXIgaW50ZXJ2aWV3IHRoYXQgVG9ycmUgd2FzIG5vdCBsaWtlbHkgdG8gcmV0dXJuIGFzIG1hbmFnZXIgaWYgdGhlIGNsdWIgbG9zdC4KIldlIGNob3NlIGEgcGVyZm9ybWFuY2UtYmFzZWQgbW9kZWwgYmVjYXVzZSB3ZSB0aGluayBpdCdzIGltcG9ydGFudCB0byBtb3RpdmF0ZSBwZW9wbGUgYmFzZWQgb24gcGVyZm9ybWFuY2UsIiBMZXZpbmUgc2FpZCBhYm91dCB0aGUgWWFua2VlcyBvZmZlciB0byBUb3JyZS4KV2UgdGhvdWdodCBpdCB3YXMgdmVyeSBmYWlyLCBjbGVhcmx5IGF0IHRoZSB0b3Agb2YgdGhlIG1hcmtldCwgYnV0IHdlIHJlc3BlY3QgSm9lJ3MgZGVjaXNpb24uCllhbmtlZXMgZ2VuZXJhbCBtYW5hZ2VyIEJyaWFuIENhc2htYW4gc2FpZCB0aGUgcHJvY2VzcyBvZiBmaW5kaW5nIGEgbmV3IG1hbmFnZXIgd291bGQgbm93IGJlZ2luLgoiSXQncyBnb2luZyB0byB0YWtlIHNvbWUgdGltZSwiIHNhaWQgQ2FzaG1hbi4KV2UnbGwgaGF2ZSB0byBzaXQgZG93biB3aXRoIGFsbCBwYXJ0aWVzIGludm9sdmVkIGFuZCBtYWtlIHJlY29tbWVuZGF0aW9ucyB0byBvd25lcnNoaXAsIGNvbXBpbGUgYSBsaXN0IG9mIHZpYWJsZSBjYW5kaWRhdGVzLgpUaGVyZSBjb3VsZCBiZSBzb21lIHN1cnByaXNpbmcgbmFtZXMgc2hvd2luZyB1cC4KV2UgaGF2ZSB0aGUgY2hhbGxlbmdlIGFoZWFkIG9mIHVzIHRvIGJlZ2luIHRoZSBwcm9jZXNzIG9mIGxvb2tpbmcgZm9yIHRoZSBiZXN0IHBlcnNvbiBmb3IgdGhhdCBwb3NpdGlvbiBmb3IgdGhlIFlhbmtlZXMgaW4gMjAwOCBhbmQgYmV5b25kLgo=
[]
V2VhbHRoIGFuZCBoZWxsbmVzczogQXNpYSBzcGFzIGZhY2UgYnVzaW5lc3MgcmVhbGl0eQpCeSBEb21pbmljIFdoaXRpbmcKTUFOSUxBIChSZXV0ZXJzIExpZmUhKSAtIEZvciBhbiBpbmR1c3RyeSB0aGF0IHByb21vdGVzIHdlbGxiZWluZyBhbmQgcmVsYXhhdGlvbiwgc3BhcyBhcmUgYmVjb21pbmcgY3V0LXRocm9hdCBidXNpbmVzc2VzIHdoZXJlIHlvdXIgbWFya2V0aW5nIGNhbXBhaWduIG1hdHRlcnMganVzdCBhcyBtdWNoIGFzIHlvdXIgYm9keSB3cmFwLgpBdCBhIHJlY2VudCBnYXRoZXJpbmcgaW4gTWFuaWxhLCBtYXJrZXRpbmcgZ3VydSBSYXltb25kIE5hZGVhdSB0cmllZCB0byBzaG93IHNvbWUgMzAwIEFzaWFuIHNwYSBleGVjdXRpdmVzIGhvdyB0byBtYWtlIHRoZWlyIGZvcnR1bmVzIGluIHRoZSByZWdpb24ncyBzcGEgYm9vbSwgYW5kIGFsc28gc3Vydml2ZSBpbiBhIHRvdWdoIGluZHVzdHJ5IHRoYXQgaGFzIG1vcmUgdGhhbiBkb3VibGVkIGluIHRoZSBsYXN0IGZpdmUgeWVhcnMuCiJZb3UncmUgc3VjaCBuaWNlIHBlb3BsZSwgYnV0IHlvdSBjYW4gZ2V0IG92ZXIgdGhhdCwiIHNhaWQgTmFkZWF1LCBhdXRob3Igb2YgIkxpdmluZyBicmFuZHMiIGFuZCBhIGNvbnN1bHRhbnQgdG8gSG9sbHl3b29kIGFjdHJlc3MgYW5kIHNpbmdlciBKZW5uaWZlciBMb3Blei4KVHJhZGl0aW9uYWwgbWFya2V0aW5nIGlzIGFib3V0IGhhdGluZyBlYWNoIG90aGVyLCBzbyB5b3UncmUgYW4gYW5vbWFseS4KRHVyaW5nIHRoZSBldmVudCwgb25lIGNvbXBlcmUgbmVydm91c2x5IHN0YXJ0ZWQgYSBzcGVlY2ggd2l0aCBhIHNwb29uZXJpc20sIHNheWluZyBzcGFzIHdlcmUgImFsbCBhYm91dCB3ZWFsdGggYW5kIGhlbGxuZXNzLiIKT3RoZXIgc3BhIG93bmVycyBzZWVtZWQgdW5hYmxlIHRvIGNvcGUgd2l0aCB0aGUgZmFjdCB0aGF0IHRoZXkgd2VyZSBsb3NpbmcgbWFzc2V1c2VzIHRvIGJldHRlciBwYXlpbmcgc3BhcyBpbiBEdWJhaS4KQXJvdW5kIDIsMjUwIHNwYXMgb3BlcmF0ZSBpbiBTb3V0aGVhc3QgQXNpYSBhbmQgQXVzdHJhbGlhLCBhY2NvcmRpbmcgdG8gcmVzZWFyY2ggZmlybSBJbnRlbGxpZ2VudCBTcGFzLCBhbmQgYWJvdXQgMTMwIGFyZSB1bmRlciBjb25zdHJ1Y3Rpb24gYW5kIHNldCB0byBvcGVuIG5leHQgeWVhci4KU29tZSBpbmR1c3RyeSBwbGF5ZXJzIHNheSBhIGZ1cnRoZXIgNjAwIHdpbGwgb3BlbiBpbiB0aGUgbmV4dCBmaXZlIHllYXJzLgpJbiBhIHJlZ2lvbiB3aGVyZSBtYXNzYWdlIHdhcyB0cmFkaXRpb25hbGx5IHBhcnQgb2YgZGFpbHkgbGlmZSwgc3BhcyBhcHBlYWwgdG8gdGhlIGFmZmx1ZW50IGFuZCB0b3VyaXN0cyBieSBhZGRpbmcgaGVyYmFsIHdyYXBzLCBpY2UgZm91bnRhaW5zLCBtdWQgYW5kIHNlYXdhdGVyIGJhdGhzIGFuZCBhcm9tYXRoZXJhcHkuCkhvdGVscyB0b28gYXJlIGZpbmRpbmcgc3BhcyBsdWNyYXRpdmUgYW5kIGFyZSBhdCB0aGUgZm9yZWZyb250IG9mIHRoZSBleHBhbnNpb24sIGVzcGVjaWFsbHkgaW4gVGhhaWxhbmQgYW5kIEluZG9uZXNpYS4KQXNpYSdzIGNhc2lubyBjYXBpdGFsIE1hY2F1IGFuZCBvdGhlciBDaGluZXNlIGRlc3RpbmF0aW9ucyBhcmUgdGhlIG5leHQgZ3Jvd3RoIGhvdHNwb3RzLgpUaGUgTWFuZGFyaW4gT3JpZW50YWwgSG90ZWwgR3JvdXAgaGFzIGZvdW5kIGl0cyBndWVzdHMgaW4gdGhlIFVuaXRlZCBTdGF0ZXMgc3BlbmQgb24gYXZlcmFnZSAkNzYgbW9yZSBpbiBhIGhvdGVsIHdpdGggYSBzcGEsIGFuZCBzdGF5IGEgZGF5IGxvbmdlciwgdGhlIGZpcm0ncyBzcGEgZGlyZWN0b3IgQW5kcmV3IEdpYnNvbiBzYWlkLgoiSXQncyBhIHBpbGxhciBvZiBvdXIgYnVzaW5lc3MsIiBoZSBhZGRlZC4KQnV0IERpZXRlciBCdWNobmVyLCB3aG8gcnVucyBhIEJhbmdrb2stYmFzZWQgc3BhIHRyYWluaW5nIGZpcm0gY2FsbGVkIFVyYmFuIEhlYWxpbmcsIHNhaWQgbWFueSBzcGEgbWFuYWdlcnMgd2VyZSB1bnByZXBhcmVkIGZvciB0aGUgYnVzaW5lc3MgdGFza3MgYXNrZWQgb2YgdGhlbS4KIk5vdyBzcGEgbWFuYWdlcnMgYXJlIHJlcXVpcmVkIHRvIGNvbWUgdXAgd2l0aCBmZWFzaWJpbGl0eSBzdHVkaWVzLCBhbmQgY2FzaCBmbG93IGZvcmVjYXN0cywiIEJ1Y2huZXIgc2FpZC4KVGhleSdyZSBzdWRkZW5seSBwdXNoZWQgaW50byBhbiBhcmVuYSBubyBvbmUncyBldmVyIHByZXBhcmVkIHRoZW0gZm9yLgpJZiB5b3UgbG9vayBhdCBvdGhlciBpbmR1c3RyaWVzLCB3ZSdyZSB3YXkgYmVoaW5kLgpTcGFzIGFsc28gbmVlZCB0byBnZXQgbW9yZSBpbnZlbnRpdmUgd2l0aCB0aGVpciBtYXJrZXRpbmcsIE5hZGVhdSBzYWlkLgpNb3N0IGhhdmUgYSBwcmVkZWxpY3Rpb24gZm9yIHBpY3R1cmVzIG9mIGEgY29udGVudGVkIGNsZWFyLXNraW5uZWQgYmVhdXR5IGx5aW5nIGZhY2VkIGRvd24gb24gYSBtYXNzYWdlIHRhYmxlLCB1c3VhbGx5IHdpdGggc29tZSBtZW50aW9uIG9mICJwYW1wZXJpbmciIG9yICJpbmR1bGdlbmNlLiIKIklmIHlvdSBzYXkgJ21pbmQsIGJvZHkgYW5kIHNvdWwnIHlvdSBiZWNvbWUgYSBjb21tb2RpdHkgLS0gcG90YXRvZXMsIiBOYWRlYXUgc2FpZC4KQWRhcHQgaXQuCkhlIHNhaWQgc3BhcyBzaG91bGQgbGF1bmNoIHByb2R1Y3RzIGFuZCBhZG9wdCBjdXR0aW5nIGVkZ2UgbWFya2V0aW5nIHRlY2huaXF1ZXMuCkJlY2F1c2Ugb2YgdG91Z2hlciBjb21wZXRpdGlvbiwgc29tZSBzcGFzIHdlcmUgbWFraW5nIHVucmVhbGlzdGljIHByb21pc2VzIGFib3V0IHRyZWF0bWVudHMsIGFjY29yZGluZyB0byBTYW1hbnRoYSBGb3N0ZXIsIGEgZGlyZWN0b3IgYXQgVGhhaSByZXNvcnQgQ2hpdmEtU29tLgpTaGUgcG9pbnRlZCB0byBhIHN1cnZleSBieSBhIFUuUy4gbWFnYXppbmUgdGhhdCBzaG93ZWQgNDYgcGVyY2VudCBvZiByZXNwb25kZW50cyBzYWlkIHRoZXkgaGFkIGhhZCBhIGJhZCBzcGEgZXhwZXJpZW5jZSBpbiB0aGUgcHJldmlvdXMgMTIgbW9udGhzLCBpbmNsdWRpbmcgY29tcGxhaW50cyBhYm91dCBwdXNoeSBzdGFmZiwgdW5oeWdpZW5pYyBwcmVtaXNlcywgbm9pc2UgYW5kIGxhY2sgb2YgcHJpdmFjeS4KV2l0aCAid2VsbG5lc3MiIHRoZSBuZXcgaW5kdXN0cnkgYnV6endvcmQgLS0gdGhlIGlkZWEgb2YgZGV2ZWxvcGluZyBhIGhlYWx0aHkgbWluZCBhbmQgYm9keSAtLSBzcGFzIGFyZSBicmluZ2luZyBpbiBhbHRlcm5hdGl2ZSBtZWRpY2FsIHRyZWF0bWVudHMsIGluY2x1ZGluZyBDaGluZXNlIG1lZGljaW5lLgpBbmQgY29udmVudGlvbmFsIGhvc3BpdGFscyBhcmUgZ2V0dGluZyBpbiBvbiB0aGUgYWN0LgpTaW5nYXBvcmUncyBSYWZmbGVzIE1lZGljYWwgR3JvdXAsIGZvciBleGFtcGxlLCBoYXMgc2V0IHVwIGFuICJhZXN0aGV0aWNzIGNlbnRyZSIgd2l0aCBkZXRveCBwcm9ncmFtcyBhbmQgU3dlZGlzaCBtYXNzYWdlIGFkdmVydGlzZWQgbmV4dCB0byBicmVhc3QgYXVnbWVudGF0aW9uIGFuZCBib3RveC4KTmFkZWF1IHNhaWQgc3BhcyBzaG91bGQgc3RvcCBiZWluZyBjb3kgYWJvdXQgYWR2ZXJ0aXNpbmcgd2hhdCBwZW9wbGUgcmVhbGx5IHdhbnRlZDogYmV0dGVyIGxvb2tzIGFuZCBzZXguCiJQZW9wbGUgbGlrZSBzZXgsIGFuZCBpZiBwZW9wbGUgYXJlIHdlbGwsIHRoZXkgaGF2ZSBzZXgsIiBoZSBzYWlkLgpBbmQgaW4gdGhlIHJlYWwgd29ybGQsIHdoYXQgcGVvcGxlIHdhbnQgaXMgYmVhdXR5IGF0IGFueSBjb3N0IGFuZCBpbW1vcnRhbGl0eS4K
[(V2VhbHRoIGFuZCBoZWxsbmVzczogQXNpYSBzcGFzIGZhY2UgYnVzaW5lc3MgcmVhbGl0eQpCeSBEb21pbmljIFdoaXRpbmcKTUFOSUxBIChSZXV0ZXJzIExpZmUhKSAtIEZvciBhbiBpbmR1c3RyeSB0aGF0IHByb21vdGVzIHdlbGxiZWluZyBhbmQgcmVsYXhhdGlvbiwgc3BhcyBhcmUgYmVjb21pbmcgY3V0LXRocm9hdCBidXNpbmVzc2VzIHdoZXJlIHlvdXIgbWFya2V0aW5nIGNhbXBhaWduIG1hdHRlcnMganVzdCBhcyBtdWNoIGFzIHlvdXIgYm9keSB3cmFwLgpBdCBhIHJlY2VudCBnYXRoZXJpbmcgaW4gTWFuaWxhLCBtYXJrZXRpbmcgZ3VydSBSYXltb25kIE5hZGVhdSB0cmllZCB0byBzaG93IHNvbWUgMzAwIEFzaWFuIHNwYSBleGVjdXRpdmVzIGhvdyB0byBtYWtlIHRoZWlyIGZvcnR1bmVzIGluIHRoZSByZWdpb24ncyBzcGEgYm9vbSwgYW5kIGFsc28gc3Vydml2ZSBpbiBhIHRvdWdoIGluZHVzdHJ5IHRoYXQgaGFzIG1vcmUgdGhhbiBkb3VibGVkIGluIHRoZSBsYXN0IGZpdmUgeWVhcnMuCiJZb3UncmUgc3VjaCBuaWNlIHBlb3BsZSwgYnV0IHlvdSBjYW4gZ2V0IG92ZXIgdGhhdCwiIHNhaWQgTmFkZWF1LCBhdXRob3Igb2YgIkxpdmluZyBicmFuZHMiIGFuZCBhIGNvbnN1bHRhbnQgdG8gSG9sbHl3b29kIGFjdHJlc3MgYW5kIHNpbmdlciBKZW5uaWZlciBMb3Blei4KVHJhZGl0aW9uYWwgbWFya2V0aW5nIGlzIGFib3V0IGhhdGluZyBlYWNoIG90aGVyLCBzbyB5b3UncmUgYW4gYW5vbWFseS4KRHVyaW5nIHRoZSBldmVudCwgb25lIGNvbXBlcmUgbmVydm91c2x5IHN0YXJ0ZWQgYSBzcGVlY2ggd2l0aCBhIHNwb29uZXJpc20sIHNheWluZyBzcGFzIHdlcmUgImFsbCBhYm91dCB3ZWFsdGggYW5kIGhlbGxuZXNzLiIKT3RoZXIgc3BhIG93bmVycyBzZWVtZWQgdW5hYmxlIHRvIGNvcGUgd2l0aCB0aGUgZmFjdCB0aGF0IHRoZXkgd2VyZSBsb3NpbmcgbWFzc2V1c2VzIHRvIGJldHRlciBwYXlpbmcgc3BhcyBpbiBEdWJhaS4KQXJvdW5kIDIsMjUwIHNwYXMgb3BlcmF0ZSBpbiBTb3V0aGVhc3QgQXNpYSBhbmQgQXVzdHJhbGlhLCBhY2NvcmRpbmcgdG8gcmVzZWFyY2ggZmlybSBJbnRlbGxpZ2VudCBTcGFzLCBhbmQgYWJvdXQgMTMwIGFyZSB1bmRlciBjb25zdHJ1Y3Rpb24gYW5kIHNldCB0byBvcGVuIG5leHQgeWVhci4KU29tZSBpbmR1c3RyeSBwbGF5ZXJzIHNheSBhIGZ1cnRoZXIgNjAwIHdpbGwgb3BlbiBpbiB0aGUgbmV4dCBmaXZlIHllYXJzLgpJbiBhIHJlZ2lvbiB3aGVyZSBtYXNzYWdlIHdhcyB0cmFkaXRpb25hbGx5IHBhcnQgb2YgZGFpbHkgbGlmZSwgc3BhcyBhcHBlYWwgdG8gdGhlIGFmZmx1ZW50IGFuZCB0b3VyaXN0cyBieSBhZGRpbmcgaGVyYmFsIHdyYXBzLCBpY2UgZm91bnRhaW5zLCBtdWQgYW5kIHNlYXdhdGVyIGJhdGhzIGFuZCBhcm9tYXRoZXJhcHkuCkhvdGVscyB0b28gYXJlIGZpbmRpbmcgc3BhcyBsdWNyYXRpdmUgYW5kIGFyZSBhdCB0aGUgZm9yZWZyb250IG9mIHRoZSBleHBhbnNpb24sIGVzcGVjaWFsbHkgaW4gVGhhaWxhbmQgYW5kIEluZG9uZXNpYS4KQXNpYSdzIGNhc2lubyBjYXBpdGFsIE1hY2F1IGFuZCBvdGhlciBDaGluZXNlIGRlc3RpbmF0aW9ucyBhcmUgdGhlIG5leHQgZ3Jvd3RoIGhvdHNwb3RzLgpUaGUgTWFuZGFyaW4gT3JpZW50YWwgSG90ZWwgR3JvdXAgaGFzIGZvdW5kIGl0cyBndWVzdHMgaW4gdGhlIFVuaXRlZCBTdGF0ZXMgc3BlbmQgb24gYXZlcmFnZSAkNzYgbW9yZSBpbiBhIGhvdGVsIHdpdGggYSBzcGEsIGFuZCBzdGF5IGEgZGF5IGxvbmdlciwgdGhlIGZpcm0ncyBzcGEgZGlyZWN0b3IgQW5kcmV3IEdpYnNvbiBzYWlkLgoiSXQncyBhIHBpbGxhciBvZiBvdXIgYnVzaW5lc3MsIiBoZSBhZGRlZC4KQnV0IERpZXRlciBCdWNobmVyLCB3aG8gcnVucyBhIEJhbmdrb2stYmFzZWQgc3BhIHRyYWluaW5nIGZpcm0gY2FsbGVkIFVyYmFuIEhlYWxpbmcsIHNhaWQgbWFueSBzcGEgbWFuYWdlcnMgd2VyZSB1bnByZXBhcmVkIGZvciB0aGUgYnVzaW5lc3MgdGFza3MgYXNrZWQgb2YgdGhlbS4KIk5vdyBzcGEgbWFuYWdlcnMgYXJlIHJlcXVpcmVkIHRvIGNvbWUgdXAgd2l0aCBmZWFzaWJpbGl0eSBzdHVkaWVzLCBhbmQgY2FzaCBmbG93IGZvcmVjYXN0cywiIEJ1Y2huZXIgc2FpZC4KVGhleSdyZSBzdWRkZW5seSBwdXNoZWQgaW50byBhbiBhcmVuYSBubyBvbmUncyBldmVyIHByZXBhcmVkIHRoZW0gZm9yLgpJZiB5b3UgbG9vayBhdCBvdGhlciBpbmR1c3RyaWVzLCB3ZSdyZSB3YXkgYmVoaW5kLgpTcGFzIGFsc28gbmVlZCB0byBnZXQgbW9yZSBpbnZlbnRpdmUgd2l0aCB0aGVpciBtYXJrZXRpbmcsIE5hZGVhdSBzYWlkLgpNb3N0IGhhdmUgYSBwcmVkZWxpY3Rpb24gZm9yIHBpY3R1cmVzIG9mIGEgY29udGVudGVkIGNsZWFyLXNraW5uZWQgYmVhdXR5IGx5aW5nIGZhY2VkIGRvd24gb24gYSBtYXNzYWdlIHRhYmxlLCB1c3VhbGx5IHdpdGggc29tZSBtZW50aW9uIG9mICJwYW1wZXJpbmciIG9yICJpbmR1bGdlbmNlLiIKIklmIHlvdSBzYXkgJ21pbmQsIGJvZHkgYW5kIHNvdWwnIHlvdSBiZWNvbWUgYSBjb21tb2RpdHkgLS0gcG90YXRvZXMsIiBOYWRlYXUgc2FpZC4KQWRhcHQgaXQuCkhlIHNhaWQgc3BhcyBzaG91bGQgbGF1bmNoIHByb2R1Y3RzIGFuZCBhZG9wdCBjdXR0aW5nIGVkZ2UgbWFya2V0aW5nIHRlY2huaXF1ZXMuCkJlY2F1c2Ugb2YgdG91Z2hlciBjb21wZXRpdGlvbiwgc29tZSBzcGFzIHdlcmUgbWFraW5nIHVucmVhbGlzdGljIHByb21pc2VzIGFib3V0IHRyZWF0bWVudHMsIGFjY29yZGluZyB0byBTYW1hbnRoYSBGb3N0ZXIsIGEgZGlyZWN0b3IgYXQgVGhhaSByZXNvcnQgQ2hpdmEtU29tLgpTaGUgcG9pbnRlZCB0byBhIHN1cnZleSBieSBhIFUuUy4gbWFnYXppbmUgdGhhdCBzaG93ZWQgNDYgcGVyY2VudCBvZiByZXNwb25kZW50cyBzYWlkIHRoZXkgaGFkIGhhZCBhIGJhZCBzcGEgZXhwZXJpZW5jZSBpbiB0aGUgcHJldmlvdXMgMTIgbW9udGhzLCBpbmNsdWRpbmcgY29tcGxhaW50cyBhYm91dCBwdXNoeSBzdGFmZiwgdW5oeWdpZW5pYyBwcmVtaXNlcywgbm9pc2UgYW5kIGxhY2sgb2YgcHJpdmFjeS4KV2l0aCAid2VsbG5lc3MiIHRoZSBuZXcgaW5kdXN0cnkgYnV6endvcmQgLS0gdGhlIGlkZWEgb2YgZGV2ZWxvcGluZyBhIGhlYWx0aHkgbWluZCBhbmQgYm9keSAtLSBzcGFzIGFyZSBicmluZ2luZyBpbiBhbHRlcm5hdGl2ZSBtZWRpY2FsIHRyZWF0bWVudHMsIGluY2x1ZGluZyBDaGluZXNlIG1lZGljaW5lLgpBbmQgY29udmVudGlvbmFsIGhvc3BpdGFscyBhcmUgZ2V0dGluZyBpbiBvbiB0aGUgYWN0LgpTaW5nYXBvcmUncyBSYWZmbGVzIE1lZGljYWwgR3JvdXAsIGZvciBleGFtcGxlLCBoYXMgc2V0IHVwIGFuICJhZXN0aGV0aWNzIGNlbnRyZSIgd2l0aCBkZXRveCBwcm9ncmFtcyBhbmQgU3dlZGlzaCBtYXNzYWdlIGFkdmVydGlzZWQgbmV4dCB0byBicmVhc3QgYXVnbWVudGF0aW9uIGFuZCBib3RveC4KTmFkZWF1IHNhaWQgc3BhcyBzaG91bGQgc3RvcCBiZWluZyBjb3kgYWJvdXQgYWR2ZXJ0aXNpbmcgd2hhdCBwZW9wbGUgcmVhbGx5IHdhbnRlZDogYmV0dGVyIGxvb2tzIGFuZCBzZXguCiJQZW9wbGUgbGlrZSBzZXgsIGFuZCBpZiBwZW9wbGUgYXJlIHdlbGwsIHRoZXkgaGF2ZSBzZXgsIiBoZSBzYWlkLgpBbmQgaW4gdGhlIHJlYWwgd29ybGQsIHdoYXQgcGVvcGxlIHdhbnQgaXMgYmVhdXR5IGF0IGFueSBjb3N0IGFuZCBpbW1vcnRhbGl0eS4K, 'ORG')]
UG9wZSdzIFUuUy4gdmlzaXQgdG8gaW5jbHVkZSBOZXcgWW9yaywgV2FzaGluZ3RvbgpXQVNISU5HVE9OIChSZXV0ZXJzKSAtIFBvcGUgQmVuZWRpY3QncyBmaXJzdCB2aXNpdCB0byB0aGUgVW5pdGVkIFN0YXRlcyBuZXh0IEFwcmlsIHdpbGwgaW5jbHVkZSBzdG9wcyBpbiBXYXNoaW5ndG9uIGFuZCBOZXcgWW9yayBvdmVyIHNpeCBkYXlzLCB0aGUgVS5TLiBDYXRob2xpYyBiaXNob3BzIGFubm91bmNlZCBvbiBNb25kYXkuCkR1cmluZyB0aGUgdHJpcCwgZnJvbSBBcHJpbCAxNS0yMCwgMjAwOCwgdGhlIFBvcGUgd2lsbCBhZGRyZXNzIHRoZSBVbml0ZWQgTmF0aW9ucyBpbiBOZXcgWW9yayBhdCB0aGUgaW52aXRhdGlvbiBvZiBTZWNyZXRhcnktR2VuZXJhbCBCYW4gS2ktbW9vbiBhbmQgbWVldCB3aXRoIHRoZSBiaXNob3BzIGF0IHRoZSBOYXRpb25hbCBTaHJpbmUgb2YgdGhlIEltbWFjdWxhdGUgQ29uY2VwdGlvbiBpbiBXYXNoaW5ndG9uLCB0aGUgYW5ub3VuY2VtZW50IHNhaWQuCkNhdGhvbGljIFVuaXZlcnNpdHkgb2YgQW1lcmljYSBhbHNvIHNhaWQgdGhlIFBvcGUgd291bGQgdmlzaXQgaXRzIGNhbXB1cyBvbiBBcHJpbCAxNyB0byBzcGVhayBhYm91dCBDYXRob2xpYyBlZHVjYXRpb24gdG8gYW4gaW52aXRhdGlvbi1vbmx5IGF1ZGllbmNlLgpWYXRpY2FuIHNvdXJjZXMgaGFkIGluZGljYXRlZCBpbiBTZXB0ZW1iZXIgdGhhdCB0aGUgUG9wZSB3YXMgcGxhbm5pbmcgYSBzcHJpbmcgdmlzaXQgYnV0IHRoZSBkYXRlcyB3ZXJlIG5vdCBtYWRlIHB1YmxpYyB1bnRpbCBNb25kYXkncyBhbm5vdW5jZW1lbnQuCiJUaGlzIGlzIGEgYmxlc3NlZCBtb21lbnQgZm9yIG91ciBuYXRpb24sIiBzYWlkIEJpc2hvcCBXaWxsaWFtIFNreWxzdGFkIG9mIFNwb2thbmUsIFdhc2hpbmd0b24sIHByZXNpZGVudCBvZiB0aGUgVS5TLiBDb25mZXJlbmNlIG9mIENhdGhvbGljIEJpc2hvcHMuCkl0IHdhcyBzdGlsbCBub3QgY2xlYXIgd2hlcmUgdGhlIFBvcGUgd291bGQgbWVldCBQcmVzaWRlbnQgR2VvcmdlIFcuIEJ1c2ggYnV0IHRyYWRpdGlvbmFsbHkgYSBoZWFkIG9mIHN0YXRlIGdyZWV0cyBhIHBvcGUgYXQgaGlzIGFycml2YWwuClRoZSBWYXRpY2FuIHdhbnRzIHRoZSB0cmlwIHRvIGJlIG91dCBvZiB0aGUgd2F5IGJlZm9yZSB0aGUgVS5TLiBwcmVzaWRlbnRpYWwgY2FtcGFpZ24gZW50ZXJzIGl0cyBtb3N0IGhlYXRlZCBwaGFzZSB0byBhdm9pZCBhbnl0aGluZyB0aGF0IGNvdWxkIGJlIHNlZW4gYXMgdHJ5aW5nIHRvIGluZmx1ZW5jZSB0aGUgdm90ZS4KVGhlIFBvcGUgaXMgYWxzbyBkdWUgdG8gdmlzaXQgRnJhbmNlIGFuZCBBdXN0cmFsaWEgaW4gMjAwOC4KUmVwb3J0aW5nIGJ5IE1pY2hhZWwgQ29ubG9uOyBFZGl0aW5nIGJ5IEFuZHJldyBTdGVybiBhbmQgU2FuZHJhIE1hbGVyCg==
[]
Q2hpbmEgaG9tZSB0byAxOCBtaWxsaW9uIHN1cnBsdXMgbWVuOiByZXBvcnQKQkVJSklORyAoUmV1dGVycykgLSBDaGluYSBoYXMgMTggbWlsbGlvbiBtb3JlIG1lbiBvZiBtYXJyaWFnZWFibGUgYWdlIHRoYW4gd29tZW4sIHRoZSByZXN1bHQgb2Ygc2V4LXNlbGVjdGl2ZSBhYm9ydGlvbnMgaW4gYSBjb3VudHJ5IHRoYXQgaGFzIHRyYWRpdGlvbmFsbHkgcGxhY2VkIG1vcmUgdmFsdWUgb24gYm95cywgc3RhdGUgbWVkaWEgcmVwb3J0ZWQgb24gVHVlc2RheS4KQ2hpbmEgaGFzIGFib3V0IDExOSBib3lzIGJvcm4gZm9yIGV2ZXJ5IDEwMCBnaXJscywgYnV0IHRoYXQgZmlndXJlIHJpc2VzIHRvIGFib3V0IDEyMiBpbiBydXJhbCBhcmVhcywgWGluaHVhIG5ld3MgYWdlbmN5IHF1b3RlZCBaaGFuZyBXZWlxaW5nLCBkaXJlY3RvciBvZiB0aGUgTmF0aW9uYWwgUG9wdWxhdGlvbiBhbmQgRmFtaWx5IFBsYW5uaW5nIENvbW1pc3Npb24sIGFzIHNheWluZy4KVWx0cmFzb3VuZCBjaGVja3MgdG8gZGV0ZXJtaW5lIHRoZSBzZXggb2YgYmFiaWVzIGFyZSBpbGxlZ2FsIGluIENoaW5hIGJ1dCBtYW55IGV4cGVjdGFudCBwYXJlbnRzIHBheSBmb3IgdGhlIHNlcnZpY2UsIGEgaGFiaXQgWmhhbmcgc2FpZCB0aGUgZ292ZXJubWVudCB3b3VsZCBjb250aW51ZSB0byBjcmFjayBkb3duIG9uLgpDaGluYSBoYXMgYWxzbyB3YXJuZWQgdGhhdCB0aGUgZ2VuZGVyIGltYmFsYW5jZSAtLSB0aGUgc3VycGx1cyBvZiBtZW4gaXMgZm9yZWNhc3QgdG8gc3dlbGwgdG8gMzAgbWlsbGlvbiBieSAyMDIwIC0tIGNvdWxkIHJhaXNlIHRoZSByaXNrcyBvZiBhbnRpLXNvY2lhbCBhbmQgdmlvbGVudCBiZWhhdmlvciBhbW9uZyBtZW4gd2hvIGNhbm5vdCBmaW5kIHdpdmVzLCBjb250cmlidXRpbmcgdG8gaW5zdGFiaWxpdHkuClJlcG9ydGluZyBieSBMaW5kc2F5IEJlY2s7IEVkaXRpbmcgYnkgSm9obiBDaGFsbWVycwo=
[]
UHJvZ3Jlc3NpdmUgcG9zdHMgbG93ZXIgT2N0b2JlciBlYXJuaW5ncwpORVcgWU9SSyAoUmV1dGVycykgLSBQcm9ncmVzc2l2ZSBDb3JwIChQR1IuTjogUXVvdGUsIFByb2ZpbGUsIFJlc2VhcmNoKSwgdGhlIHRoaXJkLWxhcmdlc3QgYXV0byBpbnN1cmVyIGluIHRoZSBVbml0ZWQgU3RhdGVzLCBzYWlkIG9uIFRodXJzZGF5IHRoYXQgbmV0IGluY29tZSBmb3IgT2N0b2JlciBmZWxsIDQyIHBlcmNlbnQgY29tcGFyZWQgd2l0aCB0aGUgc2FtZSBtb250aCBsYXN0IHllYXIsIGFzIHByZW1pdW0gcmV2ZW51ZSBkZWNsaW5lZC4KVGhlIGF1dG8gaW5zdXJlciBzYWlkIE9jdG9iZXIgbmV0IGluY29tZSB3YXMgJDc1LjUgbWlsbGlvbiwgb3IgMTEgY2VudHMgYSBzaGFyZSwgZG93biBmcm9tICQxMzAuMSBtaWxsaW9uLCBvciAxNyBjZW50cyBhIHNoYXJlLCBpbiBPY3RvYmVyIDIwMDYuCk5ldCBwcmVtaXVtcyBlYXJuZWQsIGEgbWVhc3VyZSBvZiBwcmVtaXVtIHJldmVudWUsIGZlbGwgMyBwZXJjZW50IHRvICQgMS4zMiBiaWxsaW9uLCB3aGlsZSBuZXQgcHJlbWl1bXMgd3JpdHRlbiBmZWxsIDQgcGVyY2VudCB0byAkMS4yNiBiaWxsaW9uLgo=
[(UHJvZ3Jlc3NpdmUgcG9zdHMgbG93ZXIgT2N0b2JlciBlYXJuaW5ncwpORVcgWU9SSyAoUmV1dGVycykgLSBQcm9ncmVzc2l2ZSBDb3JwIChQR1IuTjogUXVvdGUsIFByb2ZpbGUsIFJlc2VhcmNoKSwgdGhlIHRoaXJkLWxhcmdlc3QgYXV0byBpbnN1cmVyIGluIHRoZSBVbml0ZWQgU3RhdGVzLCBzYWlkIG9uIFRodXJzZGF5IHRoYXQgbmV0IGluY29tZSBmb3IgT2N0b2JlciBmZWxsIDQyIHBlcmNlbnQgY29tcGFyZWQgd2l0aCB0aGUgc2FtZSBtb250aCBsYXN0IHllYXIsIGFzIHByZW1pdW0gcmV2ZW51ZSBkZWNsaW5lZC4KVGhlIGF1dG8gaW5zdXJlciBzYWlkIE9jdG9iZXIgbmV0IGluY29tZSB3YXMgJDc1LjUgbWlsbGlvbiwgb3IgMTEgY2VudHMgYSBzaGFyZSwgZG93biBmcm9tICQxMzAuMSBtaWxsaW9uLCBvciAxNyBjZW50cyBhIHNoYXJlLCBpbiBPY3RvYmVyIDIwMDYuCk5ldCBwcmVtaXVtcyBlYXJuZWQsIGEgbWVhc3VyZSBvZiBwcmVtaXVtIHJldmVudWUsIGZlbGwgMyBwZXJjZW50IHRvICQgMS4zMiBiaWxsaW9uLCB3aGlsZSBuZXQgcHJlbWl1bXMgd3JpdHRlbiBmZWxsIDQgcGVyY2VudCB0byAkMS4yNiBiaWxsaW9uLgo=, 'GPE')]
RGVmYXVsdHMgbWF5IHNwYXJrIGJpZyBsb3NzIGZvciBpbnN1cmVyczogQmFyY2xheXMKQnkgV2FsZGVuIFNpZXcKTkVXIFlPUksgKFJldXRlcnMpIC0gQm9uZCBpbnN1cmVycyBtYXkgc3VmZmVyICJhbiBhcHByZWNpYWJsZSBsb3NzIiBkdWUgdG8gdGhlaXIgZXhwb3N1cmUgdG8gc3VicHJpbWUgbW9ydGdhZ2UgZGVidCwgcHV0dGluZyBhdCByaXNrIHRoZWlyIHRvcCByYXRpbmcgdGhhdCBpcyBjcml0aWNhbCB0byB0aGVpciBidXNpbmVzcywgQmFyY2xheXMgQ2FwaXRhbCBzYWlkIG9uIEZyaWRheS4KTW9ub2xpbmUgYm9uZCBpbnN1cmVycyBoYXZlIGd1YXJhbnRlZWQgY29sbGF0ZXJhbGl6ZWQgZGVidCBvYmxpZ2F0aW9ucyBiYWNrZWQgYnkgc3VicHJpbWUgbW9ydGdhZ2VzLCBzYWlkIEJhcmNsYXlzIGFuYWx5c3RzLgpUaG9zZSBzZWN1cml0aWVzIGFyZSBkZXRlcmlvcmF0aW5nIGluIHZhbHVlLCBleHBvc2luZyB0aGUgaW5zdXJlcnMgdG8gcG90ZW50aWFsIGxvc3Nlcy4KIkEgc2NlbmFyaW8gaW4gd2hpY2ggc2V2ZXJhbCAoZXZlbnQgb2YgZGVmYXVsdCBub3RpY2VzKSBvY2N1ciB3aXRoaW4gb25lIENETy1zcXVhcmVkIGRlYWwgY291bGQgc3RpbGwgcG90ZW50aWFsbHkgcmVwcmVzZW50IGFuIGFwcHJlY2lhYmxlIGxvc3MgZm9yIHRoZSBtb25vbGluZSIgaW5zdXJlcnMsIFNldGggR2xhc3NlciwgQmFyY2xheXMnIHNlbmlvciBpbnN1cmFuY2UgYW5hbHlzdCwgc2FpZCBvbiBhIGNvbmZlcmVuY2UgY2FsbC4KQSBDRE8gb2YgQ0RPcyBpcyBrbm93biBhcyBhIENETyBzcXVhcmVkLgpCb25kIGluc3VyZXJzLCBzdWNoIGFzIEFtYmFjIEZpbmFuY2lhbCBHcm91cCBJbmMgKEFCSy5OOiBRdW90ZSwgUHJvZmlsZSwgUmVzZWFyY2gpIGFuZCBNQklBIChNQkkuTjogUXVvdGUsIFByb2ZpbGUsIFJlc2VhcmNoKSwgY3VycmVudGx5IGhhdmUgZXhjZXNzIGNhcGl0YWwgImFib3ZlIGFuZCBiZXlvbmQiIHRoZSBtaW5pbXVtIHRvIG1haW50YWluIHRvcCByYXRpbmdzLCBHbGFzc2VyIHNhaWQuCkhvd2V2ZXIsIHJhdGluZyBkb3duZ3JhZGVzIGFuZCBpbmNyZWFzZXMgdG8gbG9zcyByZXNlcnZlcyBtYXkgYmVnaW4gdG8gZWF0IGF3YXkgYXQgZXhjZXNzIGNhcGl0YWwsIGhlIHNhaWQuClJhdGluZyBkb3duZ3JhZGVzIG9mIHN1Y2ggaW5zdXJlcnMgbWF5IHNwdXIgZnVydGhlciByYXRpbmcgZG93bmdyYWRlcyBvZiBzZWN1cml0aWVzIHRoYXQgdGhleSBpbnN1cmUsIGltcGFjdGluZyBldmVyeXRoaW5nIGZyb20gbXVuaWNpcGFsIGJvbmRzIHRvIGFzc2V0LWJhY2tlZCBzZWN1cml0aWVzIHNvbGQgYnkgYmFua3MuCklmIGEgYm9uZCBpbnN1cmVyIGZhY2VzIGRvd25ncmFkZXMgb24gYm9uZHMgdGhhdCBpdCBoYXMgaW5zdXJlZCwgb3IgaGFzIHRvIGJvb3N0IHJlc2VydmVzLCBpdCB3b3VsZCBuZWVkIHRvIHJhaXNlIGNhcGl0YWwgdG8gbWFpbnRhaW4gaXRzIHRvcCByYXRpbmcsIEdsYXNzZXIgc2FpZC4KU2hhcmVzIGluIHNldmVyYWwgb2YgdGhlIGJvbmQgaW5zdXJlcnMgaGF2ZSBmYWxsZW4gc2hhcnBseSBpbiByZWNlbnQgd2Vla3MgYXMgaW52ZXN0b3JzIGZlYXIgdGhlIGNvbXBhbmllcyBtYXkgbmVlZCB0byByYWlzZSBjYXBpdGFsIGFzIGxvc3NlcyBtb3VudC4KU2hhcmVzIGluIE1CSUEgYW5kIEFtYmFjIHdlcmUgZG93biAxLjcgcGVyY2VudCBhbmQgMy4zIHBlcmNlbnQsIHJlc3BlY3RpdmVseSwgaW4gbGF0ZSBGcmlkYXkgdHJhZGluZy4KUmF0aW5nIGNvbXBhbmllcyBNb29keSdzIEludmVzdG9ycyBTZXJ2aWNlIGFuZCBGaXRjaCBSYXRpbmdzIGFyZSBjdXJyZW50bHkgcmV2aXNpbmcgc3RyZXNzIHRlc3RzIGZvciBpbnN1cmVycy4KRml0Y2ggZWFybGllciB0aGlzIG1vbnRoIHNhaWQgdGhhdCByYXRpbmdzIG9mIGJvbmQgaW5zdXJlcnMsIGluY2x1ZGluZyBDSUZHIEd1YXJhbnR5LCB3aGljaCBpcyBvd25lZCBieSBGcmVuY2ggYmFuayBOYXRpeGlzIChDTkFULlBBOiBRdW90ZSwgUHJvZmlsZSwgUmVzZWFyY2gpLCBhbmQgRmluYW5jaWFsIEd1YXJhbnR5IEluc3VyYW5jZSBDbywgd2hvc2Ugb3duZXJzIGluY2x1ZGUgQmxhY2tzdG9uZSBHcm91cCAoQlguTjogUXVvdGUsIFByb2ZpbGUsIFJlc2VhcmNoKSwgbWF5IGJlIHZ1bG5lcmFibGUgdG8gcmF0aW5nIGN1dHMgb2YgdGhyZWUgbm90Y2hlcyBvciBtb3JlIGR1ZSB0byB0aGVpciBjYXBpdGFsIGFkZXF1YWN5IGxldmVscy4KQmFyY2xheXMnIEdsYXNzZXIgYWxzbyBzYWlkIGluc3VyZXJzIHRoYXQgd2lsbCBuZWVkIHRvIHJhaXNlIGNhcGl0YWwgbW9zdCBsaWtlbHkgd2lsbCBzZWVrIHJlaW5zdXJhbmNlIG9yIHByaXZhdGUgY2FwaXRhbCBpbmplY3Rpb25zIHRvIG1haW50YWluIHRoZWlyIHRvcCByYXRpbmdzLgpBbWJhYyBhbmQgTUJJQSBzaGFyZXMgcm9zZSBpbiBUdWVzZGF5IGFmdGVyIHRoZSBXYWxsIFN0cmVldCBKb3VybmFsIHJlcG9ydGVkIHRoYXQgdGhlIGNvbXBhbmllcyBhcmUgc2Vla2luZyByZWluc3VyYW5jZSBmcm9tIEJlcmtzaGlyZSBIYXRoYXdheSBJbmMgKEJSS2EuTjogUXVvdGUsIFByb2ZpbGUsIFJlc2VhcmNoKS4KSW4gYW5vdGhlciBzaWduIGJvbmQgaW5zdXJhbmNlIGlzIGxvc2luZyBpdHMgYXBwZWFsLCBOZXcgWW9yayBDaXR5IHBsYW5zIHRvIHNlbGwgJDEwMCBtaWxsaW9uIG9mIHZhcmlhYmxlLXJhdGUgZGVtYW5kIG9ibGlnYXRpb25zIG5leHQgbW9udGggcmF0aGVyIHRoYW4gaW5zdXJlZCBhdWN0aW9uLXJhdGUgYm9uZHMuCiJXZSd2ZSBkZWNpZGVkIHRoYXQgdGhlIGN1cnJlbnQgY2xpbWF0ZSBpcyBiZXR0ZXIgc3VpdGVkIHRvd2FyZCB0aGUgdmFyaWFibGUtcmF0ZSBkZW1hbmQgcHJvZHVjdCB0aGF0IGRvZXMgbm90IG5lZWQgdG8gYmUgaW5zdXJlZCwiIE1pY2hhZWwgU3Rlcm4sIGRpcmVjdG9yIG9mIGRlYnQgbWFuYWdlbWVudCBhdCBOZXcgWW9yayBDaXR5IENvbXB0cm9sbGVyJ3MgT2ZmaWNlLCBzYWlkIGR1cmluZyBhIGNvbmZlcmVuY2UgbGF0ZSBUaHVyc2RheS4KU3Rlcm4gc2FpZCB0aGF0IHRoZSBjaXR5IG1hZGUgdGhlIGRlY2lzaW9uIG9uIGNvbmNlcm4gdGhhdCBmaW5hbmNpYWwgZ3VhcmFudG9ycycgZXhwb3N1cmUgdG8gdGhlIHN1YnByaW1lIG1vcnRnYWdlIHNlY3RvciBjb3VsZCBjb3N0IHRoZW0gdGhlaXIgQUFBIHJhdGluZ3MuCkFkZGl0aW9uYWwgcmVwb3J0aW5nIGJ5IEFuYXN0YXNpamEgSm9obnNvbgpSZXBvcnRpbmcgYnkgV2FsZGVuIFNpZXc7IEVkaXRpbmcgYnkgVG9tIEhhbHMK
[]
QXV0aG9yIFJlY291bnRzIEZhbWlseSBTdHJ1Z2dsZSBhbmQgSGVhbGluZyBpbiBOZXcgTWVtb2lyClBFVEFMVU1BLCBDYWxpZi4sIEF1Zy4gMzAgL1BSTmV3c3dpcmUvIC0tIFN1cmdlcnkgYWZ0ZXIgc3VyZ2VyeSwgYXdhaXRpbmcgbmV3cyBmcm9tIHRoZSBkb2N0b3JzIGFuZCBudXJzZXMsIGEgd29tYW4gd2FpdHMgaW4gdGhlIGxvYmJ5IHdpdGggZmFtaWx5IGFuZCBmcmllbmRzLCBwcmF5aW5nIGFuZCBiZWxpZXZpbmcuCkluIHRoZSBuZXcgbm9uLWZpY3Rpb24gYm9vaywgIldlIGRpZCBpdCEiIChwdWJsaXNoZWQgYnkgQXV0aG9ySG91c2UgLS0gaHR0cDovL3d3dy5hdXRob3Job3VzZS5jb20pLCBTaGVsbHkgVG9kb3Jvdml0Y2ggcmVmbGVjdHMgb24gaHVzYmFuZCBKaW0ncyBiYXR0bGUgYWdhaW5zdCBhIGxhdGVudCBmbGFyZSBvZiBoaXMgY2hpbGRob29kIGRpYWJldGVzIGFzIHdlbGwgYXMgaGVyIG93biBzaWxlbnQgc3RydWdnbGUgYnkgaGlzIHNpZGUuCkFybWVkIG9ubHkgd2l0aCB0aGUgV29yZCBvZiBHb2QgYW5kIGEgY29udGludWFsbHktZGVlcGVuaW5nIGxvdmUgZm9yIGhlciBodXNiYW5kLCBUb2Rvcm92aXRjaCBzdG9vZCBieSBKaW0gd2hvIGluc3BpcmVkIHRoaXMgbWlyYWN1bG91cyB0YWxlIG9mIGNvdXJhZ2UgYW5kIGNvbnF1ZXJpbmcgcGh5c2ljYWwgYWR2ZXJzaXR5LgoiVGhpcyBib29rIHRha2VzIHlvdSBvbiB0aGUgdHdvLXllYXIgam91cm5leSwiIFRvZG9yb3ZpdGNoIHNheXMuClRoZSBqb3VybmV5IGluY2x1ZGVzIGNsb3Npbmcgb3VyIGJ1c2luZXNzIGRvd24gdGVtcG9yYXJpbHkgZm9yIHR3byB5ZWFyczsgc2VsbGluZyBvdXIgaG9tZSBhbmQgbW92aW5nOyB0d28gdHJhbnNwbGFudCBzdXJnZXJpZXMsIGluY2x1ZGluZyBwYW5jcmVhcyBhbmQga2lkbmV5IC0tIEkgd2FzIHRoZSBraWRuZXkgZG9ub3I7IGEgbmVhciBvcmdhbiByZWplY3Rpb24gYWZ0ZXIgc3VyZ2VyaWVzOyBhYm91dCAyMCB0byAyNCBleWUgc3VyZ2VyaWVzLCBpbmNsdWRpbmcgYSByZXRpbmEgZGV0YWNobWVudDsgW2FuZF0gdGhlIGRlYXRoIG9mIHR3byBmYW1pbHkgbWVtYmVycy4KTm90aGluZyBoYXMgYmVlbiBlYXN5IG9yIG9yZGluYXJ5IGFib3V0IHRoZWlyIGZhbWlseSdzIHN0cnVnZ2xlLgpBcyBoZXIgaHVzYmFuZCBlbmR1cmVkIHRoZSBwaHlzaWNhbCBvYnN0YWNsZXMgb2Ygc3VyZ2VyaWVzIGFuZCBwcm9jZWR1cmVzIHRoYXQgY29uc3RhbnRseSB0aHJlYXRlbmVkIGhpcyBsaWZlLCBUb2Rvcm92aXRjaCB3YXMgYnVyZGVuZWQgd2l0aCB0aGUgZW1vdGlvbmFsIHN1ZmZlcmluZyBvZiBhIHdpdG5lc3MsIGhlbHBsZXNzIHRvIGludGVydmVuZSBidXQgZm9yIHRoZSBwb3dlciBvZiBoZXIgd2hpc3BlcmVkIHByYXllcnMuCkdvZCBvcGVuZWQgZG9vcnMgdGhhdCBtYW4gc2FpZCBjb3VsZCBub3QgYmUgb3BlbmVkLgpBZ2FpbnN0IGFsbCBvZGRzLCBJIGhhdmUgYSBtaXJhY3Vsb3VzIHRlc3RpbW9ueSB0aGF0IEkgd291bGQgbG92ZSB0byBzaGFyZSB3aXRoIHlvdSwgYSBtZXNzYWdlIG9mIGhvcGUsIiBUb2Rvcm92aXRjaCBzYXlzLgpBbGwgdGhpbmdzIGFyZSBwb3NzaWJsZSB0byB0aG9zZSB3aG8gYmVsaWV2ZS4KTXkgaHVzYmFuZCBpcyBub3cgZnJlZSBmcm9tIGRpYWJldGVzIGFmdGVyIDI5IHllYXJzLi4uQnV0IHdpdGhvdXQgR29kIHRoZSBGYXRoZXIgYW5kIGZyaWVuZHMgYW5kIGZhbWlseSB0aGlzIGpvdXJuZXkuLi53b3VsZCBoYXZlIGJlZW4gaW1wb3NzaWJsZSB0byBvdmVyY29tZS4KIldlIGRpZCBpdCEiIGlzIGEgbW92aW5nIGFuZCBob25lc3QgcG9ydHJheWFsIG9mIHRoZSB0cmlhbHMgb2YgYSBib2R5IGZhaWxpbmcgYW5kIHRoZSBkaXZpbmUgcG93ZXIgb2YgcHJheWVyIHRoYXQgVG9kb3Jvdml0Y2ggYmVsaWV2ZXMgY2FuIGhlYWwuCiJUaG91Z2ggdGhpbmdzIGxvb2sgaW1wb3NzaWJsZSwgeW91IG5ldmVyIGtub3cgd2hhdCBpcyBnb2luZyBvbiBiZWhpbmQgdGhlIHNjZW5lcywiIHNoZSBzYXlzLgpHb2QgaGFzIHRoZSBmaW5hbCBzYXkgc28uClNoZWxsZXkgVG9kb3Jvdml0Y2ggaGFzIGJlZW4gbWFycmllZCB0byBoZXIgaHVzYmFuZCBmb3IgMTQgeWVhcnMsIGFuZCB0aGV5IGhhdmUgdHdvIGdyb3dpbmcgYm95cywgYWdlcyAxMiBhbmQgOS4KU2hlIGlzIGFuIGF2aWQgc3R1ZGVudCBvZiB0aGUgQmlibGUgYW5kIGxlYWRzIGEgd29tZW4ncyBtaW5pc3RyeSBncm91cCBpbiBoZXIgY2h1cmNoIGJvZHkuCiJJIGFtIG5vdCB0aGUgc2FtZSB3b21hbiwiIHNoZSBzYXlzLgpJIGFtIG5vdyBhYmxlIHRvIG1pbmlzdGVyIGFuZCBlbmNvdXJhZ2UgaW4gZGlmZmVyZW50IHdheXMgdGhhdCBJIG5ldmVyIGNvdWxkIGhhdmUgYmVmb3JlLgpIZXIgZGVzaXJlIGlzIHRvIG9uZSBkYXkgb3duIGEgQ2hyaXN0aWFuIGJvb2tzdG9yZSBhbmQgY2FmZSB3aGVyZSBzaGUgd2lsbCBvZmZlciByZWxpZ2lvdXMgY291bnNlbCBhbmQgaW1wbGVtZW50IGEgcmV2aXRhbGl6aW5nIGV4ZXJjaXNlIHByb2dyYW0uCkhlciBob3BlIGlzIHRoYXQgcGVvcGxlIHdpbGwgcmVhZCBoZXIgYWNjb3VudCBvZiBoYXJkc2hpcCBhbmQgZmluZCBzb21lIGNvbWZvcnQgaW4gaXRzIGhhcmJpbmdlcmluZyBvZiBob3BlLgoiV2UgZGlkIGl0ISIgaXMgaGVyIGZpcnN0IHB1YmxpY2F0aW9uLgpBdXRob3JIb3VzZSBpcyB0aGUgcHJlbWllciBib29rIHB1Ymxpc2hlciAoaHR0cDovL3d3dy5hdXRob3Job3VzZS5jb20pIGZvciBlbWVyZ2luZywgc2VsZi1wdWJsaXNoZWQgKGh0dHA6Ly93d3cuYXV0aG9yaG91c2UuY29tL0dldFB1Ymxpc2hlZC9GQVEuYXNweCkgYXV0aG9ycy4KRm9yIG1vcmUgaW5mb3JtYXRpb24sIHBsZWFzZSB2aXNpdCBodHRwOi8vd3d3LmF1dGhvcmhvdXNlLmNvbS4KRURJVE9SUzogRm9yIHJldmlldyBjb3BpZXMgb3IgaW50ZXJ2aWV3IHJlcXVlc3RzLCBjb250YWN0OiBFbGl6YWJldGggSG9sbGluZ3N3b3J0aCwgUHVibGljaXR5IENvb3JkaW5hdG9yIFRlbDogODAwLTgzOS04NjQwLCBleHQuCjUzMTIgRmF4OiA4MTItOTYxLTMxMzMgRW1haWw6IGVob2xsaW5nc3dvcnRoQGF1dGhvcmhvdXNlLmNvbSAoV2hlbiByZXF1ZXN0aW5nIGEgcmV2aWV3IGNvcHksIHBsZWFzZSBwcm92aWRlIGEgc3RyZWV0IGFkZHJlc3MuKQpTT1VSQ0UgQXV0aG9ySG91c2UK
[(QXV0aG9yIFJlY291bnRzIEZhbWlseSBTdHJ1Z2dsZSBhbmQgSGVhbGluZyBpbiBOZXcgTWVtb2lyClBFVEFMVU1BLCBDYWxpZi4sIEF1Zy4gMzAgL1BSTmV3c3dpcmUvIC0tIFN1cmdlcnkgYWZ0ZXIgc3VyZ2VyeSwgYXdhaXRpbmcgbmV3cyBmcm9tIHRoZSBkb2N0b3JzIGFuZCBudXJzZXMsIGEgd29tYW4gd2FpdHMgaW4gdGhlIGxvYmJ5IHdpdGggZmFtaWx5IGFuZCBmcmllbmRzLCBwcmF5aW5nIGFuZCBiZWxpZXZpbmcuCkluIHRoZSBuZXcgbm9uLWZpY3Rpb24gYm9vaywgIldlIGRpZCBpdCEiIChwdWJsaXNoZWQgYnkgQXV0aG9ySG91c2UgLS0gaHR0cDovL3d3dy5hdXRob3Job3VzZS5jb20pLCBTaGVsbHkgVG9kb3Jvdml0Y2ggcmVmbGVjdHMgb24gaHVzYmFuZCBKaW0ncyBiYXR0bGUgYWdhaW5zdCBhIGxhdGVudCBmbGFyZSBvZiBoaXMgY2hpbGRob29kIGRpYWJldGVzIGFzIHdlbGwgYXMgaGVyIG93biBzaWxlbnQgc3RydWdnbGUgYnkgaGlzIHNpZGUuCkFybWVkIG9ubHkgd2l0aCB0aGUgV29yZCBvZiBHb2QgYW5kIGEgY29udGludWFsbHktZGVlcGVuaW5nIGxvdmUgZm9yIGhlciBodXNiYW5kLCBUb2Rvcm92aXRjaCBzdG9vZCBieSBKaW0gd2hvIGluc3BpcmVkIHRoaXMgbWlyYWN1bG91cyB0YWxlIG9mIGNvdXJhZ2UgYW5kIGNvbnF1ZXJpbmcgcGh5c2ljYWwgYWR2ZXJzaXR5LgoiVGhpcyBib29rIHRha2VzIHlvdSBvbiB0aGUgdHdvLXllYXIgam91cm5leSwiIFRvZG9yb3ZpdGNoIHNheXMuClRoZSBqb3VybmV5IGluY2x1ZGVzIGNsb3Npbmcgb3VyIGJ1c2luZXNzIGRvd24gdGVtcG9yYXJpbHkgZm9yIHR3byB5ZWFyczsgc2VsbGluZyBvdXIgaG9tZSBhbmQgbW92aW5nOyB0d28gdHJhbnNwbGFudCBzdXJnZXJpZXMsIGluY2x1ZGluZyBwYW5jcmVhcyBhbmQga2lkbmV5IC0tIEkgd2FzIHRoZSBraWRuZXkgZG9ub3I7IGEgbmVhciBvcmdhbiByZWplY3Rpb24gYWZ0ZXIgc3VyZ2VyaWVzOyBhYm91dCAyMCB0byAyNCBleWUgc3VyZ2VyaWVzLCBpbmNsdWRpbmcgYSByZXRpbmEgZGV0YWNobWVudDsgW2FuZF0gdGhlIGRlYXRoIG9mIHR3byBmYW1pbHkgbWVtYmVycy4KTm90aGluZyBoYXMgYmVlbiBlYXN5IG9yIG9yZGluYXJ5IGFib3V0IHRoZWlyIGZhbWlseSdzIHN0cnVnZ2xlLgpBcyBoZXIgaHVzYmFuZCBlbmR1cmVkIHRoZSBwaHlzaWNhbCBvYnN0YWNsZXMgb2Ygc3VyZ2VyaWVzIGFuZCBwcm9jZWR1cmVzIHRoYXQgY29uc3RhbnRseSB0aHJlYXRlbmVkIGhpcyBsaWZlLCBUb2Rvcm92aXRjaCB3YXMgYnVyZGVuZWQgd2l0aCB0aGUgZW1vdGlvbmFsIHN1ZmZlcmluZyBvZiBhIHdpdG5lc3MsIGhlbHBsZXNzIHRvIGludGVydmVuZSBidXQgZm9yIHRoZSBwb3dlciBvZiBoZXIgd2hpc3BlcmVkIHByYXllcnMuCkdvZCBvcGVuZWQgZG9vcnMgdGhhdCBtYW4gc2FpZCBjb3VsZCBub3QgYmUgb3BlbmVkLgpBZ2FpbnN0IGFsbCBvZGRzLCBJIGhhdmUgYSBtaXJhY3Vsb3VzIHRlc3RpbW9ueSB0aGF0IEkgd291bGQgbG92ZSB0byBzaGFyZSB3aXRoIHlvdSwgYSBtZXNzYWdlIG9mIGhvcGUsIiBUb2Rvcm92aXRjaCBzYXlzLgpBbGwgdGhpbmdzIGFyZSBwb3NzaWJsZSB0byB0aG9zZSB3aG8gYmVsaWV2ZS4KTXkgaHVzYmFuZCBpcyBub3cgZnJlZSBmcm9tIGRpYWJldGVzIGFmdGVyIDI5IHllYXJzLi4uQnV0IHdpdGhvdXQgR29kIHRoZSBGYXRoZXIgYW5kIGZyaWVuZHMgYW5kIGZhbWlseSB0aGlzIGpvdXJuZXkuLi53b3VsZCBoYXZlIGJlZW4gaW1wb3NzaWJsZSB0byBvdmVyY29tZS4KIldlIGRpZCBpdCEiIGlzIGEgbW92aW5nIGFuZCBob25lc3QgcG9ydHJheWFsIG9mIHRoZSB0cmlhbHMgb2YgYSBib2R5IGZhaWxpbmcgYW5kIHRoZSBkaXZpbmUgcG93ZXIgb2YgcHJheWVyIHRoYXQgVG9kb3Jvdml0Y2ggYmVsaWV2ZXMgY2FuIGhlYWwuCiJUaG91Z2ggdGhpbmdzIGxvb2sgaW1wb3NzaWJsZSwgeW91IG5ldmVyIGtub3cgd2hhdCBpcyBnb2luZyBvbiBiZWhpbmQgdGhlIHNjZW5lcywiIHNoZSBzYXlzLgpHb2QgaGFzIHRoZSBmaW5hbCBzYXkgc28uClNoZWxsZXkgVG9kb3Jvdml0Y2ggaGFzIGJlZW4gbWFycmllZCB0byBoZXIgaHVzYmFuZCBmb3IgMTQgeWVhcnMsIGFuZCB0aGV5IGhhdmUgdHdvIGdyb3dpbmcgYm95cywgYWdlcyAxMiBhbmQgOS4KU2hlIGlzIGFuIGF2aWQgc3R1ZGVudCBvZiB0aGUgQmlibGUgYW5kIGxlYWRzIGEgd29tZW4ncyBtaW5pc3RyeSBncm91cCBpbiBoZXIgY2h1cmNoIGJvZHkuCiJJIGFtIG5vdCB0aGUgc2FtZSB3b21hbiwiIHNoZSBzYXlzLgpJIGFtIG5vdyBhYmxlIHRvIG1pbmlzdGVyIGFuZCBlbmNvdXJhZ2UgaW4gZGlmZmVyZW50IHdheXMgdGhhdCBJIG5ldmVyIGNvdWxkIGhhdmUgYmVmb3JlLgpIZXIgZGVzaXJlIGlzIHRvIG9uZSBkYXkgb3duIGEgQ2hyaXN0aWFuIGJvb2tzdG9yZSBhbmQgY2FmZSB3aGVyZSBzaGUgd2lsbCBvZmZlciByZWxpZ2lvdXMgY291bnNlbCBhbmQgaW1wbGVtZW50IGEgcmV2aXRhbGl6aW5nIGV4ZXJjaXNlIHByb2dyYW0uCkhlciBob3BlIGlzIHRoYXQgcGVvcGxlIHdpbGwgcmVhZCBoZXIgYWNjb3VudCBvZiBoYXJkc2hpcCBhbmQgZmluZCBzb21lIGNvbWZvcnQgaW4gaXRzIGhhcmJpbmdlcmluZyBvZiBob3BlLgoiV2UgZGlkIGl0ISIgaXMgaGVyIGZpcnN0IHB1YmxpY2F0aW9uLgpBdXRob3JIb3VzZSBpcyB0aGUgcHJlbWllciBib29rIHB1Ymxpc2hlciAoaHR0cDovL3d3dy5hdXRob3Job3VzZS5jb20pIGZvciBlbWVyZ2luZywgc2VsZi1wdWJsaXNoZWQgKGh0dHA6Ly93d3cuYXV0aG9yaG91c2UuY29tL0dldFB1Ymxpc2hlZC9GQVEuYXNweCkgYXV0aG9ycy4KRm9yIG1vcmUgaW5mb3JtYXRpb24sIHBsZWFzZSB2aXNpdCBodHRwOi8vd3d3LmF1dGhvcmhvdXNlLmNvbS4KRURJVE9SUzogRm9yIHJldmlldyBjb3BpZXMgb3IgaW50ZXJ2aWV3IHJlcXVlc3RzLCBjb250YWN0OiBFbGl6YWJldGggSG9sbGluZ3N3b3J0aCwgUHVibGljaXR5IENvb3JkaW5hdG9yIFRlbDogODAwLTgzOS04NjQwLCBleHQuCjUzMTIgRmF4OiA4MTItOTYxLTMxMzMgRW1haWw6IGVob2xsaW5nc3dvcnRoQGF1dGhvcmhvdXNlLmNvbSAoV2hlbiByZXF1ZXN0aW5nIGEgcmV2aWV3IGNvcHksIHBsZWFzZSBwcm92aWRlIGEgc3RyZWV0IGFkZHJlc3MuKQpTT1VSQ0UgQXV0aG9ySG91c2UK, 'ORG')]
TmV3IFNvZnR3YXJlIEFsbG93cyBFU1JJIFVzZXJzIHRvIE1ha2UgQ3Jvc3Mtc2VjdGlvbiBQcmVzZW50YXRpb25zIGluIE1pbnV0ZXMgTm90IERheXMKMTIgL1BSTmV3c3dpcmUvIC0tIEEtUHJpbWUgc29mdHdhcmUsIGEgbGVhZGVyIGluIGRldmVsb3BpbmcgQXJjR0lTIHBsdWctaW4gYXBwbGljYXRpb25zLCBhbm5vdW5jZWQgdG9kYXkgdGhlIGxhdW5jaCBvZiBpdHMgbmV3IHdpemFyZC0gYmFzZWQgcGxhdGZvcm0gZm9yIEVTUkkncyBBcmNHSVMgdXNlcnMuClRoZSBwcm9kdWN0LCBDcm9zc1ZpZXcgRWFydGggU3VyZmFjZXMgKFRNKSwgYWxsb3dzIEdJUyBwcm9mZXNzaW9uYWxzLCBzdWNoIGFzIGVudmlyb25tZW50YWwgZW5naW5lZXJzLCBnZW9sb2dpc3RzLCBtaW5pbmcgYW5hbHlzdHMsIHBsYW5uZXJzIGFuZCBjb25zdHJ1Y3Rpb24gZGV2ZWxvcGVycywgdG8gZ2FpbiBicm9hZGVyIGFuZCBtb3JlIGludGltYXRlIGFjY2VzcyB0byBnZW8tc3BhdGlhbCB0ZXJyYWlucyBhbmQgc3Vic3VyZmFjZXMuCkJ5IGludGVncmF0aW5nIHJpY2ggZ2VvLWRhdGEgd2l0aCBzaW1wbGUgeWV0IGRlbW9uc3RyYXRpdmUgY3Jvc3Mtc2VjdGlvbiB2aXN1YWxpemF0aW9ucywgQ3Jvc3NWaWV3IGNyZWF0ZXMgcG93ZXJmdWwgY3Jvc3Mtc2VjdGlvbiBwcmVzZW50YXRpb25zIGluIG1pbnV0ZXMgbm90IGhvdXJzLCBzYXZpbmcgYm90aCB0aW1lIGFuZCBtb25leS4KIkJlZm9yZSBDcm9zc1ZpZXcsIEdJUyBwcm9mZXNzaW9uYWxzIGhhZCB0byBkZWFsIHdpdGggdGhlIHRpbWUgZXhoYXVzdGluZyBwcm9jZXNzIG9mIHVzaW5nIG91dHNpZGUgc29mdHdhcmUgdG8gZ2FpbiBhIGJldHRlciB2aXN1YWwgcGVyc3BlY3RpdmUgb2YgdGhlaXIgd29yayBmaWVsZHMsIiBzYXlzIEEtUHJpbWUncyBWaWNlIFByZXNpZGVudCBTY290dCBEYXZpZC4KQ3Jvc3NWaWV3IGVsaW1pbmF0ZXMgdGhpcyBsZWFybmluZyBjdXJ2ZSwgbWFraW5nIHRoZSBtb3N0IG91dCBvZiB0aGUgQXJjR0lTIHNraWxscyB0aGV5IGFscmVhZHkgaGF2ZSAtLSB3aGljaCBzaW1wbGlmaWVzIHRoZWlyIHdvcmtmbG93IGFuZCBpbmNyZWFzZXMgb3ZlcmFsbCBwcm9kdWN0aXZpdHkuCkJ5IGFsbG93aW5nIEdJUyBwcm9mZXNzaW9uYWxzIHRvIGNyZWF0ZSBjcm9zcyBzZWN0aW9ucyBvbiB0aGUgZmx5IHdlIGhvcGUgdG8gc3RyZWFtbGluZSBhIHByb2Nlc3MgdGhhdCB0YWtlcyBuZWVkbGVzcyBtYW4taG91cnMgYW5kIHVsdGltYXRlbHkgcmVkdWNlIGNvc3RzIGZvciBHSVMgdXNlcnMgYWNyb3NzIHRoZSBib2FyZC4KQ3JlYXRlZCBieSBHSVMgcHJvZmVzc2lvbmFscyBpbiByZXNwb25zZSB0byB0aGUgbGltaXRhdGlvbnMgaW4gRVNSSSdzIGN1cnJlbnQgbWFwcGluZyBwbGF0Zm9ybXMsIHRoZSBrZXkgdG8gQ3Jvc3NWaWV3IGlzIGl0cyBzZWFtbGVzcyBpbnRlZ3JhdGlvbiB3aXRoIHRoZSBlbnRpcmUgQXJjR0lTIHdvcmtmbG93LgoiSXQncyBhIGNvbXBsZXRlbHkgaW50dWl0aXZlIHByb2dyYW0gdGhhdCB3ZSBob3BlIHdpbGwgbWFrZSBHSVMgdXNlcnMgd29uZGVyIHdoeSBpdCBoYWRuJ3QgYmVlbiB0aGVyZSBhbGwgYWxvbmcsIiBzYXlzIERhdmlkLgpJdCB1bmVhcnRocyB0aGUgc3BhdGlhbCBpbmZvcm1hdGlvbiByZXNpZGVudCB3aXRoaW4gYSB1c2VyJ3MgZXhpc3RpbmcgZ2VvLWRhdGFiYXNlLgpXaGV0aGVyIGl0IGlzIHJhc3RlciwgcG9pbnQsIGxpbmUsIG9yIHBvbHlnb24gZGF0YSwgQ3Jvc3NWaWV3IGdpdmVzIHVzZXJzIGEgcm9idXN0IGFuZCBzaW1wbGUgcHJlc2VudGF0aW9uIHBlcnNwZWN0aXZlIHRocm91Z2ggbWFwcGluZyBwcm9maWxlcyBvciBjcm9zcyBzZWN0aW9ucyBvZiB0aGVpciBFU1JJIEFyY0dJUyBnZW8tZGF0YWJhc2UuCiJBcyBhIGdlb2dyYXBoZXIgbXkgcmVzZWFyY2ggZmllbGQgaXMgdGhlIE5pYWdhcmEgRXNjYXJwbWVudCBpbiBOaWFnYXJhLCBPcmxlYW5zICYgTXVucm9lIENvdW50aWVzIG9mIHdlc3Rlcm4gTmV3IFlvcmsgU3RhdGUsIiBzYXlzIFJvYmVydCBMb3JkLgpJIGFtIG1vc3QgaW50ZXJlc3RlZCBpbiBpdHMgdG9wb2dyYXBoeSwgbWljcm9jbGltYXRlcywgZ2xhY2lhbCBkcmFpbmFnZSBhbmQgY3VycmVudCByaXZlciB2YWxsZXkgcHJvZmlsZXMuCkNyb3NzVmlldyB3YXMgYWJsZSB0byBnaXZlIG1lIG1vcmUgZGV0YWlsIGZyb20gdGhlIERFTXMgdGhhdCBJIHdpbGwgYmUgYWJsZSB0byB1c2UgaW4gbXkgY2xhc3NlcyBhbmQgaW4gbXkgcmVzZWFyY2guCiJMb29raW5nIGF0IHRoZSB0aW1lIEkndmUgc3BlbnQgd29ya2luZyB3aXRoIG90aGVyIHByb2dyYW1zIHRoYXQgZG8gdGhlIHNhbWUgdGhpbmcgYW5kIHRoZSB0aW1lIHdhc3RlZCBieSB1c2luZyBvdXRzaWRlIHNvZnR3YXJlIHRvIGdldCBhIHB1Ymxpc2hhYmxlIHByb2R1Y3QsIENyb3NzVmlldyBpcyBkZWZpbml0ZWx5IHdvcnRoIGl0IHRvIG1lLCIgc2F5cyBHSVMgVGVjaG5pY2lhbiBhbmQgSHlkcm9nZW9sb2d5IFJlc2VhcmNoIEFzc2lzdGFudCwgSmF5IEhhbnNvbi4KSSByYXRlIENyb3NzVmlldyBhIDEwIG91dCBvZiAxMCBvdmVyYWxsLgpDcm9zc1ZpZXcgRWFydGggU3VyZmFjZXMgaXMgYXZhaWxhYmxlIGZvciBvbmx5ICQ0OTkgYXQgaHR0cDovL3d3dy5hcHJpbWVzb2Z0d2FyZS5jb20gb3IgYnkgY2FsbGluZyA4NzctTUFQLURPV04uCkFib3V0IENyb3NzVmlldwpBbiBpbnR1aXRpdmUsIHdpemFyZC1iYXNlZCBHSVMgcGx1Zy1pbiwgQ3Jvc3NWaWV3IEVhcnRoIFN1cmZhY2VzIChUTSkgaXMgdGhlIHByZW1pZXIgY3Jvc3Mtc2VjdGlvbmluZyB0b29sIGZvciBjb21wbGVtZW50aW5nIHRoZSBFU1JJIEFyY0dJUyAoUikgd29ya2Zsb3cuCkNyb3NzVmlldyBoZWxwcyBBcmNHSVMgdXNlcnMgZ2FpbiBhIGJyb2FkZXIgYW5kIG1vcmUgaW50aW1hdGUgYWNjZXNzIHRvIGdlby1zcGF0aWFsIHRlcnJhaW5zIGFuZCBzdWItc3VyZmFjZXMgYnkgaW50ZWdyYXRpbmcgcmljaCBnZW8tZGF0YSB3aXRoIHNpbXBsZSB5ZXQgZGVtb25zdHJhdGl2ZSBjcm9zcy1zZWN0aW9uIHZpc3VhbGl6YXRpb25zLgpXaXRoIGFwcGxpY2F0aW9ucyB0byBzdWl0IHByb2Zlc3Npb25hbHMgZnJvbSBlbnZpcm9ubWVudGFsIGVuZ2luZWVycyBhbmQgbWluaW5nIGFuYWx5c3RzIHRvIHBsYW5uZXJzIGFuZCBjb25zdHJ1Y3Rpb24gZGV2ZWxvcGVycywgQ3Jvc3NWaWV3IG1ha2VzIEdJUyBlYXNpZXIsIHNhdmluZyBib3RoIHRpbWUgYW5kIG1vbmV5LgpCeSBjcmVhdGluZyBwb3dlcmZ1bCBjcm9zcy1zZWN0aW9uIHByZXNlbnRhdGlvbnMgaW4gbWludXRlcyBub3QgaG91cnMsIENyb3NzVmlldyBkcmFzdGljYWxseSBoYXN0ZW5zIHRoZSB3b3JrZmxvdyBvZiB0b2RheSdzIEdJUyBwcm9mZXNzaW9uYWxzLCBlbGltaW5hdGluZyB0aGUgbmVlZCB0byByZWZvcm1hdCBvciByZWxlYXJuIG91dHNpZGUgc29mdHdhcmUgd2hpbGUgbWF4aW1pemluZyB0aGUgc2tpbGxzIGFuZCB0b29scyBHSVMgdXNlcnMgYWxyZWFkeSBoYXZlLgpBYm91dCBBLVByaW1lCkEtUHJpbWUgU29mdHdhcmUgaXMgYSBHSVMgc29mdHdhcmUgY29tcGFueSBmb2N1c2VkIG9uIGVuaGFuY2luZyB0aGUgZGV0YWlsLCB2aXN1YWxpemF0aW9uIHRvb2xzLCBhbmQgZmxleGliaWxpdHkgb2YgY3VycmVudCBtYXBwaW5nIGFwcGxpY2F0aW9ucyB3aXRoIHVuaXF1ZSB0ZWNobm9sb2dpZXMuCldpdGggYSByaWNoIGhpc3RvcnkgaW4gZW52aXJvbm1lbnRhbCByZXN0b3JhdGlvbiwgdGhlIGNyZWF0b3JzIG9mIEEtUHJpbWUgYXJlIGRlZGljYXRlZCB0byBpbXByb3ZpbmcgdGhlIHdvcmtmbG93IG9mIEdJUyBwcm9mZXNzaW9uYWxzLCB3aGljaCBzYXZlcyBib3RoIHRpbWUgYW5kIG1vbmV5LgpUYWtpbmcgaXRzIG5hbWUgZnJvbSB0aGUgbWFwcGluZyBzeW1ib2wgdGhhdCBub3RlcyBib3RoIHN0YXJ0IGFuZCBlbmQsIEEtUHJpbWUgcmVtYWlucyBmb2N1c2VkIG9uIGNoYXJ0aW5nIG5ldyBncm91bmQgaW4gdGhlIG1hcHBpbmcgaW5kdXN0cnkgYnkgZGV2ZWxvcGluZyBpbm5vdmF0aXZlIHNvZnR3YXJlIHRoYXQgYnJvYWRlbnMgYW5kIHNoYXJwZW5zIHRoZSB3YXkgd2UgdmlldyB0aGUgd29ybGQuClZpc2l0IEEtUHJpbWUgU29mdHdhcmUgYXQgaHR0cDovL3d3dy5hcHJpbWVzb2Z0d2FyZS5jb20uCkEtUHJpbWUgU29mdHdhcmUsIENyb3NzVmlldywgYW5kIENyb3NzVmlldyBFYXJ0aCBTdXJmYWNlcyBhcmUgdHJhZGVtYXJrcyBvZiBBLVByaW1lIFNvZnR3YXJlLgpBbGwgb3RoZXIgYnJhbmQgb3IgcHJvZHVjdCBuYW1lcyBhcmUgdHJhZGVtYXJrcyBvciByZWdpc3RlcmVkIHRyYWRlbWFya3Mgb2YgdGhlaXIgcmVzcGVjdGl2ZSBob2xkZXJzLgo=
[]
VGltZSB0byBUb3VnaGVuIHRoZSBGYWxzZSBDbGFpbXMgQWN0CjEyIC9QUk5ld3N3aXJlLyAtLSBBcyBTZW5hdG9ycyBDaGFybGVzIEdyYXNzbGV5IChSLUlBKSBhbmQgRGljayBEdXJiaW4gKEQtSUwpIGludHJvZHVjZWQgbGVnaXNsYXRpb24gdG9kYXkgdG8gc3RyZW5ndGhlbiB0aGUgRmFsc2UgQ2xhaW1zIEFjdC10aGUgZ292ZXJubWVudCdzIG1haW4gd2VhcG9uIHRvIGNvdW50ZXIgZ292ZXJubWVudCBmcmF1ZC1vbmUgb2YgdGhlIGNvdW50cnkncyBtb3N0IHByb21pbmVudCBvdXRzaWRlIGV4cGVydHMgY2FtZSBvdXQgc3Ryb25nbHkgaW4gc3VwcG9ydCBvZiB0aGUgbmV3IGFtZW5kbWVudHMuCkF0dG9ybmV5IEpvZWwgSGVzY2gsIDQ3LCBhIGxhdyBwcm9mZXNzb3IsIGZvcm1lciBnb3Zlcm5tZW50IHByb3NlY3V0b3IsIGNvbnN1bHRhbnQgdG8gd2hpc3RsZWJsb3dlcnMsIGFuZCBhdXRob3Igb2YgV2hpc3RsZWJsb3dpbmc6IEEgR3VpZGUgdG8gR292ZXJubWVudCBSZXdhcmQgUHJvZ3JhbXMgd2hvIGZvciAxNSB5ZWFycyBhZG1pbmlzdGVyZWQgdGhlIERlcGFydG1lbnQgb2YgSnVzdGljZSB3aGlzdGxlYmxvd2luZyByZXdhcmQgcHJvZ3JhbSwgc2F5cyB0aGUgcHJvcG9zZWQgYW1lbmRtZW50IHdpbGwgIndyaXRlIGEgbmV3IGNoYXB0ZXIiIG9uIHN0b3BwaW5nIGZyYXVkIHRoYXQgaW1wYWN0cyBtb3JlIHRoYW4gMjAgZ292ZXJubWVudCBhZ2VuY2llcy4KVGhlc2UgcHJvcG9zZWQgYW50aS1mcmF1ZCBhbWVuZG1lbnRzIGFyZSBnb29kIGZvciBidXNpbmVzcy4KQmlnIGNvbXBhbmllcyBzaG91bGQgbm90IGJlIGFsbG93ZWQgdG8gZW5nYWdlIGluIGNvbmR1Y3QgZm9yIHdoaWNoIHlvdSBvciBJIHdvdWxkIGJlIHNlbnQgdG8gamFpbCwiIEhlc2NoIHNhaWQuCkluIGFsbCwgdGhlcmUgYXJlIHNpeCBtYWpvciBwcm92aXNpb25zIGluIHRoZSBwcm9wb3NlZCBuZXcgbGF3LCBhbGwgb2Ygd2hpY2ggSGVzY2ggc3VwcG9ydHMuCkhlc2NoIGlzIHBhcnRpY3VsYXJseSBoYXBweSB0byBzZWUgdGhhdCB0aGUgbGF3IHdvdWxkIC4uLiAtLSBCcm9hZGVuIHRoZSAib3JpZ2luYWwgc291cmNlIGV4Y2VwdGlvbiIgdG8gYWxsb3cgbW9yZSB3aGlzdGxlYmxvd2VycyB0byBiZSBlbGlnaWJsZSBmb3IgcmV3YXJkcyAod2hpY2ggaGFkIGJlZW4gdGlnaHRlbmVkIGFmdGVyIGEgcmVjZW50IFN1cHJlbWUgQ291cnQgZGVjaXNpb24pIGFuZCBrZWVwIHRoZSBkZWZlbmRhbnQgZnJvbSBiZWluZyBhYmxlIHRvIGNvbnRlc3QgcmV3YXJkcyAtLSBFeHBhbmQgdGhlIGRlZmluaXRpb24gb2YgZ292ZXJubWVudCBmdW5kcyB0byBpbmNsdWRlIGZyYXVkIGFnYWluc3QgcXVhc2ktZ292ZXJubWVudGFsIGFnZW5jaWVzIGxpa2UgQW10cmFrIG9yIGZ1bmRzIGhlbGQgaW4gdHJ1c3QgYnkgb3JnYW5pemF0aW9ucyBhZG1pbmlzdGVyaW5nIGdvdmVybm1lbnQgZnVuZHMgc3VjaCBhcyBpbiBJcmFxIC0tIEV4dGVuZCB0aGUgc3RhdHV0ZSBvZiBsaW1pdGF0aW9ucyB0byB0ZW4geWVhcnMgaW4gYWxsIGNhc2VzLCBmcm9tIHRoZSBjdXJyZW50IHNpeCB0byB0ZW4sIGFuZCBtb2RpZnlpbmcgdGhlIHdheSB0aG9zZSB5ZWFycyBhcmUgY291bnRlZCAtLSBJbmNyZWFzZSBwcm90ZWN0aW9uIG9mIHdoaXN0bGVibG93ZXJzIGZyb20gcmV0YWxpYXRpb24gLS0gU3RyZWFtbGluZSBwcm9jZWR1cmVzIGZvciBpc3N1aW5nIHN1YnBvZW5hcyBkdXJpbmcgaW52ZXN0aWdhdGlvbnMgLS0gRGV2ZWxvcGluZyBwcm9jZWR1cmVzIHdoZXJlIGdvdmVybm1lbnQgZW1wbG95ZWVzIG1heSBwdXJzdWUgZnJhdWQgY2FzZXMgaWYgdGhlIGFnZW5jeSBpcyB1bnJlc3BvbnNpdmUgdG8gdGhlaXIgY29tcGxhaW50cwoiVGhpcyBwcm9ncmFtIGhhcyBhbHJlYWR5IGJyb3VnaHQgdGhlIGdvdmVybm1lbnQgJDExIG1pbGxpb24gaW4gcmV2ZW51ZSBmb3IgYW4gZXhwZW5kaXR1cmUgb2Ygb25seSAkMiBiaWxsaW9uLWEgNTUwIHBlcmNlbnQgcmV0dXJuIG9uIGludmVzdG1lbnQsIiBIZXNjaCBjb250aW51ZWQuCkl0IG1ha2VzIGJvdGggbW9yYWwgYW5kIGVjb25vbWljIHNlbnNlIHRvIGNvbnRpbnVlLCBzdHJlbmd0aGVuLCBhbmQgZXhwYW5kIGl0LgpIZXNjaCdzIHdlYnNpdGUgaXMgaHR0cDovL3d3dy5Ib3dUb1JlcG9ydEZyYXVkLmNvbQpIZSBpcyBhdmFpbGFibGUgZm9yIGludGVydmlld3MsIGFuZCBjYW4gcHJvdmlkZSBhIHJldmlldyBjb3B5IG9mIGhpcyBib29rIHRvIHF1YWxpZmllZCBqb3VybmFsaXN0cy4K
[]
V2lubmVycyBoYXZlIEJlZW4gU2VsZWN0ZWQgZm9yICdUaGUgRmlzaCBTdG9yeSB0byBSZWVsIGluIEFsbCBGaXNoIFN0b3JpZXMgQ29udGVzdCcKMTIgL1BSTmV3c3dpcmUvIC0tIE9mZmljaWFsIHdpbm5lcnMgaGF2ZSBiZWVuIHNlbGVjdGVkIGZvciAiVGhlIEZpc2ggU3RvcnkgdG8gUmVlbCBpbiBBbGwgRmlzaCBTdG9yaWVzIENvbnRlc3QsIiBob3N0ZWQgYnkgcHVibGlzaGVycyBTdGV3YXJ0LCBUYWJvcmkgJiBDaGFuZyB0byBjZWxlYnJhdGUgdGhlIHJlbGVhc2Ugb2YgRmlmdHkgRmF2b3JpdGUgRmx5LUZpc2hpbmcgVGFsZXM6IEV4cGVydCBGbHkgQW5nbGVycyBTaGFyZSBTdG9yaWVzIGZyb20gdGhlIFNlYSBhbmQgU3RyZWFtIGJ5IENocmlzIFNhbnRlbGxhLgooUGhvdG86IGh0dHA6Ly93d3cubmV3c2NvbS5jb20vY2dpLWJpbi9wcm5oLzIwMDcwOTEyL05ZVzEyNikgR3JhbmQgUHJpemUgV2lubmVyOiBIb3dhcmQgQm93bWFuLCBXYXVrZXNoYSwgV0kgRmlyc3QgUHJpemUgV2lubmVyOiBCaWwgTW9uYW4sIEFsZXhhbmRyaWEsIFZBIFNlY29uZCBQcml6ZSBXaW5uZXI6IE5vYWggTWlsbGVyLCBUd2luIEZhbGxzLCBJRCBUaGlyZCBQcml6ZSBXaW5uZXI6IERhbiBIZW5kZXJzb24sIEJvaXNlLCBJRApUaGUgR3JhbmQgUHJpemUgd2lubmVyIHdpbGwgcmVjZWl2ZSBhIE1vbnRhbmEgRmx5LWZpc2hpbmcgd2Vla2VuZCBmb3IgdHdvIHdpdGggQ3JhaWcgRmVsbGluIE91dGZpdHRlcnMgYW5kIEJpZyBIb2xlIExvZGdlLCB3aGljaCBpbmNsdWRlcyBhaXJmYXJlLCB0d28gZGF5cyBvZiBndWlkZWQgZmlzaGluZywgbWVhbHMgYW5kIGFjY29tbW9kYXRpb25zLgpUaGUgRmlyc3QgUHJpemUgd2lubmVyIHdpbGwgcmVjZWl2ZSBhIENhc3RpbmcgZm9yIFJlY292ZXJ5IFJvZCBhbmQgTUsgSSBSZWVsIGZyb20gVGVtcGxlIEZvcmsgT3V0Zml0dGVycyBGbHkgUm9kcywgdGhlIFNlY29uZCBQcml6ZSB3aW5uZXIgd2lsbCByZWNlaXZlIGEgQ2FzdGluZyBmb3IgUmVjb3ZlcnkgUm9kIGZyb20gVGVtcGxlIEZvcmsgT3V0Zml0dGVycyBGbCBSb2RzLCBhbmQgdGhlIFRoaXJkIFByaXplIHdpbm5lciB3aWxsIHJlY2VpdmUgdGhlIGVudGlyZSBjb2xsZWN0aW9uIG9mIENocmlzIFNhbnRlbGxhJ3MgYm9va3MsIHB1Ymxpc2hlZCBieSBTdGV3YXJ0LCBUYWJvcmkgJiBDaGFuZy4KV2lubmluZyBlc3NheXMgd2lsbCBiZSBwdWJsaXNoZWQgb25saW5lIGF0IHd3dy5zdGNib29rcy5jb20vY29udGVzdC4KQWJvdXQgdGhlIEJvb2sKRmlmdHkgRmF2b3JpdGUgRmx5LUZpc2hpbmcgVGFsZXMgaW5jbHVkZXMgYSB2YXN0IHBhbm9wbHkgb2YgZGlmZmVyZW50IHN0b3JpZXMsIGZyb20gdGhlIGNvbWljYWwgYW5kIHBvaWduYW50LCB0byB0aGUgaW5zcGlyYXRpb25hbCwgdG8gdGhlIGluY3JlZGlibGUgYW5kIHRoZSBhYnN1cmQuCkFjY29tcGFuaWVkIGJ5IGZhbnRhc3RpYyBwaG90b2dyYXBocyBjYXB0dXJpbmcgdGhlIHBoZW5vbWVuYWwgaW1hZ2VyeSBvZiB0aGUgc3BvcnQsIHRoZSBzdG9yaWVzIGluIHRoaXMgYm9vayByZWZsZWN0IG5vdCBvbmx5IHRoZSByaWNoIGV4cGVyaWVuY2Ugb2YgZmx5LWZpc2hpbmcgYnV0IGFsc28gaG93IGl0IGNhbiBleHRlbmQgYmV5b25kIHRoZSByaXZlcnMsIG9jZWFucywgYW5kIGZpc2ggdG8gdG91Y2ggdGhlIGNvcmUgb2Ygb3VyIGRhaWx5IGxpdmVzLgpBYm91dCB0aGUgQXV0aG9yCkNocmlzIFNhbnRlbGxhIGlzIGEgZnJlZWxhbmNlIHdyaXRlciwgbWFya2V0aW5nIGNvbnN1bHRhbnQsIGFuZCBhdmlkIGZseSBmaXNoZXJtYW4gd2hvc2Ugd29yayBoYXMgYXBwZWFyZWQgaW4gVGhlIE5ldyBZb3JrIFRpbWVzLCBUaGUgTmV3IFlvcmtlciwgVHJhdmVsICYgTGVpc3VyZSwgYW5kIEZseSBSb2QgJiBSZWVsLCBhbW9uZyBvdGhlciBwdWJsaWNhdGlvbnMuCkhlIGlzIGFsc28gdGhlIGF1dGhvciBvZiBTVEMncyBiZXN0c2VsbGluZyBGaWZ0eSBQbGFjZXMgdG8gRmx5IEZpc2ggQmVmb3JlIFlvdSBEaWUsIEZpZnR5IFBsYWNlcyB0byBQbGF5IEdvbGYgQmVmb3JlIFlvdSBEaWUsIEZpZnR5IFBsYWNlcyB0byBTYWlsIEJlZm9yZSBZb3UgRGllIGFuZCBjb21pbmcgc29vbiwgRmlmdHkgUGxhY2VzIFRvIEdvIEJpcmRpbmcgQmVmb3JlIFlvdSBEaWUuCkhlIGxpdmVzIGluIFBvcnRsYW5kLCBPcmVnb24uCkZpZnR5IEZhdm9yaXRlIEZseS1GaXNoaW5nIFRhbGVzOiBFeHBlcnQgRmx5IEFuZ2xlcnMgU2hhcmUgU3RvcmllcyBmcm9tIHRoZSBTZWEgYW5kIFN0cmVhbSBCeSBDaHJpcyBTYW50ZWxsYSBTdGV3YXJ0LCBUYWJvcmkgJiBDaGFuZyAxNjcgcGFnZXMsIDIwMCBmdWxsLWNvbG9yIHBob3RvZ3JhcGhzIElTQk46IDEtNTg0NzktNDQ0LTUgJDI0Ljk1IFB1YmxpY2F0aW9uIERhdGU6IFNlcHRlbWJlciAyMDA2IEltYWdlcyBhdmFpbGFibGUgdXBvbiByZXF1ZXN0IGh0dHA6Ly93d3cuaG5hYm9va3MuY29tL2luZGV4LnBocC9kLy8vMTU4NDc5NDQ0NS8KU09VUkNFIFN0ZXdhcnQsIFRhYm9yaSAmIENoYW5nCg==
[]
R01BQy1TQUlDIENlbGVicmF0ZXMgVGhpcmQgQW5uaXZlcnNhcnkKMTMgL1BSTmV3c3dpcmUvIC0tIEdNQUMtU0FJQyBBdXRvbW90aXZlIEZpbmFuY2UgQ28uLCBMdGQuCihHTUFDLVNBSUMpLCB3aGljaCBpcyBjZWxlYnJhdGluZyB0aGUgdGhpcmQgYW5uaXZlcnNhcnkgb2YgaXRzIGZvdW5kaW5nLCBhbm5vdW5jZWQgdG9kYXkgdGhhdCBpdHMgcmV0YWlsIGNyZWRpdCBidXNpbmVzcyBncmV3IDEyNSBwZXJjZW50IG9uIGFuIGFubnVhbCBiYXNpcyB0aHJvdWdoIEF1Z3VzdCAyMDA3LCBhbmQgdGhlIG9wZXJhdGlvbiBoYXMgc3VycGFzc2VkIFVTICQxLjMgYmlsbGlvbiBvZiBhc3NldHMgKFJNQiAxMCBiaWxsaW9uKS4KIlNpbmNlIHdlIGVudGVyZWQgdGhlIG1hcmtldCBhcyBhIHBpb25lZXIgaW4gQXVndXN0IDIwMDQsIEdNQUMtU0FJQydzIGF1dG9tb3RpdmUgcmV0YWlsIGNyZWRpdCBhbmQgd2hvbGVzYWxlIGNyZWRpdCBidXNpbmVzc2VzIGhhdmUgZXhwZXJpZW5jZWQgdHJlbWVuZG91cyBncm93dGgsIGFuZCBDaGluYSByZW1haW5zIGEga2V5IGdyb3d0aCBtYXJrZXQsIiBzYWlkIEdNQUMtU0FJQyBHZW5lcmFsIE1hbmFnZXIgUmljayBMaXZpbmdvb2QuClpoYW5nIFhpYW9qdW4sIGRlcHV0eSBnZW5lcmFsIG1hbmFnZXIgb2YgR01BQy1TQUlDLCBhbHNvIGFkZHMsICJHTUFDLVNBSUMgaXMgYnkgZmFyIHRoZSBudW1iZXIgb25lIGF1dG9tb3RpdmUgZmluYW5jZSBpbnN0aXR1dGlvbiBpbiBDaGluYS4iCkJldHdlZW4gSmFudWFyeSBhbmQgQXVndXN0LCBHTUFDLVNBSUMncyByZXRhaWwgY3JlZGl0IGJ1c2luZXNzIGdyZXcgYXQgYSByYXRlIG9mIG1vcmUgdGhhbiAxMDAgcGVyY2VudCBlYWNoIG1vbnRoIGNvbXBhcmVkIHRvIHRoZSByZXNwZWN0aXZlIG1vbnRoIGluIHRoZSBwcmV2aW91cyB5ZWFyLgpUaHJvdWdoIHRoZSBlbmQgb2YgQXVndXN0LCBHTUFDLVNBSUMgaGFkIHNpZ25lZCBvdmVyIDc5LDAwMCByZXRhaWwgbG9hbiBjb250cmFjdHMsIHdpdGggYXBwbGljYXRpb25zIGZvciBhdXRvbW90aXZlIHJldGFpbCBjcmVkaXQgbG9hbnMgYWNjZXB0ZWQgYnkgR01BQy1TQUlDIGluY3JlYXNpbmcgb24gYSBtb250aGx5IGJhc2lzLgpHTUFDLSBTQUlDIGhhcyBvdmVyIDM1MCBlbXBsb3llZXMuCkdNQUMtU0FJQyBoYXMgb25lIG9mIHRoZSBtb3N0IGV4dGVuc2l2ZSBidXNpbmVzcyBuZXR3b3JrcyBpbiBDaGluYS4KQXMgb2YgdGhlIGVuZCBvZiBBdWd1c3QsIGl0cyByZXRhaWwgY292ZXJhZ2UgaGFkIHJpc2VuIHRvIG1vcmUgdGhhbiA1MDIgZGVhbGVycyBpbiBtb3JlIHRoYW4gMTMyIGNpdGllcyBhY3Jvc3MgQ2hpbmEuCkdNQUMtU0FJQyBwcmltYXJpbHkgcHJvdmlkZXMgaXRzIGN1c3RvbWVycyBjcmVkaXQgbG9hbiBzZXJ2aWNlcyBmb3IgU2hhbmdoYWkgR00ncyBCdWljaywgQ2FkaWxsYWMsIENoZXZyb2xldCwgU2FhYiBhbmQgU0FJQydzIFJvZXdlIGJyYW5kcy4KVGhlIGpvaW50IHZlbnR1cmUgd2FzIHByb3ZpZGluZyB3aG9sZXNhbGUgY3JlZGl0IHNlcnZpY2UgdG8gbW9yZSB0aGFuIDQ0MCBjYXIgZGVhbGVycyBpbiBDaGluYSB0aHJvdWdoIHRoZSBlbmQgb2YgQXVndXN0LCB1cCBmcm9tIHRoZSAzMTUgZGVhbGVycyB0byB3aGljaCBpdCB3YXMgcHJvdmlkaW5nIHdob2xlc2FsZSBjcmVkaXQgc2VydmljZSBhdCB0aGUgZW5kIG9mIEF1Z3VzdCAyMDA2LgoiV2UgYWltIHRvIGNvbnRpbnVlIHNldHRpbmcgc3RhbmRhcmRzIGZvciB0aGUgYXV0b21vdGl2ZSBmaW5hbmNlIGluZHVzdHJ5LCBub3Qgb25seSBpbiBjcmVkaXQgYnVzaW5lc3MgZ3Jvd3RoLCBidXQgYWxzbyBpbiBnZW9ncmFwaGljIGNvdmVyYWdlIGFuZCBpbiB0aGUgcmVsYXRpb25zaGlwIHdpdGggb3VyIGRlYWxlciBwYXJ0bmVycywiIExpdmluZ29vZCBzYWlkLgpJbiBhIHlvdW5nIG1hcmtldCBsaWtlIENoaW5hLCBjb25zdGFudCBkZWFsZXIgdHJhaW5pbmcgaXMgY3J1Y2lhbCB0byBidXNpbmVzcyBkZXZlbG9wbWVudCBhbmQgZ2l2ZXMgYWRkZWQgdmFsdWUgdG8gdGhlc2UgeW91bmcgY29tcGFuaWVzLgpHTUFDLVNBSUMgQXV0b21vdGl2ZSBGaW5hbmNlIENvLiwgTHRkLiBpcyBhIGpvaW50IHZlbnR1cmUgYmV0d2VlbiBHTUFDIEZpbmFuY2lhbCBTZXJ2aWNlcywgU2hhbmdoYWkgQXV0b21vdGl2ZSBHcm91cCBGaW5hbmNlIENvLiwgTHRkLgooU0FJQ0ZDKSBhbmQgU2hhbmdoYWkgR2VuZXJhbCBNb3RvcnMuCkdNQUMtU0FJQyB3YXMgdGhlIGZpcnN0IGFwcHJvdmVkIGFuZCBvcGVyYXRpb25hbCBhdXRvbW90aXZlIGZpbmFuY2UgY29tcGFueSBpbiBDaGluYS4KR01BQyBGaW5hbmNpYWwgU2VydmljZXMgaXMgYSBnbG9iYWwsIGRpdmVyc2lmaWVkIGZpbmFuY2lhbCBzZXJ2aWNlcyBjb21wYW55IHRoYXQgb3BlcmF0ZXMgaW4gYXBwcm94aW1hdGVseSA0MCBjb3VudHJpZXMgaW4gYXV0b21vdGl2ZSBmaW5hbmNlLCByZWFsIGVzdGF0ZSBmaW5hbmNlLCBpbnN1cmFuY2UgYW5kIGNvbW1lcmNpYWwgZmluYW5jZSBidXNpbmVzc2VzLgpTQUlDIEZDLCBhIHN1YnNpZGlhcnkgb2YgU2hhbmdoYWkgQXV0b21vdGl2ZSBJbmR1c3RyeSBDb3JwLiBHcm91cCwgaXMgb25lIG9mIENoaW5hJ3MgbW9zdCBzdWNjZXNzZnVsIG5vbi1iYW5raW5nIGZpbmFuY2UgY29tcGFuaWVzLgpTT1VSQ0UgR01BQyBGaW5hbmNpYWwgU2VydmljZXMK
[]
RW50cmF2aXNpb24gQ29tbXVuaWNhdGlvbnMgQ29ycG9yYXRpb24gTmFtZXMgTWFyY2VsbyBHYWV0ZS1UYXBpYSBWaWNlIFByZXNpZGVudCBvZiBQdWJsaWMgYW5kIEdvdmVybm1lbnRhbCBBZmZhaXJzCjEzIC9QUk5ld3N3aXJlLUZpcnN0Q2FsbC8gLS0gRW50cmF2aXNpb24gQ29tbXVuaWNhdGlvbnMgQ29ycG9yYXRpb24gKE5ZU0U6IEVWQykgYW5ub3VuY2VkIHRvZGF5IHRoYXQgTWFyY2VsbyBHYWV0ZS0gVGFwaWEgaGFzIGJlZW4gYXBwb2ludGVkIGFzIHRoZSBuZXcgVmljZSBQcmVzaWRlbnQgb2YgUHVibGljIGFuZCBHb3Zlcm5tZW50YWwgQWZmYWlycyBmb3IgdGhlIGNvbXBhbnkuCkFzIGEgbmF0aW9uYWwgbGVhZGVyIG9uIExhdGlubyBwb2xpdGljYWwgcGFydGljaXBhdGlvbiwgTXIuIEdhZXRlIGJyaW5ncyBhIHVuaXF1ZSBiYWNrZ3JvdW5kIGFuZCBleHRlbnNpdmUgZXhwZXJ0aXNlIHRvIGhpcyBuZXcgcm9sZSBhdCBFbnRyYXZpc2lvbi4KTXIuIEdhZXRlIHdpbGwgd29yayB0byBlbmhhbmNlIGFuZCBjb29yZGluYXRlIEVudHJhdmlzaW9uJ3MgY29tbXVuaXR5IHNlcnZpY2UgaW4gcHJvbW90aW5nIFUuUy4gY2l0aXplbnNoaXAsIHZvdGVyIHJlZ2lzdHJhdGlvbiwgYW5kIEdldC1PdXQtVGhlLVZvdGUgZWZmb3J0cy4KTXIuIEdhZXRlIHdpbGwgY2Fycnkgb3V0IGhpcyBkdXRpZXMgYmFzZWQgaW4gU2FudGEgTW9uaWNhLCBDYWxpZm9ybmlhLCB3b3JraW5nIHdpdGggZWxlY3RlZCBvZmZpY2lhbHMgYW5kIG5hdGlvbmFsIGNvbW11bml0eSBhbmQgY2l2aWMgb3JnYW5pemF0aW9ucy4KIk1hcmNlbG8gaXMgdHJ1bHkgYW4gZXhjZXB0aW9uYWwgaW5kaXZpZHVhbCBnaXZlbiBoaXMgYmFja2dyb3VuZCBpbiB0aGUgcG9saXRpY2FsIGFyZW5hLCIgc2FpZCBXYWx0ZXIgVWxsb2EsIENoYWlybWFuIGFuZCBDaGllZiBFeGVjdXRpdmUgT2ZmaWNlciBvZiBFbnRyYXZpc2lvbi4KQXQgRW50cmF2aXNpb24sIHdlIGJlbGlldmUgdGhhdCBpdCdzIGNyaXRpY2FsIHRvIGZpbmQgaW5kaXZpZHVhbHMgd2hvc2UgdGFsZW50cyBhbGxvdyB0aGVtIHRvIGVmZmVjdGl2ZWx5IHJlYWNoIG91dCBhbmQgY29tbXVuaWNhdGUgd2l0aCB0aGUgcmVwcmVzZW50YXRpdmVzIG9mIG91ciBjb21tdW5pdGllcyBhbmQgY2l0aWVzLgpXaXRoIGhpcyBleHBlcmllbmNlIGluIHRoaXMgYXJlYSwgd2UncmUgY29uZmlkZW50IHRoYXQgTWFyY2VsbyB3aWxsIGhlbHAgdGhlIEVudHJhdmlzaW9uIGZhbWlseSBiZWNvbWUgYW4gZXZlbiBzdHJvbmdlciB2b2ljZSBmb3IgdGhlIGNvdW50cnkncyBIaXNwYW5pYyBwb3B1bGF0aW9uLgoiSSdtIHZlcnkgZXhjaXRlZCB0byBiZWNvbWUgYSBtZW1iZXIgb2YgdGhlIEVudHJhdmlzaW9uIGZhbWlseSwiIHNhaWQgTXIuIEdhZXRlLgpFbnRyYXZpc2lvbiBkb2VzIHN1Y2ggYW4gaW5jcmVkaWJsZSBhbW91bnQgb2Ygd29yayByZXByZXNlbnRpbmcgYW5kIHJlYWNoaW5nIG91dCB0byB0aGUgSGlzcGFuaWMgcG9wdWxhdGlvbiBpbiBhbGwgb2YgdGhlIGtleSBtYXJrZXRzIHdoZXJlIHRoZXkgb3BlcmF0ZS4KSXQgd2lsbCBiZSBhbiBob25vciB0byB3b3JrIGNsb3NlbHkgd2l0aCBFbnRyYXZpc2lvbiBhbmQgdGhlaXIgYXVkaWVuY2UgaW4gb3JkZXIgdG8gY29tbXVuaWNhdGUgdGhlIGdyb3dpbmcgaW5mbHVlbmNlcyBvZiB0aGUgSGlzcGFuaWMgcG9wdWxhdGlvbiBpbiBhbGwgYXNwZWN0cyBvZiBsaWZlIGluIHRoaXMgY291bnRyeS4KUHJpb3IgdG8gam9pbmluZyBFbnRyYXZpc2lvbiwgTXIuIEdhZXRlIHdhcyB0aGUgU2VuaW9yIERpcmVjdG9yIG9mIFByb2dyYW1zIGZvciB0aGUgTmF0aW9uYWwgQXNzb2NpYXRpb24gb2YgTGF0aW5vIEVsZWN0ZWQgYW5kIEFwcG9pbnRlZCBPZmZpY2lhbHMnIChOQUxFTykgRWR1Y2F0aW9uYWwgRnVuZCwgd2hlcmUgaGUgd2FzIHJlc3BvbnNpYmxlIGZvciB0aGUgc3RyYXRlZ2ljIGRldmVsb3BtZW50IG9mIGFsbCBOQUxFTyBFZHVjYXRpb25hbCBGdW5kIHByb2dyYW1zIGFuZCBjb29yZGluYXRpbmcgNzUlIG9mIHRoZSBvcmdhbml6YXRpb24ncyBwcm9ncmFtbWF0aWMgYnVkZ2V0LgpBdCBOQUxFTywgTXIuIEdhZXRlIGlzIGNyZWRpdGVkIHdpdGggdGhlIGRldmVsb3BtZW50IG9mIHRoZSBncm91cCdzIFZvY2VzIGRlbCBQdWVibG8sIGFuIGlubm92YXRpdmUgdm90ZXIgZWR1Y2F0aW9uIGFuZCBtb2JpbGl6YXRpb24gcHJvZ3JhbSwgd2hpY2ggdGFyZ2V0cyByZWdpc3RlcmVkIExhdGlub3Mgd2l0aCBhIGhpc3Rvcnkgb2YgbG93IHZvdGVyIHBhcnRpY2lwYXRpb24uClRoaXMgcHJvZ3JhbSBpcyB0aGUgbGFyZ2VzdCBkb2N1bWVudGVkICJHZXQtT3V0LVRoZS1Wb3RlIiBlZmZvcnQgaW4gdGhlIG5hdGlvbiwgd2l0aCBrZXkgcGFydG5lcnMgaW5jbHVkaW5nIHRoZSBOYXRpb25hbCBDb3VuY2lsIG9mIExhIFJhemEgYW5kIFVuaXZpc2lvbiBDb21tdW5pY2F0aW9ucy4KSW4gYWRkaXRpb24sIE1yLiBHYWV0ZSBwbGF5ZWQgYSBrZXkgcm9sZSBpbiBkZXZlbG9waW5nIHRoZSBvcmdhbml6YXRpb24ncyBwcm9ncmFtcyBmb3IgcHJvbW90aW5nIGZ1bGwgTGF0aW5vIHBvbGl0aWNhbCBwYXJ0aWNpcGF0aW9uIHRocm91Z2ggdGhlIHByb21vdGlvbiBvZiBVLlMuIENpdGl6ZW5zaGlwIGFuZCBjaXZpYyBpbnRlZ3JhdGlvbiAiWWEgZXMgSG9yYSIgaW5pdGlhdGl2ZS4KQWJvdXQgRW50cmF2aXNpb24gQ29tbXVuaWNhdGlvbnMgQ29ycG9yYXRpb24KRW50cmF2aXNpb24gQ29tbXVuaWNhdGlvbnMgQ29ycG9yYXRpb24gaXMgYSBkaXZlcnNpZmllZCBTcGFuaXNoLWxhbmd1YWdlIG1lZGlhIGNvbXBhbnkgdXRpbGl6aW5nIGEgY29tYmluYXRpb24gb2YgdGVsZXZpc2lvbiwgcmFkaW8gYW5kIG91dGRvb3Igb3BlcmF0aW9ucyB0byByZWFjaCBIaXNwYW5pYyBjb25zdW1lcnMgYWNyb3NzIHRoZSBVbml0ZWQgU3RhdGVzLCBhcyB3ZWxsIGFzIHRoZSBib3JkZXIgbWFya2V0cyBvZiBNZXhpY28uCkVudHJhdmlzaW9uIGlzIHRoZSBsYXJnZXN0IGFmZmlsaWF0ZSBncm91cCBvZiBib3RoIHRoZSB0b3AtcmFua2VkIFVuaXZpc2lvbiB0ZWxldmlzaW9uIG5ldHdvcmsgYW5kIFVuaXZpc2lvbidzIFRlbGVGdXR1cmEgbmV0d29yaywgd2l0aCB0ZWxldmlzaW9uIHN0YXRpb25zIGluIDIwIG9mIHRoZSBuYXRpb24ncyB0b3AgNTAgSGlzcGFuaWMgbWFya2V0cy4KVGhlIGNvbXBhbnkgYWxzbyBvcGVyYXRlcyBvbmUgb2YgdGhlIG5hdGlvbidzIGxhcmdlc3QgZ3JvdXBzIG9mIHByaW1hcmlseSBTcGFuaXNoLWxhbmd1YWdlIHJhZGlvIHN0YXRpb25zLCBjb25zaXN0aW5nIG9mIDQ3IG93bmVkIGFuZCBvcGVyYXRlZCByYWRpbyBzdGF0aW9ucy4KVGhlIGNvbXBhbnkncyBvdXRkb29yIG9wZXJhdGlvbnMgY29uc2lzdCBvZiBhcHByb3hpbWF0ZWx5IDEwLDQwMCBhZHZlcnRpc2luZyBmYWNlcyBjb25jZW50cmF0ZWQgcHJpbWFyaWx5IGluIExvcyBBbmdlbGVzIGFuZCBOZXcgWW9yay4KRW50cmF2aXNpb24gc2hhcmVzIG9mIENsYXNzIEEgQ29tbW9uIFN0b2NrIGFyZSB0cmFkZWQgb24gVGhlIE5ldyBZb3JrIFN0b2NrIEV4Y2hhbmdlIHVuZGVyIHRoZSBzeW1ib2w6IEVWQy4KU09VUkNFIEVudHJhdmlzaW9uIENvbW11bmljYXRpb25zIENvcnBvcmF0aW9uCg==
[]
VGhlIEluZGlhbiBIb3RlbHMgQ29tcGFueSBMdGQgSW5pdGlhdGVzIEFsbGlhbmNlIERpc2N1c3Npb25zIFdpdGggT3JpZW50LUV4cHJlc3MgSG90ZWxzIEx0ZAoxNyAvUFJOZXdzd2lyZS8gLS0gVGhlIEluZGlhbiBIb3RlbHMgQ29tcGFueSBMdGQgbG9va3MgZm9yd2FyZCB0byB0aGUgcHJvY2VzcyBvZiBkaXNjdXNzaW9ucyB3aXRoIE9yaWVudC1FeHByZXNzIEhvdGVscyBMdGQgdG8gZm9ybSBhbiBhbGxpYW5jZS4KVGhlIGFsbGlhbmNlIGlzIGFpbWVkIGF0IGxldmVyYWdpbmcgZ2xvYmFsIG5ldHdvcmtzIGFuZCBidWlsZGluZyBicmFuZCBlcXVpdHkgZm9yIGJvdGggY29tcGFuaWVzIGluIGEgdW5pcXVlIHJlbGF0aW9uc2hpcC4KQXMgYSBjb21taXRtZW50IHRvIHRoaXMgcHJvcG9zZWQgYWxsaWFuY2UsIElIQ0wsIHRocm91Z2ggaXRzIHdob2xseS1vd25lZCBzdWJzaWRpYXJ5IFNhbXNhcmEgUHJvcGVydGllcyBMdGQsIGhhcyBhY3F1aXJlZCBhIHN0cmF0ZWdpYyBzdGFrZSBvZiBhcHByb3hpbWF0ZWx5IDEwJSBpbiBPcmllbnQtRXhwcmVzcyBIb3RlbHMgTHRkIGF0IGEgdG90YWwgaW52ZXN0bWVudCBvZiBVUyQgMjExLjI4IG1pbGxpb24uClRoaXMgaXMgYSByZWZsZWN0aW9uIG9mIGl0cyBkZWVwIGNvbW1pdG1lbnQgdG8gdGhlIHBvc3NpYmlsaXR5IG9mIGFuIGFzc29jaWF0aW9uIHdpdGggT3JpZW50LUV4cHJlc3MgSG90ZWxzIEx0ZC4KT3JpZW50LUV4cHJlc3MgSG90ZWxzIEx0ZCBvd25zIG9yIHBhcnQgb3ducyBhbmQgbWFuYWdlcyAzNSBob3RlbHMgaW4gMjUgY291bnRyaWVzLCBiZXNpZGVzIGx1eHVyeSB0cmFpbnMgYW5kIGNydWlzZXMuCkl0cyBwcm9wZXJ0aWVzIGFyZSBmYWJsZWQgZm9yIHRoZWlyIHVuaXF1ZW5lc3MgYW5kIGVhY2ggaXMgYSBkZXN0aW5hdGlvbiBpbiBpdHNlbGYuCk1yLiBSLksuIEtyaXNobmEgS3VtYXIsIFZpY2UgQ2hhaXJtYW4sIElIQ0wgY29tbWVudGVkLCAiT3ZlciB0aGUgcGFzdCBmZXcgeWVhcnMsIHdlIGhhdmUgcHVyc3VlZCB0aGUgb2JqZWN0aXZlIG9mIGdyb3dpbmcgdGhlIFRhaiBicmFuZCBpbnRlcm5hdGlvbmFsbHkuCkFzIHBhcnQgb2YgdGhpcyBzdHJhdGVneSwgd2UgaGF2ZSBiZWVuIHB1cnN1aW5nIGFsbGlhbmNlcyBhbmQgcmVsYXRpb25zaGlwcyB3aXRoIGxlYWRpbmcgaG90ZWwgZ3JvdXBzIHRoYXQgaGF2ZSBub3QgeWV0IHNldCB1cCBhIHByZXNlbmNlIGluIEluZGlhLCBidXQgaGF2ZSBzZWN1cmVkIGxlYWRlcnNoaXAgcG9zaXRpb25zIGluIHZhcmlvdXMgZ2VvZ3JhcGhpZXMuClRoaXMgbW92ZSBpcyBpbiBsaW5lIHdpdGggb3VyIHBsYW5zIGFuZCB3ZSBsb29rIGZvcndhcmQgdG8gcHVyc3VpbmcgYSBwb3NzaWJsZSBhc3NvY2lhdGlvbiBiZXR3ZWVuIElIQ0wgYW5kIHRoZSBDb21wYW55IHdoaWNoIGhhcyBlYXJuZWQgYSBncmVhdCByZXB1dGF0aW9uIGZvciBpdHMgb3V0c3RhbmRpbmcgdWx0cmEgbHV4dXJ5IGhvdGVscywgdHJhaW5zIGFuZCBjcnVpc2VzLgpUaGUgcG9zc2libGUgY29tYmluYXRpb24gb2YgdGhlIHR3byBicmFuZHMgd2lsbCBjcmVhdGUgYSBwb3dlcmZ1bCBjb21wZXRpdGl2ZSBhZHZhbnRhZ2UuClRoZSBzeW5lcmdpZXMgd2hpY2ggY2FuIGJlIGRldmVsb3BlZCB3aWxsIHN0cm9uZ2x5IGxldmVyYWdlIHRoZSBodWdlIG9wcG9ydHVuaXR5IGluIHRoZSBnbG9iYWwgbWFya2V0IGFzIGFsc28gdGhlIGV4cGxvZGluZyBJbmRpYW4gaG9zcGl0YWxpdHkgaW5kdXN0cnkuCldlIGFyZSBjb21taXR0ZWQgdG8gd29ya2luZyB0b2dldGhlciBpbiBhIGZyaWVuZGx5IGFuZCBzdXBwb3J0aXZlIG1hbm5lciB3aXRoIE9yaWVudC1FeHByZXNzIEhvdGVscyBMdGQuClNPVVJDRSBUaGUgSW5kaWFuIEhvdGVscyBDb21wYW55IEx0ZAo=
[(VGhlIEluZGlhbiBIb3RlbHMgQ29tcGFueSBMdGQgSW5pdGlhdGVzIEFsbGlhbmNlIERpc2N1c3Npb25zIFdpdGggT3JpZW50LUV4cHJlc3MgSG90ZWxzIEx0ZAoxNyAvUFJOZXdzd2lyZS8gLS0gVGhlIEluZGlhbiBIb3RlbHMgQ29tcGFueSBMdGQgbG9va3MgZm9yd2FyZCB0byB0aGUgcHJvY2VzcyBvZiBkaXNjdXNzaW9ucyB3aXRoIE9yaWVudC1FeHByZXNzIEhvdGVscyBMdGQgdG8gZm9ybSBhbiBhbGxpYW5jZS4KVGhlIGFsbGlhbmNlIGlzIGFpbWVkIGF0IGxldmVyYWdpbmcgZ2xvYmFsIG5ldHdvcmtzIGFuZCBidWlsZGluZyBicmFuZCBlcXVpdHkgZm9yIGJvdGggY29tcGFuaWVzIGluIGEgdW5pcXVlIHJlbGF0aW9uc2hpcC4KQXMgYSBjb21taXRtZW50IHRvIHRoaXMgcHJvcG9zZWQgYWxsaWFuY2UsIElIQ0wsIHRocm91Z2ggaXRzIHdob2xseS1vd25lZCBzdWJzaWRpYXJ5IFNhbXNhcmEgUHJvcGVydGllcyBMdGQsIGhhcyBhY3F1aXJlZCBhIHN0cmF0ZWdpYyBzdGFrZSBvZiBhcHByb3hpbWF0ZWx5IDEwJSBpbiBPcmllbnQtRXhwcmVzcyBIb3RlbHMgTHRkIGF0IGEgdG90YWwgaW52ZXN0bWVudCBvZiBVUyQgMjExLjI4IG1pbGxpb24uClRoaXMgaXMgYSByZWZsZWN0aW9uIG9mIGl0cyBkZWVwIGNvbW1pdG1lbnQgdG8gdGhlIHBvc3NpYmlsaXR5IG9mIGFuIGFzc29jaWF0aW9uIHdpdGggT3JpZW50LUV4cHJlc3MgSG90ZWxzIEx0ZC4KT3JpZW50LUV4cHJlc3MgSG90ZWxzIEx0ZCBvd25zIG9yIHBhcnQgb3ducyBhbmQgbWFuYWdlcyAzNSBob3RlbHMgaW4gMjUgY291bnRyaWVzLCBiZXNpZGVzIGx1eHVyeSB0cmFpbnMgYW5kIGNydWlzZXMuCkl0cyBwcm9wZXJ0aWVzIGFyZSBmYWJsZWQgZm9yIHRoZWlyIHVuaXF1ZW5lc3MgYW5kIGVhY2ggaXMgYSBkZXN0aW5hdGlvbiBpbiBpdHNlbGYuCk1yLiBSLksuIEtyaXNobmEgS3VtYXIsIFZpY2UgQ2hhaXJtYW4sIElIQ0wgY29tbWVudGVkLCAiT3ZlciB0aGUgcGFzdCBmZXcgeWVhcnMsIHdlIGhhdmUgcHVyc3VlZCB0aGUgb2JqZWN0aXZlIG9mIGdyb3dpbmcgdGhlIFRhaiBicmFuZCBpbnRlcm5hdGlvbmFsbHkuCkFzIHBhcnQgb2YgdGhpcyBzdHJhdGVneSwgd2UgaGF2ZSBiZWVuIHB1cnN1aW5nIGFsbGlhbmNlcyBhbmQgcmVsYXRpb25zaGlwcyB3aXRoIGxlYWRpbmcgaG90ZWwgZ3JvdXBzIHRoYXQgaGF2ZSBub3QgeWV0IHNldCB1cCBhIHByZXNlbmNlIGluIEluZGlhLCBidXQgaGF2ZSBzZWN1cmVkIGxlYWRlcnNoaXAgcG9zaXRpb25zIGluIHZhcmlvdXMgZ2VvZ3JhcGhpZXMuClRoaXMgbW92ZSBpcyBpbiBsaW5lIHdpdGggb3VyIHBsYW5zIGFuZCB3ZSBsb29rIGZvcndhcmQgdG8gcHVyc3VpbmcgYSBwb3NzaWJsZSBhc3NvY2lhdGlvbiBiZXR3ZWVuIElIQ0wgYW5kIHRoZSBDb21wYW55IHdoaWNoIGhhcyBlYXJuZWQgYSBncmVhdCByZXB1dGF0aW9uIGZvciBpdHMgb3V0c3RhbmRpbmcgdWx0cmEgbHV4dXJ5IGhvdGVscywgdHJhaW5zIGFuZCBjcnVpc2VzLgpUaGUgcG9zc2libGUgY29tYmluYXRpb24gb2YgdGhlIHR3byBicmFuZHMgd2lsbCBjcmVhdGUgYSBwb3dlcmZ1bCBjb21wZXRpdGl2ZSBhZHZhbnRhZ2UuClRoZSBzeW5lcmdpZXMgd2hpY2ggY2FuIGJlIGRldmVsb3BlZCB3aWxsIHN0cm9uZ2x5IGxldmVyYWdlIHRoZSBodWdlIG9wcG9ydHVuaXR5IGluIHRoZSBnbG9iYWwgbWFya2V0IGFzIGFsc28gdGhlIGV4cGxvZGluZyBJbmRpYW4gaG9zcGl0YWxpdHkgaW5kdXN0cnkuCldlIGFyZSBjb21taXR0ZWQgdG8gd29ya2luZyB0b2dldGhlciBpbiBhIGZyaWVuZGx5IGFuZCBzdXBwb3J0aXZlIG1hbm5lciB3aXRoIE9yaWVudC1FeHByZXNzIEhvdGVscyBMdGQuClNPVVJDRSBUaGUgSW5kaWFuIEhvdGVscyBDb21wYW55IEx0ZAo=, 'PERSON')]
RmllbGRpbmcgR3JhZHVhdGUgVW5pdmVyc2l0eSBNZWRpYSBQc3ljaG9sb2d5IFByb2dyYW0gV2VsY29tZXMgMTggTmV3IFBoRCBTdHVkZW50cyBpbiBTZXB0ZW1iZXIgMjAwNwoxOSAvUFJOZXdzd2lyZS1VU05ld3N3aXJlLyAtLSBGaWVsZGluZyBHcmFkdWF0ZSBVbml2ZXJzaXR5IHdlbGNvbWVkIGVpZ2h0ZWVuIHN0dWRlbnRzIGludG8gaXRzIG5ld2x5IGNyZWF0ZWQgUGhEIE1lZGlhIFBzeWNob2xvZ3kgUHJvZ3JhbSwgdGhlIG9ubHkgZG9jdG9yYWwgcHJvZ3JhbSBvZiBpdHMga2luZCBpbiB0aGUgd29ybGQuClRoZSBzdHVkZW50cyBhcmUgYWxsIG1pZC1jYXJlZXIgcHJvZmVzc2lvbmFscyBmcm9tIG9yZ2FuaXphdGlvbnMgYXMgdmFyaWVkIGFzIERpc25leSwgVGhlIFVuaXZlcnNpdHkgb2YgVmVybW9udCwgYW5kIFNvbnkgRW50ZXJ0YWlubWVudC4KRmllbGRpbmcncyBkaXN0cmlidXRlZCBsZWFybmluZyBtb2RlbCBhbGxvd3MgdGhlIHN0dWRlbnRzIHRvIG1haW50YWluIHRoZWlyIHByb2Zlc3Npb25hbCwgZmFtaWx5LCBhbmQgY29tbXVuaXR5IGNvbW1pdG1lbnRzIHdoaWxlIGVhcm5pbmcgdGhlaXIgYWR2YW5jZWQgZGVncmVlcywiIHNhaWQgRHIuIEJlcm5pZSBMdXNraW4sIGRpcmVjdG9yIG9mIHRoZSBwcm9ncmFtLgpUaGUgbWVkaWEgcHN5Y2hvbG9neSBjdXJyaWN1bHVtIGlzIGRlc2lnbmVkIGZvciBwcm9mZXNzaW9uYWxzIHdobyBjb21lIGZyb20gYSB3aWRlIHZhcmlldHkgb2YgZGlzY2lwbGluZXMgYW5kIHdobyB3YW50IHRvIHN0dWR5IHRoZSBlZmZlY3RzIG9mIG1lZGlhIG9uIGh1bWFuIGJlaGF2aW9yLgpUaHJvdWdob3V0IHRoZWlyIHN0dWRpZXMgYW5kIGRvY3RvcmFsIHJlc2VhcmNoIHRoZXkgYWRkcmVzcyB0aGUgY29udmVyZ2VuY2Ugb2YgbWVkaWEsIHRlY2hub2xvZ3ksIGNvbW11bmljYXRpb24sIGFydCwgYW5kIHNjaWVuY2UuCkRyLiBMdXNraW4gYmVsaWV2ZXMgdGhlIGZpZWxkIGlzIHBlcnNvbmlmaWVkIGJ5IHRoZSB0ZXJtICJwc2N5YmVybWVkaWEsIiBhIGJsZW5kIG9mIHBzeWNob2xvZ3ksIGFydGlmaWNpYWwgaW50ZWxsaWdlbmNlLCBjeWJlcm5ldGljcywgYW5kIG1lZGlhLgpCb3RoIGFuIGFydCBhbmQgYSBzY2llbmNlLCB0aGUgZW1lcmdpbmcgZmllbGQgcmVwcmVzZW50cyBzaWduaWZpY2FudCBvcHBvcnR1bml0eSB0byB1c2UgbWVkaWEgaW4gbmV3IGFuZCBjcmVhdGl2ZSB3YXlzIGJ5IHVuZGVyc3RhbmRpbmcgaG93IHBzeWNob2xvZ3kgYW5kIG1lZGlhIHdvcmsgdG9nZXRoZXIuClBzeWNob2xvZ2ljYWwgdGhlb3JpZXMgYXJlIGFwcGxpZWQgdG8gZW1lcmdpbmcgZS1MZWFybmluZyBpbiBwaW9uZWVyaW5nIHdheXMuCiJQc3ljaG9sb2d5IGlzIGZ1bmRhbWVudGFsIGluIHRoZSB3b3JsZCBvZiBuZXcgbWVkaWEgZm9yIHVuZGVyc3RhbmRpbmcgbWVkaWEgaW1wYWN0IG9uIHNvY2lldHkgYW5kIGluIGRldmVsb3BpbmcgbWVkaWEtY2VudHJpYyBwcm9kdWN0cyBhbmQgc2VydmljZXMgYWZmZWN0aW5nIG91ciBsaXZlcywiIEx1c2tpbiBzYXlzLgpGaWVsZGluZydzIHByZXNpZGVudCBEci4gSnVkaXRoIEt1aXBlcnMgc2F5cywgInRoZSByZXNwb25zZSBmb3IgdGhlIHByb2dyYW0gaGFzIGJlZW4gZXh0cmVtZWx5IHBvc2l0aXZlLgpUaGUgTWVkaWEgUHN5Y2hvbG9neSBQcm9ncmFtIGlzIG9uZSBvZiB0aGUgbW9zdCBpbm5vdmF0aXZlIG5ldyBQaEQgcHJvZ3JhbXMgaW4gYWxsIG9mIGhpZ2hlciBlZHVjYXRpb24sIGFuZCBGaWVsZGluZyBpcyBhIHdvcmxkIGxlYWRlciBpbiBkaXN0cmlidXRlZCBsZWFybmluZyBpbiBkb2N0b3JhbCBlZHVjYXRpb24sIiBLdWlwZXJzIHNhaWQuCiJUaGlzIFBoRCBwcm9ncmFtIGhhcyBiZWVuIHRyYW5zZm9ybWF0aW9uYWwgZm9yIG1lLCIgbm90ZWQgUmFjaGVsIEJpc2hhciwgUGhELCB3aG8gaW4gSnVseSAyMDA3IGJlY2FtZSB0aGUgZmlyc3QgZG9jdG9yYWwgZ3JhZHVhdGUgaW4gbWVkaWEgcHN5Y2hvbG9neSBmcm9tIGFueSB1bml2ZXJzaXR5IGluIHRoZSB3b3JsZC4KIlJhY2hlbCBpcyBub3cgcXVhbGlmaWVkIGZvciB0aGUgR3Vpbm5lc3MgQm9vayBvZiBXb3JsZCBSZWNvcmRzIiBub3RlZCBMdXNraW4uCkZpZWxkaW5nIEdyYWR1YXRlIFVuaXZlcnNpdHkgaXMgaGVhZHF1YXJ0ZXJlZCBpbiBTYW50YSBCYXJiYXJhLCBDQSwgd2hlcmUgaXQgd2FzIGZvdW5kZWQgaW4gMTk3NC4KSXQgaXMgYSB3b3JsZC1yZWNvZ25pemVkIGxlYWRlciBpbiBncmFkdWF0ZSBlZHVjYXRpb24sIGhhdmluZyBjcmVhdGVkIG9uZSBvZiB0aGUgZmlyc3QgYW5kIG1vc3Qgc3VjY2Vzc2Z1bCBkaXN0cmlidXRlZCBsZWFybmluZyBtb2RlbHMgZm9yIG1pZC1jYXJlZXIgYWR1bHRzLgpGaWVsZGluZyBpcyBhbiBhY2NyZWRpdGVkLCBub25wcm9maXQgZ3JhZHVhdGUgdW5pdmVyc2l0eSBvZmZlcmluZyBwcm9ncmFtcyB3aXRoaW4gdGhyZWUgc2Nob29sczogUHN5Y2hvbG9neSwgSHVtYW4gJiBPcmdhbml6YXRpb24gRGV2ZWxvcG1lbnQsIGFuZCBFZHVjYXRpb25hbCBMZWFkZXJzaGlwICYgQ2hhbmdlLgpUaGUgRmllbGRpbmcgY29tbXVuaXR5IGlzIGRlZGljYXRlZCB0byBsaWZlbG9uZyBsZWFybmluZzsgc29jaWFsIGp1c3RpY2UgYW5kIGNoYW5nZTsgYW5kIGlubm92YXRpb24gaW4gb3JnYW5pemF0aW9ucywgY29tbXVuaXRpZXMsIGFuZCBzb2NpZXR5LgpGb3IgbW9yZSBpbmZvcm1hdGlvbiwgdmlzaXQgaHR0cDovL3d3dy5maWVsZGluZy5lZHUuClNPVVJDRSBGaWVsZGluZyBHcmFkdWF0ZSBVbml2ZXJzaXR5Cg==
[(RmllbGRpbmcgR3JhZHVhdGUgVW5pdmVyc2l0eSBNZWRpYSBQc3ljaG9sb2d5IFByb2dyYW0gV2VsY29tZXMgMTggTmV3IFBoRCBTdHVkZW50cyBpbiBTZXB0ZW1iZXIgMjAwNwoxOSAvUFJOZXdzd2lyZS1VU05ld3N3aXJlLyAtLSBGaWVsZGluZyBHcmFkdWF0ZSBVbml2ZXJzaXR5IHdlbGNvbWVkIGVpZ2h0ZWVuIHN0dWRlbnRzIGludG8gaXRzIG5ld2x5IGNyZWF0ZWQgUGhEIE1lZGlhIFBzeWNob2xvZ3kgUHJvZ3JhbSwgdGhlIG9ubHkgZG9jdG9yYWwgcHJvZ3JhbSBvZiBpdHMga2luZCBpbiB0aGUgd29ybGQuClRoZSBzdHVkZW50cyBhcmUgYWxsIG1pZC1jYXJlZXIgcHJvZmVzc2lvbmFscyBmcm9tIG9yZ2FuaXphdGlvbnMgYXMgdmFyaWVkIGFzIERpc25leSwgVGhlIFVuaXZlcnNpdHkgb2YgVmVybW9udCwgYW5kIFNvbnkgRW50ZXJ0YWlubWVudC4KRmllbGRpbmcncyBkaXN0cmlidXRlZCBsZWFybmluZyBtb2RlbCBhbGxvd3MgdGhlIHN0dWRlbnRzIHRvIG1haW50YWluIHRoZWlyIHByb2Zlc3Npb25hbCwgZmFtaWx5LCBhbmQgY29tbXVuaXR5IGNvbW1pdG1lbnRzIHdoaWxlIGVhcm5pbmcgdGhlaXIgYWR2YW5jZWQgZGVncmVlcywiIHNhaWQgRHIuIEJlcm5pZSBMdXNraW4sIGRpcmVjdG9yIG9mIHRoZSBwcm9ncmFtLgpUaGUgbWVkaWEgcHN5Y2hvbG9neSBjdXJyaWN1bHVtIGlzIGRlc2lnbmVkIGZvciBwcm9mZXNzaW9uYWxzIHdobyBjb21lIGZyb20gYSB3aWRlIHZhcmlldHkgb2YgZGlzY2lwbGluZXMgYW5kIHdobyB3YW50IHRvIHN0dWR5IHRoZSBlZmZlY3RzIG9mIG1lZGlhIG9uIGh1bWFuIGJlaGF2aW9yLgpUaHJvdWdob3V0IHRoZWlyIHN0dWRpZXMgYW5kIGRvY3RvcmFsIHJlc2VhcmNoIHRoZXkgYWRkcmVzcyB0aGUgY29udmVyZ2VuY2Ugb2YgbWVkaWEsIHRlY2hub2xvZ3ksIGNvbW11bmljYXRpb24sIGFydCwgYW5kIHNjaWVuY2UuCkRyLiBMdXNraW4gYmVsaWV2ZXMgdGhlIGZpZWxkIGlzIHBlcnNvbmlmaWVkIGJ5IHRoZSB0ZXJtICJwc2N5YmVybWVkaWEsIiBhIGJsZW5kIG9mIHBzeWNob2xvZ3ksIGFydGlmaWNpYWwgaW50ZWxsaWdlbmNlLCBjeWJlcm5ldGljcywgYW5kIG1lZGlhLgpCb3RoIGFuIGFydCBhbmQgYSBzY2llbmNlLCB0aGUgZW1lcmdpbmcgZmllbGQgcmVwcmVzZW50cyBzaWduaWZpY2FudCBvcHBvcnR1bml0eSB0byB1c2UgbWVkaWEgaW4gbmV3IGFuZCBjcmVhdGl2ZSB3YXlzIGJ5IHVuZGVyc3RhbmRpbmcgaG93IHBzeWNob2xvZ3kgYW5kIG1lZGlhIHdvcmsgdG9nZXRoZXIuClBzeWNob2xvZ2ljYWwgdGhlb3JpZXMgYXJlIGFwcGxpZWQgdG8gZW1lcmdpbmcgZS1MZWFybmluZyBpbiBwaW9uZWVyaW5nIHdheXMuCiJQc3ljaG9sb2d5IGlzIGZ1bmRhbWVudGFsIGluIHRoZSB3b3JsZCBvZiBuZXcgbWVkaWEgZm9yIHVuZGVyc3RhbmRpbmcgbWVkaWEgaW1wYWN0IG9uIHNvY2lldHkgYW5kIGluIGRldmVsb3BpbmcgbWVkaWEtY2VudHJpYyBwcm9kdWN0cyBhbmQgc2VydmljZXMgYWZmZWN0aW5nIG91ciBsaXZlcywiIEx1c2tpbiBzYXlzLgpGaWVsZGluZydzIHByZXNpZGVudCBEci4gSnVkaXRoIEt1aXBlcnMgc2F5cywgInRoZSByZXNwb25zZSBmb3IgdGhlIHByb2dyYW0gaGFzIGJlZW4gZXh0cmVtZWx5IHBvc2l0aXZlLgpUaGUgTWVkaWEgUHN5Y2hvbG9neSBQcm9ncmFtIGlzIG9uZSBvZiB0aGUgbW9zdCBpbm5vdmF0aXZlIG5ldyBQaEQgcHJvZ3JhbXMgaW4gYWxsIG9mIGhpZ2hlciBlZHVjYXRpb24sIGFuZCBGaWVsZGluZyBpcyBhIHdvcmxkIGxlYWRlciBpbiBkaXN0cmlidXRlZCBsZWFybmluZyBpbiBkb2N0b3JhbCBlZHVjYXRpb24sIiBLdWlwZXJzIHNhaWQuCiJUaGlzIFBoRCBwcm9ncmFtIGhhcyBiZWVuIHRyYW5zZm9ybWF0aW9uYWwgZm9yIG1lLCIgbm90ZWQgUmFjaGVsIEJpc2hhciwgUGhELCB3aG8gaW4gSnVseSAyMDA3IGJlY2FtZSB0aGUgZmlyc3QgZG9jdG9yYWwgZ3JhZHVhdGUgaW4gbWVkaWEgcHN5Y2hvbG9neSBmcm9tIGFueSB1bml2ZXJzaXR5IGluIHRoZSB3b3JsZC4KIlJhY2hlbCBpcyBub3cgcXVhbGlmaWVkIGZvciB0aGUgR3Vpbm5lc3MgQm9vayBvZiBXb3JsZCBSZWNvcmRzIiBub3RlZCBMdXNraW4uCkZpZWxkaW5nIEdyYWR1YXRlIFVuaXZlcnNpdHkgaXMgaGVhZHF1YXJ0ZXJlZCBpbiBTYW50YSBCYXJiYXJhLCBDQSwgd2hlcmUgaXQgd2FzIGZvdW5kZWQgaW4gMTk3NC4KSXQgaXMgYSB3b3JsZC1yZWNvZ25pemVkIGxlYWRlciBpbiBncmFkdWF0ZSBlZHVjYXRpb24sIGhhdmluZyBjcmVhdGVkIG9uZSBvZiB0aGUgZmlyc3QgYW5kIG1vc3Qgc3VjY2Vzc2Z1bCBkaXN0cmlidXRlZCBsZWFybmluZyBtb2RlbHMgZm9yIG1pZC1jYXJlZXIgYWR1bHRzLgpGaWVsZGluZyBpcyBhbiBhY2NyZWRpdGVkLCBub25wcm9maXQgZ3JhZHVhdGUgdW5pdmVyc2l0eSBvZmZlcmluZyBwcm9ncmFtcyB3aXRoaW4gdGhyZWUgc2Nob29sczogUHN5Y2hvbG9neSwgSHVtYW4gJiBPcmdhbml6YXRpb24gRGV2ZWxvcG1lbnQsIGFuZCBFZHVjYXRpb25hbCBMZWFkZXJzaGlwICYgQ2hhbmdlLgpUaGUgRmllbGRpbmcgY29tbXVuaXR5IGlzIGRlZGljYXRlZCB0byBsaWZlbG9uZyBsZWFybmluZzsgc29jaWFsIGp1c3RpY2UgYW5kIGNoYW5nZTsgYW5kIGlubm92YXRpb24gaW4gb3JnYW5pemF0aW9ucywgY29tbXVuaXRpZXMsIGFuZCBzb2NpZXR5LgpGb3IgbW9yZSBpbmZvcm1hdGlvbiwgdmlzaXQgaHR0cDovL3d3dy5maWVsZGluZy5lZHUuClNPVVJDRSBGaWVsZGluZyBHcmFkdWF0ZSBVbml2ZXJzaXR5Cg==, 'ORG')]
Q2FwaXRhbFNvdXJjZSBDb21wbGV0ZXMgJDQwMCBNaWxsaW9uIFRlcm0gRmluYW5jaW5nCkNIRVZZIENIQVNFLCBNZC4sIE9jdC4gMTEgL1BSTmV3c3dpcmUtRmlyc3RDYWxsLyAtLSBDYXBpdGFsU291cmNlIEluYy4KKE5ZU0U6IENTRSkgYW5ub3VuY2VkIHRvZGF5IHRoYXQgaXQgaGFzIGNvbXBsZXRlZCBhICQ0MDAgbWlsbGlvbiB0ZXJtIGZpbmFuY2luZyBvZiBjb21tZXJjaWFsIGxvYW5zIGZyb20gdGhlIGNvbXBhbnkncyBwb3J0Zm9saW8uCkNhcGl0YWxTb3VyY2UgaW50ZW5kcyB0byB1c2UgdGhlIHByb2NlZWRzIGZyb20gdGhpcyBmaW5hbmNpbmcgdG8gcmVwYXkgaW5kZWJ0ZWRuZXNzIHVuZGVyIHRoZSBjb21wYW55J3MgY3JlZGl0IGZhY2lsaXRpZXMuCkFmdGVyIGdpdmluZyBlZmZlY3QgdG8gdGhlIHRyYW5zYWN0aW9uLCBDYXBpdGFsU291cmNlIHdpbGwgaGF2ZSBhcHByb3hpbWF0ZWx5ICQyLjggYmlsbGlvbiBvZiB1bmRyYXduIGNvbW1pdG1lbnRzIHVuZGVyIGl0cyBjcmVkaXQgZmFjaWxpdGllcywgYW5kIGl0cyBiYWxhbmNlIG9mIGNvbW1lcmNpYWwgbG9hbiB0ZXJtIGRlYnQgd2lsbCBiZSAkNC44IGJpbGxpb24uCiJUaGlzIGZpbmFuY2luZywgZm9sbG93aW5nIGEgc2ltaWxhciBmaW5hbmNpbmcgd2UgY29tcGxldGVkIGluIFNlcHRlbWJlciwgdW5kZXJzY29yZXMgQ2FwaXRhbFNvdXJjZSdzIGFiaWxpdHkgdG8gYWNjZXNzIGxpcXVpZGl0eSBpbiBtYXJrZXQgY29uZGl0aW9ucyB0aGF0IHJlbWFpbiBjaGFsbGVuZ2luZywiIHNhaWQgVGhvbWFzIEEuIEZpbmssIENhcGl0YWxTb3VyY2UncyBDaGllZiBGaW5hbmNpYWwgT2ZmaWNlci4KV2l0aCB0aGlzIGZpbmFuY2luZywgd2UgaGF2ZSBwZXJtYW5lbnRseSBmaW5hbmNlZCBhIHNpZ25pZmljYW50IHBvcnRpb24gb2Ygb3VyIGNvbW1lcmNpYWwgbG9hbnMgd2hpbGUgcmV0YWluaW5nIGFuIG9wdGlvbiB0byBwcmVwYXkgYXQgcGFyIGFuZCByZWZpbmFuY2UgdGhpcyBkZWJ0LgpXZSBhcmUgY29udGludWluZyB0byByZXZpZXcgYWRkaXRpb25hbCBmaW5hbmNpbmcgb3Bwb3J0dW5pdGllcywgaW5jbHVkaW5nIG90aGVyIHNpbWlsYXIgZmluYW5jaW5ncyB0aGF0IHdlIG1heSBjbG9zZSBpbiB0aGUgbmVhciBmdXR1cmUuClRoaXMgcHJpdmF0ZSBwbGFjZW1lbnQgdHJhbnNhY3Rpb24gd2FzIHJhdGVkIEEvQTIgcmVzcGVjdGl2ZWx5IGJ5IEZpdGNoIFJhdGluZ3MgYW5kIE1vb2R5J3MgSW52ZXN0b3IgU2VydmljZS4KVGhlIHRyYW5zYWN0aW9uIGhhcyBhIDEteWVhciByZXBsZW5pc2htZW50IHBlcmlvZCBkdXJpbmcgd2hpY2ggcHJpbmNpcGFsIGNvbGxlY3Rpb24gY2FuIGJlIGludmVzdGVkIGluIGFkZGl0aW9uYWwgbG9hbiBjb2xsYXRlcmFsLgpUaGUgbm90ZSBiZWFycyBpbnRlcmVzdCAoZXhjbHVkaW5nIGZlZXMpIGF0IGEgZmxvYXRpbmcgY29tbWVyY2lhbCBwYXBlciByYXRlIHBsdXMgMS4xMCUgYW5kIGlzIHByZS1wYXlhYmxlIGJ5IHRoZSBjb21wYW55IGF0IGFueSB0aW1lLgpBYm91dCBDYXBpdGFsU291cmNlCkNhcGl0YWxTb3VyY2UgKE5ZU0U6IENTRSkgaXMgYSBsZWFkaW5nIGNvbW1lcmNpYWwgbGVuZGluZywgaW52ZXN0bWVudCBhbmQgYXNzZXQgbWFuYWdlbWVudCBidXNpbmVzcyBmb2N1c2VkIG9uIHRoZSBtaWRkbGUgbWFya2V0LgpDYXBpdGFsU291cmNlIG1hbmFnZXMgYW4gYXNzZXQgcG9ydGZvbGlvIHdoaWNoIGFzIG9mIEp1bmUgMzAsIDIwMDcgd2FzIGFwcHJveGltYXRlbHkgJDIwLjEgYmlsbGlvbi4KSGVhZHF1YXJ0ZXJlZCBpbiBDaGV2eSBDaGFzZSwgTWFyeWxhbmQsIHRoZSBDb21wYW55IGhhcyBhcHByb3hpbWF0ZWx5IDU1MCBlbXBsb3llZXMgaW4gb2ZmaWNlcyBhY3Jvc3MgdGhlIGNvdW50cnkgYW5kIGluIEV1cm9wZS4KRm9yIG1vcmUgaW5mb3JtYXRpb24sIHZpc2l0IGh0dHA6Ly93d3cuY2FwaXRhbHNvdXJjZS5jb20uClRoaXMgcmVsZWFzZSBjb250YWlucyAiZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMiIHdpdGhpbiB0aGUgbWVhbmluZyBvZiB0aGUgUHJpdmF0ZSBTZWN1cml0aWVzIExpdGlnYXRpb24gUmVmb3JtIEFjdCBvZiAxOTk1LCBpbmNsdWRpbmcgY2VydGFpbiBwbGFucywgZXhwZWN0YXRpb25zLCBnb2FscywgYW5kIHByb2plY3Rpb25zLCB3aGljaCBhcmUgc3ViamVjdCB0byBudW1lcm91cyBhc3N1bXB0aW9ucywgcmlza3MsIGFuZCB1bmNlcnRhaW50aWVzLgpBbGwgc3RhdGVtZW50cyBjb250YWluZWQgaW4gdGhpcyByZWxlYXNlIHRoYXQgYXJlIG5vdCBjbGVhcmx5IGhpc3RvcmljYWwgaW4gbmF0dXJlIGFyZSBmb3J3YXJkLWxvb2tpbmcsIGFuZCB0aGUgd29yZHMgImFudGljaXBhdGUsIiAiYmVsaWV2ZSwiICJleHBlY3QsIiAiZXN0aW1hdGUsIiAicGxhbiwiIGFuZCBzaW1pbGFyIGV4cHJlc3Npb25zIGFyZSBnZW5lcmFsbHkgaW50ZW5kZWQgdG8gaWRlbnRpZnkgZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMuCkFsbCBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cyAoaW5jbHVkaW5nIHN0YXRlbWVudHMgcmVnYXJkaW5nIGZ1dHVyZSBmaW5hbmNpYWwgYW5kIG9wZXJhdGluZyByZXN1bHRzKSBpbnZvbHZlIHJpc2tzLCB1bmNlcnRhaW50aWVzIGFuZCBjb250aW5nZW5jaWVzLCBtYW55IG9mIHdoaWNoIGFyZSBiZXlvbmQgb3VyIGNvbnRyb2wgd2hpY2ggbWF5IGNhdXNlIGFjdHVhbCByZXN1bHRzLCBwZXJmb3JtYW5jZSwgb3IgYWNoaWV2ZW1lbnRzIHRvIGRpZmZlciBtYXRlcmlhbGx5IGZyb20gYW50aWNpcGF0ZWQgcmVzdWx0cywgcGVyZm9ybWFuY2Ugb3IgYWNoaWV2ZW1lbnRzLgpBY3R1YWwgcmVzdWx0cyBjb3VsZCBkaWZmZXIgbWF0ZXJpYWxseSBmcm9tIHRob3NlIGNvbnRhaW5lZCBvciBpbXBsaWVkIGJ5IHN1Y2ggc3RhdGVtZW50cyBmb3IgYSB2YXJpZXR5IG9mIGZhY3RvcnMsIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb246IGNoYW5nZXMgaW4gZWNvbm9taWMgY29uZGl0aW9uczsgbW92ZW1lbnRzIGluIGludGVyZXN0IHJhdGVzOyBjb21wZXRpdGl2ZSBwcmVzc3VyZXMgb24gcHJvZHVjdCBwcmljaW5nIGFuZCBzZXJ2aWNlczsgc3VjY2VzcyBhbmQgdGltaW5nIG9mIG90aGVyIGJ1c2luZXNzIHN0cmF0ZWdpZXM7IHRoZSBuYXR1cmUsIGV4dGVudCwgYW5kIHRpbWluZyBvZiBnb3Zlcm5tZW50YWwgYWN0aW9ucyBhbmQgcmVmb3JtczsgZXh0ZW5kZWQgZGlzcnVwdGlvbiBvZiB2aXRhbCBpbmZyYXN0cnVjdHVyZTsgYW5kIG90aGVyIGZhY3RvcnMgZGVzY3JpYmVkIGluIENhcGl0YWxTb3VyY2UncyAyMDA2IEFubnVhbCBSZXBvcnQgb24gRm9ybSAxMC1LLCBhbmQgZG9jdW1lbnRzIHN1YnNlcXVlbnRseSBmaWxlZCBieSBDYXBpdGFsU291cmNlIHdpdGggdGhlIFNlY3VyaXRpZXMgYW5kIEV4Y2hhbmdlIENvbW1pc3Npb24uCkFsbCBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cyBpbmNsdWRlZCBpbiB0aGlzIG5ld3MgcmVsZWFzZSBhcmUgYmFzZWQgb24gaW5mb3JtYXRpb24gYXZhaWxhYmxlIGF0IHRoZSB0aW1lIG9mIHRoZSByZWxlYXNlLgpXZSBhcmUgdW5kZXIgbm8gb2JsaWdhdGlvbiB0byAoYW5kIGV4cHJlc3NseSBkaXNjbGFpbSBhbnkgc3VjaCBvYmxpZ2F0aW9uIHRvKSB1cGRhdGUgb3IgYWx0ZXIgb3VyIGZvcndhcmQtbG9va2luZyBzdGF0ZW1lbnRzLCB3aGV0aGVyIGFzIGEgcmVzdWx0IG9mIG5ldyBpbmZvcm1hdGlvbiwgZnV0dXJlIGV2ZW50cyBvciBvdGhlcndpc2UuClNPVVJDRSBDYXBpdGFsU291cmNlIEluYy4K
[(Q2FwaXRhbFNvdXJjZSBDb21wbGV0ZXMgJDQwMCBNaWxsaW9uIFRlcm0gRmluYW5jaW5nCkNIRVZZIENIQVNFLCBNZC4sIE9jdC4gMTEgL1BSTmV3c3dpcmUtRmlyc3RDYWxsLyAtLSBDYXBpdGFsU291cmNlIEluYy4KKE5ZU0U6IENTRSkgYW5ub3VuY2VkIHRvZGF5IHRoYXQgaXQgaGFzIGNvbXBsZXRlZCBhICQ0MDAgbWlsbGlvbiB0ZXJtIGZpbmFuY2luZyBvZiBjb21tZXJjaWFsIGxvYW5zIGZyb20gdGhlIGNvbXBhbnkncyBwb3J0Zm9saW8uCkNhcGl0YWxTb3VyY2UgaW50ZW5kcyB0byB1c2UgdGhlIHByb2NlZWRzIGZyb20gdGhpcyBmaW5hbmNpbmcgdG8gcmVwYXkgaW5kZWJ0ZWRuZXNzIHVuZGVyIHRoZSBjb21wYW55J3MgY3JlZGl0IGZhY2lsaXRpZXMuCkFmdGVyIGdpdmluZyBlZmZlY3QgdG8gdGhlIHRyYW5zYWN0aW9uLCBDYXBpdGFsU291cmNlIHdpbGwgaGF2ZSBhcHByb3hpbWF0ZWx5ICQyLjggYmlsbGlvbiBvZiB1bmRyYXduIGNvbW1pdG1lbnRzIHVuZGVyIGl0cyBjcmVkaXQgZmFjaWxpdGllcywgYW5kIGl0cyBiYWxhbmNlIG9mIGNvbW1lcmNpYWwgbG9hbiB0ZXJtIGRlYnQgd2lsbCBiZSAkNC44IGJpbGxpb24uCiJUaGlzIGZpbmFuY2luZywgZm9sbG93aW5nIGEgc2ltaWxhciBmaW5hbmNpbmcgd2UgY29tcGxldGVkIGluIFNlcHRlbWJlciwgdW5kZXJzY29yZXMgQ2FwaXRhbFNvdXJjZSdzIGFiaWxpdHkgdG8gYWNjZXNzIGxpcXVpZGl0eSBpbiBtYXJrZXQgY29uZGl0aW9ucyB0aGF0IHJlbWFpbiBjaGFsbGVuZ2luZywiIHNhaWQgVGhvbWFzIEEuIEZpbmssIENhcGl0YWxTb3VyY2UncyBDaGllZiBGaW5hbmNpYWwgT2ZmaWNlci4KV2l0aCB0aGlzIGZpbmFuY2luZywgd2UgaGF2ZSBwZXJtYW5lbnRseSBmaW5hbmNlZCBhIHNpZ25pZmljYW50IHBvcnRpb24gb2Ygb3VyIGNvbW1lcmNpYWwgbG9hbnMgd2hpbGUgcmV0YWluaW5nIGFuIG9wdGlvbiB0byBwcmVwYXkgYXQgcGFyIGFuZCByZWZpbmFuY2UgdGhpcyBkZWJ0LgpXZSBhcmUgY29udGludWluZyB0byByZXZpZXcgYWRkaXRpb25hbCBmaW5hbmNpbmcgb3Bwb3J0dW5pdGllcywgaW5jbHVkaW5nIG90aGVyIHNpbWlsYXIgZmluYW5jaW5ncyB0aGF0IHdlIG1heSBjbG9zZSBpbiB0aGUgbmVhciBmdXR1cmUuClRoaXMgcHJpdmF0ZSBwbGFjZW1lbnQgdHJhbnNhY3Rpb24gd2FzIHJhdGVkIEEvQTIgcmVzcGVjdGl2ZWx5IGJ5IEZpdGNoIFJhdGluZ3MgYW5kIE1vb2R5J3MgSW52ZXN0b3IgU2VydmljZS4KVGhlIHRyYW5zYWN0aW9uIGhhcyBhIDEteWVhciByZXBsZW5pc2htZW50IHBlcmlvZCBkdXJpbmcgd2hpY2ggcHJpbmNpcGFsIGNvbGxlY3Rpb24gY2FuIGJlIGludmVzdGVkIGluIGFkZGl0aW9uYWwgbG9hbiBjb2xsYXRlcmFsLgpUaGUgbm90ZSBiZWFycyBpbnRlcmVzdCAoZXhjbHVkaW5nIGZlZXMpIGF0IGEgZmxvYXRpbmcgY29tbWVyY2lhbCBwYXBlciByYXRlIHBsdXMgMS4xMCUgYW5kIGlzIHByZS1wYXlhYmxlIGJ5IHRoZSBjb21wYW55IGF0IGFueSB0aW1lLgpBYm91dCBDYXBpdGFsU291cmNlCkNhcGl0YWxTb3VyY2UgKE5ZU0U6IENTRSkgaXMgYSBsZWFkaW5nIGNvbW1lcmNpYWwgbGVuZGluZywgaW52ZXN0bWVudCBhbmQgYXNzZXQgbWFuYWdlbWVudCBidXNpbmVzcyBmb2N1c2VkIG9uIHRoZSBtaWRkbGUgbWFya2V0LgpDYXBpdGFsU291cmNlIG1hbmFnZXMgYW4gYXNzZXQgcG9ydGZvbGlvIHdoaWNoIGFzIG9mIEp1bmUgMzAsIDIwMDcgd2FzIGFwcHJveGltYXRlbHkgJDIwLjEgYmlsbGlvbi4KSGVhZHF1YXJ0ZXJlZCBpbiBDaGV2eSBDaGFzZSwgTWFyeWxhbmQsIHRoZSBDb21wYW55IGhhcyBhcHByb3hpbWF0ZWx5IDU1MCBlbXBsb3llZXMgaW4gb2ZmaWNlcyBhY3Jvc3MgdGhlIGNvdW50cnkgYW5kIGluIEV1cm9wZS4KRm9yIG1vcmUgaW5mb3JtYXRpb24sIHZpc2l0IGh0dHA6Ly93d3cuY2FwaXRhbHNvdXJjZS5jb20uClRoaXMgcmVsZWFzZSBjb250YWlucyAiZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMiIHdpdGhpbiB0aGUgbWVhbmluZyBvZiB0aGUgUHJpdmF0ZSBTZWN1cml0aWVzIExpdGlnYXRpb24gUmVmb3JtIEFjdCBvZiAxOTk1LCBpbmNsdWRpbmcgY2VydGFpbiBwbGFucywgZXhwZWN0YXRpb25zLCBnb2FscywgYW5kIHByb2plY3Rpb25zLCB3aGljaCBhcmUgc3ViamVjdCB0byBudW1lcm91cyBhc3N1bXB0aW9ucywgcmlza3MsIGFuZCB1bmNlcnRhaW50aWVzLgpBbGwgc3RhdGVtZW50cyBjb250YWluZWQgaW4gdGhpcyByZWxlYXNlIHRoYXQgYXJlIG5vdCBjbGVhcmx5IGhpc3RvcmljYWwgaW4gbmF0dXJlIGFyZSBmb3J3YXJkLWxvb2tpbmcsIGFuZCB0aGUgd29yZHMgImFudGljaXBhdGUsIiAiYmVsaWV2ZSwiICJleHBlY3QsIiAiZXN0aW1hdGUsIiAicGxhbiwiIGFuZCBzaW1pbGFyIGV4cHJlc3Npb25zIGFyZSBnZW5lcmFsbHkgaW50ZW5kZWQgdG8gaWRlbnRpZnkgZm9yd2FyZC1sb29raW5nIHN0YXRlbWVudHMuCkFsbCBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cyAoaW5jbHVkaW5nIHN0YXRlbWVudHMgcmVnYXJkaW5nIGZ1dHVyZSBmaW5hbmNpYWwgYW5kIG9wZXJhdGluZyByZXN1bHRzKSBpbnZvbHZlIHJpc2tzLCB1bmNlcnRhaW50aWVzIGFuZCBjb250aW5nZW5jaWVzLCBtYW55IG9mIHdoaWNoIGFyZSBiZXlvbmQgb3VyIGNvbnRyb2wgd2hpY2ggbWF5IGNhdXNlIGFjdHVhbCByZXN1bHRzLCBwZXJmb3JtYW5jZSwgb3IgYWNoaWV2ZW1lbnRzIHRvIGRpZmZlciBtYXRlcmlhbGx5IGZyb20gYW50aWNpcGF0ZWQgcmVzdWx0cywgcGVyZm9ybWFuY2Ugb3IgYWNoaWV2ZW1lbnRzLgpBY3R1YWwgcmVzdWx0cyBjb3VsZCBkaWZmZXIgbWF0ZXJpYWxseSBmcm9tIHRob3NlIGNvbnRhaW5lZCBvciBpbXBsaWVkIGJ5IHN1Y2ggc3RhdGVtZW50cyBmb3IgYSB2YXJpZXR5IG9mIGZhY3RvcnMsIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb246IGNoYW5nZXMgaW4gZWNvbm9taWMgY29uZGl0aW9uczsgbW92ZW1lbnRzIGluIGludGVyZXN0IHJhdGVzOyBjb21wZXRpdGl2ZSBwcmVzc3VyZXMgb24gcHJvZHVjdCBwcmljaW5nIGFuZCBzZXJ2aWNlczsgc3VjY2VzcyBhbmQgdGltaW5nIG9mIG90aGVyIGJ1c2luZXNzIHN0cmF0ZWdpZXM7IHRoZSBuYXR1cmUsIGV4dGVudCwgYW5kIHRpbWluZyBvZiBnb3Zlcm5tZW50YWwgYWN0aW9ucyBhbmQgcmVmb3JtczsgZXh0ZW5kZWQgZGlzcnVwdGlvbiBvZiB2aXRhbCBpbmZyYXN0cnVjdHVyZTsgYW5kIG90aGVyIGZhY3RvcnMgZGVzY3JpYmVkIGluIENhcGl0YWxTb3VyY2UncyAyMDA2IEFubnVhbCBSZXBvcnQgb24gRm9ybSAxMC1LLCBhbmQgZG9jdW1lbnRzIHN1YnNlcXVlbnRseSBmaWxlZCBieSBDYXBpdGFsU291cmNlIHdpdGggdGhlIFNlY3VyaXRpZXMgYW5kIEV4Y2hhbmdlIENvbW1pc3Npb24uCkFsbCBmb3J3YXJkLWxvb2tpbmcgc3RhdGVtZW50cyBpbmNsdWRlZCBpbiB0aGlzIG5ld3MgcmVsZWFzZSBhcmUgYmFzZWQgb24gaW5mb3JtYXRpb24gYXZhaWxhYmxlIGF0IHRoZSB0aW1lIG9mIHRoZSByZWxlYXNlLgpXZSBhcmUgdW5kZXIgbm8gb2JsaWdhdGlvbiB0byAoYW5kIGV4cHJlc3NseSBkaXNjbGFpbSBhbnkgc3VjaCBvYmxpZ2F0aW9uIHRvKSB1cGRhdGUgb3IgYWx0ZXIgb3VyIGZvcndhcmQtbG9va2luZyBzdGF0ZW1lbnRzLCB3aGV0aGVyIGFzIGEgcmVzdWx0IG9mIG5ldyBpbmZvcm1hdGlvbiwgZnV0dXJlIGV2ZW50cyBvciBvdGhlcndpc2UuClNPVVJDRSBDYXBpdGFsU291cmNlIEluYy4K, 'PRODUCT')]
SVRVIGFuZCBNaWNyb3NvZnQgTGF1bmNoIE9ubGluZSBQbGF0Zm9ybSB0byBUcmFjayBJQ1QgRGV2ZWxvcG1lbnQKS0lHQUxJLCBSd2FuZGEsIE9jdC4gMjkgL1BSTmV3c3dpcmUtRmlyc3RDYWxsLyAtLSBJVFUgR2xvYmFsIFZpZXcsIGEgTWljcm9zb2Z0IFZpcnR1YWwgRWFydGgtYmFzZWQgb25saW5lIHBsYXRmb3JtIHRvIHRyYWNrIGFuZCBoZWxwIGFjY2VsZXJhdGUgdGhlIGltcGxlbWVudGF0aW9uIG9mIHRoZSBXb3JsZCBTdW1taXQgb24gdGhlIEluZm9ybWF0aW9uIFNvY2lldHkgKFdTSVMpIGdvYWxzIGluIEFmcmljYSwgd2FzIGxhdW5jaGVkIHRvZGF5IG9uIHRoZSBvcGVuaW5nIGRheSBvZiB0aGUgQ29ubmVjdCBBZnJpY2EgU3VtbWl0LgpHb3Zlcm5tZW50cywgYWxvbmcgd2l0aCBpbmR1c3RyeSwgZGV2ZWxvcG1lbnQgYmFua3MgYW5kIGludGVybmF0aW9uYWwgb3JnYW5pemF0aW9ucywgYXJlIGdhdGhlcmVkIGluIEtpZ2FsaSB0byBtb2JpbGl6ZSB0aGUgaHVtYW4sIGZpbmFuY2lhbCBhbmQgdGVjaG5pY2FsIHJlc291cmNlcyByZXF1aXJlZCB0byBleHBhbmQgdGhlIGRldmVsb3BtZW50IG9mIGluZm9ybWF0aW9uIGFuZCBjb21tdW5pY2F0aW9uIHRlY2hub2xvZ2llcyAoSUNUKSBpbmZyYXN0cnVjdHVyZSBhbmQgZW5zdXJlIGl0IGlzIHVzZWQgZWZmZWN0aXZlbHkgaW4gcHVyc3VpdCBvZiB0aGUgV1NJUyBkZXZlbG9wbWVudCBnb2FscyBmb3IgQWZyaWNhLgpUaGUgSW50ZXJuYXRpb25hbCBUZWxlY29tbXVuaWNhdGlvbiBVbmlvbiBhbmQgTWljcm9zb2Z0IENvcnAuIHRvZGF5IHNpZ25lZCBhIE1lbWVyYW5kdW0gb2YgVW5kZXJzdGFuZGluZyAoTU9VKSB0aGUgQ29ubmVjdCBBZnJpY2Egc3VtbWl0IG91dGxpbmluZyBob3cgdGhleSB3aWxsIHdvcmsgdG9nZXRoZXIgdG8gYnVpbGQgYSBzZWN1cml0eS1lbmhhbmNlZCwgaW5jbHVzaXZlIGFuZCBpbnRlcm9wZXJhYmxlIGluZm9ybWF0aW9uIHNvY2lldHkuClRoZXkgYWdyZWVkIHRvIHN1cHBvcnQgcHJvZ3JhbXMgZW5hYmxpbmcgc2tpbGxzIGRldmVsb3BtZW50IGFuZCBjYXBhY2l0eSBidWlsZGluZyBhbG9uZyB3aXRoIHRoZSBkZWxpdmVyeSBvZiByZWxldmFudCBhcHBsaWNhdGlvbnMgYW5kIHNlcnZpY2VzIGluIEFmcmljYS4KVGhlc2Ugd291bGQgaW5jbHVkZSB0aGUgZGVsaXZlcnkgb2YgYSBuZXcgb25saW5lIHNvbHV0aW9uIGZvciBhbGwgc3Rha2Vob2xkZXJzIHRvIHNob3djYXNlIGFuZCB0cmFjayB0aGUgaW1wbGVtZW50YXRpb24gb2YgZGV2ZWxvcG1lbnQgcHJvamVjdHMgaW4gQWZyaWNhLgpJbiBhZGRpdGlvbiwgSVRVIGFuZCBNaWNyb3NvZnQgd2lsbCBjb2xsYWJvcmF0ZSBnbG9iYWxseSBvbiBjeWJlcnNlY3VyaXR5IGFuZCBwcm92aWRlIHN1cHBvcnQgZm9yIHJlZ3VsYXRvcnMgaW4gZGV2ZWxvcGluZyBjb3VudHJpZXMuCiJXZSBhcmUgdmVyeSBwbGVhc2VkIHRoYXQgTWljcm9zb2Z0LCBhcyBhbiBlYXJseSBzaWduYXRvcnkgb2YgdGhlIENvbm5lY3QgdGhlIFdvcmxkIGluaXRpYXRpdmUsIGlzIHN0ZXBwaW5nIHVwIGl0cyBjb21taXRtZW50IHRvIGhlbHAgYWRkcmVzcyB0aGUgZWZmZWN0aXZlIHVzZSBvZiBJQ1QgaW5mcmFzdHJ1Y3R1cmUgaW4gQWZyaWNhLCIgc2FpZCBEci4gSGFtYWRvdW4gVG91cmUsIHNlY3JldGFyeS1nZW5lcmFsIG9mIHRoZSBJVFUuCkNvbm5lY3QgQWZyaWNhIGlzIGEgY2FsbCB0byBhY3Rpb24gZm9yIHRoZSBwcml2YXRlIHNlY3RvciwgYW5kIHdlIGFyZSBlbmNvdXJhZ2VkIGJ5IHRoZSBwcm9ncmVzcyB3ZSBoYXZlIG1hZGUgdG9nZXRoZXIgd2l0aCBNaWNyb3NvZnQgYW5kIHRoZSBzY29wZSBvZiBjYXBhY2l0eSBidWlsZGluZyBpbiBBZnJpY2EuCiJCcmluZ2luZyB0aGUgYmVuZWZpdHMgb2YgdGVjaG5vbG9neSB0byB0aGUgbmV4dCA1IGJpbGxpb24gcGVvcGxlIHdpbGwgcmVxdWlyZSBuZXcgYXBwcm9hY2hlcyB0byBkZXZlbG9wbWVudCBhbmQgbmV3IHBhcnRuZXJzaGlwcyBiZXR3ZWVuIGludGVybmF0aW9uYWwgb3JnYW5pemF0aW9ucywgZ292ZXJubWVudHMgYW5kIHRoZSBwcml2YXRlIHNlY3RvciwiIHNhaWQgTWljaGFlbCBSYXdkaW5nLCB2aWNlIHByZXNpZGVudCBvZiB0aGUgVW5saW1pdGVkIFBvdGVudGlhbCBHcm91cCBhdCBNaWNyb3NvZnQsIHJlZmVycmluZyB0byB0aGUgMSBiaWxsaW9uIHBlb3BsZSBhbHJlYWR5IGNvbm5lY3RlZCB0byB0aGUgSW50ZXJuZXQuClRocm91Z2ggVW5saW1pdGVkIFBvdGVudGlhbCB3ZSBhcmUgY29tbWl0dGVkIGdsb2JhbGx5IHRvIGFwcGx5aW5nIHRlY2hub2xvZ3kgdG8gYWR2YW5jZSBzb2NpYWwgYW5kIGVjb25vbWljIG9wcG9ydHVuaXR5LCBhbmQgd2UgbG9vayBmb3J3YXJkIHRvIHdvcmtpbmcgd2l0aCBJVFUgb24gc2hhcmVkIGRldmVsb3BtZW50IGFuZCB0ZWNobm9sb2d5IGdvYWxzLgpBcyBwYXJ0IG9mIHRoZSBNZW1vcmFuZHVtIG9mIFVuZGVyc3RhbmRpbmcsIE1pY3Jvc29mdCBhbmQgSVRVIGFyZSBsYXVuY2hpbmcgYSBmbGFnc2hpcCBvbmxpbmUgdmlzdWFsaXphdGlvbiBwbGF0Zm9ybSBjYWxsZWQgSVRVIEdsb2JhbCBWaWV3LCB3aGljaCBpcyBiZWluZyBkZW1vbnN0cmF0ZWQgYXQgdGhlIENvbm5lY3QgQWZyaWNhIFN1bW1pdCBpbiBLaWdhbGkuCkJhc2VkIG9uIE1pY3Jvc29mdCBWaXJ0dWFsIEVhcnRoLCBJVFUgR2xvYmFsIFZpZXcgaW50ZWdyYXRlcyBhIGJyb2FkIHJhbmdlIG9mIG5ldyBhbmQgZXhpc3RpbmcgZGF0YSBzb3VyY2VzIG9uIGdsb2JhbCBJQ1QgZm9yIGRldmVsb3BtZW50IGFjY29tcGxpc2htZW50cyBpbiBzdXBwb3J0IG9mIHRoZSBXU0lTIGdvYWxzLgpFYXN5IHRvIHZpZXcsIHRoZSBzb2Z0d2FyZSB3YXMgZGV2ZWxvcGVkIGluIGFsbGlhbmNlIHdpdGggSURWIFNvbHV0aW9ucy4KVGhlIG9ubGluZSBwbGF0Zm9ybSB3aWxsIGJlIGhvc3RlZCBhbmQgbWFpbnRhaW5lZCBieSBJVFUsIGFuZCBpdCB3aWxsIGJlIG9wZW4gdG8gYWxsIHN0YWtlaG9sZGVycyAtLSBnb3Zlcm5tZW50cywgaW5kdXN0cnksIGludGVybmF0aW9uYWwgYW5kIHJlZ2lvbmFsIG9yZ2FuaXphdGlvbnMsIGFzIHdlbGwgYXMgY2l2aWwgc29jaWV0eSAtLSBhbGxvd2luZyB1c2VycyB0byBjaGVjayBzdGF0dXMsIGlkZW50aWZ5IGdhcHMgYW5kIGF2b2lkIG92ZXJsYXAgaW4gY29sbGFib3JhdGl2ZSBlZmZvcnRzIHRvIGFjaGlldmUgdGhlIFdTSVMgZ29hbHMuClRoZSBJVFUtTWljcm9zb2Z0IGFsbGlhbmNlIGFsc28gZm9jdXNlcyBvbiBwcm92aWRpbmcgZGlnaXRhbCBvcHBvcnR1bml0aWVzIGZvciB5b3V0aC4KWW91dGggZW1wb3dlcm1lbnQgYW5kIGNhcGFjaXR5LWJ1aWxkaW5nIGlzIGVzc2VudGlhbCB0byBhY2NlbGVyYXRlIHN1c3RhaW5hYmxlIHNvY2lhbCBhbmQgZWNvbm9taWMgZ3Jvd3RoIHRvd2FyZCBhIGNvbXBldGl0aXZlIEFmcmljYS4KTWljcm9zb2Z0IGFuZCBJVFUgd2lsbCBwcm92aWRlIGFjY2VzcyB0byBjb21wdXRlciB0ZWNobm9sb2d5IHRyYWluaW5nIGFzIHdlbGwgYXMgb3Bwb3J0dW5pdGllcyB0byBnYWluIHZhbHVhYmxlIHdvcmsgZXhwZXJpZW5jZSBpbiB0aGUgaW5kdXN0cnkuCklUVSBhbmQgTWljcm9zb2Z0IHdpbGwgd29yayB0byBjb250cmlidXRlIHRvIHRoZSBkZXZlbG9wbWVudCBvZiB0aGUgR2xvYmFsIEN5YmVyc2VjdXJpdHkgQWdlbmRhIGFuZCBpdHMgYXNzb2NpYXRlZCB3b3JrIHByb2dyYW0gdG8gYXNzaXN0IGRldmVsb3BpbmcgY291bnRyaWVzIHdpdGggaW1wbGVtZW50YXRpb24uClRoZXkgd2lsbCBhbHNvIGV4cGxvcmUgb3Bwb3J0dW5pdGllcyBmb3IgTWljcm9zb2Z0IHRvIHN1cHBvcnQgSVRVIHByb2dyYW1zIGFpbWVkIGF0IHRyYWluaW5nIHJlZ3VsYXRvcnMgYW5kIElDVCBwb2xpY3ltYWtlcnMgaW4gZGV2ZWxvcGluZyBjb3VudHJpZXMgYXMgdGhleSBhZGRyZXNzIGZyZXNoIGNoYWxsZW5nZXMgYXNzb2NpYXRlZCB3aXRoIG5ldyBpbmZvcm1hdGlvbiBhbmQgY29tbXVuaWNhdGlvbiB0ZWNobm9sb2dpZXMuCkFib3V0IElUVQpJVFUgaXMgdGhlIGxlYWRpbmcgVW5pdGVkIE5hdGlvbnMgYWdlbmN5IGZvciBpbmZvcm1hdGlvbiBhbmQgY29tbXVuaWNhdGlvbiB0ZWNobm9sb2d5IGlzc3VlcywgYW5kIHRoZSBnbG9iYWwgZm9jYWwgcG9pbnQgZm9yIGdvdmVybm1lbnRzIGFuZCB0aGUgcHJpdmF0ZSBzZWN0b3IgaW4gZGV2ZWxvcGluZyBuZXR3b3JrcyBhbmQgc2VydmljZXMuCkZvciBtb3JlIHRoYW4gMTQwIHllYXJzLCBJVFUgaGFzIGNvb3JkaW5hdGVkIHRoZSBzaGFyZWQgZ2xvYmFsIHVzZSBvZiB0aGUgcmFkaW8gc3BlY3RydW0sIHByb21vdGVkIGludGVybmF0aW9uYWwgY29vcGVyYXRpb24gaW4gYXNzaWduaW5nIHNhdGVsbGl0ZSBvcmJpdHMsIHdvcmtlZCB0byBpbXByb3ZlIHRlbGVjb21tdW5pY2F0aW9uIGluZnJhc3RydWN0dXJlIGluIHRoZSBkZXZlbG9waW5nIHdvcmxkLCBhbmQgZXN0YWJsaXNoZWQgdGhlIHdvcmxkd2lkZSBzdGFuZGFyZHMgdGhhdCBmb3N0ZXIgc2VhbWxlc3MgaW50ZXJjb25uZWN0aW9uIG9mIGEgdmFzdCByYW5nZSBvZiBjb21tdW5pY2F0aW9ucyBzeXN0ZW1zLgpJVFUgYWxzbyBvcmdhbml6ZXMgd29ybGR3aWRlIGFuZCByZWdpb25hbCBleGhpYml0aW9ucyBhbmQgZm9ydW1zIGJyaW5naW5nIHRvZ2V0aGVyIHRoZSBtb3N0IGluZmx1ZW50aWFsIHJlcHJlc2VudGF0aXZlcyBvZiBnb3Zlcm5tZW50IGFuZCB0aGUgdGVsZWNvbW11bmljYXRpb25zIGluZHVzdHJ5IHRvIGV4Y2hhbmdlIGlkZWFzLCBrbm93bGVkZ2UgYW5kIHRlY2hub2xvZ3kgZm9yIHRoZSBiZW5lZml0IG9mIHRoZSBnbG9iYWwgY29tbXVuaXR5LCBhbmQgaW4gcGFydGljdWxhciB0aGUgZGV2ZWxvcGluZyB3b3JsZC4KRnJvbSBicm9hZGJhbmQgaW50ZXJuZXQgdG8gbGF0ZXN0LWdlbmVyYXRpb24gd2lyZWxlc3MgdGVjaG5vbG9naWVzLCBmcm9tIGFlcm9uYXV0aWNhbCBhbmQgbWFyaXRpbWUgbmF2aWdhdGlvbiB0byByYWRpbyBhc3Ryb25vbXkgYW5kIHNhdGVsbGl0ZS1iYXNlZCBtZXRlb3JvbG9neSwgZnJvbSBwaG9uZSBhbmQgZmF4IHNlcnZpY2VzIHRvIFRWIGJyb2FkY2FzdGluZyBhbmQgbmV4dC0gZ2VuZXJhdGlvbiBuZXR3b3JrcywgSVRVIGNvbnRpbnVlcyB0byBwbGF5IGEgY2VudHJhbCByb2xlIGluIGhlbHBpbmcgdGhlIHdvcmxkIGNvbW11bmljYXRlLgpBYm91dCBNaWNyb3NvZnQgVW5saW1pdGVkIFBvdGVudGlhbApNaWNyb3NvZnQsIHRocm91Z2ggaXRzIFVubGltaXRlZCBQb3RlbnRpYWwgdmlzaW9uLCBpcyBjb21taXR0ZWQgdG8gbWFraW5nIHRlY2hub2xvZ3kgbW9yZSBhZmZvcmRhYmxlLCByZWxldmFudCBhbmQgYWNjZXNzaWJsZSBmb3IgdGhlIDUgYmlsbGlvbiBwZW9wbGUgYXJvdW5kIHRoZSB3b3JsZCB3aG8gZG8gbm90IHlldCBlbmpveSBpdHMgYmVuZWZpdHMuClRoZSBjb21wYW55IGFpbXMgdG8gZG8gc28gYnkgaGVscGluZyB0byB0cmFuc2Zvcm0gZWR1Y2F0aW9uIGFuZCBmb3N0ZXIgYSBjdWx0dXJlIG9mIGlubm92YXRpb24sIGFuZCB0aHJvdWdoIHRoZXNlIG1lYW5zIGVuYWJsZSBiZXR0ZXIgam9icyBhbmQgb3Bwb3J0dW5pdGllcy4KQnkgd29ya2luZyB3aXRoIGdvdmVybm1lbnRzLCBpbnRlcmdvdmVybm1lbnRhbCBvcmdhbml6YXRpb25zLCBub25nb3Zlcm5tZW50YWwgb3JnYW5pemF0aW9ucyBhbmQgaW5kdXN0cnkgcGFydG5lcnMsIE1pY3Jvc29mdCBob3BlcyB0byByZWFjaCBpdHMgZmlyc3QgbWFqb3IgbWlsZXN0b25lIC0tIHRvIHJlYWNoIHRoZSBuZXh0IDEgYmlsbGlvbiBwZW9wbGUgd2hvIGFyZSBub3QgeWV0IHJlYWxpemluZyB0aGUgYmVuZWZpdHMgb2YgdGVjaG5vbG9neSAtLSBieSAyMDE1Lgo=
[(SVRVIGFuZCBNaWNyb3NvZnQgTGF1bmNoIE9ubGluZSBQbGF0Zm9ybSB0byBUcmFjayBJQ1QgRGV2ZWxvcG1lbnQKS0lHQUxJLCBSd2FuZGEsIE9jdC4gMjkgL1BSTmV3c3dpcmUtRmlyc3RDYWxsLyAtLSBJVFUgR2xvYmFsIFZpZXcsIGEgTWljcm9zb2Z0IFZpcnR1YWwgRWFydGgtYmFzZWQgb25saW5lIHBsYXRmb3JtIHRvIHRyYWNrIGFuZCBoZWxwIGFjY2VsZXJhdGUgdGhlIGltcGxlbWVudGF0aW9uIG9mIHRoZSBXb3JsZCBTdW1taXQgb24gdGhlIEluZm9ybWF0aW9uIFNvY2lldHkgKFdTSVMpIGdvYWxzIGluIEFmcmljYSwgd2FzIGxhdW5jaGVkIHRvZGF5IG9uIHRoZSBvcGVuaW5nIGRheSBvZiB0aGUgQ29ubmVjdCBBZnJpY2EgU3VtbWl0LgpHb3Zlcm5tZW50cywgYWxvbmcgd2l0aCBpbmR1c3RyeSwgZGV2ZWxvcG1lbnQgYmFua3MgYW5kIGludGVybmF0aW9uYWwgb3JnYW5pemF0aW9ucywgYXJlIGdhdGhlcmVkIGluIEtpZ2FsaSB0byBtb2JpbGl6ZSB0aGUgaHVtYW4sIGZpbmFuY2lhbCBhbmQgdGVjaG5pY2FsIHJlc291cmNlcyByZXF1aXJlZCB0byBleHBhbmQgdGhlIGRldmVsb3BtZW50IG9mIGluZm9ybWF0aW9uIGFuZCBjb21tdW5pY2F0aW9uIHRlY2hub2xvZ2llcyAoSUNUKSBpbmZyYXN0cnVjdHVyZSBhbmQgZW5zdXJlIGl0IGlzIHVzZWQgZWZmZWN0aXZlbHkgaW4gcHVyc3VpdCBvZiB0aGUgV1NJUyBkZXZlbG9wbWVudCBnb2FscyBmb3IgQWZyaWNhLgpUaGUgSW50ZXJuYXRpb25hbCBUZWxlY29tbXVuaWNhdGlvbiBVbmlvbiBhbmQgTWljcm9zb2Z0IENvcnAuIHRvZGF5IHNpZ25lZCBhIE1lbWVyYW5kdW0gb2YgVW5kZXJzdGFuZGluZyAoTU9VKSB0aGUgQ29ubmVjdCBBZnJpY2Egc3VtbWl0IG91dGxpbmluZyBob3cgdGhleSB3aWxsIHdvcmsgdG9nZXRoZXIgdG8gYnVpbGQgYSBzZWN1cml0eS1lbmhhbmNlZCwgaW5jbHVzaXZlIGFuZCBpbnRlcm9wZXJhYmxlIGluZm9ybWF0aW9uIHNvY2lldHkuClRoZXkgYWdyZWVkIHRvIHN1cHBvcnQgcHJvZ3JhbXMgZW5hYmxpbmcgc2tpbGxzIGRldmVsb3BtZW50IGFuZCBjYXBhY2l0eSBidWlsZGluZyBhbG9uZyB3aXRoIHRoZSBkZWxpdmVyeSBvZiByZWxldmFudCBhcHBsaWNhdGlvbnMgYW5kIHNlcnZpY2VzIGluIEFmcmljYS4KVGhlc2Ugd291bGQgaW5jbHVkZSB0aGUgZGVsaXZlcnkgb2YgYSBuZXcgb25saW5lIHNvbHV0aW9uIGZvciBhbGwgc3Rha2Vob2xkZXJzIHRvIHNob3djYXNlIGFuZCB0cmFjayB0aGUgaW1wbGVtZW50YXRpb24gb2YgZGV2ZWxvcG1lbnQgcHJvamVjdHMgaW4gQWZyaWNhLgpJbiBhZGRpdGlvbiwgSVRVIGFuZCBNaWNyb3NvZnQgd2lsbCBjb2xsYWJvcmF0ZSBnbG9iYWxseSBvbiBjeWJlcnNlY3VyaXR5IGFuZCBwcm92aWRlIHN1cHBvcnQgZm9yIHJlZ3VsYXRvcnMgaW4gZGV2ZWxvcGluZyBjb3VudHJpZXMuCiJXZSBhcmUgdmVyeSBwbGVhc2VkIHRoYXQgTWljcm9zb2Z0LCBhcyBhbiBlYXJseSBzaWduYXRvcnkgb2YgdGhlIENvbm5lY3QgdGhlIFdvcmxkIGluaXRpYXRpdmUsIGlzIHN0ZXBwaW5nIHVwIGl0cyBjb21taXRtZW50IHRvIGhlbHAgYWRkcmVzcyB0aGUgZWZmZWN0aXZlIHVzZSBvZiBJQ1QgaW5mcmFzdHJ1Y3R1cmUgaW4gQWZyaWNhLCIgc2FpZCBEci4gSGFtYWRvdW4gVG91cmUsIHNlY3JldGFyeS1nZW5lcmFsIG9mIHRoZSBJVFUuCkNvbm5lY3QgQWZyaWNhIGlzIGEgY2FsbCB0byBhY3Rpb24gZm9yIHRoZSBwcml2YXRlIHNlY3RvciwgYW5kIHdlIGFyZSBlbmNvdXJhZ2VkIGJ5IHRoZSBwcm9ncmVzcyB3ZSBoYXZlIG1hZGUgdG9nZXRoZXIgd2l0aCBNaWNyb3NvZnQgYW5kIHRoZSBzY29wZSBvZiBjYXBhY2l0eSBidWlsZGluZyBpbiBBZnJpY2EuCiJCcmluZ2luZyB0aGUgYmVuZWZpdHMgb2YgdGVjaG5vbG9neSB0byB0aGUgbmV4dCA1IGJpbGxpb24gcGVvcGxlIHdpbGwgcmVxdWlyZSBuZXcgYXBwcm9hY2hlcyB0byBkZXZlbG9wbWVudCBhbmQgbmV3IHBhcnRuZXJzaGlwcyBiZXR3ZWVuIGludGVybmF0aW9uYWwgb3JnYW5pemF0aW9ucywgZ292ZXJubWVudHMgYW5kIHRoZSBwcml2YXRlIHNlY3RvciwiIHNhaWQgTWljaGFlbCBSYXdkaW5nLCB2aWNlIHByZXNpZGVudCBvZiB0aGUgVW5saW1pdGVkIFBvdGVudGlhbCBHcm91cCBhdCBNaWNyb3NvZnQsIHJlZmVycmluZyB0byB0aGUgMSBiaWxsaW9uIHBlb3BsZSBhbHJlYWR5IGNvbm5lY3RlZCB0byB0aGUgSW50ZXJuZXQuClRocm91Z2ggVW5saW1pdGVkIFBvdGVudGlhbCB3ZSBhcmUgY29tbWl0dGVkIGdsb2JhbGx5IHRvIGFwcGx5aW5nIHRlY2hub2xvZ3kgdG8gYWR2YW5jZSBzb2NpYWwgYW5kIGVjb25vbWljIG9wcG9ydHVuaXR5LCBhbmQgd2UgbG9vayBmb3J3YXJkIHRvIHdvcmtpbmcgd2l0aCBJVFUgb24gc2hhcmVkIGRldmVsb3BtZW50IGFuZCB0ZWNobm9sb2d5IGdvYWxzLgpBcyBwYXJ0IG9mIHRoZSBNZW1vcmFuZHVtIG9mIFVuZGVyc3RhbmRpbmcsIE1pY3Jvc29mdCBhbmQgSVRVIGFyZSBsYXVuY2hpbmcgYSBmbGFnc2hpcCBvbmxpbmUgdmlzdWFsaXphdGlvbiBwbGF0Zm9ybSBjYWxsZWQgSVRVIEdsb2JhbCBWaWV3LCB3aGljaCBpcyBiZWluZyBkZW1vbnN0cmF0ZWQgYXQgdGhlIENvbm5lY3QgQWZyaWNhIFN1bW1pdCBpbiBLaWdhbGkuCkJhc2VkIG9uIE1pY3Jvc29mdCBWaXJ0dWFsIEVhcnRoLCBJVFUgR2xvYmFsIFZpZXcgaW50ZWdyYXRlcyBhIGJyb2FkIHJhbmdlIG9mIG5ldyBhbmQgZXhpc3RpbmcgZGF0YSBzb3VyY2VzIG9uIGdsb2JhbCBJQ1QgZm9yIGRldmVsb3BtZW50IGFjY29tcGxpc2htZW50cyBpbiBzdXBwb3J0IG9mIHRoZSBXU0lTIGdvYWxzLgpFYXN5IHRvIHZpZXcsIHRoZSBzb2Z0d2FyZSB3YXMgZGV2ZWxvcGVkIGluIGFsbGlhbmNlIHdpdGggSURWIFNvbHV0aW9ucy4KVGhlIG9ubGluZSBwbGF0Zm9ybSB3aWxsIGJlIGhvc3RlZCBhbmQgbWFpbnRhaW5lZCBieSBJVFUsIGFuZCBpdCB3aWxsIGJlIG9wZW4gdG8gYWxsIHN0YWtlaG9sZGVycyAtLSBnb3Zlcm5tZW50cywgaW5kdXN0cnksIGludGVybmF0aW9uYWwgYW5kIHJlZ2lvbmFsIG9yZ2FuaXphdGlvbnMsIGFzIHdlbGwgYXMgY2l2aWwgc29jaWV0eSAtLSBhbGxvd2luZyB1c2VycyB0byBjaGVjayBzdGF0dXMsIGlkZW50aWZ5IGdhcHMgYW5kIGF2b2lkIG92ZXJsYXAgaW4gY29sbGFib3JhdGl2ZSBlZmZvcnRzIHRvIGFjaGlldmUgdGhlIFdTSVMgZ29hbHMuClRoZSBJVFUtTWljcm9zb2Z0IGFsbGlhbmNlIGFsc28gZm9jdXNlcyBvbiBwcm92aWRpbmcgZGlnaXRhbCBvcHBvcnR1bml0aWVzIGZvciB5b3V0aC4KWW91dGggZW1wb3dlcm1lbnQgYW5kIGNhcGFjaXR5LWJ1aWxkaW5nIGlzIGVzc2VudGlhbCB0byBhY2NlbGVyYXRlIHN1c3RhaW5hYmxlIHNvY2lhbCBhbmQgZWNvbm9taWMgZ3Jvd3RoIHRvd2FyZCBhIGNvbXBldGl0aXZlIEFmcmljYS4KTWljcm9zb2Z0IGFuZCBJVFUgd2lsbCBwcm92aWRlIGFjY2VzcyB0byBjb21wdXRlciB0ZWNobm9sb2d5IHRyYWluaW5nIGFzIHdlbGwgYXMgb3Bwb3J0dW5pdGllcyB0byBnYWluIHZhbHVhYmxlIHdvcmsgZXhwZXJpZW5jZSBpbiB0aGUgaW5kdXN0cnkuCklUVSBhbmQgTWljcm9zb2Z0IHdpbGwgd29yayB0byBjb250cmlidXRlIHRvIHRoZSBkZXZlbG9wbWVudCBvZiB0aGUgR2xvYmFsIEN5YmVyc2VjdXJpdHkgQWdlbmRhIGFuZCBpdHMgYXNzb2NpYXRlZCB3b3JrIHByb2dyYW0gdG8gYXNzaXN0IGRldmVsb3BpbmcgY291bnRyaWVzIHdpdGggaW1wbGVtZW50YXRpb24uClRoZXkgd2lsbCBhbHNvIGV4cGxvcmUgb3Bwb3J0dW5pdGllcyBmb3IgTWljcm9zb2Z0IHRvIHN1cHBvcnQgSVRVIHByb2dyYW1zIGFpbWVkIGF0IHRyYWluaW5nIHJlZ3VsYXRvcnMgYW5kIElDVCBwb2xpY3ltYWtlcnMgaW4gZGV2ZWxvcGluZyBjb3VudHJpZXMgYXMgdGhleSBhZGRyZXNzIGZyZXNoIGNoYWxsZW5nZXMgYXNzb2NpYXRlZCB3aXRoIG5ldyBpbmZvcm1hdGlvbiBhbmQgY29tbXVuaWNhdGlvbiB0ZWNobm9sb2dpZXMuCkFib3V0IElUVQpJVFUgaXMgdGhlIGxlYWRpbmcgVW5pdGVkIE5hdGlvbnMgYWdlbmN5IGZvciBpbmZvcm1hdGlvbiBhbmQgY29tbXVuaWNhdGlvbiB0ZWNobm9sb2d5IGlzc3VlcywgYW5kIHRoZSBnbG9iYWwgZm9jYWwgcG9pbnQgZm9yIGdvdmVybm1lbnRzIGFuZCB0aGUgcHJpdmF0ZSBzZWN0b3IgaW4gZGV2ZWxvcGluZyBuZXR3b3JrcyBhbmQgc2VydmljZXMuCkZvciBtb3JlIHRoYW4gMTQwIHllYXJzLCBJVFUgaGFzIGNvb3JkaW5hdGVkIHRoZSBzaGFyZWQgZ2xvYmFsIHVzZSBvZiB0aGUgcmFkaW8gc3BlY3RydW0sIHByb21vdGVkIGludGVybmF0aW9uYWwgY29vcGVyYXRpb24gaW4gYXNzaWduaW5nIHNhdGVsbGl0ZSBvcmJpdHMsIHdvcmtlZCB0byBpbXByb3ZlIHRlbGVjb21tdW5pY2F0aW9uIGluZnJhc3RydWN0dXJlIGluIHRoZSBkZXZlbG9waW5nIHdvcmxkLCBhbmQgZXN0YWJsaXNoZWQgdGhlIHdvcmxkd2lkZSBzdGFuZGFyZHMgdGhhdCBmb3N0ZXIgc2VhbWxlc3MgaW50ZXJjb25uZWN0aW9uIG9mIGEgdmFzdCByYW5nZSBvZiBjb21tdW5pY2F0aW9ucyBzeXN0ZW1zLgpJVFUgYWxzbyBvcmdhbml6ZXMgd29ybGR3aWRlIGFuZCByZWdpb25hbCBleGhpYml0aW9ucyBhbmQgZm9ydW1zIGJyaW5naW5nIHRvZ2V0aGVyIHRoZSBtb3N0IGluZmx1ZW50aWFsIHJlcHJlc2VudGF0aXZlcyBvZiBnb3Zlcm5tZW50IGFuZCB0aGUgdGVsZWNvbW11bmljYXRpb25zIGluZHVzdHJ5IHRvIGV4Y2hhbmdlIGlkZWFzLCBrbm93bGVkZ2UgYW5kIHRlY2hub2xvZ3kgZm9yIHRoZSBiZW5lZml0IG9mIHRoZSBnbG9iYWwgY29tbXVuaXR5LCBhbmQgaW4gcGFydGljdWxhciB0aGUgZGV2ZWxvcGluZyB3b3JsZC4KRnJvbSBicm9hZGJhbmQgaW50ZXJuZXQgdG8gbGF0ZXN0LWdlbmVyYXRpb24gd2lyZWxlc3MgdGVjaG5vbG9naWVzLCBmcm9tIGFlcm9uYXV0aWNhbCBhbmQgbWFyaXRpbWUgbmF2aWdhdGlvbiB0byByYWRpbyBhc3Ryb25vbXkgYW5kIHNhdGVsbGl0ZS1iYXNlZCBtZXRlb3JvbG9neSwgZnJvbSBwaG9uZSBhbmQgZmF4IHNlcnZpY2VzIHRvIFRWIGJyb2FkY2FzdGluZyBhbmQgbmV4dC0gZ2VuZXJhdGlvbiBuZXR3b3JrcywgSVRVIGNvbnRpbnVlcyB0byBwbGF5IGEgY2VudHJhbCByb2xlIGluIGhlbHBpbmcgdGhlIHdvcmxkIGNvbW11bmljYXRlLgpBYm91dCBNaWNyb3NvZnQgVW5saW1pdGVkIFBvdGVudGlhbApNaWNyb3NvZnQsIHRocm91Z2ggaXRzIFVubGltaXRlZCBQb3RlbnRpYWwgdmlzaW9uLCBpcyBjb21taXR0ZWQgdG8gbWFraW5nIHRlY2hub2xvZ3kgbW9yZSBhZmZvcmRhYmxlLCByZWxldmFudCBhbmQgYWNjZXNzaWJsZSBmb3IgdGhlIDUgYmlsbGlvbiBwZW9wbGUgYXJvdW5kIHRoZSB3b3JsZCB3aG8gZG8gbm90IHlldCBlbmpveSBpdHMgYmVuZWZpdHMuClRoZSBjb21wYW55IGFpbXMgdG8gZG8gc28gYnkgaGVscGluZyB0byB0cmFuc2Zvcm0gZWR1Y2F0aW9uIGFuZCBmb3N0ZXIgYSBjdWx0dXJlIG9mIGlubm92YXRpb24sIGFuZCB0aHJvdWdoIHRoZXNlIG1lYW5zIGVuYWJsZSBiZXR0ZXIgam9icyBhbmQgb3Bwb3J0dW5pdGllcy4KQnkgd29ya2luZyB3aXRoIGdvdmVybm1lbnRzLCBpbnRlcmdvdmVybm1lbnRhbCBvcmdhbml6YXRpb25zLCBub25nb3Zlcm5tZW50YWwgb3JnYW5pemF0aW9ucyBhbmQgaW5kdXN0cnkgcGFydG5lcnMsIE1pY3Jvc29mdCBob3BlcyB0byByZWFjaCBpdHMgZmlyc3QgbWFqb3IgbWlsZXN0b25lIC0tIHRvIHJlYWNoIHRoZSBuZXh0IDEgYmlsbGlvbiBwZW9wbGUgd2hvIGFyZSBub3QgeWV0IHJlYWxpemluZyB0aGUgYmVuZWZpdHMgb2YgdGVjaG5vbG9neSAtLSBieSAyMDE1Lgo=, 'GPE')]
UGhpbGFkZWxwaGlhLUJhc2VkIEF1dG9ub21vdXMgQ2FyIEZpbmlzaGVzIERBUlBBJ1MgSW50ZXJuYXRpb25hbCBVcmJhbiBDaGFsbGVuZ2UgQ29tcGV0aXRpb24KQ0hFUlJZIEhJTEwsIE4uSi4sIE5vdi4gNCAvUFJOZXdzd2lyZS8gLS0gVGhlIEJlbiBGcmFua2xpbiBSYWNpbmcgVGVhbSBhbmQgaXRzIGVudHJhbnQgIkxpdHRsZSBCZW4iIGFuZCBmaXZlIG90aGVyIHJlbWFpbmluZyBhdXRvbm9tb3VzIGF1dG9tb2JpbGVzIGZpbmlzaGVkIHRoZSBEZWZlbnNlIEFkdmFuY2VkIFJlc2VhcmNoIFByb2plY3RzIEFnZW5jeSdzIChEQVJQQSkgZmlyc3QgVXJiYW4gQ2hhbGxlbmdlIGluIFZpY3RvcnZpbGxlLCBDYWxpZi4KTGl0dGxlIEJlbiB3YXMgdGhlIGZvdXJ0aCBjYXIgdG8gZmluaXNoIHRoZSBjb3Vyc2UuCkluIDIwMDYsIERBUlBBIGFza2VkIGRlc2lnbmVycyB3b3JsZHdpZGUgdG8gZGV2ZWxvcCBhdXRvbW9iaWxlcyB0aGF0IGNvdWxkIGludGVsbGlnZW50bHkgYW5kIHNhZmVseSBkcml2ZSB0aGVtc2VsdmVzIHRocm91Z2ggYSA2MC1taWxlIHVyYmFuIGNvdXJzZSBpbiBsZXNzIHRoYW4gc2l4IGhvdXJzLgpUaGUgY2FycyBoYWQgdG8gb2JleSB0cmFmZmljIGxhd3Mgd2hpbGUgbWVyZ2luZyBpbnRvIG1vdmluZyB0cmFmZmljLCBuYXZpZ2F0aW5nIGNpcmNsZXMsIG5lZ290aWF0aW5nIGJ1c3kgaW50ZXJzZWN0aW9ucyBhbmQgYXZvaWRpbmcgb2JzdGFjbGVzLgpEQVJQQSBwcm9ncmVzc2l2ZWx5IHdpbm5vd2VkIGNvbXBldGl0b3JzIHRocm91Z2ggYSBzZXJpZXMgb2YgZGVtb25zdHJhdGlvbnMgaW4gdGhlIG1vbnRocyBsZWFkaW5nIHVwIHRvIHRoZSBmaW5hbCBjb21wZXRpdGlvbi4KT2YgODkgb3JpZ2luYWwgaW50ZXJuYXRpb25hbCBlbnRyYW50cywgNTMgcXVhbGlmaWVkIGZvciBzaXRlIGRlbW9uc3RyYXRpb25zIGVhcmxpZXIgaW4gdGhlIHllYXIuCkRBUlBBIHRoZW4gc2VsZWN0ZWQgMzUgZm9yIHRoZSBuYXRpb25hbCBxdWFsaWZ5aW5nIHRyaWFscyBPY3QuIDI2LTMxIGF0IHRoZSB1cmJhbiBtaWxpdGFyeSB0cmFpbmluZyBmYWNpbGl0eSBvbiB0aGUgZm9ybWVyIEdlb3JnZSBBaXIgRm9yY2UgQmFzZSwgVmljdG9ydmlsbGUuCkxpdHRsZSBCZW4gd2FzIGV2YWx1YXRlZCBhcyB0aGUgdG9wIGNvbnRlbmRlciBnb2luZyBpbnRvIHRoZSBxdWFsaWZ5aW5nIHRyaWFscy4KSXQgbGF0ZXIgZW1lcmdlZCBhcyB0aGUgZm91cnRoIGJlc3Qgcm9ib3QgZm9sbG93aW5nIHRoZSB0cmlhbHMgYW5kIGpvaW5lZCAxMCBvdGhlcnMgdG8gY29tcGV0ZSBpbiB0aGUgZmluYWwgY29tcGV0aXRpb24uClRoZSBmaW5hbCBldmVudCBjb25zaXN0ZWQgb2YgdGhyZWUgbWlzc2lvbnMgYW5kIGEgbnVtYmVyIG9mIHN1Yi1taXNzaW9ucy4KT2YgdGhlIDExIGNhcnMgY29tcGV0aW5nLCBmaXZlIGRpZCBub3QgZmluaXNoIHRoZSBmaXJzdCBtaXNzaW9uIGV2ZW50LgpUaGUgcmVtYWluaW5nIHNpeCBlbnRyYW50cywgaW5jbHVkaW5nIExpdHRsZSBCZW4sIHN1Y2Nlc3NmdWxseSBjb21wbGV0ZWQgYWxsIG1pc3Npb24gc2NlbmFyaW9zLgpEQVJQQSBldmFsdWF0ZWQgdGhlIHJvYm90cyBvbiBzcGVlZCBhbmQgb3ZlcmFsbCBiZWhhdmlvci4KQmVoYXZpb3JhbCBjaGFyYWN0ZXJpc3RpY3MgaW5jbHVkZWQgaG93IHdlbGwgdGhlIHJvYm90cyBvYnNlcnZlZCB0aGUgcnVsZXMgb2YgdGhlIHJvYWQgYW5kIGhvdyBzbW9vdGhseSB0aGV5IGV4ZWN1dGVkIHR5cGljYWwgZHJpdmluZyBtYW5ldXZlcnMuCkEgY29uc29ydGl1bSBsZWQgYnkgQ2FybmVnaWUgTWVsbG9uIFVuaXZlcnNpdHkgd29uIGZpcnN0IHBsYWNlIGFuZCBjbGFpbWVkIGEgJDIgbWlsbGlvbiBwcml6ZS4KU3RhbmZvcmQgVW5pdmVyc2l0eSBwbGFjZWQgc2Vjb25kIGZvciAkMSBtaWxsaW9uLCBhbmQgVmlyZ2luaWEgVGVjaCB0b29rIHRoaXJkIHBsYWNlIGZvciAkNTAwLDAwMC4KTGl0dGxlIEJlbiBpcyBhIFRveW90YSBQcml1cyBhbmQgdGhlIHByb2R1Y3Qgb2YgdGhlIEJlbiBGcmFua2xpbiBSYWNpbmcgVGVhbSwgYSBjb25zb3J0aWEgbGVkIGJ5IHRoZSBVbml2ZXJzaXR5IG9mIFBlbm5zeWx2YW5pYSB3aXRoIExlaGlnaCBVbml2ZXJzaXR5IGFuZCBMb2NraGVlZCBNYXJ0aW4gQWR2YW5jZWQgVGVjaG5vbG9neSBMYWJvcmF0b3JpZXMgKEFUTCkuCiJXZSBhcmUgdGhyaWxsZWQgZm9yIHRoZSBVbml2ZXJzaXR5IG9mIFBlbm5zeWx2YW5pYSBhbmQgTGVoaWdoIFVuaXZlcnNpdHksIiBzYWlkIEphbWVzIE1hcnNoLCBMb2NraGVlZCBNYXJ0aW4gQVRMIGRpcmVjdG9yLgpBIHZlcnkgdGFsZW50ZWQgZ3JvdXAgb2YgZW5naW5lZXJzIHNwZW50IHNvbWUgdmVyeSBsb25nIGhvdXJzIGFuZCBzdXJtb3VudGVkIHNvbWUgdmVyeSBmb3JtaWRhYmxlIHRlY2huaWNhbCBvYnN0YWNsZXMgdG8gYWNoaWV2ZSBzb21ldGhpbmcgdGhhdCBoYXMgZ2FtZS1jaGFuZ2luZyBpbXBsaWNhdGlvbnMgZm9yIGhvdyB3ZSB2aWV3IGFuZCB1c2UgYXV0b25vbW91cyB0ZWNobm9sb2d5LgpBcyBhIHNwb25zb3IgYW5kIG1lbWJlciB0aGUgVW5pdmVyc2l0eSBvZiBQZW5uc3lsdmFuaWEgdGVhbSwgTG9ja2hlZWQgTWFydGluIEFUTCBjb250cmlidXRlZCBiZWhhdmlvciBtYW5hZ2VtZW50IGFuZCBzZW5zb3IgZnVzaW9uIHRlY2hub2xvZ2llcyB0byBwcm92aWRlIExpdHRsZSBCZW4gd2l0aCBiZWhhdmlvciBhbmQgbWlzc2lvbiBwbGFubmluZyBhbmQgaGlnaC1sZXZlbCBwZXJjZXB0aW9uLgpJdCBhbHNvIHByb3ZpZGVkIHByb2plY3QgbWFuYWdlbWVudCBmb3IgdGhlIHRlYW0uCiJJIGNvdWxkbid0IGJlIGhhcHBpZXIgZm9yIG91ciB0ZWFtIGFuZCwgb2YgY291cnNlLCBMaXR0bGUgQmVuLCIgc2FpZCBCcmlhbiBTYXR0ZXJmaWVsZCwgTG9ja2hlZWQgTWFydGluIEFUTCBwcm9qZWN0IG1hbmFnZXIuCkl0J3MgYW1hemluZyB3aGVuIHlvdSBjb25zaWRlciB0aGF0IHdlIHdlcmUgdGhlIG9ubHkgQi10ZWFtIGVudHJ5IHRvIGZpbmlzaCB0aGUgZmluYWwgY29tcGV0aXRpb24sIGFuZCB3ZSB3ZXJlIG9ubHkgb25lIG9mIHR3byBmaW5pc2hlcnMgd2hvIGhhZCBub3QgcHJldmlvdXNseSBjb21wZXRlZCBpbiBEQVJQQSdzIDIwMDUgR3JhbmQgQ2hhbGxlbmdlLgpBdCB0aGUgb3V0c2V0IG9mIFVyYmFuIENoYWxsZW5nZSBpbiAyMDA2LCBEQVJQQSBhd2FyZGVkIHVwIHRvICQxIG1pbGxpb24gaW4gdGVjaG5vbG9neSBkZXZlbG9wbWVudCBmdW5kcyB0byAxMSBUcmFjay1BIHRlYW1zLgpUaGVzZSB0ZWFtcyBoYWQgdG8gYWNoaWV2ZSBrZXkgdGVjaG5pY2FsIG1pbGVzdG9uZXMgdG8gcmVjZWl2ZSB0aGUgZnVuZHMuCkxpdHRsZSBCZW4gYW5kIHRoZSBvdGhlciA3NyBUcmFjay1CIHRlYW1zIGRpZCBub3QgcmVjZWl2ZSB0aGVzZSBmdW5kcy4KTG9ja2hlZWQgTWFydGluIEFUTCBmdW5kZWQgaXRzIHBhcnRpY2lwYXRpb24gdGhyb3VnaG91dCB0aGUgcHJvZ3JhbS4KRm9yIG1vcmUgaW5mb3JtYXRpb24gb24gdGhlIEJlbiBGcmFua2xpbiBSYWNpbmcgVGVhbSBhbmQgdmlkZW9zIG9mICJMaXR0bGUgQmVuIjogd3d3LmJlbmZyYW5rbGlucmFjaW5ndGVhbS5vcmcgRm9yIG1vcmUgaW5mb3JtYXRpb24gb24gVXJiYW4gQ2hhbGxlbmdlOiB3d3cuZGFycGEubWlsL2dyYW5kY2hhbGxlbmdlClBob3RvZ3JhcGh5IGFuZCBkaWdpdGFsIHZpZGVvIG9mIExpdHRsZSBCZW4gaXMgYXZhaWxhYmxlLgpIZWFkcXVhcnRlcmVkIGluIEJldGhlc2RhLCBNZC4sIExvY2toZWVkIE1hcnRpbiBlbXBsb3lzIGFib3V0IDE0MCwwMDAgcGVvcGxlIHdvcmxkd2lkZSBhbmQgaXMgcHJpbmNpcGFsbHkgZW5nYWdlZCBpbiB0aGUgcmVzZWFyY2gsIGRlc2lnbiwgZGV2ZWxvcG1lbnQsIG1hbnVmYWN0dXJlLCBpbnRlZ3JhdGlvbiBhbmQgc3VzdGFpbm1lbnQgb2YgYWR2YW5jZWQgdGVjaG5vbG9neSBzeXN0ZW1zLCBwcm9kdWN0cyBhbmQgc2VydmljZXMuCkZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIG9uIExvY2toZWVkIE1hcnRpbiBDb3Jwb3JhdGlvbiwgdmlzaXQgb3VyIHdlYnNpdGU6IHd3dy5sb2NraGVlZG1hcnRpbi5jb20KU09VUkNFIExvY2toZWVkIE1hcnRpbiBBZHZhbmNlZCBUZWNobm9sb2d5IExhYm9yYXRvcmllcwo=
[]

[]
RW52aXNpb24gU29sYXIgSW50ZXJuYXRpb25hbCBBY3F1aXJlcyBHZW5lcmF0aW5nIEFzc2V0cyBMTEMgYW5kIEFubm91bmNlcyBHcmVlblNoYWRlIE5ldHdvcmsgKFRNKQpMQSBKT0xMQSwgQ2FsaWYuLCBOb3YuIDIwIC9QUk5ld3N3aXJlLyAtLSBFbnZpc2lvbiBTb2xhciBJbnRlcm5hdGlvbmFsIENvcnBvcmF0aW9uLCB0aGUgbGVhZGluZyBwcm92aWRlciBvZiBzb2xhciBpbnRlZ3JhdGVkIGJ1aWxkaW5nIHN5c3RlbXMgYW5kIGRlc2lnbnMsIHRvZGF5IGFubm91bmNlZCB0aGUgYWNxdWlzaXRpb24gb2YgR2VuZXJhdGluZyBBc3NldHMgTExDIChHQSksIGEgU2FuIEZyYW5jaXNjby1iYXNlZCBzb2xhciBkZXZlbG9wbWVudCBjb21wYW55LCBhbmQgdGhlIGFwcG9pbnRtZW50IG9mIEthcmVuIE1vcmdhbiBhcyBwcmVzaWRlbnQuCldpdGggYWRkaXRpb25hbCBvcGVyYXRpb25zIGluIERhcmllbiwgQ29ubmVjdGljdXQsIFNhbiBGcmFuY2lzY28gYW5kIFNlYXR0bGUsIEVudmlzaW9uIFNvbGFyLCB3aGljaCBzcGVjaWFsaXplcyBpbiB0aGUgdHVybmtleSBkZXNpZ24gYW5kIGluc3RhbGxhdGlvbiBvZiBzb2xhciBzaGFkZSBzdHJ1Y3R1cmVzIGZvciBwYXJraW5nIGxvdHMsIGhhcyBleHBhbmRlZCBpdHMgc2VydmljZSBvZmZlcmluZ3MgYW5kIGNhcGFiaWxpdGllcyB0byBpbmNsdWRlIGEgZmluYW5jaWFsIHNvbHV0aW9ucyBncm91cCwgR3JlZW5TaGFkZSBOZXR3b3JrIChUTSkuCkVudmlzaW9uIFNvbGFyIGFuZCB0aGUgR3JlZW5TaGFkZSBOZXR3b3JrIHdpbGwgbGV2ZXJhZ2UgdGhlIGJyZWFkdGggb2YgZmluYW5jaWFsIGV4cGVyaWVuY2UgdG8gZW5oYW5jZSBhbmQgYWNjZWxlcmF0ZSBwYXJ0bmVyIGZpbmFuY2luZyBhbmQgcHJvamVjdCBleGVjdXRpb24uCiJUaGUgR2VuZXJhdGluZyBBc3NldHMgYWNxdWlzaXRpb24sIHdpdGggS2FyZW4gTW9yZ2FuIGNvbWluZyBvbmJvYXJkIGFzIHByZXNpZGVudCwgcmVwcmVzZW50cyBhIG1ham9yIGFkdmFuY2VtZW50IGluIEVudmlzaW9uIFNvbGFyJ3MgaW50ZXJuYXRpb25hbCBleHBhbnNpb24gcGxhbiBhbmQgb3VyIGFiaWxpdHkgdG8gb2ZmZXIgdGhlIGZ1bGwgcmFuZ2Ugb2Ygc2VydmljZXMgaW4gc29sYXIgZGV2ZWxvcG1lbnQgcHJvamVjdHMsIiBzYWlkIFJvYmVydCBOb2JsZSwgRW52aXNpb24gU29sYXIncyBmb3VuZGVyIGFuZCBDRU8uCldlJ3JlIG1lZXRpbmcgdGhlIGNoYWxsZW5nZSB0byBnZXQgbW9yZSBzb2xhciBvdXQgdGhlcmUuCkZvdW5kZWQgYnkgS2FyZW4gTW9yZ2FuIGluIEF1Z3VzdCAyMDA2LCBHQSB0YXJnZXRzIHByb2plY3RzIHVuZGVyIG9uZSBtZWdhd2F0dCBpbiBzaXplIHRocm91Z2hvdXQgQ2FsaWZvcm5pYSBhbmQgYnJpbmdzICQzME0gaW4gcG93ZXIgcHVyY2hhc2UgYWdyZWVtZW50cyBhbmQgcGVuZGluZyBwcm9qZWN0cyB0byBFbnZpc2lvbiBTb2xhci4KRW52aXNpb24gU29sYXIgd2lsbCBzZXJ2ZSBhcyBwcmltZSBjb250cmFjdG9yIG9uIGFsbCBHQSBwcm9qZWN0cyBhbHJlYWR5IHVuZGVyd2F5LgpUaGUgY29tcGFueSBpcyBzdGFmZmVkIGJ5IExFRUQgYWNjcmVkaXRlZCBhcmNoaXRlY3RzLCBoYXMgaXRzIGNvbnRyYWN0b3IncyBsaWNlbnNlIGFuZCB0cnVseSBtaXRpZ2F0ZXMgdGhlIGNoYWxsZW5nZXMgb2YgaW50ZWdyYXRpbmcgc29sYXIgc3lzdGVtcyBpbnRvIGNvcnBvcmF0ZSBjbGllbnRzJyByZW5ld2FibGUgZW5lcmd5IHBvcnRmb2xpb3MuClR3byBmb3JtZXIgbWVtYmVycyBvZiB0aGUgR0EgdGVhbSwgVG9kZCBHcmVuaWNoIGpvaW5zIGFzIHZpY2UgcHJlc2lkZW50LCBmaW5hbmNlIGFuZCBLZW50IENvbHdlbGwsIGZvcm1lciB0YXggZXF1aXR5IGV4ZWN1dGl2ZSB3aXRoIFRyYW5zYW1lcmljYSwgam9pbnMgRW52aXNpb24gU29sYXIncyBhZHZpc29yeSBib2FyZCBhcyBzZW5pb3IgYWR2aXNvciwgdGF4IGVxdWl0eS4KT3VyIEdyZWVuU2hhZGUgTmV0d29yayByZXByZXNlbnRzIHRoZSBpbnRlcnNlY3Rpb24gb2YgdHJhbnNwb3J0YXRpb24sIHJlbmV3YWJsZSBlbmVyZ3kgYW5kIHRoZSBjb25jZXB0IG9mIHNoYWRlLgpEcml2ZXJzIGhhdmUgbG9uZyByZWNvZ25pemVkIHRoZSB2YWx1ZSB0aGF0IHNoYWRlIHByb3ZpZGVzLCBhbmQgbm93IHdlIGhhdmUgY3JlYXRlZCB1bmlxdWUgZmluYW5jaWFsIG1vZGVscyBhcm91bmQgdGhpcyBhbWVuaXR5IGFuZCBzb2xhciBwb3dlci4KV2Ugc2VlIGEgYnJpZ2h0IGZ1dHVyZSBpbiB0aGlzIHNwYWNlIGFuZCBFbnZpc2lvbiBTb2xhciBpcyBwcmVwYXJlZCB0byBsZWFkIHRoZSBtb3ZlbWVudCwiIHNhaWQgTW9yZ2FuLgpCcmluZ2luZyBHQSBhbmQgRW52aXNpb24gU29sYXIgdG9nZXRoZXIgdG8gZXhlY3V0ZSBvdXIgR3JlZW5TaGFkZSBOZXR3b3JrIHByb2plY3RzIHByb3ZpZGVzIGEgcG93ZXJmdWwgcGxhdGZvcm0gZm9yIGRlcGxveWluZyBtb3JlIHByb2plY3RzLCBhbmQgdWx0aW1hdGVseSBlbnN1cmluZyBhIHNpZ25pZmljYW50bHkgcmVkdWNlZCBjb3N0IHBlciB3YXR0IG9mIGNsZWFuIGVuZXJneS4KQWJvdXQgRW52aXNpb24gU29sYXIgSW50ZXJuYXRpb25hbCBDb3Jwb3JhdGlvbgpFbnZpc2lvbiBTb2xhciBJbnRlcm5hdGlvbmFsIENvcnBvcmF0aW9uIGlzIGEgdHVybmtleSwgc29sYXIgaW50ZWdyYXRlZCBidWlsZGluZyBzeXN0ZW1zIGRldmVsb3Blci4KTGVkIGJ5IGEgZ3JvdXAgb2YgdmlzaW9uYXJ5IGFyY2hpdGVjdHMsIHNvbGFyIGludGVncmF0b3JzLCBidWlsZGVycyBhbmQgZW5naW5lZXJzLCBFbnZpc2lvbiBTb2xhciB0cmFuc2Zvcm1zIGhlYXQtYWJzb3JiaW5nIHBhcmtpbmcgbG90cyBpbnRvIGJlYXV0aWZ1bCwgZWZmaWNpZW50IHNvbGFyIHBvd2VyIHBsYW50cy4KTGVhcm4gbW9yZSBhYm91dCB1cyBhdDogaHR0cDovL3d3dy5lbnZpc2lvbnNvbGFyLmNvbS4KTWVkaWEgY29udGFjdDoKV2hpdG5leSBQaGFuZXVmLCBBbnRlbm5hIEdyb3VwIGZvciBFbnZpc2lvbiBTb2xhcgp3aGl0bmV5QGFudGVubmFncm91cC5jb20sIDQxNS45NzcuMTkxNgpTT1VSQ0UgRW52aXNpb24gU29sYXIgSW50ZXJuYXRpb25hbCBDb3Jwb3JhdGlvbgo=
[(RW52aXNpb24gU29sYXIgSW50ZXJuYXRpb25hbCBBY3F1aXJlcyBHZW5lcmF0aW5nIEFzc2V0cyBMTEMgYW5kIEFubm91bmNlcyBHcmVlblNoYWRlIE5ldHdvcmsgKFRNKQpMQSBKT0xMQSwgQ2FsaWYuLCBOb3YuIDIwIC9QUk5ld3N3aXJlLyAtLSBFbnZpc2lvbiBTb2xhciBJbnRlcm5hdGlvbmFsIENvcnBvcmF0aW9uLCB0aGUgbGVhZGluZyBwcm92aWRlciBvZiBzb2xhciBpbnRlZ3JhdGVkIGJ1aWxkaW5nIHN5c3RlbXMgYW5kIGRlc2lnbnMsIHRvZGF5IGFubm91bmNlZCB0aGUgYWNxdWlzaXRpb24gb2YgR2VuZXJhdGluZyBBc3NldHMgTExDIChHQSksIGEgU2FuIEZyYW5jaXNjby1iYXNlZCBzb2xhciBkZXZlbG9wbWVudCBjb21wYW55LCBhbmQgdGhlIGFwcG9pbnRtZW50IG9mIEthcmVuIE1vcmdhbiBhcyBwcmVzaWRlbnQuCldpdGggYWRkaXRpb25hbCBvcGVyYXRpb25zIGluIERhcmllbiwgQ29ubmVjdGljdXQsIFNhbiBGcmFuY2lzY28gYW5kIFNlYXR0bGUsIEVudmlzaW9uIFNvbGFyLCB3aGljaCBzcGVjaWFsaXplcyBpbiB0aGUgdHVybmtleSBkZXNpZ24gYW5kIGluc3RhbGxhdGlvbiBvZiBzb2xhciBzaGFkZSBzdHJ1Y3R1cmVzIGZvciBwYXJraW5nIGxvdHMsIGhhcyBleHBhbmRlZCBpdHMgc2VydmljZSBvZmZlcmluZ3MgYW5kIGNhcGFiaWxpdGllcyB0byBpbmNsdWRlIGEgZmluYW5jaWFsIHNvbHV0aW9ucyBncm91cCwgR3JlZW5TaGFkZSBOZXR3b3JrIChUTSkuCkVudmlzaW9uIFNvbGFyIGFuZCB0aGUgR3JlZW5TaGFkZSBOZXR3b3JrIHdpbGwgbGV2ZXJhZ2UgdGhlIGJyZWFkdGggb2YgZmluYW5jaWFsIGV4cGVyaWVuY2UgdG8gZW5oYW5jZSBhbmQgYWNjZWxlcmF0ZSBwYXJ0bmVyIGZpbmFuY2luZyBhbmQgcHJvamVjdCBleGVjdXRpb24uCiJUaGUgR2VuZXJhdGluZyBBc3NldHMgYWNxdWlzaXRpb24sIHdpdGggS2FyZW4gTW9yZ2FuIGNvbWluZyBvbmJvYXJkIGFzIHByZXNpZGVudCwgcmVwcmVzZW50cyBhIG1ham9yIGFkdmFuY2VtZW50IGluIEVudmlzaW9uIFNvbGFyJ3MgaW50ZXJuYXRpb25hbCBleHBhbnNpb24gcGxhbiBhbmQgb3VyIGFiaWxpdHkgdG8gb2ZmZXIgdGhlIGZ1bGwgcmFuZ2Ugb2Ygc2VydmljZXMgaW4gc29sYXIgZGV2ZWxvcG1lbnQgcHJvamVjdHMsIiBzYWlkIFJvYmVydCBOb2JsZSwgRW52aXNpb24gU29sYXIncyBmb3VuZGVyIGFuZCBDRU8uCldlJ3JlIG1lZXRpbmcgdGhlIGNoYWxsZW5nZSB0byBnZXQgbW9yZSBzb2xhciBvdXQgdGhlcmUuCkZvdW5kZWQgYnkgS2FyZW4gTW9yZ2FuIGluIEF1Z3VzdCAyMDA2LCBHQSB0YXJnZXRzIHByb2plY3RzIHVuZGVyIG9uZSBtZWdhd2F0dCBpbiBzaXplIHRocm91Z2hvdXQgQ2FsaWZvcm5pYSBhbmQgYnJpbmdzICQzME0gaW4gcG93ZXIgcHVyY2hhc2UgYWdyZWVtZW50cyBhbmQgcGVuZGluZyBwcm9qZWN0cyB0byBFbnZpc2lvbiBTb2xhci4KRW52aXNpb24gU29sYXIgd2lsbCBzZXJ2ZSBhcyBwcmltZSBjb250cmFjdG9yIG9uIGFsbCBHQSBwcm9qZWN0cyBhbHJlYWR5IHVuZGVyd2F5LgpUaGUgY29tcGFueSBpcyBzdGFmZmVkIGJ5IExFRUQgYWNjcmVkaXRlZCBhcmNoaXRlY3RzLCBoYXMgaXRzIGNvbnRyYWN0b3IncyBsaWNlbnNlIGFuZCB0cnVseSBtaXRpZ2F0ZXMgdGhlIGNoYWxsZW5nZXMgb2YgaW50ZWdyYXRpbmcgc29sYXIgc3lzdGVtcyBpbnRvIGNvcnBvcmF0ZSBjbGllbnRzJyByZW5ld2FibGUgZW5lcmd5IHBvcnRmb2xpb3MuClR3byBmb3JtZXIgbWVtYmVycyBvZiB0aGUgR0EgdGVhbSwgVG9kZCBHcmVuaWNoIGpvaW5zIGFzIHZpY2UgcHJlc2lkZW50LCBmaW5hbmNlIGFuZCBLZW50IENvbHdlbGwsIGZvcm1lciB0YXggZXF1aXR5IGV4ZWN1dGl2ZSB3aXRoIFRyYW5zYW1lcmljYSwgam9pbnMgRW52aXNpb24gU29sYXIncyBhZHZpc29yeSBib2FyZCBhcyBzZW5pb3IgYWR2aXNvciwgdGF4IGVxdWl0eS4KT3VyIEdyZWVuU2hhZGUgTmV0d29yayByZXByZXNlbnRzIHRoZSBpbnRlcnNlY3Rpb24gb2YgdHJhbnNwb3J0YXRpb24sIHJlbmV3YWJsZSBlbmVyZ3kgYW5kIHRoZSBjb25jZXB0IG9mIHNoYWRlLgpEcml2ZXJzIGhhdmUgbG9uZyByZWNvZ25pemVkIHRoZSB2YWx1ZSB0aGF0IHNoYWRlIHByb3ZpZGVzLCBhbmQgbm93IHdlIGhhdmUgY3JlYXRlZCB1bmlxdWUgZmluYW5jaWFsIG1vZGVscyBhcm91bmQgdGhpcyBhbWVuaXR5IGFuZCBzb2xhciBwb3dlci4KV2Ugc2VlIGEgYnJpZ2h0IGZ1dHVyZSBpbiB0aGlzIHNwYWNlIGFuZCBFbnZpc2lvbiBTb2xhciBpcyBwcmVwYXJlZCB0byBsZWFkIHRoZSBtb3ZlbWVudCwiIHNhaWQgTW9yZ2FuLgpCcmluZ2luZyBHQSBhbmQgRW52aXNpb24gU29sYXIgdG9nZXRoZXIgdG8gZXhlY3V0ZSBvdXIgR3JlZW5TaGFkZSBOZXR3b3JrIHByb2plY3RzIHByb3ZpZGVzIGEgcG93ZXJmdWwgcGxhdGZvcm0gZm9yIGRlcGxveWluZyBtb3JlIHByb2plY3RzLCBhbmQgdWx0aW1hdGVseSBlbnN1cmluZyBhIHNpZ25pZmljYW50bHkgcmVkdWNlZCBjb3N0IHBlciB3YXR0IG9mIGNsZWFuIGVuZXJneS4KQWJvdXQgRW52aXNpb24gU29sYXIgSW50ZXJuYXRpb25hbCBDb3Jwb3JhdGlvbgpFbnZpc2lvbiBTb2xhciBJbnRlcm5hdGlvbmFsIENvcnBvcmF0aW9uIGlzIGEgdHVybmtleSwgc29sYXIgaW50ZWdyYXRlZCBidWlsZGluZyBzeXN0ZW1zIGRldmVsb3Blci4KTGVkIGJ5IGEgZ3JvdXAgb2YgdmlzaW9uYXJ5IGFyY2hpdGVjdHMsIHNvbGFyIGludGVncmF0b3JzLCBidWlsZGVycyBhbmQgZW5naW5lZXJzLCBFbnZpc2lvbiBTb2xhciB0cmFuc2Zvcm1zIGhlYXQtYWJzb3JiaW5nIHBhcmtpbmcgbG90cyBpbnRvIGJlYXV0aWZ1bCwgZWZmaWNpZW50IHNvbGFyIHBvd2VyIHBsYW50cy4KTGVhcm4gbW9yZSBhYm91dCB1cyBhdDogaHR0cDovL3d3dy5lbnZpc2lvbnNvbGFyLmNvbS4KTWVkaWEgY29udGFjdDoKV2hpdG5leSBQaGFuZXVmLCBBbnRlbm5hIEdyb3VwIGZvciBFbnZpc2lvbiBTb2xhcgp3aGl0bmV5QGFudGVubmFncm91cC5jb20sIDQxNS45NzcuMTkxNgpTT1VSQ0UgRW52aXNpb24gU29sYXIgSW50ZXJuYXRpb25hbCBDb3Jwb3JhdGlvbgo=, 'GPE')]
QWxtb25kIFJlc29ydHMgSW52aXRlcyBZb3UgdG8gQ2VsZWJyYXRlIQpQRVRFUiwgQmFyYmFkb3MsIE5vdi4gMjAgL1BSTmV3c3dpcmUvIC0tIEZvciB0aGUgdGVudGggeWVhciwgQWxtb25kIFJlc29ydHMgaXMgaW52aXRpbmcgeW91IHRvIGVuam95IHdhdGNoaW5nIHRoZSBTdXBlcmJvd2wgZ2FtZSBpbiB0aGUgcGx1c2ggY29tZm9ydCBvZiBBbG1vbmQgUmVzb3J0cywgQmFyYmFkb3MnIHByZW1pZXIgYWxsLWluY2x1c2l2ZSByZXNvcnRzLgpXaHkgYmF0dGxlIHRoZSBQaG9lbml4IGNyb3dkcyB3aGVuIHlvdSBjYW4gYmFzayBpbiB0aGUgZ29sZGVuIENhcmliYmVhbiBzdW4sIHJlbGF4LCBoYXZlIGEgZmV3IGRheXMgb2YgZnVuIGFuZCBnZXQgZW5lcmdpemVkIGluIHRpbWUgZm9yIHRoZSBleGNpdGluZyBmaW5hbGUsIGEgcGFydHkgb24gdGhlIHdoaXRlIHNhbmQgYmVhY2hlcyBvZiBBbG1vbmQgQmVhY2ggVmlsbGFnZSBpbiBCYXJiYWRvcyB0byB3YXRjaCBTdXBlcmJvd2wgMjAwOD8KWW91J2xsIGVuam95IHRoZSBiaWcgZ2FtZSBvbiBzdXBlci1zaXplZCBzY3JlZW5zIGluIHRoZSBjb21wYW55IG9mIHdlbGwtbG92ZWQgTkZMIGFsdW1uaSBhdCB0aGUgYXdhcmQtd2lubmluZyBBbG1vbmQgQmVhY2ggVmlsbGFnZS4KQmlnIEdhbWUgV2VlayBpcyBvbmNlIGFnYWluIGJlaW5nIGhvc3RlZCBieSBORkwgYWx1bW5pIEJpbGx5IFRheWxvciwgZm9ybWVyIEdpYW50cycgcnVubmluZyBiYWNrLCBhbG9uZyB3aXRoIE1hdHQgQmxhaXIsIGZvcm1lciBNaW5uZXNvdGEgVmlraW5ncycgc3RhciBsaW5lIGJhY2tlciwgb3V0c3RhbmRpbmcgSW93YSBTdGF0ZSBwbGF5ZXIgYW5kIGJlc3Qtc2VsbGluZyBhdXRob3I7IEppbSBPc2Jvcm5lLCBmb3JtZXIgQ2hpY2FnbyBCZWFycyBEZWZlbnNpdmUgdGFja2xlIGFuZCBKb2UgTW9ycmlzLCBmb3JtZXIgTlkgR2lhbnRzIHJ1bm5pbmcgYmFjayBhbmQgbWVtYmVyIG9mIHRoZSBTdXBlcmJvd2wgWFhJIHdpbm5pbmcgdGVhbSBpbiAxOTg3LgpCaWcgR2FtZSB3ZWVrZW5kIGFjdGl2aXRpZXMgd2l0aCB0aGUgcGxheWVycyBpbmNsdWRlIGEgZ29sZiBzY3JhbWJsZSwgYmVhY2ggdm9sbGV5YmFsbCwgYmFza2V0YmFsbCwgdHVnLW8td2FyIGFuZCBhIHJlbGF4aW5nIHN1bnNldCBjcnVpc2Ugb24gdGhlIENhcmliYmVhbiBTZWEuClBhbGF0ZSBwbGVhc2luZyBmb29kLCBleG90aWMgZHJpbmtzIGFuZCBhdHRyYWN0aXZlIHByaXplcyB3aWxsIGFib3VuZCEKQmlnIEdhbWUgV2VlayBQYWNrYWdlcyBhdCBBbG1vbmQgQmVhY2ggVmlsbGFnZSBTdGFydCBhdCAkMSwwMzkuMDAgUGVyIFBlcnNvbgpBbG1vbmQgUmVzb3J0cycgc3BlY2lhbCBCaWcgR2FtZSBXZWVrIChKYW51YXJ5IDMxIC0gRmVicnVhcnkgNCwgMjAwOCkgUGFja2FnZXMgYXJlIGFsbC1pbmNsdXNpdmUgZXhjZXB0IGZvciBhbnkgZXF1aXBtZW50IHRoYXQgZ3Vlc3RzIG1heSB3aXNoIHRvIHJlbnQgZm9yIHRoZSBHb2xmIFRvdXJuYW1lbnQgYW5kIHRoZSBTdW5zZXQgQ3J1aXNlLgpQYWNrYWdlIHByaWNlIHF1b3RlZCBpcyBmb3IgYSBzdGFuZGFyZCByb29tLCBiYXNlZCBvbiBkb3VibGUgb2NjdXBhbmN5LgpCb29raW5nIHBlcmlvZCBmb3IgdGhpcyBzcGVjaWFsIHJhdGUgZW5kcyBKYW51YXJ5IDExLCAyMDA4LgpQYXJ0aWNpcGF0aW9uIGluIGFjdGl2aXRpZXMgd2l0aCB0aGUgTkZMIGFsdW1uaSBpcyBzdWJqZWN0IHRvIHNwYWNlIGF2YWlsYWJpbGl0eSBhbmQgcmVzZXJ2YXRpb25zIGFyZSBhbGxvY2F0ZWQgb24gYSBmaXJzdC1jb21lLCBmaXJzdC1zZXJ2ZWQgYmFzaXMuCk9uY2UgYm9va2VkLCBwbGVhc2Ugc2lnbiB1cCBmb3IgdGhlIHdlZWsncyBldmVudHMgYW5kIHRoZSBCaWcgR2FtZSBQYXJ0eSAob24gb3IgYmVmb3JlIEphbnVhcnkgMTUpIHZpYSBlbWFpbCBhdCB0YmVja2xlc0BhbG1vbmRyZXNvcnRzLmNvbS4KT3RoZXIgcGFja2FnZXMgYXJlIGF2YWlsYWJsZS4KQSBtaW5pbXVtIHN0YXkgb2YgMyBuaWdodHMgaXMgcmVxdWlyZWQgdG8gcXVhbGlmeSBmb3IgcGFydGljaXBhdGlvbiBpbiBCaWcgR2FtZSBXZWVrIGFjdGl2aXRpZXMuCkFib3V0IEFsbW9uZCBSZXNvcnRzCkFsbW9uZCBSZXNvcnRzIGlzIHRoZSBvcGVyYXRvciBvZiBmaXZlIDQtU3RhciBwcmVtaWVyIGFsbC1pbmNsdXNpdmUgaG90ZWxzIGluIEJhcmJhZG9zIGFuZCBTdC4gTHVjaWEgLSBmb3IgZXZlcnlvbmUgLSBjb3VwbGVzLCBmYW1pbGllcyBhbmQgc2luZ2xlcy4KSGF2aW5nIHBpb25lZXJlZCB0aGUgZGlzdGluY3RpdmUgIkZvciB5b3UuCkFib3V0IFlvdS4iIGNvbmNlcHQsIHdoaWNoIGluY29ycG9yYXRlcyB0aGUgZWFzZSBvZiBhIHByZS1wYWlkIGFsbC1pbmNsdXNpdmUgdmFjYXRpb24gd2l0aCBlbmRsZXNzIGFtZW5pdGllcyBmb3IgZ3Vlc3RzIHRvIGVuam95IGF0IHRoZWlyIG93biBwYWNlLCBBbG1vbmQgUmVzb3J0cyBvZmZlcnMgZml2ZSByZXNvcnRzLCB0d28gaXNsYW5kIGRlc3RpbmF0aW9ucyBhbmQgb25lIGluY3JlZGlibGUgZXhwZXJpZW5jZS4KV2l0aCBnb3VybWV0IHJlc3RhdXJhbnRzLCBsYXZpc2ggYWNjb21tb2RhdGlvbnMsIGV4Y2l0aW5nIGxhbmQgYW5kIHdhdGVyIHNwb3J0cywgZ29sZiwgZXhoaWxhcmF0aW5nIGFjdGl2aXRpZXMsIEtpZHMgQ2x1YiwgQ29uZmVyZW5jZSBDZW50ZXIsIEV1cm9wZWFuIFNwYSwgbmlnaHRseSBsaXZlIGVudGVydGFpbm1lbnQsIGFjcmVzIG9mIGx1c2ggdHJvcGljYWwgZ2FyZGVucywgZnJlc2h3YXRlciBwb29scywgbWlsZXMgb2Ygd2hpdGUgc2FuZCBiZWFjaGVzIG9mZiB0aGUgY29hc3Qgb2YgdGhlIENhcmliYmVhbiBTZWEgYW5kIHRoZSBtb3N0IGF0dGVudGl2ZSByZXNvcnQgc3RhZmYgaW4gdGhlIENhcmliYmVhbiwgQWxtb25kIFJlc29ydHMgaXMgYSBzcGVjdGFjdWxhciBpc2xhbmQgcGFyYWRpc2UgZm9yIGFsbCB0aG9zZSBzZWVraW5nIGEgcGVyc29uYWxpemVkIHZhY2F0aW9uIHdpdGhvdXQgcnVsZXMsIHdpdGhvdXQgd29ycmllcy4KQWxtb25kIFJlc29ydHMgb2ZmZXJzIHRoZSBtb3N0IGNvbWZvcnRhYmxlIGFuZCBjb21wbGV0ZSBhbGwtaW5jbHVzaXZlIHZhY2F0aW9uIGF2YWlsYWJsZSBpbiB0aGUgQ2FyaWJiZWFuLgpGb3IgbW9yZSBpbmZvcm1hdGlvbiwgcGxlYXNlIGNvbnRhY3QgeW91ciBmYXZvcml0ZSB0cmF2ZWwgcHJvdmlkZXIgb3IgQWxtb25kIFJlc29ydHMgYXQgMS04MDAtNEFMTU9ORCBvciB2aXNpdCB3d3cuYWxtb25kcmVzb3J0cy5jb20uClNPVVJDRSBBbG1vbmQgUmVzb3J0cwo=
[]
SnVsaWFuIExlbm5vbiBpcyBOZXdlc3QgUmVzaWRlbnQtVG8tQmUgYXQgVGhlIFJpdHotQ2FybHRvbiBDbHViIGFuZCBSZXNpZGVuY2VzLCBTb3V0aCBCZWFjaApNSUFNSSBCRUFDSCwgRmxhLiwgTm92LiAyNiAvUFJOZXdzd2lyZS8gLS0gSnVsaWFuIExlbm5vbiwgc29uIG9mIEJlYXRsZXMgaWNvbiBKb2huIExlbm5vbiwgaGFzIHB1cmNoYXNlZCBhIHJlc2lkZW5jZSBhdCBUaGUgUml0ei1DYXJsdG9uIENsdWIgYW5kIFJlc2lkZW5jZXMsIFNvdXRoIEJlYWNoLCBmdXJ0aGVyIGNlbWVudGluZyB0aGUgZGV2ZWxvcG1lbnQncyBzdGF0dXMgYXMgb25lIG9mIHRoZSBtb3N0IGx1eHVyaW91cyByZWFsIGVzdGF0ZSBvZmZlcmluZ3Mgb24gTWlhbWkgQmVhY2guCkxlbm5vbiwgd2hvIHJlY2VudGx5IHByb2R1Y2VkIGFuIGF3YXJkLXdpbm5pbmcgZG9jdW1lbnRhcnkgYW5kIGlzIHdvcmtpbmcgb24gYSBzaXh0aCBhbGJ1bSwgcGxhbnMgdG8gc3BsaXQgaGlzIHRpbWUgYmV0d2VlbiBoaXMgbmV3IE1pYW1pIGNvbmRvbWluaXVtIGFuZCBoaXMgaG9tZSBpbiBFdXJvcGUuCiJNaWFtaSBCZWFjaCBpcyBvbmUgb2YgbXkgZmF2b3JpdGUgcGxhY2VzLCBhbmQgSSBhbSBleGNpdGVkIHRvIG93biBhIHJlc2lkZW5jZSBoZXJlLCIgc2FpZCBMZW5ub24uCkkgdHJhdmVsIHF1aXRlIGEgYml0IGFuZCB0aGUgc2VydmljZSBUaGUgUml0ei0gQ2FybHRvbiBvZmZlcnMgaXMgaW5jb21wYXJhYmxlLgpUbyBub3cgaGF2ZSBpdCBhdCBob21lLCB3aWxsIGJlIGZhbnRhc3RpYy4KVGhlIFJpdHotQ2FybHRvbiBSZXNpZGVuY2VzIGFyZSBsdXh1cmlvdXMgY29uZG9taW5pdW1zIGZlYXR1cmluZyB0aGUgY29tcGFueSdzIGxlZ2VuZGFyeSBzZXJ2aWNlLgpMZW5ub24ncyAxLDgwMCBzcXVhcmUgZm9vdCwgdHdvLWJlZHJvb20gYW5kIHRocmVlLWJhdGhyb29tIHJlc2lkZW5jZSBpcyBsb2NhdGVkIGluIHRoZSBkZXZlbG9wbWVudCdzIDE3LXN0b3J5IE5vcnRoIFRvd2VyIHdpdGggYnJlYXRodGFraW5nIHZpZXdzIG9mIHRoZSBvY2VhbiBmcm9tIGFuIGV4cGFuc2l2ZSB0ZXJyYWNlLgpUaGUgcmVzaWRlbmNlIGFsc28gZmVhdHVyZXMgYSBmdWxseS1lcXVpcHBlZCBraXRjaGVuIHdpdGggU25haWRlcm8gSXRhbGlhbiBjYWJpbmV0cnkgYW5kIHN0YXRlLW9mLXRoZS1hcnQgYXBwbGlhbmNlcyBmcm9tIFN1Yi1aZXJvIGFuZCBNaWVsZS4KUHJpY2VzIGZvciB0d28tYmVkcm9vbSByZXNpZGVuY2VzIHN0YXJ0IGF0IGFwcHJveGltYXRlbHkgJDIgbWlsbGlvbi4KQ3VycmVudGx5IHVuZGVyIGNvbnN0cnVjdGlvbiBhbmQgc2NoZWR1bGVkIGZvciBjb21wbGV0aW9uIGluIGxhdGUgMjAwOSwgdGhlIGRldmVsb3BtZW50IHdpbGwgaW5jbHVkZSB0aGUgcHJlc2VydmF0aW9uIG9mIG9uZSBNaWFtaSBCZWFjaCdzIG1vc3Qgc2lnbmlmaWNhbnQgYXJjaGl0ZWN0dXJhbCBjb250cmlidXRpb25zIC0gdGhlIFNldmlsbGUgQmVhY2ggSG90ZWwuCkJ1aWx0IGluIDE5NTUsIHRoZSBob3RlbCdzIGhleWRheSBjb2luY2lkZWQgd2l0aCB0aGUgZXhjaXRlbWVudCBvZiB0aGUgQmVhdGxlcyBhbmQgTWlhbWkgQmVhY2gncyByaXNlIHRvIGEgZ2xhbW91ciBjYXBpdGFsLgpQbGFubmVkIGNvbW11bml0eSBhbWVuaXRpZXMgaW5jbHVkZSBkZWRpY2F0ZWQgY29uY2llcmdlIHNlcnZpY2VzLCBhIGZpbmUgZGluaW5nIHJlc3RhdXJhbnQsIGluLXJlc2lkZW5jZSBnb3VybWV0IGRpbmluZywgYSBmdWxsLXNlcnZpY2UgUml0ei1DYXJsdG9uIHNwYSBhbmQgc3RhdGUtb2YtdGhlLWFydCBmaXRuZXNzIGZhY2lsaXR5LCBhbmQgYSBiZWFjaGZyb250IGV4cGVyaWVuY2UgZW5jb21wYXNzaW5nIGZpdmUgcG9vbHMsIHRocmVlIHdoaXJscG9vbCBzcGFzLCBUaGUgUml0ei1DYXJsdG9uJ3Mgc2lnbmF0dXJlIGNhYmFuYXMsIGFuZCBhIHBvb2wgYmFyIGFuZCBncmlsbC4KTGVubm9uIGFsc28gd2lsbCBlbmpveSB0aGUgcHJpdmF0ZSByZXNpZGVudCBsb3VuZ2UsIGEgcmVjcmVhdGlvbiBvZiB0aGUgZm9ybWVyIGhvdGVsJ3MgbGVnZW5kYXJ5IE1hdGFkb3IgU3VwcGVyIENsdWIsIG9uY2UgdmlzaXRlZCBieSB0aGUgbGlrZXMgb2YgRGVhbiBNYXJ0aW4gYW5kIEZyYW5rIFNpbmF0cmEuClRoZSBSaXR6LUNhcmx0b24gQ2x1YiBhbmQgUmVzaWRlbmNlcywgU291dGggQmVhY2ggaXMgYmVpbmcgZGV2ZWxvcGVkIGJ5IGx1eHVyeSBob3RlbGllciBMaW9uc3RvbmUgRGV2ZWxvcG1lbnQsIHdoaWNoIG93bnMgVGhlIFJpdHotQ2FybHRvbiwgU291dGggQmVhY2ggYW5kIGlzIGNvLWRldmVsb3BpbmcgRVBJQyBSZXNpZGVuY2VzICYgSG90ZWwgaW4gRG93bnRvd24gTWlhbWk7IGFuZCBGb3J0dW5lIEludGVybmF0aW9uYWwsIGx1eHVyeSBkZXZlbG9wZXJzIG9mIEphZGUgUmVzaWRlbmNlcyBhdCBCcmlja2VsbCBCYXksIEphZGUgT2NlYW4gYW5kIEphZGUgQmVhY2gsIEFydGVjaCBhbmQgTGUgTWVyaWRpZW4gU3VubnkgSXNsZXMgQmVhY2guCkZvciBtb3JlIGluZm9ybWF0aW9uIG9uIFRoZSBSaXR6LUNhcmx0b24gQ2x1YiBhbmQgUmVzaWRlbmNlcywgU291dGggQmVhY2gsIGNhbGwgMzA1LTM1MS0xMDAwLCBleHQuCjExNSBvciB2aXNpdCB3d3cucmNyLXNvdXRoYmVhY2guY29tLgpTT1VSQ0UgVGhlIFJpdHotQ2FybHRvbiBDbHViIGFuZCBSZXNpZGVuY2VzCg==
[]
TWFydWJlbmkgU3VzdGFpbmFibGUgRW5lcmd5LCBJbmMuLCBhIExlYWRlciBpbiBSZW5ld2FibGUgRW5lcmd5LCBBY3F1aXJlcyBCaW9tYXNzLUZ1ZWxlZCBQbGFudCBpbiBTcHJpbmdmaWVsZCwgTkgKU0FOIERJRUdPLCBOb3YuIDI5IC9QUk5ld3N3aXJlLyAtLSBNYXJ1YmVuaSBTdXN0YWluYWJsZSBFbmVyZ3ksIEluYy4KKE1TRUkpLCBoZWFkcXVhcnRlcmVkIGluIFNhbiBEaWVnbywgQ2FsaWZvcm5pYSwgYW5ub3VuY2VkIHRvZGF5IHRoZSBwdXJjaGFzZSBvZiBhIDE2IE1XIGJpb21hc3MgcmVuZXdhYmxlIGVuZXJneSBwbGFudCBsb2NhdGVkIGluIFNwcmluZ2ZpZWxkLCBOZXcgSGFtcHNoaXJlLgpUaGUgcHVyY2hhc2Ugb2YgdGhlIDE2IG1lZ2F3YXR0IChNVykgcGxhbnQgYWdhaW4gY29uZmlybXMgTWFydWJlbmkncyB2YWx1ZS1mb2N1c2VkIGFjcXVpc2l0aW9uIHN0cmF0ZWd5IHRvIGFjcXVpcmUgYW5kIGRldmVsb3AgY2xlYW4sIHJlbmV3YWJsZSBwb3dlciBpbiBpdHMgZ3Jvd2luZyBOb3J0aCBBbWVyaWNhbiBwb3J0Zm9saW8uClRoaXMgcG9ydGZvbGlvIHRvZGF5IHRvcHMgODAgTVcsIHdpdGggYSBzdGFmZiBvZiBvdmVyIDgwIGVtcGxveWVlcyBjb2FzdC10by1jb2FzdC4KTVNFSSBpcyBwbGVhc2VkIHRvIGNvbXBsZXRlIHRoaXMgYWNxdWlzaXRpb24sIG91ciBzZWNvbmQgc3VjaCBwdXJjaGFzZSB3aXRoaW4gdGhlIGZpbmUgc3RhdGUgb2YgTmV3IEhhbXBzaGlyZS4KV2UgYXJlIGltbWVkaWF0ZWx5IGJlZ2lubmluZyBhIHNpZ25pZmljYW50IHNwZW5kaW5nIHBsYW4gdG8gYm90aCByZW5ldyB0aGlzIDIwIHllYXItb2xkIG9wZXJhdGluZyBwbGFudCdzIHJlbGlhYmlsaXR5LCBhbmQgdG8gbWFrZSBpbnZlc3RtZW50cyBpbiBuZXcgYW5kIGltcHJvdmVkIGVtaXNzaW9ucyBlcXVpcG1lbnQgdG8gZW5zdXJlIHRoYXQgdGhlIFNwcmluZ2ZpZWxkIFBvd2VyIGZhY2lsaXR5IGlzIGFtb25nIHRoZSBjbGVhbmVzdCBhbmQgbW9zdCBlZmZpY2llbnQgaW4gdGhlIGFyZWEuCldlIGFyZSBjb21taXR0ZWQgdG8gY29udGludWVkIGdyb3d0aCBpbiB0aGUgcmVuZXdhYmxlIGVuZXJneSBhcmVuYSwgYW5kIHRvIHRoZSB2YWx1YWJsZSBqb2IgcmV0ZW50aW9uIGFuZCBlY29ub21pYyBkZXZlbG9wbWVudCB0aGF0IHJlbmV3YWJsZSBlbmVyZ3kgcmV2aXRhbGl6YXRpb24gcHJvamVjdHMgbGlrZSB0aGlzIHByb3ZpZGUsIiBzYWlkIEpvaG4gV29vZCwgU3IuIFZpY2UgUHJlc2lkZW50IG9mIE1TRUkuCkJ5IGluc3RhbGxpbmcgbmV3IGVxdWlwbWVudCBhdCB0aGUgU3ByaW5nZmllbGQgZmFjaWxpdHksIE1TRUkgd2lsbCByZWR1Y2Ugbml0cm9nZW4gb3hpZGUgZW1pc3Npb25zIGJ5IG1vcmUgdGhhbiA3MCUgYW5udWFsbHksIHdoaWNoIHdpbGwgYWxzbyBxdWFsaWZ5IE1TRUkncyBTcHJpbmdmaWVsZCBQb3dlciwgTExDIGFzIG9uZSBvZiB0aGUgY2xlYW5lc3QgYmlvbWFzcyBmYWNpbGl0aWVzIGluIE5ldyBFbmdsYW5kLgpNU0VJIGFsc28gb3BlcmF0ZXMgaW4gV2hpdGVmaWVsZCwgTkggb25lIG9mIHRoZSBtb3N0IGFkdmFuY2VkIGVtaXNzaW9uIGNvbnRyb2wgc3lzdGVtcyBmb3IgYmlvbWFzcyBwbGFudHMgdGhyb3VnaG91dCBOZXcgRW5nbGFuZC4KSW4gT2N0b2JlciwgMjAwNCwgYSBtdWx0aS1taWxsaW9uIGRvbGxhciBQb2xsdXRpb24gQ29udHJvbCBVbml0IHdhcyB0aGVyZSBpbnN0YWxsZWQgdG8gZW5zdXJlIGxvbmctdGVybSwgY29udGludW91cyByZWR1Y3Rpb24gb2Ygbml0cm9nZW4gb3hpZGUgZW1pc3Npb25zLgpTdWJzZXF1ZW50IGludmVzdG1lbnRzIGJ5IE1TRUkgaGF2ZSBhbHNvIGltcHJvdmVkIHBsYW50IG9wZXJhdGluZyBlZmZpY2llbmN5LCBpbmNsdWRpbmcgc3VwZXJpb3IgY29udHJvbCBvZiBDYXJib24gTW9ub3hpZGUgZW1pc3Npb25zLgpUaGUgU3ByaW5nZmllbGQgYmlvbWFzcyBwbGFudCBzZWN1cmVzIHdvb2R5IGZvcmVzdCB3YXN0ZSBtYXRlcmlhbHMgdG8gcHJvZHVjZSBtb3JlIHRoYW4gMTAwLDAwMCBNV0hyIHBlciB5ZWFyIG9mIHJlbmV3YWJsZSBlbGVjdHJpY2l0eS4KVGhpcyBtYXRlcmlhbCBpcyBzdXBwbGllZCBmcm9tIGFyZWEgdGltYmVyIG1pbGxzIGFuZCBmb3Jlc3QgcmVzaWR1ZSB3aGljaCBpcyBzaGlwcGVkIHRvIHRoZSBwbGFudCB0byBiZSBidXJuZWQgaW4gaXRzIGVudmlyb25tZW50YWxseS1jb250cm9sbGVkIGJvaWxlci4KVGhpcyByZW5ld2FibGUgZW5lcmd5IHByb2Nlc3MgaXMgZG91Ymx5IGJlbmVmaWNpYWwgdG8gdGhlIGVudmlyb25tZW50IGJlY2F1c2UgaXQgYm90aCBkaXNwbGFjZXMgZWxlY3RyaWNpdHkgcHJvZHVjZWQgZnJvbSBnYXMgb3Igb2lsLWZpcmVkIHBvd2VyIHN0YXRpb25zLCBhbmQgaXQgc2ltdWx0YW5lb3VzbHkgcmVkdWNlcyBncmVlbiBob3VzZSBnYXMgKEdIRykgZW1pc3Npb25zIHRoYXQgd291bGQgaGF2ZSBiZWVuIHByb2R1Y2VkIGlmIHRoZSB3YXN0ZSB3b29keSBiaW9tYXNzIHdlcmUgbGVmdCB0byBidXJuIG9yIGRlY2F5IGluIHRoZSBmb3Jlc3QuCk1hcnViZW5pIFN1c3RhaW5hYmxlIEVuZXJneSwgSW5jLiBpcyBvbmUgb2YgdGhlIG5hdGlvbidzIGxlYWRpbmcgaW50ZWdyYXRlZCBlbmVyZ3kgY29tcGFuaWVzLCBvcGVyYXRpbmcgYSBkaXZlcnNlIHBvcnRmb2xpbyBvZiBpdHMgb3duZWQgaW5kdXN0cmlhbCBjb2dlbmVyYXRpb24sIGNlbnRyYWwgcGxhbnQsIGJpb21hc3MgYW5kIGRpc3RyaWN0IGVuZXJneSBzeXN0ZW1zIHRocm91Z2hvdXQgTm9ydGggQW1lcmljYS4KVGhlIGNvbXBhbnkgaXMgaGVhZHF1YXJ0ZXJlZCBpbiBTYW4gRGllZ28sIENBLCB3aXRoIG9mZmljZXMgaW4gTWVkZm9yZCwgTmV3IEplcnNleS4KTWFydWJlbmkgU3VzdGFpbmFibGUgRW5lcmd5LCBJbmMuIGlzIGEgc3Vic2lkaWFyeSBvZiBNYXJ1YmVuaSBDb3Jwb3JhdGlvbiwgaGVhZHF1YXJ0ZXJlZCBpbiBUb2t5bywgSmFwYW4uCk1hcnViZW5pIENvcnBvcmF0aW9uIGlzIG9uZSBvZiB0aGUgd29ybGQncyBsYXJnZXN0IGNvbXBhbmllcyBhbmQgaXMgaW52b2x2ZWQgaW4gd2lkZS1yYW5naW5nIGJ1c2luZXNzIGZpZWxkcy4KTWFydWJlbmkgaXMgbG9jYXRlZCBpbiA3MSBjb3VudHJpZXMgd2l0aCBtb3JlIHRoYW4gNSwwMDAgZW1wbG95ZWVzIHdvcmxkd2lkZSBhbmQgYW5udWFsIHRyYWRpbmcgdHJhbnNhY3Rpb24gdm9sdW1lIGluIGV4Y2VzcyBvZiAkODAgYmlsbGlvbi4KV29ybGR3aWRlLCBNYXJ1YmVuaSBvd25zIG92ZXIgOTAwIE1XIG9mIHJlbmV3YWJsZSBwb3dlciBmYWNpbGl0aWVzLgpGb3IgRnVydGhlciBJbmZvcm1hdGlvbiwgQ29udGFjdDogTWVsaXNzYSBNb2VocmtlLCBNYXJ1YmVuaSBTdXN0YWluYWJsZSBFbmVyZ3ksIEluYy4KU2FuIERpZWdvIE9mZmljZSA2MTktMjMyLTY1NjQgeCAxNjAgRW1haWwgTW9laHJrZS1tQG5hLm1hcnViZW5pLmNvbSBodHRwOi8vd3d3Lk1TRUktTWFydWJlbmkuY29tClNPVVJDRSBNYXJ1YmVuaSBTdXN0YWluYWJsZSBFbmVyZ3ksIEluYy4K
[(TWFydWJlbmkgU3VzdGFpbmFibGUgRW5lcmd5LCBJbmMuLCBhIExlYWRlciBpbiBSZW5ld2FibGUgRW5lcmd5LCBBY3F1aXJlcyBCaW9tYXNzLUZ1ZWxlZCBQbGFudCBpbiBTcHJpbmdmaWVsZCwgTkgKU0FOIERJRUdPLCBOb3YuIDI5IC9QUk5ld3N3aXJlLyAtLSBNYXJ1YmVuaSBTdXN0YWluYWJsZSBFbmVyZ3ksIEluYy4KKE1TRUkpLCBoZWFkcXVhcnRlcmVkIGluIFNhbiBEaWVnbywgQ2FsaWZvcm5pYSwgYW5ub3VuY2VkIHRvZGF5IHRoZSBwdXJjaGFzZSBvZiBhIDE2IE1XIGJpb21hc3MgcmVuZXdhYmxlIGVuZXJneSBwbGFudCBsb2NhdGVkIGluIFNwcmluZ2ZpZWxkLCBOZXcgSGFtcHNoaXJlLgpUaGUgcHVyY2hhc2Ugb2YgdGhlIDE2IG1lZ2F3YXR0IChNVykgcGxhbnQgYWdhaW4gY29uZmlybXMgTWFydWJlbmkncyB2YWx1ZS1mb2N1c2VkIGFjcXVpc2l0aW9uIHN0cmF0ZWd5IHRvIGFjcXVpcmUgYW5kIGRldmVsb3AgY2xlYW4sIHJlbmV3YWJsZSBwb3dlciBpbiBpdHMgZ3Jvd2luZyBOb3J0aCBBbWVyaWNhbiBwb3J0Zm9saW8uClRoaXMgcG9ydGZvbGlvIHRvZGF5IHRvcHMgODAgTVcsIHdpdGggYSBzdGFmZiBvZiBvdmVyIDgwIGVtcGxveWVlcyBjb2FzdC10by1jb2FzdC4KTVNFSSBpcyBwbGVhc2VkIHRvIGNvbXBsZXRlIHRoaXMgYWNxdWlzaXRpb24sIG91ciBzZWNvbmQgc3VjaCBwdXJjaGFzZSB3aXRoaW4gdGhlIGZpbmUgc3RhdGUgb2YgTmV3IEhhbXBzaGlyZS4KV2UgYXJlIGltbWVkaWF0ZWx5IGJlZ2lubmluZyBhIHNpZ25pZmljYW50IHNwZW5kaW5nIHBsYW4gdG8gYm90aCByZW5ldyB0aGlzIDIwIHllYXItb2xkIG9wZXJhdGluZyBwbGFudCdzIHJlbGlhYmlsaXR5LCBhbmQgdG8gbWFrZSBpbnZlc3RtZW50cyBpbiBuZXcgYW5kIGltcHJvdmVkIGVtaXNzaW9ucyBlcXVpcG1lbnQgdG8gZW5zdXJlIHRoYXQgdGhlIFNwcmluZ2ZpZWxkIFBvd2VyIGZhY2lsaXR5IGlzIGFtb25nIHRoZSBjbGVhbmVzdCBhbmQgbW9zdCBlZmZpY2llbnQgaW4gdGhlIGFyZWEuCldlIGFyZSBjb21taXR0ZWQgdG8gY29udGludWVkIGdyb3d0aCBpbiB0aGUgcmVuZXdhYmxlIGVuZXJneSBhcmVuYSwgYW5kIHRvIHRoZSB2YWx1YWJsZSBqb2IgcmV0ZW50aW9uIGFuZCBlY29ub21pYyBkZXZlbG9wbWVudCB0aGF0IHJlbmV3YWJsZSBlbmVyZ3kgcmV2aXRhbGl6YXRpb24gcHJvamVjdHMgbGlrZSB0aGlzIHByb3ZpZGUsIiBzYWlkIEpvaG4gV29vZCwgU3IuIFZpY2UgUHJlc2lkZW50IG9mIE1TRUkuCkJ5IGluc3RhbGxpbmcgbmV3IGVxdWlwbWVudCBhdCB0aGUgU3ByaW5nZmllbGQgZmFjaWxpdHksIE1TRUkgd2lsbCByZWR1Y2Ugbml0cm9nZW4gb3hpZGUgZW1pc3Npb25zIGJ5IG1vcmUgdGhhbiA3MCUgYW5udWFsbHksIHdoaWNoIHdpbGwgYWxzbyBxdWFsaWZ5IE1TRUkncyBTcHJpbmdmaWVsZCBQb3dlciwgTExDIGFzIG9uZSBvZiB0aGUgY2xlYW5lc3QgYmlvbWFzcyBmYWNpbGl0aWVzIGluIE5ldyBFbmdsYW5kLgpNU0VJIGFsc28gb3BlcmF0ZXMgaW4gV2hpdGVmaWVsZCwgTkggb25lIG9mIHRoZSBtb3N0IGFkdmFuY2VkIGVtaXNzaW9uIGNvbnRyb2wgc3lzdGVtcyBmb3IgYmlvbWFzcyBwbGFudHMgdGhyb3VnaG91dCBOZXcgRW5nbGFuZC4KSW4gT2N0b2JlciwgMjAwNCwgYSBtdWx0aS1taWxsaW9uIGRvbGxhciBQb2xsdXRpb24gQ29udHJvbCBVbml0IHdhcyB0aGVyZSBpbnN0YWxsZWQgdG8gZW5zdXJlIGxvbmctdGVybSwgY29udGludW91cyByZWR1Y3Rpb24gb2Ygbml0cm9nZW4gb3hpZGUgZW1pc3Npb25zLgpTdWJzZXF1ZW50IGludmVzdG1lbnRzIGJ5IE1TRUkgaGF2ZSBhbHNvIGltcHJvdmVkIHBsYW50IG9wZXJhdGluZyBlZmZpY2llbmN5LCBpbmNsdWRpbmcgc3VwZXJpb3IgY29udHJvbCBvZiBDYXJib24gTW9ub3hpZGUgZW1pc3Npb25zLgpUaGUgU3ByaW5nZmllbGQgYmlvbWFzcyBwbGFudCBzZWN1cmVzIHdvb2R5IGZvcmVzdCB3YXN0ZSBtYXRlcmlhbHMgdG8gcHJvZHVjZSBtb3JlIHRoYW4gMTAwLDAwMCBNV0hyIHBlciB5ZWFyIG9mIHJlbmV3YWJsZSBlbGVjdHJpY2l0eS4KVGhpcyBtYXRlcmlhbCBpcyBzdXBwbGllZCBmcm9tIGFyZWEgdGltYmVyIG1pbGxzIGFuZCBmb3Jlc3QgcmVzaWR1ZSB3aGljaCBpcyBzaGlwcGVkIHRvIHRoZSBwbGFudCB0byBiZSBidXJuZWQgaW4gaXRzIGVudmlyb25tZW50YWxseS1jb250cm9sbGVkIGJvaWxlci4KVGhpcyByZW5ld2FibGUgZW5lcmd5IHByb2Nlc3MgaXMgZG91Ymx5IGJlbmVmaWNpYWwgdG8gdGhlIGVudmlyb25tZW50IGJlY2F1c2UgaXQgYm90aCBkaXNwbGFjZXMgZWxlY3RyaWNpdHkgcHJvZHVjZWQgZnJvbSBnYXMgb3Igb2lsLWZpcmVkIHBvd2VyIHN0YXRpb25zLCBhbmQgaXQgc2ltdWx0YW5lb3VzbHkgcmVkdWNlcyBncmVlbiBob3VzZSBnYXMgKEdIRykgZW1pc3Npb25zIHRoYXQgd291bGQgaGF2ZSBiZWVuIHByb2R1Y2VkIGlmIHRoZSB3YXN0ZSB3b29keSBiaW9tYXNzIHdlcmUgbGVmdCB0byBidXJuIG9yIGRlY2F5IGluIHRoZSBmb3Jlc3QuCk1hcnViZW5pIFN1c3RhaW5hYmxlIEVuZXJneSwgSW5jLiBpcyBvbmUgb2YgdGhlIG5hdGlvbidzIGxlYWRpbmcgaW50ZWdyYXRlZCBlbmVyZ3kgY29tcGFuaWVzLCBvcGVyYXRpbmcgYSBkaXZlcnNlIHBvcnRmb2xpbyBvZiBpdHMgb3duZWQgaW5kdXN0cmlhbCBjb2dlbmVyYXRpb24sIGNlbnRyYWwgcGxhbnQsIGJpb21hc3MgYW5kIGRpc3RyaWN0IGVuZXJneSBzeXN0ZW1zIHRocm91Z2hvdXQgTm9ydGggQW1lcmljYS4KVGhlIGNvbXBhbnkgaXMgaGVhZHF1YXJ0ZXJlZCBpbiBTYW4gRGllZ28sIENBLCB3aXRoIG9mZmljZXMgaW4gTWVkZm9yZCwgTmV3IEplcnNleS4KTWFydWJlbmkgU3VzdGFpbmFibGUgRW5lcmd5LCBJbmMuIGlzIGEgc3Vic2lkaWFyeSBvZiBNYXJ1YmVuaSBDb3Jwb3JhdGlvbiwgaGVhZHF1YXJ0ZXJlZCBpbiBUb2t5bywgSmFwYW4uCk1hcnViZW5pIENvcnBvcmF0aW9uIGlzIG9uZSBvZiB0aGUgd29ybGQncyBsYXJnZXN0IGNvbXBhbmllcyBhbmQgaXMgaW52b2x2ZWQgaW4gd2lkZS1yYW5naW5nIGJ1c2luZXNzIGZpZWxkcy4KTWFydWJlbmkgaXMgbG9jYXRlZCBpbiA3MSBjb3VudHJpZXMgd2l0aCBtb3JlIHRoYW4gNSwwMDAgZW1wbG95ZWVzIHdvcmxkd2lkZSBhbmQgYW5udWFsIHRyYWRpbmcgdHJhbnNhY3Rpb24gdm9sdW1lIGluIGV4Y2VzcyBvZiAkODAgYmlsbGlvbi4KV29ybGR3aWRlLCBNYXJ1YmVuaSBvd25zIG92ZXIgOTAwIE1XIG9mIHJlbmV3YWJsZSBwb3dlciBmYWNpbGl0aWVzLgpGb3IgRnVydGhlciBJbmZvcm1hdGlvbiwgQ29udGFjdDogTWVsaXNzYSBNb2VocmtlLCBNYXJ1YmVuaSBTdXN0YWluYWJsZSBFbmVyZ3ksIEluYy4KU2FuIERpZWdvIE9mZmljZSA2MTktMjMyLTY1NjQgeCAxNjAgRW1haWwgTW9laHJrZS1tQG5hLm1hcnViZW5pLmNvbSBodHRwOi8vd3d3Lk1TRUktTWFydWJlbmkuY29tClNPVVJDRSBNYXJ1YmVuaSBTdXN0YWluYWJsZSBFbmVyZ3ksIEluYy4K, 'ORG')]
U2V2ZW4gcGVvcGxlIGFyZSBvbiB0cmlhbCBhY2N1c2VkIG9mIGJlaW5nIGludm9sdmVkIGluIHRoZSDCozUzbSBTZWN1cml0YXMgcm9iYmVyeSBpbiBLZW50IGluIEZlYnJ1YXJ5IDIwMDYuCkhlcmUgaXMgdGhlIGZ1bGwgaW5kaWN0bWVudDoKQ29udHJhcnkgdG8gU2VjdGlvbiAoMSkgb2YgdGhlIENyaW1pbmFsIExhdyBBY3QgMTk3Ny4KSXQgaXMgYWxsZWdlZCB0aGF0IGJldHdlZW4gMjcgSnVseSAyMDA1IGFuZCAyMyBGZWJydWFyeSAyMDA2IExlYSBSdXNoYSwgU3R1YXJ0IFJveWxlLCBKZXRtaXIgQnVjcGFwYSwgUm9nZXIgQ291dHRzLCBKb2huIEZvd2xlciBhbmQgRXJtaXIgSHlzZW5haiBjb25zcGlyZWQgdG9nZXRoZXIgYW5kIHdpdGggb3RoZXJzIHRvIHVubGF3ZnVsbHkgYW5kIGJ5IGZvcmNlIG9yIGZyYXVkIHRha2Ugb3IgY2FycnkgYXdheSBDb2xpbiBEaXhvbiwgTHlubiBEaXhvbiBhbmQgYSB5b3VuZyBjaGlsZCBhZ2FpbnN0IHRoZWlyIHdpbGwuCk1pY2hlbGxlIEhvZ2cgd2FzIGNsZWFyZWQgb2YgdGhlIHNhbWUgY2hhcmdlIG9uIDMgT2N0b2JlciAyMDA3LgpDb250cmFyeSB0byBTZWN0aW9uIDEgKDEpIG9mIHRoZSBDcmltaW5hbCBMYXcgQWN0IDE5NzcuCkl0IGlzIGFsbGVnZWQgdGhhdCBiZXR3ZWVuIDI3IEp1bHkgMjAwNSBhbmQgMjMgRmVicnVhcnkgMjAwNiBMZWEgUnVzaGEsIFN0dWFydCBSb3lsZSwgSmV0bWlyIEJ1Y3BhcGEsIFJvZ2VyIENvdXR0cywgSm9obiBGb3dsZXIgYW5kIEVybWlyIEh5c2VuYWogY29uc3BpcmVkIHRvZ2V0aGVyIGFuZCB3aXRoIG90aGVycyB0byByb2IgYW4gZW1wbG95ZWUgb2YgU2VjdXJpdGFzIENhc2ggTWFuYWdlbWVudCBMaW1pdGVkLgpJdCBpcyBhbGxlZ2VkIHRoYXQgYmV0d2VlbiAyNyBKdWx5IDIwMDUgYW5kIDIzIEZlYnJ1YXJ5IDIwMDYgTGVhIFJ1c2hhLCBTdHVhcnQgUm95bGUsIEpldG1pciBCdWNwYXBhLCBSb2dlciBDb3V0dHMsIEpvaG4gRm93bGVyLCBhbmQgRXJtaXIgSHlzZW5haiBjb25zcGlyZWQgdG9nZXRoZXIgYW5kIHdpdGggb3RoZXJzIHRvIGhhdmUgaW4gdGhlaXIgcG9zc2Vzc2lvbiBhIGZpcmVhcm0gYXQgdGhlIHRpbWUgb2YgY29tbWl0dGluZyBhbiBvZmZlbmNlIHNwZWNpZmllZCBpbiBTY2hlZHVsZSAxIHRvIHRoZSBGaXJlYXJtcyBBY3QgMTk2OCwgbmFtZWx5IHJvYmJlcnkuCkNvbnRyYXJ5IHRvIFNlY3Rpb24gMjIgKDEpIG9mIHRoZSBUaGVmdCBBY3QuCkl0IGlzIGFsbGVnZWQgdGhhdCBvbiAyMiBGZWJydWFyeSAyMDA2IEtlaXRoIEJvcmVyIGRpc2hvbmVzdGx5IHJlY2VpdmVkIHN0b2xlbiBnb29kcywgbmFtZWx5IMKjNiwxMDAgaW4gbW9uZXksIGJlbG9uZ2luZyB0byBTZWN1cml0YXMgQ2FzaCBNYW5hZ2VtZW50IExpbWl0ZWQsIGtub3dpbmcgb3IgYmVsaWV2aW5nIHRoZSBzYW1lIHRvIGJlIHN0b2xlbiBnb29kcy4KQ2FyIGRlYWxlciBKb2huIEZvd2xlciwgNTgsIG9mIENoYXJ0IEhpbGwgUm9hZCwgU3RhcGxlaHVyc3QsIEtlbnQuCkNhciBzYWxlc21hbiBTdHVhcnQgUm95bGUsIDQ4LCBvZiBBbGxlbiBTdHJlZXQsIE1haWRzdG9uZSwgS2VudC4KVW5lbXBsb3llZCBKZXRtaXIgQnVjcGFwYSwgMjYsIG9mIEhhZGxvdyBSb2FkLCBUb25icmlkZ2UsIEtlbnQuClJvb2ZlciBMZWEgUnVzaGEsIDM1LCBvZiBMYW1iZXJzYXJ0IENsb3NlLCBTb3V0aGJvcm91Z2gsIEtlbnQuClNlY3VyaXRhcyBlbXBsb3llZSBFcm1pciBIeXNlbmFqLCAyNywgb2YgTmV3IFJvYWQsIENyb3dib3JvdWdoLCBFYXN0IFN1c3NleC4KR2FyYWdlIG93bmVyIFJvZ2VyIENvdXR0cywgMzAsIG9mIFRoZSBHcmVlbiwgV2VsbGluZywgc291dGgtZWFzdCBMb25kb24uClNpZ253cml0ZXIgS2VpdGggQm9yZXIsIDUzLCBvZiBIZW1wc3RlYWQgTGFuZSwgTWFpZHN0b25lLCBLZW50LgpBbGwgaGF2ZSBwbGVhZGVkIG5vdCBndWlsdHkgYW5kIGFyZSBvbiB0cmlhbCBhdCB0aGUgT2xkIEJhaWxleS4KSGFpcmRyZXNzZXIgTWljaGVsbGUgTG91aXNlIEhvZ2csIDMyLCBvZiBCcmlua2xvdyBDcmVzY2VudCwgV29vbHdpY2gsIHNvdXRoLWVhc3QgTG9uZG9uIHdhcyBjbGVhcmVkIG9mIGFsbCBjaGFyZ2VzIG9uIDMgT2N0b2JlciAyMDA3Lgo=
[(U2V2ZW4gcGVvcGxlIGFyZSBvbiB0cmlhbCBhY2N1c2VkIG9mIGJlaW5nIGludm9sdmVkIGluIHRoZSDCozUzbSBTZWN1cml0YXMgcm9iYmVyeSBpbiBLZW50IGluIEZlYnJ1YXJ5IDIwMDYuCkhlcmUgaXMgdGhlIGZ1bGwgaW5kaWN0bWVudDoKQ29udHJhcnkgdG8gU2VjdGlvbiAoMSkgb2YgdGhlIENyaW1pbmFsIExhdyBBY3QgMTk3Ny4KSXQgaXMgYWxsZWdlZCB0aGF0IGJldHdlZW4gMjcgSnVseSAyMDA1IGFuZCAyMyBGZWJydWFyeSAyMDA2IExlYSBSdXNoYSwgU3R1YXJ0IFJveWxlLCBKZXRtaXIgQnVjcGFwYSwgUm9nZXIgQ291dHRzLCBKb2huIEZvd2xlciBhbmQgRXJtaXIgSHlzZW5haiBjb25zcGlyZWQgdG9nZXRoZXIgYW5kIHdpdGggb3RoZXJzIHRvIHVubGF3ZnVsbHkgYW5kIGJ5IGZvcmNlIG9yIGZyYXVkIHRha2Ugb3IgY2FycnkgYXdheSBDb2xpbiBEaXhvbiwgTHlubiBEaXhvbiBhbmQgYSB5b3VuZyBjaGlsZCBhZ2FpbnN0IHRoZWlyIHdpbGwuCk1pY2hlbGxlIEhvZ2cgd2FzIGNsZWFyZWQgb2YgdGhlIHNhbWUgY2hhcmdlIG9uIDMgT2N0b2JlciAyMDA3LgpDb250cmFyeSB0byBTZWN0aW9uIDEgKDEpIG9mIHRoZSBDcmltaW5hbCBMYXcgQWN0IDE5NzcuCkl0IGlzIGFsbGVnZWQgdGhhdCBiZXR3ZWVuIDI3IEp1bHkgMjAwNSBhbmQgMjMgRmVicnVhcnkgMjAwNiBMZWEgUnVzaGEsIFN0dWFydCBSb3lsZSwgSmV0bWlyIEJ1Y3BhcGEsIFJvZ2VyIENvdXR0cywgSm9obiBGb3dsZXIgYW5kIEVybWlyIEh5c2VuYWogY29uc3BpcmVkIHRvZ2V0aGVyIGFuZCB3aXRoIG90aGVycyB0byByb2IgYW4gZW1wbG95ZWUgb2YgU2VjdXJpdGFzIENhc2ggTWFuYWdlbWVudCBMaW1pdGVkLgpJdCBpcyBhbGxlZ2VkIHRoYXQgYmV0d2VlbiAyNyBKdWx5IDIwMDUgYW5kIDIzIEZlYnJ1YXJ5IDIwMDYgTGVhIFJ1c2hhLCBTdHVhcnQgUm95bGUsIEpldG1pciBCdWNwYXBhLCBSb2dlciBDb3V0dHMsIEpvaG4gRm93bGVyLCBhbmQgRXJtaXIgSHlzZW5haiBjb25zcGlyZWQgdG9nZXRoZXIgYW5kIHdpdGggb3RoZXJzIHRvIGhhdmUgaW4gdGhlaXIgcG9zc2Vzc2lvbiBhIGZpcmVhcm0gYXQgdGhlIHRpbWUgb2YgY29tbWl0dGluZyBhbiBvZmZlbmNlIHNwZWNpZmllZCBpbiBTY2hlZHVsZSAxIHRvIHRoZSBGaXJlYXJtcyBBY3QgMTk2OCwgbmFtZWx5IHJvYmJlcnkuCkNvbnRyYXJ5IHRvIFNlY3Rpb24gMjIgKDEpIG9mIHRoZSBUaGVmdCBBY3QuCkl0IGlzIGFsbGVnZWQgdGhhdCBvbiAyMiBGZWJydWFyeSAyMDA2IEtlaXRoIEJvcmVyIGRpc2hvbmVzdGx5IHJlY2VpdmVkIHN0b2xlbiBnb29kcywgbmFtZWx5IMKjNiwxMDAgaW4gbW9uZXksIGJlbG9uZ2luZyB0byBTZWN1cml0YXMgQ2FzaCBNYW5hZ2VtZW50IExpbWl0ZWQsIGtub3dpbmcgb3IgYmVsaWV2aW5nIHRoZSBzYW1lIHRvIGJlIHN0b2xlbiBnb29kcy4KQ2FyIGRlYWxlciBKb2huIEZvd2xlciwgNTgsIG9mIENoYXJ0IEhpbGwgUm9hZCwgU3RhcGxlaHVyc3QsIEtlbnQuCkNhciBzYWxlc21hbiBTdHVhcnQgUm95bGUsIDQ4LCBvZiBBbGxlbiBTdHJlZXQsIE1haWRzdG9uZSwgS2VudC4KVW5lbXBsb3llZCBKZXRtaXIgQnVjcGFwYSwgMjYsIG9mIEhhZGxvdyBSb2FkLCBUb25icmlkZ2UsIEtlbnQuClJvb2ZlciBMZWEgUnVzaGEsIDM1LCBvZiBMYW1iZXJzYXJ0IENsb3NlLCBTb3V0aGJvcm91Z2gsIEtlbnQuClNlY3VyaXRhcyBlbXBsb3llZSBFcm1pciBIeXNlbmFqLCAyNywgb2YgTmV3IFJvYWQsIENyb3dib3JvdWdoLCBFYXN0IFN1c3NleC4KR2FyYWdlIG93bmVyIFJvZ2VyIENvdXR0cywgMzAsIG9mIFRoZSBHcmVlbiwgV2VsbGluZywgc291dGgtZWFzdCBMb25kb24uClNpZ253cml0ZXIgS2VpdGggQm9yZXIsIDUzLCBvZiBIZW1wc3RlYWQgTGFuZSwgTWFpZHN0b25lLCBLZW50LgpBbGwgaGF2ZSBwbGVhZGVkIG5vdCBndWlsdHkgYW5kIGFyZSBvbiB0cmlhbCBhdCB0aGUgT2xkIEJhaWxleS4KSGFpcmRyZXNzZXIgTWljaGVsbGUgTG91aXNlIEhvZ2csIDMyLCBvZiBCcmlua2xvdyBDcmVzY2VudCwgV29vbHdpY2gsIHNvdXRoLWVhc3QgTG9uZG9uIHdhcyBjbGVhcmVkIG9mIGFsbCBjaGFyZ2VzIG9uIDMgT2N0b2JlciAyMDA3Lgo=, 'GPE')]
T2F0ZXMnIHNsZWVwaW5nIGJhZyBjYXNlIG5vdCBzb2xkCk5ldmVyIHJldHVybmVkCkl0IGhhZCBiZWVuIGV4cGVjdGVkIHRvIGZldGNoIHVwIHRvIMKjNDAsMDAwIGF0IHRoZSBzYWxlLgpPYXRlcyB3YXMgb25lIG9mIGEgZml2ZS1tYW4gZXhwZWRpdGlvbiB0ZWFtIHdoaWNoIHN1Y2Nlc3NmdWxseSByZWFjaGVkIHRoZSBTb3V0aCBQb2xlIG9uIDE3IEphbnVhcnkgMTkxMi4KSG93ZXZlciwgdGhleSB3ZXJlIGdyZWV0ZWQgYnkgdGhlIHNvdWwtZGVzdHJveWluZyBldmlkZW5jZSB0aGF0IHRoZXkgaGFkIGJlZW4gYmVhdGVuIGJ5IHJpdmFsIE5vcndlZ2lhbiBleHBsb3JlciBSb2FsZCBBbXVuZHNlbi4KVGhlIHRlYW0gc3RydWdnbGVkIHRvIHJlYWNoIGEgZm9vZCBhbmQgZXF1aXBtZW50IHN1cHBseSBkZXBvdCwgYW5kIGFsbCBwZXJpc2hlZCBvbiB0aGUgcmV0dXJuIGpvdXJuZXkuCk9hdGVzIHdhbGtlZCBvdXQgb2YgdGhlIHBhcnR5J3MgdGVudCBzYXlpbmc6ICJJIGFtIGp1c3QgZ29pbmcgb3V0c2lkZSBhbmQgbWF5IGJlIHNvbWUgdGltZS4iCkhlIG5ldmVyIHJldHVybmVkLgo=
[]
RHJ1ZyBkZWFsaW5nIHdhcyAnYmVoaW5kIG11cmRlcicKSGUgc2FpZCB0aGF0IHdoYXRldmVyIG1heSBoYXZlIGJlZW4gc2FpZCBhYm91dCBNciBGZWdhbiBoZSBoYWQgbm8gY3JpbWluYWwgcmVjb3JkIHdoYXRzb2V2ZXIuCk5vLW9uZSBoYXMgeWV0IGJlZW4gY2hhcmdlZCB3aXRoIHRoZSBraWxsaW5nIGFuZCB0aGUgbXVyZGVyIGhhcyBiZWVuIHBhc3NlZCB0byB0aGUgUG9saWNlIFNlcnZpY2Ugb2YgTm9ydGhlcm4gSXJlbGFuZCdzIFJldHJvc3BlY3RpdmUgUmV2aWV3IFVuaXQgZm9yIHJlLWV4YW1pbmF0aW9uLgpJbiBhIHN0YXRlbWVudCByZWFkIHRvIHRoZSBOZXdyeSBpbnF1ZXN0LCBEZXRlY3RpdmUgU2VyZ2VhbnQgTWljaGFlbCBIYW1pbHRvbiBzYWlkIHRoZSBraWxsaW5nIGhhZCBiZWVuIHN1YmplY3Qgb25seSB0byBhIGxpbWl0ZWQgcmV2aWV3IGFuZCB3aWxsIGJlIGZvcm1hbGx5IHJldmlld2VkIGluIDIwMTAuCkJ1dCBoZSBzYWlkOiAiSXQgaGFzIGJlZW4gZXN0YWJsaXNoZWQgdGhlIHZpY3RpbSB3YXMgbXVyZGVyZWQgYnkgdGhlIFJlYWwgSVJBIGFzIGEgcmVzdWx0IG9mIGhpcyBhcHBhcmVudCBkcnVnIGRlYWxpbmcgYWN0aXZpdGllcy4iClRoZSBkZWFkIG1hbidzIG1vdGhlciwgU2hlaWxhIEZlZ2FuLCBzYWlkIGhlciBzb24gaGFkIG5ldmVyIGV4cHJlc3NlZCB3b3JyaWVzIHRvIGhlciBhYm91dCBoaXMgcGVyc29uYWwgc2FmZXR5LgoiSGUgcmVhc3N1cmVkIG1lIGV2ZXJ5dGhpbmcgd2FzIGFsbCByaWdodCwiIHNoZSBzYWlkLgpTaGUgc2FpZCBzaGUgaGFkIHNlZW4gaGVyIHNvbiBhIGZldyBob3VycyBiZWZvcmUgaGUgd2FzIHNob3QgZGVhZCBhbmQgaGUgaGFkIGJlZW4gaW4gImdvb2QgZm9ybS4iCg==
[]
TXVyZGVyIGNoYXJnZSBvdmVyIHB1YiBib2R5IGZpbmQKQSA0MS15ZWFyLW9sZCBtYW4gaGFzIGJlZW4gY2hhcmdlZCB3aXRoIG11cmRlciBhZnRlciB0aGUgZGVhdGggb2YgYSB3b21hbiB3aG9zZSBib2R5IHdhcyBmb3VuZCBpbiBhIEhhbXBzaGlyZSBwdWIuCkRhdmlkIEtpcnNjaCwgb2YgV2VzdGVybiBSb2FkLCBBbGRlcnNob3QsIGhhcyBiZWVuIGNoYXJnZWQgd2l0aCB0aGUgbXVyZGVyIG9mIEp1bGllIEJ1dGxlciwgNDksIGFsc28gb2YgV2VzdGVybiBSb2FkLCBBbGRlcnNob3QuCk1zIEJ1dGxlcidzIGJvZHkgd2FzIGZvdW5kIGluIHRoZSBJbXBlcmlhbCBTdGFuZGFyZCBwdWIgb24gV2VkbmVzZGF5LgpBIHBvc3QtbW9ydGVtIGV4YW1pbmF0aW9uIHJldmVhbGVkIHNoZSBkaWVkIGZyb20gcHJlc3N1cmUgdG8gdGhlIG5lY2suCk1yIEtpcnNjaCB3YXMgZHVlIHRvIGFwcGVhciBiZWZvcmUgQWxkZXJzaG90IG1hZ2lzdHJhdGVzIG9uIEZyaWRheS4K
[]
TWNDYW5uIHN1c3BlY3QgcGxlYSB0byBiZSBjbGVhcmVkCk1yIE11cmF0IHRvbGQgQkJDIE5ld3M6ICJJdCdzIGJlZW4gZml2ZSBtb250aHMsIG15IHNhdmluZ3MgaGF2ZSBnb25lLCBtdW0ncyBkb2luZyB3aGF0IHNoZSBjYW4sIGFuZCBpdCdzIGp1c3QgdmVyeSwgdmVyeSBkaWZmaWN1bHQuIgpIaXMgcmVsYXRpdmUsIFNhbGx5IEV2ZWxlaWdoLCBhZGRlZDogIlRoZXJlJ3Mgbm8gZXZpZGVuY2UgYWdhaW5zdCBoaW0sIGhlIGhhc24ndCBzZWVuIGhpcyBkYXVnaHRlciBmb3Igb3ZlciBmaXZlIG1vbnRocywgaGUgaGFzIG5vIGZpbmFuY2VzIG5vdyAtIGFsbCBoaXMgc2F2aW5ncyBoYXZlIGdvbmUgLSBhbmQgaGUgbmVlZHMgdG8gcmVidWlsZCBoaXMgbGlmZS4KSGlzIGxpZmUgaXMgb24gaG9sZC4KTXIgTXVyYXQncyBmYW1pbHkgYXJlIGhvcGVmdWwgdGhlcmUgd2lsbCBiZSBhIHJlYXNzZXNzbWVudCBvZiBoaXMgc3RhdHVzIGZvbGxvd2luZyB0aGUgYXBwb2ludG1lbnQgb2YgYSBuZXcgaGVhZCBvZiB0aGUgaW5xdWlyeSBpbiBQb3J0dWdhbC4KUGF1bG8gUmViZWxvLCB0aGUgZGVwdXR5IG5hdGlvbmFsIGRpcmVjdG9yIG9mIFBvcnR1Z3Vlc2UgcG9saWNlLCByZXBsYWNlcyBHb25jYWxvIEFtYXJhbCwgYXBwYXJlbnRseSByZW1vdmVkIGZvciBjcml0aWNpc2luZyBVSyBwb2xpY2UuCkFyZ3VpZG8gc3RhdHVzIG1lYW5zIHRoZSBwb2xpY2UgaGF2ZSBtb3JlIHBvd2VycyBidXQgaXQgYWxzbyBnaXZlcyBtb3JlIHJpZ2h0cyB0byB0aGUgc3VzcGVjdC4K
[(TWNDYW5uIHN1c3BlY3QgcGxlYSB0byBiZSBjbGVhcmVkCk1yIE11cmF0IHRvbGQgQkJDIE5ld3M6ICJJdCdzIGJlZW4gZml2ZSBtb250aHMsIG15IHNhdmluZ3MgaGF2ZSBnb25lLCBtdW0ncyBkb2luZyB3aGF0IHNoZSBjYW4sIGFuZCBpdCdzIGp1c3QgdmVyeSwgdmVyeSBkaWZmaWN1bHQuIgpIaXMgcmVsYXRpdmUsIFNhbGx5IEV2ZWxlaWdoLCBhZGRlZDogIlRoZXJlJ3Mgbm8gZXZpZGVuY2UgYWdhaW5zdCBoaW0sIGhlIGhhc24ndCBzZWVuIGhpcyBkYXVnaHRlciBmb3Igb3ZlciBmaXZlIG1vbnRocywgaGUgaGFzIG5vIGZpbmFuY2VzIG5vdyAtIGFsbCBoaXMgc2F2aW5ncyBoYXZlIGdvbmUgLSBhbmQgaGUgbmVlZHMgdG8gcmVidWlsZCBoaXMgbGlmZS4KSGlzIGxpZmUgaXMgb24gaG9sZC4KTXIgTXVyYXQncyBmYW1pbHkgYXJlIGhvcGVmdWwgdGhlcmUgd2lsbCBiZSBhIHJlYXNzZXNzbWVudCBvZiBoaXMgc3RhdHVzIGZvbGxvd2luZyB0aGUgYXBwb2ludG1lbnQgb2YgYSBuZXcgaGVhZCBvZiB0aGUgaW5xdWlyeSBpbiBQb3J0dWdhbC4KUGF1bG8gUmViZWxvLCB0aGUgZGVwdXR5IG5hdGlvbmFsIGRpcmVjdG9yIG9mIFBvcnR1Z3Vlc2UgcG9saWNlLCByZXBsYWNlcyBHb25jYWxvIEFtYXJhbCwgYXBwYXJlbnRseSByZW1vdmVkIGZvciBjcml0aWNpc2luZyBVSyBwb2xpY2UuCkFyZ3VpZG8gc3RhdHVzIG1lYW5zIHRoZSBwb2xpY2UgaGF2ZSBtb3JlIHBvd2VycyBidXQgaXQgYWxzbyBnaXZlcyBtb3JlIHJpZ2h0cyB0byB0aGUgc3VzcGVjdC4K, 'PRODUCT')]
TmV3IHNjdWxwdHVyZSBmb3IgdmFjYW50IHBsaW50aApUaGUgc2N1bHB0dXJlIHdpbGwgcmVtYWluIGluIHBsYWNlIGZvciAxOCBtb250aHMuClRoZSBzby1jYWxsZWQgZm91cnRoIHBsaW50aCB3YXMgaW50ZW5kZWQgZm9yIGEgS2luZyBXaWxsaWFtIElWIHN0YXR1ZSwgYnV0IGEgbGFjayBvZiBmdW5kcyBtZWFudCBpdCByZW1haW5lZCBlbXB0eS4KRXhwZXJ0cyBnYXZlIHVwIHRyeWluZyB0byBmaW5kIGEgcGVybWFuZW50IGZpeHR1cmUgZm9yIGl0IGluIHRoZSBlYXJseSAxOTkwcywgYmVjYXVzZSBuby1vbmUgY291bGQgYWdyZWUgb24gd2hhdCB3YXMgYXBwcm9wcmlhdGUuCkluIDIwMDMsIExvbmRvbiBNYXlvciBLZW4gTGl2aW5nc3RvbmUgYmFja2VkIHByb3Bvc2FscyBmb3IgdGhlIHBsaW50aCB0byBiZSB1c2VkIGFzIGFuIGV2ZXItY2hhbmdpbmcgZGlzcGxheSBvZiBhcnR3b3Jrcy4K
[]
UmVzZXJ2aXN0IGtpbGxlZCBpbiBiYXNlIGFjY2lkZW50ClRoZSBhY2NpZGVudCBoYXBwZW5lZCBhdCB0aGUgZW50cmFuY2Ugb2YgS29oaW1hIENhbXAgaW4gSGFsdGVybiwgbmVhciBEdXNzZWxkb3JmLgpTQUMgU291dGFyLCB3aG9zZSBmYXRoZXIgYW5kIGJyb3RoZXIgc2VydmVkIGluIHRoZSBSb3lhbCBBaXIgRm9yY2UsIGVhcm5lZCB0d28gY29tbWVuZGF0aW9ucyB3aGlsZSB3b3JraW5nIGFzIGEgY2l2aWxpYW4gd2l0aCB0aGUgUkFGIGluIEdlcm1hbnkuCkNvbGxlYWd1ZSBGbGlnaHQgTGlldXRlbmFudCBKb2huIENhcm9sYW4tQ3VsbGlvbiBzYWlkOiAiU3VlJ3Mgc21pbGUsIHJhZGlhbmNlIGFuZCBraW5kbmVzcyB0b3VjaGVkIGFsbCB3aG9tIHNoZSBtZXQgYW5kIGtuZXcsIGhlciBzcGlyaXQgYW4gZXhhbXBsZSB0byBvdGhlcnMuCkhlciBsb3NzIGxlYXZlcyBhIHZvaWQgaW4gYWxsIG91ciBsaXZlcy4K
[(UmVzZXJ2aXN0IGtpbGxlZCBpbiBiYXNlIGFjY2lkZW50ClRoZSBhY2NpZGVudCBoYXBwZW5lZCBhdCB0aGUgZW50cmFuY2Ugb2YgS29oaW1hIENhbXAgaW4gSGFsdGVybiwgbmVhciBEdXNzZWxkb3JmLgpTQUMgU291dGFyLCB3aG9zZSBmYXRoZXIgYW5kIGJyb3RoZXIgc2VydmVkIGluIHRoZSBSb3lhbCBBaXIgRm9yY2UsIGVhcm5lZCB0d28gY29tbWVuZGF0aW9ucyB3aGlsZSB3b3JraW5nIGFzIGEgY2l2aWxpYW4gd2l0aCB0aGUgUkFGIGluIEdlcm1hbnkuCkNvbGxlYWd1ZSBGbGlnaHQgTGlldXRlbmFudCBKb2huIENhcm9sYW4tQ3VsbGlvbiBzYWlkOiAiU3VlJ3Mgc21pbGUsIHJhZGlhbmNlIGFuZCBraW5kbmVzcyB0b3VjaGVkIGFsbCB3aG9tIHNoZSBtZXQgYW5kIGtuZXcsIGhlciBzcGlyaXQgYW4gZXhhbXBsZSB0byBvdGhlcnMuCkhlciBsb3NzIGxlYXZlcyBhIHZvaWQgaW4gYWxsIG91ciBsaXZlcy4K, 'PERSON')]
RXRoaW9waWEgaG9zdHMgU29tYWxpIHJpZnQgdGFsa3MKVGhlIEJCQydzIEVsaXphYmV0aCBCbHVudCBpbiB0aGUgRXRoaW9waWFuIGNhcGl0YWwgQWRkaXMgQWJhYmEgc2F5cyB0aGF0IEV0aGlvcGlhJ3MgaW50ZXJ2ZW50aW9uIGluIHN1cHBvcnQgb2YgU29tYWxpYSdzIHRyYW5zaXRpb25hbCBmZWRlcmFsIGdvdmVybm1lbnQgaGFzIGNvc3QgaXQgbW9uZXkgYW5kIHRoZSBsaXZlcyBvZiBzb21lIG9mIGl0cyBzb2xkaWVycy4KQnV0LCBzaGUgYWRkcywgaXQgaGFzIGFsc28gY29zdCBpdCB0aGUgZ29vZHdpbGwgb2Ygc29tZSBvZiBpdHMgb3duIFNvbWFsaS1zcGVha2luZyBjaXRpemVucyBpbiB0aGUgc291dGgtZWFzdCBvZiB0aGUgY291bnRyeSwgd2hlcmUgdGhlIHNpZ2h0IG9mIEV0aGlvcGlhbiB0cm9vcHMgZmlnaHRpbmcgZmVsbG93IFNvbWFsaXMgaGFzIHN0aXJyZWQgdXAgb2xkIGFuaW1vc2l0aWVzIGFuZCBhZGRlZCBmdWVsIHRvIGEgbG9uZy1zbW91bGRlcmluZyByZWJlbGxpb24uClNoZSBzYXlzIHRoZSB3aG9sZSBjYXJlZnVsbHkgcGllY2VkLXRvZ2V0aGVyIHN0cnVjdHVyZSBpbiBTb21hbGlhIGlzIHRlZXRlcmluZywgbm90IGJlY2F1c2Ugb2YgSXNsYW1pc3QgYXR0YWNrcyBidXQgYmVjYXVzZSBvZiBhIHF1YXJyZWwgYmV0d2VlbiB0aGUgdHdvIGxlYWRpbmcgcGxheWVycyBNciBHaGVkaSBhbmQgUHJlc2lkZW50IEFiZHVsbGFoaSBZdXN1Zi4KV2l0aCBlYWNoIG9mIHRoZW0gZ29pbmcgYXJvdW5kIHByb3RlY3RlZCBieSBtaWxpdGlhIGZyb20gdGhlaXIgb3duIGNsYW5zLCB0aGUgcXVhcnJlbCBjb3VsZCBlYXNpbHkgc3BpbGwgb3ZlciBpbnRvIG9wZW4gdmlvbGVuY2UuCkV0aGlvcGlhIGZpcnN0IHNlbnQgaXRzIG1pbmlzdGVyIG9mIHRvdXJpc20gdG8gU29tYWxpYSB0byB1cmdlIHRoZW0gdG8gYWdyZWUgLSBub3QgYXQgZmlyc3Qgc2lnaHQgYW4gb2J2aW91cyBjaG9pY2UgYnV0IGhlIGlzIHRoZSBtb3N0IHNlbmlvciBTb21hbGkgc3BlYWtlciBpbiB0aGUgRXRoaW9waWFuIGdvdmVybm1lbnQuClRoZW4gb24gV2VkbmVzZGF5IGl0IHN1bW1vbmVkIE1yIEdoZWRpIHRvIEFkZGlzIEFiYWJhLgpIZSB3ZW50IHZvd2luZyB0aGF0IGhlIGludGVuZGVkIHRvIHJlbWFpbiBhcyBwcmltZSBtaW5pc3RlciBidXQgd2l0aCBydW1vdXJzIHN3aXJsaW5nIHJvdW5kIFNvbWFsaWEgdGhhdCBoZSBtaWdodCBub3QgcmV0dXJuLgo=
[]
QmlyZCBsYW5kcyBjb2xsaWUgaW4gZGVlcCB3YXRlcgpBIGRvZyBoYWQgdG8gYmUgcmVzY3VlZCBmcm9tIGEgU3Vzc2V4IGhhcmJvdXIgYWZ0ZXIgaXQgY2hhc2VkIHNlYWd1bGxzIGludG8gYSBmYXN0IGZsb3dpbmcgcml2ZXIuCkFuIFJOTEkgbGlmZWJvYXQgd2FzIGxhdW5jaGVkIGFmdGVyIHRoZSBjb2xsaWUganVtcGVkIGF0IGJpcmRzIG9uIFJ5ZSBIYXJib3VyIHdhbGwgYW5kIGVuZGVkIHVwIGluIHRoZSByaXZlciBSb3RoZXIgYXQgMTE1MCBCU1Qgb24gVGh1cnNkYXkuClRoZSBzdHJhbmRlZCBkb2csIHdoaWNoIGhhZCBiZWNvbWUgZGlzdHJlc3NlZCBieSB0aGUgZmFzdCBmbG93aW5nIGZsb29kIHRpZGUsIHdhcyBsaWZ0ZWQgb3V0IG9mIHRoZSB3YXRlciBieSB0d28gY3JldyBtZW1iZXJzLgpSaWNoYXJkIFRvbGxldHQsIG9mIFJ5ZSBIYXJib3VyIFJOTEksIHNhaWQgdGhleSByZXNjdWVkIHNldmVyYWwgZG9ncyBhIHllYXIuCg==
[]
TXIgTmVpbCBhcHBlYXJlZCBpbiBjb3VydCB1bnNoYXZlbiwgd2VhcmluZyBzdW5nbGFzc2VzLCBhIGNhcCBhbmQgYSByZWQtc3RyaXBlZCBULXNoaXJ0LgpIZSBoYXMgYmVlbiBjaGFyZ2VkIHdpdGggc2V4dWFsIGFidXNlIG9mIGEgY2hpbGQgdW5kZXIgMTUgYW5kIGlsbGVnYWwgZGV0ZW50aW9uLgpIZSBmYWNlcyB1cCB0byAyMCB5ZWFycyBpbiBqYWlsIGlmIGNvbnZpY3RlZC4KSW50ZXJwb2wgc3BhcmtlZCBhIHdvcmxkd2lkZSBtYW5odW50IHdoZW4gaXQgbGF1bmNoZWQgaXRzIGZpcnN0IGdsb2JhbCBhcHBlYWwgdG8gdGhlIHB1YmxpYyBsYXN0IHdlZWsgZm9yIGluZm9ybWF0aW9uIG9uIHRoZSBzdXNwZWN0ZWQgcGFlZG9waGlsZS4KVGhlIFRoYWkgY291cnRzIGlzc3VlZCBhbiBhcnJlc3Qgd2FycmFudCBvbiBUaHVyc2RheSBhZnRlciBhIDE3LXllYXItb2xkIFRoYWkgeW91dGggdG9sZCB0aGUgYXV0aG9yaXRpZXMgdGhlIHN1c3BlY3QgaGFkIHNleHVhbGx5IG1vbGVzdGVkIGhpbSBzZXZlcmFsIHllYXJzIGFnby4KTXIgTmVpbCB3YXMgYXJyZXN0ZWQgb24gRnJpZGF5IG1vcm5pbmcgaW4gdGhlIGNpdHkgb2YgTmFraG9uIFJhdGNoYXNpbWEsIDI1MCBrbSAoMTUwIG1pbGVzKSBub3J0aC1lYXN0IG9mIHRoZSBjYXBpdGFsLCBCYW5na29rLgpQb2xpY2UgY2hpZWZzIHNhaWQgaGUgd2FzIHN1c3BlY3RlZCBvZiBhYnVzaW5nIGF0IGxlYXN0IDEyIHlvdW5nc3RlcnMgLSBhdCBsZWFzdCBvbmUgc2FpZCB0byBiZSB1bmRlciAxMCB5ZWFycyBvbGQuClRoZSBhcnJlc3QgZm9sbG93cyBhIHRocmVlLXllYXIgZWZmb3J0IHRvIGlkZW50aWZ5IGEgbWFuIHNlZW4gaW4gbW9yZSB0aGFuIDIwMCBvbmxpbmUgaW1hZ2VzIG9mIGFsbGVnZWQgc2V4dWFsIGFidXNlIGludm9sdmluZyB5b3VuZyBib3lzLgpUaGUgbWFuJ3MgZmFjZSBoYWQgYmVlbiBkaWdpdGFsbHkgc2NyYW1ibGVkLCBidXQgSW50ZXJwb2wgdXNlZCBzb2Z0d2FyZSB0byBjcmVhdGUgYSB1c2FibGUgaW1hZ2Ugb2YgdGhlIHN1c3BlY3QuCk9uIDExIE9jdG9iZXIsIGZvb3RhZ2UgZnJvbSBhIHNlY3VyaXR5IGNhbWVyYSBhdCBCYW5na29rIGFpcnBvcnQgcmVjb3JkZWQgTXIgTmVpbCdzIGVudHJ5IGludG8gVGhhaWxhbmQgZnJvbSBTb3V0aCBLb3JlYSwgd2hlcmUgaGUgaGFkIGJlZW4gd29ya2luZyBhcyBhbiBFbmdsaXNoIHRlYWNoZXIuCkFmdGVyIGh1bmRyZWRzIG9mIHJlc3BvbnNlcyB0byBpdHMgYXBwZWFsIGZvciBoZWxwLCBJbnRlcnBvbCBuYW1lZCBoaW0gYXMgYSBzdXNwZWN0IGVhcmxpZXIgdGhpcyB3ZWVrLgpPZmZpY2VycyBub3cgYmVsaWV2ZSB0aGUgQ2FuYWRpYW4gbWlnaHQgaGF2ZSBhYnVzZWQgYm95cyBpbiBUaGFpbGFuZCBhcyB3ZWxsIGFzIGluIFZpZXRuYW0gYW5kIENhbWJvZGlhIC0gYW5kIGhlIGNvdWxkIGZhY2UgY2hhcmdlcyBpbiBhbnkgb2YgdGhvc2UgY291bnRyaWVzLgpIZSBjb3VsZCBhbHNvIGJlIGNoYXJnZWQgaW4gQ2FuYWRhLCB3aGljaCBoYXMgbGF3cyBhbGxvd2luZyBmb3IgdGhlIHByb3NlY3V0aW9uIG9mIGl0cyBuYXRpb25hbHMgZm9yIGNoaWxkLXNleCBjcmltZXMgY29tbWl0dGVkIGFicm9hZC4KVGhhaSBwb2xpY2UgaGF2ZSBhcHBlYWxlZCBmb3IgbW9yZSB2aWN0aW1zIHRvIGNvbWUgZm9yd2FyZCBhbmQgaW5kaWNhdGVkIGhlIHdvdWxkIGJlIGNoYXJnZWQgaW4gVGhhaWxhbmQsIGJ1dCB0aGV5IGRpZCBub3QgcnVsZSBvdXQgdGhlIHBvc3NpYmlsaXR5IG9mIGV4dHJhZGl0aW9uLgpNciBOZWlsLCBmcm9tIEJyaXRpc2ggQ29sdW1iaWEsIGhhcyBiZWVuIHRlYWNoaW5nIGF0IHNjaG9vbHMgaW4gVGhhaWxhbmQsIFNvdXRoIEtvcmVhIGFuZCBWaWV0bmFtIHNpbmNlIDIwMDAuCg==
[]
UHVycGxlIFJhaW4gaXMgJ2Jlc3Qgc291bmR0cmFjaycKVGhlIHJlZ2dhZSBzb3VuZHRyYWNrIHRvIDE5NzIgbW92aWUgVGhlIEhhcmRlciBUaGV5IENvbWUsIHN0YXJyaW5nIEppbW15IENsaWZmLCB3YXMgdGhpcmQsIGFoZWFkIG9mIFB1bHAgRmljdGlvbiBhbmQgVGhlIEdyYWR1YXRlLgpUcmFpbnNwb3R0aW5nLCB0aGUgMTk5NiBhZGFwdGF0aW9uIG9mIElydmluZSBXZWxzaCdzIG5vdmVsLCB3YXMgc2V2ZW50aC4KU2F0dXJkYXkgTmlnaHQgRmV2ZXIgbWFkZSBlaWdodGggcGxhY2UsIHdpdGggdGhlIG1hZ2F6aW5lIGNhbGxpbmcgaXRzIHNvdW5kdHJhY2sgInJlcXVpcmVkIGxpc3RlbmluZyBmb3IgYW55b25lIGxvb2tpbmcgdG8gaGVhdCB1cCB0aGUgZGFuY2VmbG9vci4iClRoZSB3aGl0ZSBzdWl0PwpOb3Qgc28gbXVjaCwiIHRoZXkgYWRkZWQsIHJlZmVycmluZyB0byB0aGUgb3V0Zml0IHdvcm4gYnkgc3RhciBKb2huIFRyYXZvbHRhLgpTdXBlcmZseSwgQW1lcmljYW4gR3JhZmZpdGkgYW5kIFRoZSBCaWcgQ2hpbGwgYWxzbyBtYWRlIHRoZSB0b3AgMTAuClRoZSBtYWdhemluZSBpcyB0byBsYXVuY2ggYWxvbmdzaWRlIGEgVVMgVFYgc3BlY2lhbCBhYm91dCB0aGUgc3RhcnMsIGRpcmVjdG9ycyBhbmQgbXVzaWNpYW5zIGJlaGluZCB0aGUgbW92aWVzIGluIERlY2VtYmVyLgo=
[(UHVycGxlIFJhaW4gaXMgJ2Jlc3Qgc291bmR0cmFjaycKVGhlIHJlZ2dhZSBzb3VuZHRyYWNrIHRvIDE5NzIgbW92aWUgVGhlIEhhcmRlciBUaGV5IENvbWUsIHN0YXJyaW5nIEppbW15IENsaWZmLCB3YXMgdGhpcmQsIGFoZWFkIG9mIFB1bHAgRmljdGlvbiBhbmQgVGhlIEdyYWR1YXRlLgpUcmFpbnNwb3R0aW5nLCB0aGUgMTk5NiBhZGFwdGF0aW9uIG9mIElydmluZSBXZWxzaCdzIG5vdmVsLCB3YXMgc2V2ZW50aC4KU2F0dXJkYXkgTmlnaHQgRmV2ZXIgbWFkZSBlaWdodGggcGxhY2UsIHdpdGggdGhlIG1hZ2F6aW5lIGNhbGxpbmcgaXRzIHNvdW5kdHJhY2sgInJlcXVpcmVkIGxpc3RlbmluZyBmb3IgYW55b25lIGxvb2tpbmcgdG8gaGVhdCB1cCB0aGUgZGFuY2VmbG9vci4iClRoZSB3aGl0ZSBzdWl0PwpOb3Qgc28gbXVjaCwiIHRoZXkgYWRkZWQsIHJlZmVycmluZyB0byB0aGUgb3V0Zml0IHdvcm4gYnkgc3RhciBKb2huIFRyYXZvbHRhLgpTdXBlcmZseSwgQW1lcmljYW4gR3JhZmZpdGkgYW5kIFRoZSBCaWcgQ2hpbGwgYWxzbyBtYWRlIHRoZSB0b3AgMTAuClRoZSBtYWdhemluZSBpcyB0byBsYXVuY2ggYWxvbmdzaWRlIGEgVVMgVFYgc3BlY2lhbCBhYm91dCB0aGUgc3RhcnMsIGRpcmVjdG9ycyBhbmQgbXVzaWNpYW5zIGJlaGluZCB0aGUgbW92aWVzIGluIERlY2VtYmVyLgo=, 'GPE')]
TWlzc2luZyB0ZWVuYWdlciAnc3BvdHRlZCBpbiB2YW4nCg==
[(TWlzc2luZyB0ZWVuYWdlciAnc3BvdHRlZCBpbiB2YW4nCg==, 'ORG')]
S2VsbG9nZyB3YXJucyBvdmVyIGZ1dHVyZSBwcm9maXRzCkNlcmVhbHMgdG8gcGFzdHJpZXMKVGhlIFVTIGZpcm0gbWFkZSBhIG5ldCBwcm9maXQgb2YgJDMwNW0gaW4gdGhlIHRoaXJkIHF1YXJ0ZXIsIGNvbXBhcmVkIHdpdGggJDI4MW0gYSB5ZWFyIGVhcmxpZXIuCkl0cyBxdWFydGVybHkgc2FsZXMgcm9zZSA2LjQlLCBhZ2FpbiBjb21wYXJlZCB3aXRoIHRoZSBzYW1lIHBlcmlvZCBsYXN0IHllYXIsIHRvICQzYm4uCkZvciAyMDA4LCBLZWxsb2dnIGV4cGVjdHMgdG8gbWFrZSBhIHByb2ZpdCBvZiAkMi45MiB0byAkMi45NyBhIHNoYXJlLCBiZWxvdyBleGlzdGluZyBtYXJrZXQgZXhwZWN0YXRpb25zIG9mICQzLjA0LgpJbiBhZGRpdGlvbiB0byBmYW1vdXMgY2VyZWFsIGJyYW5kcyBzdWNoIGFzIENvcm4gRmxha2VzIGFuZCBTcGVjaWFsIEssIEtlbGxvZ2cgbWFrZXMgUG9wLVRhcnRzIHBhc3RyaWVzLCBFZ2dvIGZyb3plbiB3YWZmbGVzLCBLZWVibGVyIGNvb2tpZXMsIGFuZCBOdXRyaS1HcmFpbiBjZXJlYWwgYmFycy4K
[]
V29tYW4gZHJhZ2dlZCBmcm9tIGJ1cm5pbmcgaG91c2UKRmlyZWZpZ2h0ZXIgTWFyayBSb3l0aG9ybmUgd2FzIGF0IGhpcyBob21lIGluIE9yY2hhcmQgQ3JvZnQgd2hlbiBoaXMgbmVpZ2hib3VyIHRvbGQgaGltIHRoYXQgdGhlIGhvdXNlIHR3byBkb29ycyB1cCBmcm9tIGhpbSB3YXMgb24gZmlyZS4KUGFzc2VkIG91dApNciBSb3l0aG9ybmUgc2FpZDogIkkgY291bGQgc2VlIHRoZSBkb2cgd2FzIGluc2lkZSBhbmQgSSBjYWxsZWQgaGltIG91dCwgYnV0IGhlIHdvdWxkbid0IG1vdmUuClRoYXQgaXMgd2hhdCBtYWRlIG1lIHRoaW5rIHRoYXQgdGhlcmUgd2FzIHNvbWVvbmUgaW4gdGhlcmUgYW5kIHRoZSBkb2cgd2FzIGd1YXJkaW5nIHRoZW0uCkkganVzdCB3ZW50IGludG8gZmlyZWZpZ2h0ZXIgbW9kZSBhbmQgSSB0b29rIGEgZGVlcCBicmVhdGggYW5kIHJhbiBpbiwgYnV0IGl0IHdhc24ndCB1bnRpbCBJIHdhcyByaWdodCBpbnRvIHRoZSByb29tIHRoYXQgSSBjb3VsZCBzZWUgdGhlIHdvbWFuIHdobyBsaXZlcyB0aGVyZSB3YXMgcGFzc2VkIG91dCBvbiB0aGUgc29mYS4KSSBqdXN0IGdyYWJiZWQgaGVyIGFuZCBkcmFnZ2VkIGhlciBvdXRzaWRlIHRvIHRoZSBmcmVzaCBhaXIgYW5kIHNoZSB3YXMgdGFrZW4gYXdheSBieSBhbWJ1bGFuY2Ugc3VmZmVyaW5nIHRoZSBlZmZlY3RzIG9mIHNtb2tlIGluaGFsYXRpb24uCkVzc2V4IEZpcmUgU2VydmljZSBlc3RpbWF0ZWQgdGhlIGZpcmUgaGFkIHN0YXJ0ZWQgMTUgbWludXRlcyBiZWZvcmUgdGhlIHJlc2N1ZSBiZWdhbiwgYW5kIHNhaWQgdGhlIGZpcmUgaGlnaGxpZ2h0ZWQgdGhlIGltcG9ydGFuY2Ugb2Ygc21va2UgZGV0ZWN0b3JzLgpNciBSb3l0aG9ybmUgYWRkZWQ6ICJJIHRoaW5rIHRoYXQgaWYgSSBoYWRuJ3QgZ290IGhlciBvdXQganVzdCB3aGVuIEkgZGlkIHRoaXMgZmlyZSBjb3VsZCBoYXZlIGhhZCBmYXIgbW9yZSB0cmFnaWMgY29uc2VxdWVuY2VzLiIK
[(V29tYW4gZHJhZ2dlZCBmcm9tIGJ1cm5pbmcgaG91c2UKRmlyZWZpZ2h0ZXIgTWFyayBSb3l0aG9ybmUgd2FzIGF0IGhpcyBob21lIGluIE9yY2hhcmQgQ3JvZnQgd2hlbiBoaXMgbmVpZ2hib3VyIHRvbGQgaGltIHRoYXQgdGhlIGhvdXNlIHR3byBkb29ycyB1cCBmcm9tIGhpbSB3YXMgb24gZmlyZS4KUGFzc2VkIG91dApNciBSb3l0aG9ybmUgc2FpZDogIkkgY291bGQgc2VlIHRoZSBkb2cgd2FzIGluc2lkZSBhbmQgSSBjYWxsZWQgaGltIG91dCwgYnV0IGhlIHdvdWxkbid0IG1vdmUuClRoYXQgaXMgd2hhdCBtYWRlIG1lIHRoaW5rIHRoYXQgdGhlcmUgd2FzIHNvbWVvbmUgaW4gdGhlcmUgYW5kIHRoZSBkb2cgd2FzIGd1YXJkaW5nIHRoZW0uCkkganVzdCB3ZW50IGludG8gZmlyZWZpZ2h0ZXIgbW9kZSBhbmQgSSB0b29rIGEgZGVlcCBicmVhdGggYW5kIHJhbiBpbiwgYnV0IGl0IHdhc24ndCB1bnRpbCBJIHdhcyByaWdodCBpbnRvIHRoZSByb29tIHRoYXQgSSBjb3VsZCBzZWUgdGhlIHdvbWFuIHdobyBsaXZlcyB0aGVyZSB3YXMgcGFzc2VkIG91dCBvbiB0aGUgc29mYS4KSSBqdXN0IGdyYWJiZWQgaGVyIGFuZCBkcmFnZ2VkIGhlciBvdXRzaWRlIHRvIHRoZSBmcmVzaCBhaXIgYW5kIHNoZSB3YXMgdGFrZW4gYXdheSBieSBhbWJ1bGFuY2Ugc3VmZmVyaW5nIHRoZSBlZmZlY3RzIG9mIHNtb2tlIGluaGFsYXRpb24uCkVzc2V4IEZpcmUgU2VydmljZSBlc3RpbWF0ZWQgdGhlIGZpcmUgaGFkIHN0YXJ0ZWQgMTUgbWludXRlcyBiZWZvcmUgdGhlIHJlc2N1ZSBiZWdhbiwgYW5kIHNhaWQgdGhlIGZpcmUgaGlnaGxpZ2h0ZWQgdGhlIGltcG9ydGFuY2Ugb2Ygc21va2UgZGV0ZWN0b3JzLgpNciBSb3l0aG9ybmUgYWRkZWQ6ICJJIHRoaW5rIHRoYXQgaWYgSSBoYWRuJ3QgZ290IGhlciBvdXQganVzdCB3aGVuIEkgZGlkIHRoaXMgZmlyZSBjb3VsZCBoYXZlIGhhZCBmYXIgbW9yZSB0cmFnaWMgY29uc2VxdWVuY2VzLiIK, 'WORK_OF_ART')]
V2hpdGUgY29uZmlybXMgU291dGggQWZyaWNhIGV4aXQKU0EgUnVnYnkgaGF2ZSBhbHJlYWR5IGRyYXduIHVwIGEgc2hvcnRsaXN0IG9mIGZvdXIgcG9zc2libGUgcmVwbGFjZW1lbnRzLgpCdXQgV2hpdGUsIHdob3NlIGNvbnRyYWN0IGV4cGlyZXMgb24gMzEgRGVjZW1iZXIsIHNhaWQgaGUgd2FzIGFuZ3J5IGF0IHRoZSB3YXkgdGhlIGdvdmVybmluZyBib2R5IGhhZCBhY3RlZC4KIkkgYW0gZXh0cmVtZWx5IGRpc2FwcG9pbnRlZCBhdCB0aGUgbWFubmVyIGluIHdoaWNoIHRoZSBtZXNzYWdlIG9mIG15IHN1cHBvc2VkIHVuYXZhaWxhYmlsaXR5IHdhcyBjb252ZXllZCB0byB0aGUgcHVibGljIG9uIE1vbmRheSBpbiBhIFNvdXRoIEFmcmljYW4gUnVnYnkgVW5pb24gbWVkaWEgcmVsZWFzZSB0aGF0IHN0YXRlZCBJIHdvdWxkIG5vdCBiZSBjb25zaWRlcmVkIGZvciB0aGUgam9iIG9uIHRoZSBiYXNpcyB0aGF0IEkgZGlkIG5vdCBhcHBseSwiIGhlIHNhaWQuCk15IGNvbnRyYWN0IGFzIFNwcmluZ2JvayBjb2FjaCBpcyBjbGVhciB0aGF0IEkgd2FzIG5vdCBvYmxpZ2VkIHRvIGFwcGx5IGFuZCB0aGF0IGFsbCBjb25zaWRlcmF0aW9ucyB3b3VsZCBiZSBkaXNjdXNzZWQgYXQgbXkgYW5udWFsIHJldmlldy4KSSBkaWQgYXNrIGZvciB0aW1lIHRvIGNvbnNpZGVyIG15IG9wdGlvbnMgYXMgSSB3YXMgbWluZGZ1bCBvZiBtYWtpbmcgYSB3cm9uZyBkZWNpc2lvbiBiYXNlZCBvbiBlbW90aW9uLgpUaGlzIHRpbWUgd2FzIG5vdCBhZmZvcmRlZCBtZSBhbmQgdGhhdCBpcyBwYXJ0aWN1bGFybHkgZGlzYXBwb2ludGluZy4KSXQgd2FzIHRoZSBncmVhdGVzdCBob25vdXIgdG8gY29hY2ggdGhlIEJva3MgYW5kIG5vIG9uZSBjYW4gZXZlciB0YWtlIGF3YXkgdGhlIG1lbW9yeSBvZiB0aG9zZSBmb3VyIHllYXJzLgpXaGl0ZSdzIGZpbmFsIGdhbWVzIHdpbGwgYmUgYWdhaW5zdCBXYWxlcyBvbiAyNCBOb3ZlbWJlciBhbmQgdGhlIEJhcmJhcmlhbnMgYSB3ZWVrIGxhdGVyLgpUaGUgZm91ciBjYW5kaWRhdGVzIHRvIHJlcGxhY2UgV2hpdGUgYXMgU3ByaW5nYm9rcyBib3NzIHdpbGwgbm90IGJlIGFubm91bmNlZCB1bnRpbCB0aGV5IGhhdmUgYmVlbiBpbmZvcm1lZCB0aGV5IGhhdmUgbWFkZSB0aGUgc2hvcnRsaXN0LgpCdXQgdGhvc2UgdGhvdWdodCB0byBiZSB1bmRlciBjb25zaWRlcmF0aW9uIGFyZSBDaGVzdGVyIFdpbGxpYW1zLCBhIDE5OTUgV29ybGQgQ3VwIHdpbm5lciwgU3ByaW5nYm9rIGJhY2tzIGNvYWNoIEFsbGlzdGVyIENvZXR6ZWUgYW5kIFBpZXRlciBkZSBWaWxsaWVycywgdGhlIG5hdGlvbmFsIFVuZGVyLTIxIGFuZCBFbWVyZ2luZyBTcHJpbmdib2tzIGNvYWNoLCBhbmQgQmx1ZSBCdWxscyBib3NzIEhleW5la2UgTWV5ZXIuCldoaXRlLCBtZWFud2hpbGUsIGhhcyBleHByZXNzZWQgYW4gaW50ZXJlc3QgaW4gY29hY2hpbmcgRW5nbGFuZCwgd2hvIGFyZSBjdXJyZW50bHkgbGVkIGJ5IEJyaWFuIEFzaHRvbiwgc2hvdWxkIHRoZSBwb3NpdGlvbiBiZWNvbWUgYXZhaWxhYmxlLgpBc2h0b24ncyByb2xsaW5nIGNvbnRyYWN0IHJ1bnMgdW50aWwgdGhlIGVuZCBvZiB0aGlzIHllYXIsIGFuZCBoaXMgZnV0dXJlIHdpbGwgbm90IGJlIGRlY2lkZWQgdW50aWwgYSB0aG9yb3VnaCByZXZpZXcgb2YgRW5nbGFuZCdzIFdvcmxkIEN1cCBjYW1wYWlnbiBoYXMgYmVlbiB1bmRlcnRha2VuLgpPbiBTdW5kYXkgV2hpdGUgdG9sZCB0aGUgQkJDOiAiRW5nbGFuZCBpcyBwcm9iYWJseSBvbmUgam9iIG1vc3QgaW50ZXJuYXRpb25hbCBjb2FjaGVzIHdvdWxkbid0IG1pbmQgdGFraW5nIGJlY2F1c2UgaXQncyBhIHBvd2VyIHRoYXQgY2FuIGJlY29tZSBhIGh1Z2UgZm9yY2UuCkkgd291bGQgcmVhbGx5IGxpa2UgdG8gc3RheSBpbiBpbnRlcm5hdGlvbmFsIHJ1Z2J5LgpPbmNlIGl0J3MgaW4geW91ciBibG9vZCwgaXQncyBpbiB5b3VyIGJsb29kLgpXaGl0ZSBoYXMgYWxzbyBoZWxkIHByZWxpbWluYXJ5IHRhbGtzIHdpdGggV2FsZXMgYWJvdXQgdGhlaXIgdmFjYW50IGhlYWQgY29hY2gncyBqb2IgYWZ0ZXIgdGhlIGRlcGFydHVyZSBvZiBHYXJldGggSmVua2lucywgd2hpbGUgQXVzdHJhbGlhIGFyZSBsb29raW5nIGZvciBhIG5ldyBjb2FjaCB0byByZXBsYWNlIEpvaG4gQ29ubmVsbHkuCldoaXRlIHRvb2sgY2hhcmdlIG9mIHRoZSBCb2tzIGluIDIwMDQgYW5kIG92ZXJzYXcgYSBzdHVubmluZyB0cmFuc2Zvcm1hdGlvbiBpbiB0aGVpciBmb3J0dW5lcywgbGVhZGluZyB0aGVtIHRvIHRoZSBUcmktTmF0aW9ucyB0aXRsZSB0aGF0IHllYXIuCkhlIG5lYXJseSBsb3N0IGhpcyBqb2IgYWZ0ZXIgZGVmZWF0IGJ5IEVuZ2xhbmQgaW4gMjAwNiBidXQgdGhlaXIgcmV2aXZhbCBjdWxtaW5hdGVkIGluIHRoZSAxNS02IHdpbiBvdmVyIEVuZ2xhbmQgaW4gdGhlIFdvcmxkIEN1cCBmaW5hbCBuaW5lIGRheXMgYWdvLgpUaHJvdWdob3V0IGhpcyB0aW1lIGluIGNoYXJnZSBXaGl0ZSBoYXMgaGFkIHRvIGRlYWwgd2l0aCB0aGUgcG9saXRpY2FsIHByZXNzdXJlcyBjb25uZWN0ZWQgd2l0aCB0aGUgb24tZ29pbmcgdHJhbnNmb3JtYXRpb24gZGViYXRlLCB3aGljaCBjb25jZXJucyBob3cgdG8gZGV2ZWxvcCBhIHNpZGUgd2l0aCBtb3JlIG5vbi13aGl0ZSBwbGF5ZXJzIGluIHRoZSB0ZWFtLgpJbiBhIGNvdW50cnkgd2hlcmUgdGhlIHdoaXRlIHBvcHVsYXRpb24gbWFrZXMgdXAganVzdCB1bmRlciAxMCUgb2YgdGhlIHBvcHVsYXRpb24gdGhlIFhWIHdoaWNoIHN0YXJ0ZWQgdGhlIFdvcmxkIEN1cCBmaW5hbCBjb250YWluZWQgdHdvIG5vbi13aGl0ZSBwbGF5ZXJzLgo=
[(V2hpdGUgY29uZmlybXMgU291dGggQWZyaWNhIGV4aXQKU0EgUnVnYnkgaGF2ZSBhbHJlYWR5IGRyYXduIHVwIGEgc2hvcnRsaXN0IG9mIGZvdXIgcG9zc2libGUgcmVwbGFjZW1lbnRzLgpCdXQgV2hpdGUsIHdob3NlIGNvbnRyYWN0IGV4cGlyZXMgb24gMzEgRGVjZW1iZXIsIHNhaWQgaGUgd2FzIGFuZ3J5IGF0IHRoZSB3YXkgdGhlIGdvdmVybmluZyBib2R5IGhhZCBhY3RlZC4KIkkgYW0gZXh0cmVtZWx5IGRpc2FwcG9pbnRlZCBhdCB0aGUgbWFubmVyIGluIHdoaWNoIHRoZSBtZXNzYWdlIG9mIG15IHN1cHBvc2VkIHVuYXZhaWxhYmlsaXR5IHdhcyBjb252ZXllZCB0byB0aGUgcHVibGljIG9uIE1vbmRheSBpbiBhIFNvdXRoIEFmcmljYW4gUnVnYnkgVW5pb24gbWVkaWEgcmVsZWFzZSB0aGF0IHN0YXRlZCBJIHdvdWxkIG5vdCBiZSBjb25zaWRlcmVkIGZvciB0aGUgam9iIG9uIHRoZSBiYXNpcyB0aGF0IEkgZGlkIG5vdCBhcHBseSwiIGhlIHNhaWQuCk15IGNvbnRyYWN0IGFzIFNwcmluZ2JvayBjb2FjaCBpcyBjbGVhciB0aGF0IEkgd2FzIG5vdCBvYmxpZ2VkIHRvIGFwcGx5IGFuZCB0aGF0IGFsbCBjb25zaWRlcmF0aW9ucyB3b3VsZCBiZSBkaXNjdXNzZWQgYXQgbXkgYW5udWFsIHJldmlldy4KSSBkaWQgYXNrIGZvciB0aW1lIHRvIGNvbnNpZGVyIG15IG9wdGlvbnMgYXMgSSB3YXMgbWluZGZ1bCBvZiBtYWtpbmcgYSB3cm9uZyBkZWNpc2lvbiBiYXNlZCBvbiBlbW90aW9uLgpUaGlzIHRpbWUgd2FzIG5vdCBhZmZvcmRlZCBtZSBhbmQgdGhhdCBpcyBwYXJ0aWN1bGFybHkgZGlzYXBwb2ludGluZy4KSXQgd2FzIHRoZSBncmVhdGVzdCBob25vdXIgdG8gY29hY2ggdGhlIEJva3MgYW5kIG5vIG9uZSBjYW4gZXZlciB0YWtlIGF3YXkgdGhlIG1lbW9yeSBvZiB0aG9zZSBmb3VyIHllYXJzLgpXaGl0ZSdzIGZpbmFsIGdhbWVzIHdpbGwgYmUgYWdhaW5zdCBXYWxlcyBvbiAyNCBOb3ZlbWJlciBhbmQgdGhlIEJhcmJhcmlhbnMgYSB3ZWVrIGxhdGVyLgpUaGUgZm91ciBjYW5kaWRhdGVzIHRvIHJlcGxhY2UgV2hpdGUgYXMgU3ByaW5nYm9rcyBib3NzIHdpbGwgbm90IGJlIGFubm91bmNlZCB1bnRpbCB0aGV5IGhhdmUgYmVlbiBpbmZvcm1lZCB0aGV5IGhhdmUgbWFkZSB0aGUgc2hvcnRsaXN0LgpCdXQgdGhvc2UgdGhvdWdodCB0byBiZSB1bmRlciBjb25zaWRlcmF0aW9uIGFyZSBDaGVzdGVyIFdpbGxpYW1zLCBhIDE5OTUgV29ybGQgQ3VwIHdpbm5lciwgU3ByaW5nYm9rIGJhY2tzIGNvYWNoIEFsbGlzdGVyIENvZXR6ZWUgYW5kIFBpZXRlciBkZSBWaWxsaWVycywgdGhlIG5hdGlvbmFsIFVuZGVyLTIxIGFuZCBFbWVyZ2luZyBTcHJpbmdib2tzIGNvYWNoLCBhbmQgQmx1ZSBCdWxscyBib3NzIEhleW5la2UgTWV5ZXIuCldoaXRlLCBtZWFud2hpbGUsIGhhcyBleHByZXNzZWQgYW4gaW50ZXJlc3QgaW4gY29hY2hpbmcgRW5nbGFuZCwgd2hvIGFyZSBjdXJyZW50bHkgbGVkIGJ5IEJyaWFuIEFzaHRvbiwgc2hvdWxkIHRoZSBwb3NpdGlvbiBiZWNvbWUgYXZhaWxhYmxlLgpBc2h0b24ncyByb2xsaW5nIGNvbnRyYWN0IHJ1bnMgdW50aWwgdGhlIGVuZCBvZiB0aGlzIHllYXIsIGFuZCBoaXMgZnV0dXJlIHdpbGwgbm90IGJlIGRlY2lkZWQgdW50aWwgYSB0aG9yb3VnaCByZXZpZXcgb2YgRW5nbGFuZCdzIFdvcmxkIEN1cCBjYW1wYWlnbiBoYXMgYmVlbiB1bmRlcnRha2VuLgpPbiBTdW5kYXkgV2hpdGUgdG9sZCB0aGUgQkJDOiAiRW5nbGFuZCBpcyBwcm9iYWJseSBvbmUgam9iIG1vc3QgaW50ZXJuYXRpb25hbCBjb2FjaGVzIHdvdWxkbid0IG1pbmQgdGFraW5nIGJlY2F1c2UgaXQncyBhIHBvd2VyIHRoYXQgY2FuIGJlY29tZSBhIGh1Z2UgZm9yY2UuCkkgd291bGQgcmVhbGx5IGxpa2UgdG8gc3RheSBpbiBpbnRlcm5hdGlvbmFsIHJ1Z2J5LgpPbmNlIGl0J3MgaW4geW91ciBibG9vZCwgaXQncyBpbiB5b3VyIGJsb29kLgpXaGl0ZSBoYXMgYWxzbyBoZWxkIHByZWxpbWluYXJ5IHRhbGtzIHdpdGggV2FsZXMgYWJvdXQgdGhlaXIgdmFjYW50IGhlYWQgY29hY2gncyBqb2IgYWZ0ZXIgdGhlIGRlcGFydHVyZSBvZiBHYXJldGggSmVua2lucywgd2hpbGUgQXVzdHJhbGlhIGFyZSBsb29raW5nIGZvciBhIG5ldyBjb2FjaCB0byByZXBsYWNlIEpvaG4gQ29ubmVsbHkuCldoaXRlIHRvb2sgY2hhcmdlIG9mIHRoZSBCb2tzIGluIDIwMDQgYW5kIG92ZXJzYXcgYSBzdHVubmluZyB0cmFuc2Zvcm1hdGlvbiBpbiB0aGVpciBmb3J0dW5lcywgbGVhZGluZyB0aGVtIHRvIHRoZSBUcmktTmF0aW9ucyB0aXRsZSB0aGF0IHllYXIuCkhlIG5lYXJseSBsb3N0IGhpcyBqb2IgYWZ0ZXIgZGVmZWF0IGJ5IEVuZ2xhbmQgaW4gMjAwNiBidXQgdGhlaXIgcmV2aXZhbCBjdWxtaW5hdGVkIGluIHRoZSAxNS02IHdpbiBvdmVyIEVuZ2xhbmQgaW4gdGhlIFdvcmxkIEN1cCBmaW5hbCBuaW5lIGRheXMgYWdvLgpUaHJvdWdob3V0IGhpcyB0aW1lIGluIGNoYXJnZSBXaGl0ZSBoYXMgaGFkIHRvIGRlYWwgd2l0aCB0aGUgcG9saXRpY2FsIHByZXNzdXJlcyBjb25uZWN0ZWQgd2l0aCB0aGUgb24tZ29pbmcgdHJhbnNmb3JtYXRpb24gZGViYXRlLCB3aGljaCBjb25jZXJucyBob3cgdG8gZGV2ZWxvcCBhIHNpZGUgd2l0aCBtb3JlIG5vbi13aGl0ZSBwbGF5ZXJzIGluIHRoZSB0ZWFtLgpJbiBhIGNvdW50cnkgd2hlcmUgdGhlIHdoaXRlIHBvcHVsYXRpb24gbWFrZXMgdXAganVzdCB1bmRlciAxMCUgb2YgdGhlIHBvcHVsYXRpb24gdGhlIFhWIHdoaWNoIHN0YXJ0ZWQgdGhlIFdvcmxkIEN1cCBmaW5hbCBjb250YWluZWQgdHdvIG5vbi13aGl0ZSBwbGF5ZXJzLgo=, 'GPE')]
VGVycm9yIGlucXVpcnkgcG9saWNlIHNlYXJjaCBob21lCg==
[(VGVycm9yIGlucXVpcnkgcG9saWNlIHNlYXJjaCBob21lCg==, 'ORG')]
VGVlbmFnZXJzIHRocm93IHNwYXJrbGVycyBvbiByb2FkCg==
[]
SmFpbCBvdmVyIG5pZ2h0Y2x1YiBkcnVnIGRlYWxpbmcKSGF2ZW4gZm9yIGRydWdnaWVzCkZvbGxvd2luZyB0aGUgcmFpZCwgYSBjbG9zdXJlIG5vdGljZSB3YXMgc2VydmVkIG9uIHRoZSBwcmVtaXNlcy4KRGV0ZWN0aXZlIENoaWVmIEluc3BlY3RvciBBbmR5IFBvdHRzLCB3aG8gbGVkIHRoZSBpbnZlc3RpZ2F0aW9uLCBzYWlkIHRoZSBwbGFjZSBoYWQgYmVjb21lIGEgImhhdmVuIGZvciBkcnVnZ2llcy4iCkhlIHNhaWQ6ICJJdCdzIHRoaXMgYmVoYXZpb3VyIHdoaWNoIGNhdXNlZCBtaXNlcnkgdG8gdGhlIGxpdmVzIG9mIHJlc2lkZW50cyBpbiBhbmQgYXJvdW5kIHRoZSBjbHViIHdobyBoYWQgdG8gcHV0IHVwIHdpdGggY3JpbWUgYW5kIGRpc29yZGVyLgpUaGUgY2x1YiBibGlnaHRlZCB0aGUgY2l0eSBmb3IgZmFyIHRvbyBsb25nIGFuZCBJIHdvdWxkIGxpa2UgdG8gcHJhaXNlIGV2ZXJ5b25lIGZvciB0aGVpciBoYXJkIHdvcmsgYW5kIGNvbW1pdG1lbnQgaW4gYnJpbmdpbmcgdGhlIGlzc3VlIHRvIGEgcG9zaXRpdmUgY29uY2x1c2lvbi4K
[(SmFpbCBvdmVyIG5pZ2h0Y2x1YiBkcnVnIGRlYWxpbmcKSGF2ZW4gZm9yIGRydWdnaWVzCkZvbGxvd2luZyB0aGUgcmFpZCwgYSBjbG9zdXJlIG5vdGljZSB3YXMgc2VydmVkIG9uIHRoZSBwcmVtaXNlcy4KRGV0ZWN0aXZlIENoaWVmIEluc3BlY3RvciBBbmR5IFBvdHRzLCB3aG8gbGVkIHRoZSBpbnZlc3RpZ2F0aW9uLCBzYWlkIHRoZSBwbGFjZSBoYWQgYmVjb21lIGEgImhhdmVuIGZvciBkcnVnZ2llcy4iCkhlIHNhaWQ6ICJJdCdzIHRoaXMgYmVoYXZpb3VyIHdoaWNoIGNhdXNlZCBtaXNlcnkgdG8gdGhlIGxpdmVzIG9mIHJlc2lkZW50cyBpbiBhbmQgYXJvdW5kIHRoZSBjbHViIHdobyBoYWQgdG8gcHV0IHVwIHdpdGggY3JpbWUgYW5kIGRpc29yZGVyLgpUaGUgY2x1YiBibGlnaHRlZCB0aGUgY2l0eSBmb3IgZmFyIHRvbyBsb25nIGFuZCBJIHdvdWxkIGxpa2UgdG8gcHJhaXNlIGV2ZXJ5b25lIGZvciB0aGVpciBoYXJkIHdvcmsgYW5kIGNvbW1pdG1lbnQgaW4gYnJpbmdpbmcgdGhlIGlzc3VlIHRvIGEgcG9zaXRpdmUgY29uY2x1c2lvbi4K, 'ORG')]
UmVzY3VlcyBhbmQgZXZhY3VhdGlvbnMgaW4gZmlyZQpEeWZlZC1Qb3d5cyBQb2xpY2Ugc2FpZCB0aGV5IG9yZ2FuaXNlZCB0aGUgZXZhY3VhdGlvbiBvZiBiZXR3ZWVuIDE1IGFuZCAyMCBmYW1pbGllcyBmcm9tIGEgYmxvY2sgb2YgZmxhdHMgYW5kIGFkamFjZW50IGJ1aWxkaW5ncyBkdXJpbmcgdGhlIGVhcmx5IGhvdXJzLgpNaWQgYW5kIFdlc3QgV2FsZXMgRmlyZSBTZXJ2aWNlIHNhaWQgZXZlcnlvbmUgaGFzIGJlZW4gYWNjb3VudGVkIGZvciBidXQgdGhleSB3b3VsZCBiZSBpbiBhdHRlbmRhbmNlIGF0IHRoZSBzY2VuZSBmb3Igc29tZSBob3Vycy4KQW4gaW52ZXN0aWdhdGlvbiBoYXMgYmVndW4uCg==
[]
TW90aGVyIHRvcm4gYmV0d2VlbiBiYWJ5IGFuZCB3b3JrCkEgY2hpbGRtaW5kZXIgaGFzIGJlZW4gamFpbGVkIGZvciBzaGFraW5nIGFuIDExLW1vbnRoLW9sZCBiYWJ5IHRvIGRlYXRoLgpLZXJhbiBIZW5kZXJzb24gaGFkIGJlZW4gdHJ1c3RlZCB0byBsb29rIGFmdGVyIGxpdHRsZSBNYWV2ZSBTaGVwcGFyZCBidXQga2lsbGVkIGhlciBpbnN0ZWFkLCBSZWFkaW5nIENyb3duIENvdXJ0IGhlYXJkLgpMaWtlIG1hbnkgbmV3IG1vdGhlcnMgUnV0aCBTaGVwcGFyZCB3YXMgdG9ybiBiZXR3ZWVuIGhlciBkZXNpcmUgdG8gbG9vayBhZnRlciBoZXIgYmFieSBnaXJsIGFuZCB0aGUgZmluYW5jaWFsIHByZXNzdXJlIHRvIHJldHVybiB0byB3b3JrLgpNcnMgU2hlcHBhcmQgdG9sZCB0aGUgY291cnQgaG93IHNoZSBzcGVudCBldmVyeSB3YWtpbmcgbW9tZW50IHdpdGggaGVyIGRhdWdodGVyIHdoaWxlIG9uIG1hdGVybml0eSBsZWF2ZS4KU2hlIHdpcGVkIGF3YXkgdGVhcnMgYXMgc2hlIHJlbWVtYmVyZWQgYSBoYXBweSwgdHJvdWJsZS1mcmVlIGJhYnkuClNoZSBhbmQgaGVyIGh1c2JhbmQgTWFyaywgd2hvIHdlcmUgY2hpbGRob29kIHN3ZWV0aGVhcnRzIGJlZm9yZSBiZWluZyByZXVuaXRlZCBpbiBhZHVsdGhvb2QsIGhhZCBzdHJ1Z2dsZWQgdG8gbWFrZSBlbmRzIG1lZXQgd2l0aCB0aGUgd2FnZXMgZnJvbSBNciBTaGVwcGFyZCdzIGpvYiBhcyBhIHRvb2xtYWtlci4KSGFsZiBvZiBtZSB3YW50ZWQgdG8gc3RheSBhdCBob21lIGFuZCB0aGUgb3RoZXIgaGFsZiBvZiBtZSBrbmV3IHRoYXQgd2UgaGFkIHRvIHdvcmsgUnV0aCBTaGVwcGFyZApUaGF0IG1lYW50IHNpeCBtb250aHMgYWZ0ZXIgdGhlIGJpcnRoIE1ycyBTaGVwcGFyZCB3YXMgYmFjayBhdCB3b3JrIHBhcnQgdGltZSBhcyBhIGNyZWRpdCBjb250cm9sbGVyIGZvciBNYW5wb3dlci4KU2hlIHRvbGQgdGhlIHRyaWFsOiAiSSB3YXMgYSBiaXQgc3BsaXQgb24gaG93IEkgZmVsdCBhYm91dCBnb2luZyBiYWNrIHRvIHdvcmsuCkhhbGYgb2YgbWUgd2FudGVkIHRvIHN0YXkgYXQgaG9tZSBhbmQgdGhlIG90aGVyIGhhbGYgb2YgbWUga25ldyB0aGF0IHdlIGhhZCB0byB3b3JrIGFuZCB3ZSBkaWRuJ3Qga25vdyBpZiB3ZSBjb3VsZCBzdXJ2aXZlIG9uIG9uZSB3YWdlIHdpdGggYSBuZXcgYmFieS4KVGhlIGRlY2lzaW9uIHdhcyBubyBkb3VidCBlYXNpZXIgdG8gbWFrZSBrbm93aW5nIHRoYXQgb25lIG9mIHRoZSBjb3VwbGUncyBjbG9zZXN0IGZyaWVuZHMgaGFkIG9mZmVyZWQgdG8gbG9vayBhZnRlciBoZXIuClRoYXQgYXJyYW5nZW1lbnQgd29ya2VkIHdlbGwgZm9yIGEgZmV3IG1vbnRocyBidXQgdGhlbiB0aGUgZnJpZW5kIHRvbGQgTXIgYW5kIE1ycyBTaGVwcGFyZCB0aGF0IHNoZSBmZWx0IE1hZXZlIHdhcyBub3QgZ2V0dGluZyBlbm91Z2ggaW5kaXZpZHVhbCBhdHRlbnRpb24uCkV2ZXJ5IHByZWNhdXRpb24gdGFrZW4KV2l0aCB0d28gZ3Jvd2luZyBib3lzIG9mIGhlciBvd24gc2hlIHRvbGQgdGhlbSBzaGUgZmVsdCB0aGUgbGl0dGxlIGdpcmwgd291bGQgZ2V0IGJldHRlciBjYXJlIHdpdGggYSBjaGlsZG1pbmRlci4KQXMgZmlyc3QtdGltZSBwYXJlbnRzIE1yIGFuZCBNcnMgU2hlcHBhcmQgdG9vayBldmVyeSBwcmVjYXV0aW9uIGluIGNob29zaW5nIGEgY2FyZXIgZm9yIE1hZXZlLgpLZXJhbiBIZW5kZXJzb24sIHdobyBoYWQgbG9va2VkIGFmdGVyIGNvdW50bGVzcyBjaGlsZHJlbiBpbiB0aGUgYXJlYSBmb3IgeWVhcnMsIHdhcyByZWNvbW1lbmRlZCB0byB0aGUgY291cGxlLgpJdCB3YXMgbm90IGFsd2F5cyBlYXN5IHRvIGdldCBhIHBsYWNlIGluIEhlbmRlcnNvbidzIGNhcmluZyByb3RhLCBzaGUgb2Z0ZW4gaGFkIGNoaWxkcmVuIHdhaXRpbmcgZm9yIGEgdmFjYW5jeSwgYnV0IGEgcGxhY2UgaGFkIHJlY2VudGx5IGJlY29tZSBmcmVlLgpUaGUgdHdvIHdvbWVuIG1ldCBhdCBNcnMgSGVuZGVyc29uJ3MgSXZlciBIZWF0aCBob21lIGFuZCBnb3Qgb24gd2VsbC4KTXJzIFNoZXBwYXJkIGNvbmZlc3NlZDogIkkgaGFkIGEgdmVyeSBsb25nIGxpc3Qgb2YgcXVlc3Rpb25zIiBidXQgSGVuZGVyc29uIHdhcyBhYmxlIHRvIGFuc3dlciB0aGVtIGZvciBoZXIuCkhlbmRlcnNvbiBmb3VnaHQgYmFjayB0ZWFycyBhcyBNYWV2ZSdzIG1vdGhlciBkZXNjcmliZWQgaG93IHNoZSB3YXJtZWQgdG8gaGVyIGRhdWdodGVyJ3MgY2hpbGRtaW5kZXIuCkkgd2FzIHF1aXRlIGhhcHB5IHdpdGggdGhlIGFycmFuZ2VtZW50cy4KSXQgd2FzIHZlcnkgd2VsbC1vcmRlcmVkIGhvdXNlLCBzaGUgaGFkIGEgc2NoZWR1bGUgYW5kIGEgcm91dGluZSwgaXQgd2FzIGNsZWFuIGFuZCB0aWR5IGFuZCB3ZSBnb3Qgb24gdmVyeSB3ZWxsLgpPbiB0aGUgZGF5IHRoYXQgTWFldmUgd2FzIHRha2VuIHRvIGhvc3BpdGFsIHdpdGggY2F0YXN0cm9waGljIGJyYWluIGluanVyaWVzIHNoZSBjb21mb3J0ZWQgYSAiaHlzdGVyaWNhbCIgTXJzIEhlbmRlcnNvbi4KSSB0aGluayBJIGdhdmUgaGVyIGEgaHVnIGFuZCB0b2xkIGhlciBpdCB3YXMgYWxsIGdvaW5nIHRvIGJlIE9LLgpIZW5kZXJzb24sIDQzLCBvZiBJdmVyIEhlYXRoLCBCdWNraW5naGFtc2hpcmUsIHdhcyBqYWlsZWQgZm9yIHRocmVlIHllYXJzIGZvciBraWxsaW5nIDExLW1vbnRoLW9sZCBNYWV2ZSBieSB2aW9sZW50bHkgc2hha2luZyBoZXIgaW4gYSB0ZW1wZXIuClNoZSBoYWQgcGxlYWRlZCBub3QgZ3VpbHR5IHRvIG1hbnNsYXVnaHRlciBidXQgd2FzIGNvbnZpY3RlZCBmb2xsb3dpbmcgYSBmaXZlLXdlZWsgdHJpYWwuCg==
[]
R2lhbnQgZGlhbW9uZCAnY291bGQgZmV0Y2ggJDE2bScKSG93IHRvIHdlYXIgaXQ/CkluIGEgc2FsZSBvbiBXZWRuZXNkYXkgYWxzbyBmZWF0dXJpbmcgcGluayBkaWFtb25kcywgc3F1YXJlLWN1dCBlbWVyYWxkcyBhbmQgYnJhY2VsZXRzIHN0dWRkZWQgd2l0aCBzYXBwaGlyZXMsIHRoZSBjYXRhbG9ndWUgZGVzY3JpYmVkIHRoZSBodWdlIGRpYW1vbmQgYXMgInB1cmUgcGVyZmVjdGlvbi4iClNvdGhlYnkncyBzYXlzIHRoZSBqZXdlbCBoYXMgcmVjZWl2ZWQgdGhlIGhpZ2hlc3QgcG9zc2libGUgZ3JhZGluZzogaXQgaXMgRC1jb2xvdXIsIG9yIGZpbmVzdCB3aGl0ZSwgaGFzIGZsYXdsZXNzIGNsYXJpdHkgYW5kIGl0cyBjdXQsIHBvbGlzaCBhbmQgc3ltbWV0cnkgaGF2ZSBhbGwgYmVlbiBncmFkZWQgZXhjZWxsZW50LgpUaGUgZGlhbW9uZCBkb2VzIGhvd2V2ZXIgYnJpbmcgd2l0aCBpdCB0aGUgcHJvYmxlbSBvZiB3aGF0IHRvIGRvIHdpdGggaXQuCk1yIEJlbm5ldHQgc2FpZCBpdCBtaWdodCBiZSBhIGxpdHRsZSB0b28gbGFyZ2UgZm9yIGEgcmluZywgdGhvdWdoIHNvbWUgZGVzaWduZXJzIGFwcGFyZW50bHkgdGhvdWdodCBpdCB3b3VsZCBiZSAic2Vuc2F0aW9uYWwiIHVzZWQgaW4gdGhpcyB3YXkuCkhlIGZhdm91cmVkIHVzaW5nIGl0IGZvciBhIG5lY2tsYWNlLCBidXQgYSBqZXdlbGxlcnkgZGVzaWduZXIgdG9sZCBoaW0gaXQgaGFkIHRvIGJlIGEgYnJhY2VsZXQsIG90aGVyd2lzZSB0aGUgd2VhcmVyIHdvdWxkIG5vdCBiZSBhYmxlIHRvIHNlZSBpdC4K
[(R2lhbnQgZGlhbW9uZCAnY291bGQgZmV0Y2ggJDE2bScKSG93IHRvIHdlYXIgaXQ/CkluIGEgc2FsZSBvbiBXZWRuZXNkYXkgYWxzbyBmZWF0dXJpbmcgcGluayBkaWFtb25kcywgc3F1YXJlLWN1dCBlbWVyYWxkcyBhbmQgYnJhY2VsZXRzIHN0dWRkZWQgd2l0aCBzYXBwaGlyZXMsIHRoZSBjYXRhbG9ndWUgZGVzY3JpYmVkIHRoZSBodWdlIGRpYW1vbmQgYXMgInB1cmUgcGVyZmVjdGlvbi4iClNvdGhlYnkncyBzYXlzIHRoZSBqZXdlbCBoYXMgcmVjZWl2ZWQgdGhlIGhpZ2hlc3QgcG9zc2libGUgZ3JhZGluZzogaXQgaXMgRC1jb2xvdXIsIG9yIGZpbmVzdCB3aGl0ZSwgaGFzIGZsYXdsZXNzIGNsYXJpdHkgYW5kIGl0cyBjdXQsIHBvbGlzaCBhbmQgc3ltbWV0cnkgaGF2ZSBhbGwgYmVlbiBncmFkZWQgZXhjZWxsZW50LgpUaGUgZGlhbW9uZCBkb2VzIGhvd2V2ZXIgYnJpbmcgd2l0aCBpdCB0aGUgcHJvYmxlbSBvZiB3aGF0IHRvIGRvIHdpdGggaXQuCk1yIEJlbm5ldHQgc2FpZCBpdCBtaWdodCBiZSBhIGxpdHRsZSB0b28gbGFyZ2UgZm9yIGEgcmluZywgdGhvdWdoIHNvbWUgZGVzaWduZXJzIGFwcGFyZW50bHkgdGhvdWdodCBpdCB3b3VsZCBiZSAic2Vuc2F0aW9uYWwiIHVzZWQgaW4gdGhpcyB3YXkuCkhlIGZhdm91cmVkIHVzaW5nIGl0IGZvciBhIG5lY2tsYWNlLCBidXQgYSBqZXdlbGxlcnkgZGVzaWduZXIgdG9sZCBoaW0gaXQgaGFkIHRvIGJlIGEgYnJhY2VsZXQsIG90aGVyd2lzZSB0aGUgd2VhcmVyIHdvdWxkIG5vdCBiZSBhYmxlIHRvIHNlZSBpdC4K, 'DATE')]
VUsgSElWIGNhc2VzIGFtb25nIHRvcCBpbiBFdXJvcGUKVGhlIEVVIGF2ZXJhZ2UgaXMgb2YgbmV3IEhJViBpbmZlY3Rpb25zIGlzIDY3IGNhc2VzIHBlciBtaWxsaW9uLgpBIHJlY2VudCByZXBvcnQgZnJvbSBVTkFpZHMgcmV2ZWFsZWQgbXVjaCBsb3dlciBlc3RpbWF0ZXMgb2YgSElWIGluZmVjdGlvbiB3b3JsZHdpZGUgdGhhbiBoYWQgYmVlbiBwcmV2aW91c2x5IGJlbGlldmVkIC0gZnJvbSBuZWFybHkgNDAgbWlsbGlvbiB0byAzMyBtaWxsaW9uLgpCdXQgdGhlIG51bWJlciBvZiBjYXNlcyBvZiBISVYgaW4gcGVvcGxlIGxpdmluZyBpbiBFdXJvcGUgYW5kIHBhcnRzIG9mIEFzaWEgaGF2ZSBhbG1vc3QgZG91YmxlZCBpbiB0aGUgcGFzdCBzaXggeWVhcnMuClVuZGVyLWVzdGltYXRlCkVDREMgZGlyZWN0b3IgWnN1enNhbm5hIEpha2FiIHNhaWQgdGhlIHRydWUgRXVyb3BlYW4gZmlndXJlcyBhcmUgbGlrZWx5IHRvIGJlIG11Y2ggaGlnaGVyIGl0IGlzIGVzdGltYXRlZCBhbG1vc3Qgb25lIHRoaXJkIG9mIHBlb3BsZSBsaXZpbmcgd2l0aCBISVYgaW4gRXVyb3BlIGFyZSB1bmF3YXJlIHRoZXkgYXJlIGluZmVjdGVkLgoiVGhlc2UgcGVvcGxlIGFyZSBsZXNzIGxpa2VseSB0byB0YWtlIHByZWNhdXRpb25zIGFnYWluc3QgdHJhbnNtaXR0aW5nIHRoZSB2aXJ1cywgYW5kIGFyZSBhbHNvIHVuYWJsZSB0byBhY2Nlc3MgdHJlYXRtZW50LCBhbmQgYWRkcmVzc2luZyB0aGlzIGhpZGRlbiBlcGlkZW1pYyBpcyBhIHByaW9yaXR5IGZvciB0aGUgRUNEQywiIHNoZSBzYWlkLgpJbiByYXcgZmlndXJlcyB0aGUgbnVtYmVyIG9mIG5ld2x5IGRpYWdub3NlZCBjYXNlcyByZXBvcnRlZCBpbiB0aGUgVUsgbGFzdCB5ZWFyIGlzIGJ5IGZhciB0aGUgaGlnaGVzdCBhdCA4LDkyNSBmb2xsb3dlZCBieSA1LDc1MCBpbiBGcmFuY2UgYW5kIDIsNzE4IGluIEdlcm1hbnkuCkJ1dCBhcyBhIHByb3BvcnRpb24gb2YgcG9wdWxhdGlvbiwgRXN0b25pYSBjb21lcyBvdXQgdG9wLgpUaGUgbG93ZXN0IHJhdGUgaW4gdGhlIGxhdGVzdCBzdXJ2ZXkgaXMgaW4gU2xvdmFraWEsIHdoZXJlIDI3IG5ldyBISVYvQUlEcyBjYXNlcyB3ZXJlIHJlcG9ydGVkIGxhc3QgeWVhci4KRUNEQyBzcG9rZXNwZXJzb24sIEJlbiBEdW5jYW4sIHNhaWQgaW4gV2VzdGVybiBFdXJvcGVhbiBjb3VudHJpZXMgbGlrZSB0aGUgVUsgYW5kIEZyYW5jZSBvbmUgb2YgdGhlIG1haW4gZHJpdmVycyBvZiBuZXcgY2FzZXMgd2FzIHBlb3BsZSBtaWdyYXRpbmcgZnJvbSBhcmVhcyBvZiB0aGUgd29ybGQgd2l0aCBISVYgZXBpZGVtaWNzLgpBbm90aGVyIGJpZyBkcml2ZXIgaGFzIGJlZW4gdGhlIGluY3JlYXNlIGluIGNhc2VzIGFtb25nIG1lbiB3aG8gaGF2ZSBzZXggd2l0aCBtZW4uCiJDbGVhcmx5LCBvdXIgcHJldmVudGlvbiBlZmZvcnRzIGFyZSBub3QgaGF2aW5nIHRoZSBkZXNpcmVkIGVmZmVjdCAtIHRoZSBzYWZlIHNleCBtZXNzYWdlIGRvZXNuJ3Qgc2VlbSB0byBiZSBoYXZpbmcgdGhlIGltcGFjdCB3ZSB3b3VsZCBob3BlLCIgaGUgc2FpZC4K
[(VUsgSElWIGNhc2VzIGFtb25nIHRvcCBpbiBFdXJvcGUKVGhlIEVVIGF2ZXJhZ2UgaXMgb2YgbmV3IEhJViBpbmZlY3Rpb25zIGlzIDY3IGNhc2VzIHBlciBtaWxsaW9uLgpBIHJlY2VudCByZXBvcnQgZnJvbSBVTkFpZHMgcmV2ZWFsZWQgbXVjaCBsb3dlciBlc3RpbWF0ZXMgb2YgSElWIGluZmVjdGlvbiB3b3JsZHdpZGUgdGhhbiBoYWQgYmVlbiBwcmV2aW91c2x5IGJlbGlldmVkIC0gZnJvbSBuZWFybHkgNDAgbWlsbGlvbiB0byAzMyBtaWxsaW9uLgpCdXQgdGhlIG51bWJlciBvZiBjYXNlcyBvZiBISVYgaW4gcGVvcGxlIGxpdmluZyBpbiBFdXJvcGUgYW5kIHBhcnRzIG9mIEFzaWEgaGF2ZSBhbG1vc3QgZG91YmxlZCBpbiB0aGUgcGFzdCBzaXggeWVhcnMuClVuZGVyLWVzdGltYXRlCkVDREMgZGlyZWN0b3IgWnN1enNhbm5hIEpha2FiIHNhaWQgdGhlIHRydWUgRXVyb3BlYW4gZmlndXJlcyBhcmUgbGlrZWx5IHRvIGJlIG11Y2ggaGlnaGVyIGl0IGlzIGVzdGltYXRlZCBhbG1vc3Qgb25lIHRoaXJkIG9mIHBlb3BsZSBsaXZpbmcgd2l0aCBISVYgaW4gRXVyb3BlIGFyZSB1bmF3YXJlIHRoZXkgYXJlIGluZmVjdGVkLgoiVGhlc2UgcGVvcGxlIGFyZSBsZXNzIGxpa2VseSB0byB0YWtlIHByZWNhdXRpb25zIGFnYWluc3QgdHJhbnNtaXR0aW5nIHRoZSB2aXJ1cywgYW5kIGFyZSBhbHNvIHVuYWJsZSB0byBhY2Nlc3MgdHJlYXRtZW50LCBhbmQgYWRkcmVzc2luZyB0aGlzIGhpZGRlbiBlcGlkZW1pYyBpcyBhIHByaW9yaXR5IGZvciB0aGUgRUNEQywiIHNoZSBzYWlkLgpJbiByYXcgZmlndXJlcyB0aGUgbnVtYmVyIG9mIG5ld2x5IGRpYWdub3NlZCBjYXNlcyByZXBvcnRlZCBpbiB0aGUgVUsgbGFzdCB5ZWFyIGlzIGJ5IGZhciB0aGUgaGlnaGVzdCBhdCA4LDkyNSBmb2xsb3dlZCBieSA1LDc1MCBpbiBGcmFuY2UgYW5kIDIsNzE4IGluIEdlcm1hbnkuCkJ1dCBhcyBhIHByb3BvcnRpb24gb2YgcG9wdWxhdGlvbiwgRXN0b25pYSBjb21lcyBvdXQgdG9wLgpUaGUgbG93ZXN0IHJhdGUgaW4gdGhlIGxhdGVzdCBzdXJ2ZXkgaXMgaW4gU2xvdmFraWEsIHdoZXJlIDI3IG5ldyBISVYvQUlEcyBjYXNlcyB3ZXJlIHJlcG9ydGVkIGxhc3QgeWVhci4KRUNEQyBzcG9rZXNwZXJzb24sIEJlbiBEdW5jYW4sIHNhaWQgaW4gV2VzdGVybiBFdXJvcGVhbiBjb3VudHJpZXMgbGlrZSB0aGUgVUsgYW5kIEZyYW5jZSBvbmUgb2YgdGhlIG1haW4gZHJpdmVycyBvZiBuZXcgY2FzZXMgd2FzIHBlb3BsZSBtaWdyYXRpbmcgZnJvbSBhcmVhcyBvZiB0aGUgd29ybGQgd2l0aCBISVYgZXBpZGVtaWNzLgpBbm90aGVyIGJpZyBkcml2ZXIgaGFzIGJlZW4gdGhlIGluY3JlYXNlIGluIGNhc2VzIGFtb25nIG1lbiB3aG8gaGF2ZSBzZXggd2l0aCBtZW4uCiJDbGVhcmx5LCBvdXIgcHJldmVudGlvbiBlZmZvcnRzIGFyZSBub3QgaGF2aW5nIHRoZSBkZXNpcmVkIGVmZmVjdCAtIHRoZSBzYWZlIHNleCBtZXNzYWdlIGRvZXNuJ3Qgc2VlbSB0byBiZSBoYXZpbmcgdGhlIGltcGFjdCB3ZSB3b3VsZCBob3BlLCIgaGUgc2FpZC4K, 'PERSON')]
VHJvdWJsZWQgbGVpc3VyZSBjZW50cmUgdG8gcmVvcGVuCkFmdGVyIG9wZW5pbmcgMTggbW9udGhzIGxhdGUgdGhlIHN3aW1taW5nLCBoZWFsdGggYW5kIGZpdG5lc3MgY2VudHJlIHdhcyBjbG9zZWQgZm9yIGVzc2VudGlhbCBtYWludGVuYW5jZSB3b3JrIGluIE5vdmVtYmVyIDIwMDQuCkl0IGhhZCBhbHJlYWR5IGdvbmUgYWxtb3N0IGZvdXIgdGltZXMgb3ZlciB0aGUgb3JpZ2luYWwgwqM3bSBidWRnZXQgYW5kIHRoZXJlIGhhZCBiZWVuIG51bWVyb3VzIHByb2JsZW1zIHdpdGggdGhlIGRlc2lnbi4KT3V0c2lkZSB3aW5kb3dzIGhhZCB0byBiZSBjaGFuZ2VkIHRvIHN0b3AgcGVvcGxlIGxvb2tpbmcgaW4gYW5kIHRoZSBwb3dlciBzdXBwbHkgd2FzIGFmZmVjdGVkIGJ5IHdhdGVyLCBlaXRoZXIgZnJvbSBjb25kZW5zYXRpb24gb3IgbGVha3MuCkFuIGludmVzdGlnYXRpb24gcmV2ZWFsZWQgdGhlIGJ1aWxkaW5nIGhhZCAic2V2ZXJlIGRlc2lnbiBmYXVsdHMiIGFuZCB0aGUgY291bmNpbCBzdWJzZXF1ZW50bHkgcmVjZWl2ZWQgYW4gb3V0IG9mIGNvdXJ0IHNldHRsZW1lbnQgZnJvbSBhcmNoaXRlY3RzIGFuZCBjb250cmFjdG9ycy4KVGhpcyBoZWxwZWQgZnVuZCDCozEzbSB3b3J0aCBvZiB3b3JrIHdoaWNoIGluY2x1ZGVkIGEgbmV3IHJvb2YsIGEgdG9kZGxlciBwb29sLCBpbXByb3ZlZCBhY2Nlc3MgZm9yIHBlb3BsZSB3aXRoIGRpc2FiaWxpdGllcywgaW1wcm92ZW1lbnRzIHRvIHRoZSByZWNlcHRpb24gYXJlYSBhbmQgY3JlY2hlLgpIYWNrbmV5IENvdW5jaWwncyBLaW0gV3JpZ2h0IHNhaWQ6ICJHZXR0aW5nIENsaXNzb2xkIExlaXN1cmUgQ2VudHJlIHJlb3BlbmVkIGZvciBIYWNrbmV5IHJlc2lkZW50cyBoYXMgYmVlbiBhIHRvcCBwcmlvcml0eSBmb3IgdGhlIGNvdW5jaWwuIgo=
[(VHJvdWJsZWQgbGVpc3VyZSBjZW50cmUgdG8gcmVvcGVuCkFmdGVyIG9wZW5pbmcgMTggbW9udGhzIGxhdGUgdGhlIHN3aW1taW5nLCBoZWFsdGggYW5kIGZpdG5lc3MgY2VudHJlIHdhcyBjbG9zZWQgZm9yIGVzc2VudGlhbCBtYWludGVuYW5jZSB3b3JrIGluIE5vdmVtYmVyIDIwMDQuCkl0IGhhZCBhbHJlYWR5IGdvbmUgYWxtb3N0IGZvdXIgdGltZXMgb3ZlciB0aGUgb3JpZ2luYWwgwqM3bSBidWRnZXQgYW5kIHRoZXJlIGhhZCBiZWVuIG51bWVyb3VzIHByb2JsZW1zIHdpdGggdGhlIGRlc2lnbi4KT3V0c2lkZSB3aW5kb3dzIGhhZCB0byBiZSBjaGFuZ2VkIHRvIHN0b3AgcGVvcGxlIGxvb2tpbmcgaW4gYW5kIHRoZSBwb3dlciBzdXBwbHkgd2FzIGFmZmVjdGVkIGJ5IHdhdGVyLCBlaXRoZXIgZnJvbSBjb25kZW5zYXRpb24gb3IgbGVha3MuCkFuIGludmVzdGlnYXRpb24gcmV2ZWFsZWQgdGhlIGJ1aWxkaW5nIGhhZCAic2V2ZXJlIGRlc2lnbiBmYXVsdHMiIGFuZCB0aGUgY291bmNpbCBzdWJzZXF1ZW50bHkgcmVjZWl2ZWQgYW4gb3V0IG9mIGNvdXJ0IHNldHRsZW1lbnQgZnJvbSBhcmNoaXRlY3RzIGFuZCBjb250cmFjdG9ycy4KVGhpcyBoZWxwZWQgZnVuZCDCozEzbSB3b3J0aCBvZiB3b3JrIHdoaWNoIGluY2x1ZGVkIGEgbmV3IHJvb2YsIGEgdG9kZGxlciBwb29sLCBpbXByb3ZlZCBhY2Nlc3MgZm9yIHBlb3BsZSB3aXRoIGRpc2FiaWxpdGllcywgaW1wcm92ZW1lbnRzIHRvIHRoZSByZWNlcHRpb24gYXJlYSBhbmQgY3JlY2hlLgpIYWNrbmV5IENvdW5jaWwncyBLaW0gV3JpZ2h0IHNhaWQ6ICJHZXR0aW5nIENsaXNzb2xkIExlaXN1cmUgQ2VudHJlIHJlb3BlbmVkIGZvciBIYWNrbmV5IHJlc2lkZW50cyBoYXMgYmVlbiBhIHRvcCBwcmlvcml0eSBmb3IgdGhlIGNvdW5jaWwuIgo=, 'GPE')]
R2VuZXJhbCBNb3RvcnMKRHJpdmVuIHRvIHN0cmlrZQpCdXQgdGhlIHNob3J0IHdhbGstb3V0IGlzIG92ZXIKVEhFIHN0cmVldHMgbmVhciBHZW5lcmFsIE1vdG9ycyIgQ2FkaWxsYWMgYXNzZW1ibHkgcGxhbnQgb24gdGhlIGVhc3Qgc2lkZSBvZiBEZXRyb2l0IGFyZSB1c3VhbGx5IHF1aWV0LgpCdXQgZm9yIGEgY291cGxlIG9mIGRheXMgdGhhdCB3YXMgcmVwbGFjZWQgd2l0aCBjb21tb3Rpb24gYXMgYSBsaW5lIG9mIHdvcmtlcnMsIGJ1b3llZCBieSBjb2ZmZWUgYW5kIG1vdW50aW5nIGZydXN0cmF0aW9uLCBwYWNlZCBiYWNrIGFuZCBmb3J0aCBhdCB0aGUgZmFjdG9yeSBnYXRlcy4KT24gTW9uZGF5IFNlcHRlbWJlciAyNHRoLCBmb3IgdGhlIGZpcnN0IHRpbWUgaW4gb3ZlciAzMCB5ZWFycywgdGhlIFVuaXRlZCBBdXRvIFdvcmtlcnMgdW5pb24gKFVBVykgbGF1bmNoZWQgYSBuYXRpb253aWRlIHN0cmlrZSBhZ2FpbnN0IG9uZSBvZiBBbWVyaWNhJ3MgYmlnIGNhcm1ha2Vycy4KVW5pb24gbGVhZGVycyBwcm9taXNlIHRoZSBzdHJpa2Ugd291bGQgZW5kdXJlICJmb3IgYXMgbG9uZyBhcyBpdCB0YWtlcy4iClRoYXQgcHJvdmVkIHRvIGJlIHR3byBkYXlzIC0gdGhlIHN0cmlrZSB3YXMgY2FsbGVkIG9mZiBpbiB0aGUgZWFybHkgaG91cnMgb2YgV2VkbmVzZGF5IG1vcm5pbmcgYWZ0ZXIgdGhlIHR3byBzaWRlcyBoYW1tZXJlZCBvdXQgYSBkZWFsIG9uIGEgbmV3IGNvbnRyYWN0LgpUaGUgdW5pb24ncyBvbGQgY29udHJhY3Qgd2l0aCBHTSBvZmZpY2lhbGx5IGV4cGlyZWQgb24gU2VwdGVtYmVyIDE0dGgsIGJ1dCBzdGVhZHkgcHJvZ3Jlc3MgcGVyc3VhZGVkIHRoZSBVQVcgdG8gYWdyZWUgdG8gYW4gZXh0ZW5zaW9uLgpCdXQgYWZ0ZXIgdGVuIGRheXMsIHRoZSBVQVcncyBwcmVzaWRlbnQsIFJvbiBHZXR0ZWxmaW5nZXIsIGFwcGFyZW50bHkgZmVsdCB0aGF0IGEgc3RyaWtlIHdhcyB0aGUgb25seSB3YXkgdG8gYnJlYWsgYSBkZWFkbG9jayBvdmVyIGhpcyB0b3AgcHJpb3JpdHk6IGpvYiBzZWN1cml0eS4KTWFueSBvYnNlcnZlcnMgdGhvdWdodCB0aGF0IHRoZXNlIHRvdWdoIHRhbGtzIGNvdWxkIGJlIHJlc29sdmVkIHdpdGhvdXQgY29uZnJvbnRhdGlvbi4KQnV0IG1ha2luZyBHTSBjb21wZXRpdGl2ZSBhZ2FpbiB3YXMgYWx3YXlzIGxpa2VseSB0byBtZWFuIHJhZGljYWwgY2hhbmdlcyB0byBpbmR1c3RyeSBjb250cmFjdHMuCkFuZCB0aGUgZGVhbCBiZXR3ZWVuIEdNIGFuZCB0aGUgVUFXIHdpbGwgYWN0IGFzIGEgdGVtcGxhdGUgZm9yIHNpbWlsYXIgYWdyZWVtZW50cyB3aXRoIEZvcmQgYW5kIENocnlzbGVyLgpOb3QgdGhhdCBsb25nIGFnbywgbmVnb3RpYXRpb25zIHNpbXBseSBzZXJ2ZWQgYXMgYSBtZWFucyBmb3IgdGhlIGNhciBpbmR1c3RyeSdzIHVuaW9ucyBhbmQgYm9zc2VzIHRvIGNhcnZlIHVwIGFuIGV2ZXItZXhwYW5kaW5nIHBpZS4KQnV0IG92ZXIgdGhlIHBhc3QgMjUgeWVhcnMsIHRoZSBzaXR1YXRpb24gaGFzIGNoYW5nZWQgZHJhbWF0aWNhbGx5IHdpdGggdGhlIGVtZXJnZW5jZSBvZiByaXZhbHMsIHBhcnRpY3VsYXJseSBmcm9tIEFzaWEuCkluIEp1bHksIGZvciB0aGUgZmlyc3QgdGltZSBldmVyLCBmb3JlaWduIGJyYW5kcyBjYXB0dXJlZCBtb3JlIHRoYW4gaGFsZiB0aGUgbmV3LXZlaGljbGUgbWFya2V0IGFuZCBmZXcgc2VlIHRoZSB0cmVuZCByZXZlcnNpbmcuCk1pbGxpb25zIG9mIGZvcmVpZ24tYmFkZ2VkIHZlaGljbGVzIHBvdXIgb2ZmIGFzc2VtYmx5IGxpbmVzIGluIEFtZXJpY2EuCk5pc3NhbiwgSG9uZGEgYW5kIFRveW90YSBwcm9kdWNlIHdlbGwgb3ZlciBoYWxmIHRoZSB2ZWhpY2xlcyB0aGV5IHNlbGwgaW4gTm9ydGggQW1lcmljYSBpbiBzaXR1LgpXYWdlcyBhdCB0aGVzZSBtYWlubHkgbm9uLXVuaW9uIHBsYW50cyBhcmUgZmFyIGxvd2VyIHRoYW4gZm9yIERldHJvaXQncyAiQmlnIFRocmVlLiIKVGhlcmUgYXJlIG1hbnkgcmVhc29ucyBmb3IgdGhlIGdhcCwgaW5jbHVkaW5nIGNvc3RseSBwZW5zaW9uIHNjaGVtZXMgZm9yIG1hc3NpdmUgbnVtYmVycyBvZiByZXRpcmVkIHdvcmtlcnMuCkJ1dCBub3RoaW5nIGlzIG1vcmUgdHJvdWJsaW5nIHRoYW4gaGVhbHRoIGNhcmUuCk92ZXIgdGltZSBVQVcgaGFzIGhhbW1lcmVkIG91dCBhIHN5c3RlbSBvZiBjb3ZlcmFnZSBmb3IgYm90aCBjdXJyZW50IGFuZCByZXRpcmVkIHdvcmtlcnMgdGhhdCwgYnkgc29tZSBlc3RpbWF0ZXMsIGFkZHMgdXAgdG8gJDIsMDAwIHRvIHRoZSBjb3N0IG9mIGV2ZXJ5IHZlaGljbGUgdGhhdCBEZXRyb2l0IHByb2R1Y2VzLgpUaG91Z2ggZGV0YWlscyBvZiB0aGUgbmV3IGNvbnRyYWN0IHdlcmUgbm90IHJldmVhbGVkIGl0IHNlZW1zIHRoYXQgR00gaGFzIGNvbWUgdXAgd2l0aCBhIHNvbHV0aW9uLCBvciBhdCBsZWFzdCBhIHBhcnRpYWwgZml4LCBpbiB0aGUgZm9ybSBvZiBhIFZvbHVudGFyeSBFbXBsb3llZSBCZW5lZmljaWFyeSBBc3NvY2lhdGlvbiAtIGVzc2VudGlhbGx5IGEgdHJ1c3QgZnVuZCB0byBwYXkgZm9yIHRoZSBoZWFsdGgtY2FyZSBiZW5lZml0cyBvZiByZXRpcmVkIHdvcmtlcnMuCkdNJ3Mgd2lsbCBzaGlmdCBvYmxpZ2F0aW9ucyBvZiBhYm91dCAkNTAgYmlsbGlvbiBvZmYgaXRzIGJvb2tzIGJ5IGxldHRpbmcgdGhlIFVBVyB0YWtlIGNvbnRyb2wgb2YgdGhlIHByb2dyYW1tZS4KQnV0IHRoZSBzdHJpa2Ugd2FzIG1vcmUgYWJvdXQgam9iIHNlY3VyaXR5IHRoYW4gaGVhbHRoIGNhcmUuClNpbmNlIEFtZXJpY2EncyBjYXJtYWtlcnMgY2FtZSB1bmRlciBzZXJpb3VzIGFzc2F1bHQgZnJvbSBhYnJvYWQgaW4gdGhlIGxhdGUgMTk3MHMsIHRoZSB1bmlvbidzIHdvcmtmb3JjZSBoYXMgc2hydW5rIGZyb20gMS41bSB0byBhIGxpdHRsZSBvdmVyIGhhbGYgYSBtaWxsaW9uIHRvZGF5LgpBZGRpdGlvbmFsIGN1dHMgYXJlIGFscmVhZHkgcGxhbm5lZCBhcyBwYXJ0IG9mIGEgcHJldmlvdXMgcmVzdHJ1Y3R1cmluZyBkZWFsLgpTdGlsbCBtb3JlIHNlZW0gY2VydGFpbiBhcyBEZXRyb2l0J3MgY2FybWFrZXJzIGF0dGVtcHQgdG8gb3V0c291cmNlIHByb2R1Y3Rpb24gdG8gY2hlYXBlciBkZXN0aW5hdGlvbnMgYWJyb2FkLgpCeSBvbmUgZXN0aW1hdGUsIHRoZSBsYWJvdXIgZ2FwIGJldHdlZW4gR00gYW5kIFRveW90YSBzd2FsbG93cyB1cCBlbm91Z2ggY2FzaCB0byBwYXkgZm9yIGZvdXIgbmV3LW1vZGVsIHByb2dyYW1tZXMgZWFjaCB5ZWFyIGZvciB0aGUgQW1lcmljYW4gZmlybS4KQW5kIHNwZW5kaW5nIHRvIGRldmVsb3AgY2FycyB0aGF0IEFtZXJpY2FucyB3YW50IHRvIGJ1eSBpcyB2aXRhbCBpZiBHTSBpcyB0byByZXZlcnNlIGl0cyBkZWNsaW5lLgpHTSBpcyBub3cgb2ZmZXJpbmcgc29tZSBndWFyYW50ZWVzIG9uIGpvYiBzZWN1cml0eS4KQWNjb3JkaW5nIHRvIHJlcG9ydHMgaXQgaGFzIHByb21pc2VkIGJpZyBpbnZlc3RtZW50IGluIEFtZXJpY2FuIHBsYW50cyB0byBwcm9kdWNlIG5ldyBtb2RlbHMuCkluIHJldHVybiB0aGUgVUFXIGhhcyBhZ3JlZWQgdG8gYSBzaWduaWZpY2FudCBjdXQgYmFjayBvZiB0aGUgbm90b3Jpb3VzICJqb2JzIGJhbmssIiB3aGljaCBndWFyYW50ZWVzIGZ1bGwgcGF5IHRvIHVuZW1wbG95ZWQgd29ya2VycyBmb3IgeWVhcnMsIGFuZCBsb3dlciBwYXkgZm9yIG5ldyBoaXJlcywgYW1vbmcgb3RoZXIgbWVhc3VyZXMuCk5laXRoZXIgc2lkZSBoYWQgbXVjaCB0byBnYWluIGZyb20gYSBwcm9sb25nZWQgc3RyaWtlLgpJdCBjb3VsZCBoYXZlIGNvc3QgR00gYWJvdXQgJDEgYmlsbGlvbiBhIHdlZWsgaW4gb3BlcmF0aW5nIHByb2ZpdHMgYW5kIGluIHR3byBtb250aHMgdGhlIGNhcm1ha2VyIHdvdWxkIGhhdmUgZmFjZWQgYmFua3J1cHRjeS4KQW5kIHRoZW4gNzMsMDAwIHdvcmtlcnMgd291bGQgbG9zZSB0aGVpciBqb2JzLCBwcmVjaXNlbHkgd2hhdCB0aGUgVUFXIGRvZXMgbm90IHdhbnQuCkluIHRoZSBlbmQgdGhlIHdvcmtlcnMgZ290IHRvIGZsZXggdGhlaXIgbXVzY2xlcyBpbiB0aGUgYmFsbXkgYXV0dW1uIGFpciBhbmQgR00gaGFzIG1hZGUgYSB3ZWxjb21lIHN0ZXAgdG93YXJkcyBjbG9zaW5nIHRoZSBnYXAgYmV0d2VlbiBBbWVyaWNhbiBjYXIgY29tcGFuaWVzIGFuZCB0aGVpciByaXZhbHMuCg==
[]
VGhlIGhlYWRtYXN0ZXIgb2YgYSBwcml2YXRlIHNjaG9vbCB3YXMgb3JkZXJlZCB0byBwYXkgwqMyMCwwMDAgaW4gZmluZXMgYW5kIGxlZ2FsIGNvc3RzIHllc3RlcmRheSBmb2xsb3dpbmcgdGhlIGRlYXRoIG9mIGEgdGhyZWUteWVhci1vbGQgcHVwaWwgd2hvIGhhZCBoaXQgaGlzIGhlYWQgaW4gdGhlIHBsYXlncm91bmQuCkphbWVzIFBvcnRlciwgNjYsIGhlYWRtYXN0ZXIgb2YgSGlsbGdyb3ZlIFNjaG9vbCwgaW4gQmFuZ29yLCBOb3J0aCBXYWxlcywgd2FzIGNvbnZpY3RlZCBsYXN0IG1vbnRoIG9mIGJyZWFjaGluZyBoZWFsdGggYW5kIHNhZmV0eSBydWxlcyBhZnRlciBhIGp1cnkgZGVjaWRlZCB0aGF0IHRoZXJlIGhhZCBub3QgYmVlbiBlbm91Z2ggc3RhZmYgb24gZHV0eSB0byBtb25pdG9yIHRoZSBjaGlsZHJlbiBhdCBicmVhay10aW1lLgpEdXJpbmcgdGhlIHNpeC1kYXkgdHJpYWwgYXQgTW9sZCBDcm93biBDb3VydCB0aGUganVyeSB3YXMgdG9sZCB0aGF0IEtpYW4gV2lsbGlhbXMsIGRlc2NyaWJlZCBhcyAibGl2ZWx5IGFuZCBlbmVyZ2V0aWMsIiBoYWQgbGVhcHQgb2ZmIGEgc3RlcCwgd2hpY2ggaGUga25ldyB0byBiZSBvdXQgb2YgYm91bmRzLCBwcmV0ZW5kaW5nIHRvIGJlIEJhdG1hbi4KSGUgd2FzIGZvdW5kIGx5aW5nIGZhY2UgZG93bi4KSGUgc3VmZmVyZWQgaGVhZCBpbmp1cmllcyBhbmQgd2FzIHRyZWF0ZWQgaW4gaG9zcGl0YWwuCkhlIGRpZWQgYSBtb250aCBsYXRlciBpbiBBdWd1c3QgMjAwNCBhZnRlciBjb250cmFjdGluZyBhbiBNUlNBIHN0cmFpbiBvZiBwbmV1bW9uaWEuClRoZSBIZWFsdGggYW5kIFNhZmV0eSBFeGVjdXRpdmUgKEhTRSkgYnJvdWdodCB0aGUgcHJvc2VjdXRpb24gYWdhaW5zdCBNciBQb3J0ZXIgaW4gaGlzIHJvbGUgYXMgcHJvcHJpZXRvciBvZiB0aGUgc2Nob29sLCB3aGljaCBoZSBoYXMgcnVuIGZvciAzMCB5ZWFycy4KSGUgd2FzIGZpbmVkIMKjMTIsNTAwIGFuZCBvcmRlcmVkIHRvIHBheSBjb3N0cyBvZiDCozcsNTAwLgpEdXJpbmcgdGhlIHRyaWFsIHRoZSBqdXJ5IHdhcyB0b2xkIHRoYXQgb25seSBvbmUgbWVtYmVyIG9mIHN0YWZmIGhhZCBiZWVuIHN1cGVydmlzaW5nIDU5IHB1cGlscyBhZ2VkIGZyb20gMyB0byAxMSwgYSByYXRpbyB0aGF0IHdvdWxkIGhhdmUgYmVlbiB1bmFjY2VwdGFibGUgaW4gdGhlIHN0YXRlIHNlY3Rvci4KVGhlIHByb3NlY3V0aW9uIGhhZCBhcmd1ZWQgdGhhdCBLaWFuIGhhZCBiZWVuIGFsbG93ZWQgdW5zdXBlcnZpc2VkIGFjY2VzcyB0byB0aGUgc3RlcHMsIHdoaWNoIGV4cG9zZWQgaGltIGFuZCBvdGhlciBpbmZhbnQgcHVwaWxzIHRvIHJpc2suClRoZSBzdGVwcyB3ZXJlIGdhdGVkIGFmdGVyIHRoZSBhY2NpZGVudC4KSnVkZ2UgSm9obiBSb2dlcnMsIFFDLCB0b2xkIHRoZSBoZWFkbWFzdGVyIHRoYXQgaGUgaGFkIGRlZGljYXRlZCBoaXMgbGlmZSB0byB0ZWFjaGluZywgYW5kIHRoYXQgdGhlIHNjaG9vbCBoYWQgYW4gZXhlbXBsYXJ5IHJlY29yZCwgYnV0IHRoYXQgaGUgaGFkIGZhaWxlZCBpbiBoaXMgZHV0eSBvZiBjYXJlIHRvd2FyZHMgdGhlIGNoaWxkLgpJbiBoaXMgZXZpZGVuY2UgTXIgUG9ydGVyLCA2NiwgaGFkIG1haW50YWluZWQgdGhhdCB0aGUgbGV2ZWwgb2Ygc3VwZXJ2aXNpb24gYXQgdGhlIHNjaG9vbCBoYWQgYmVlbiBhZGVxdWF0ZSBiZWNhdXNlIHRoZSBwdXBpbHMgd2VyZSB3ZWxsIGJlaGF2ZWQgYW5kIGxvb2tlZCBhZnRlciBlYWNoIG90aGVyLgpIZSBzYWlkOiAiSWYgaXQgaXMgYSBtYXR0ZXIgb2YgbWFraW5nIHN1cmUgdGhhdCBhIGNoaWxkIGRvZXMgbm90IGp1bXAgb2ZmIHN0ZXBzIGJlc2lkZSB5b3UsIHlvdSB3b3VsZCBuZWVkIG9uZS10by1vbmUgc3VwZXJ2aXNpb24uCkNoaWxkcmVuIGFyZSBkZXNpZ25lZCB0byBwcm90ZWN0IHRoZW1zZWx2ZXMuCkNoaWxkcmVuLCBpZiB0aGV5IHN0dW1ibGUsIHdpbGwgcHJvdGVjdCB0aGVtc2VsdmVzLgpUaGV5IG5lZWQgdG8gbGVhcm4gaG93IHRvIG1vdmUgaW4gYW55IGdpdmVuIHNpdHVhdGlvbiBpbiBhIHdheSB0aGF0IHdpbGwgcHJvdGVjdCB0aGVtIGZyb20gaW5qdXJ5LgpJZiB0aGV5IGRvIG5vdCBoYXZlIHRoYXQgZmFjaWxpdHksIGlmIHdlIHdyYXAgdGhlbSB1cCBpbiBjb3R0b24gd29vbCwgdGhlbiB0aGV5IHdpbGwgbmV2ZXIgbGVhcm4uCkFmdGVyIHRoZSBoZWFyaW5nIFN0ZXZlIFNjb3R0LCBwcmluY2lwYWwgaW5zcGVjdG9yIGZvciB0aGUgSFNFLCBzYWlkIHRoYXQgdGhlIGNhc2Ugd2FzIG5vdCBhYm91dCByZXN0cmljdGluZyBjaGlsZHJlbidzIHBsYXkgaW4gc2Nob29scy4KSGVhZG1hc3RlcnMgc2hvdWxkIG5vdCBmZWFyIHRoYXQgdGhleSBjb3VsZCBub3cgZmFjZSBlbmZvcmNlbWVudCBhY3Rpb24gZm9yIHRoZSBvcmRpbmFyeSwgZXZlcnlkYXkgaW5jaWRlbnRzIHRoYXQgb2Z0ZW4gaGFwcGVuIHRvIGNoaWxkcmVuLgpCdXQgaGUgc2FpZCB0aGF0IGEgYmFsYW5jZSBuZWVkZWQgdG8gYmUgc3RydWNrIGJldHdlZW4gdGhlIHJpc2tzIGFuZCBiZW5lZml0cy4KVmVyeSBzbWFsbCBjaGlsZHJlbiBzaG91bGQgbm90IGJlIGxlZnQgZWZmZWN0aXZlbHkgdW5zdXBlcnZpc2VkLgpJdCB3YXMgbm90IHBvc3NpYmxlIGZvciB0aGUgdGVhY2hlciBvbiBkdXR5IHRoYXQgZGF5IHRvIHNlZSBhbGwgcGFydHMgb2YgdGhlIHNwbGl0LWxldmVsIHBsYXlncm91bmQuClNvbWUgYXJlYXMgd2VyZSBzaW1wbHkgb3V0IG9mIHNpZ2h0LgpTdGVmZmFuIEdyb2NoLCB0aGUgaGVhZG1hc3RlcidzIHNvbGljaXRvciwgc2FpZCB0aGF0IGhpcyBjbGllbnQgaW50ZW5kZWQgdG8gYXBwZWFsIGFnYWluc3QgdGhlIGNvbnZpY3Rpb24uCkhlIGRlc2NyaWJlZCB0aGUgc2Nob29sIGFzIGEgbGFib3VyIG9mIGxvdmUgZm9yIE1yIFBvcnRlciBhbmQgaGlzIHdpZmUsIFN5bHZpYS4KSGUgc2FpZDogIlRoaXMgdmVyZGljdCBtZWFucyB0aGF0IGEgaGlnaGx5IHJlc3BvbnNpYmxlIGFuZCBkZWRpY2F0ZWQgaGVhZG1hc3RlciBoYXMgYmVlbiBnaXZlbiBhIGNyaW1pbmFsIHJlY29yZCBvdmVyIGEgdHJhZ2VkeSwgZGVzY3JpYmVkIGluIGNvdXJ0IGFzIG9uZSBpbiBhIG1pbGxpb24uClRoZSBwZW5hbHR5IGlzIGEgaGFyc2ggb25lIGZvciBzb21lb25lIHdobyBoYXMgbm90IGJ1aWx0IHVwIGFueSBtZWFuaW5nZnVsIHNhdmluZ3MgYXMgYSByZXN1bHQgb2YgaGlzIGNob3NlbiBwcm9mZXNzaW9uIGFuZCBkZWRpY2F0aW9uIHRvIHRoZSBwdXBpbHMuCk1yIEdyb2NoIHNhaWQgdGhhdCBNciBQb3J0ZXIgaGFkIHJlY2VpdmVkIGxldHRlcnMgb2Ygc3VwcG9ydCBmcm9tIGFsbCBhcm91bmQgdGhlIHdvcmxkLCBpbmNsdWRpbmcgZnJvbSB0ZWFjaGVycyBhbmQgb3RoZXIgYWNhZGVtaWMgc3RhZmYgY29uY2VybmVkIGFib3V0IHRoZSAiZW5vcm1vdXMgYWZ0ZXItc2hvY2tzIiB0byBlZHVjYXRpb24gaW4gdGhpcyBjb3VudHJ5Lgo=
[(VGhlIGhlYWRtYXN0ZXIgb2YgYSBwcml2YXRlIHNjaG9vbCB3YXMgb3JkZXJlZCB0byBwYXkgwqMyMCwwMDAgaW4gZmluZXMgYW5kIGxlZ2FsIGNvc3RzIHllc3RlcmRheSBmb2xsb3dpbmcgdGhlIGRlYXRoIG9mIGEgdGhyZWUteWVhci1vbGQgcHVwaWwgd2hvIGhhZCBoaXQgaGlzIGhlYWQgaW4gdGhlIHBsYXlncm91bmQuCkphbWVzIFBvcnRlciwgNjYsIGhlYWRtYXN0ZXIgb2YgSGlsbGdyb3ZlIFNjaG9vbCwgaW4gQmFuZ29yLCBOb3J0aCBXYWxlcywgd2FzIGNvbnZpY3RlZCBsYXN0IG1vbnRoIG9mIGJyZWFjaGluZyBoZWFsdGggYW5kIHNhZmV0eSBydWxlcyBhZnRlciBhIGp1cnkgZGVjaWRlZCB0aGF0IHRoZXJlIGhhZCBub3QgYmVlbiBlbm91Z2ggc3RhZmYgb24gZHV0eSB0byBtb25pdG9yIHRoZSBjaGlsZHJlbiBhdCBicmVhay10aW1lLgpEdXJpbmcgdGhlIHNpeC1kYXkgdHJpYWwgYXQgTW9sZCBDcm93biBDb3VydCB0aGUganVyeSB3YXMgdG9sZCB0aGF0IEtpYW4gV2lsbGlhbXMsIGRlc2NyaWJlZCBhcyAibGl2ZWx5IGFuZCBlbmVyZ2V0aWMsIiBoYWQgbGVhcHQgb2ZmIGEgc3RlcCwgd2hpY2ggaGUga25ldyB0byBiZSBvdXQgb2YgYm91bmRzLCBwcmV0ZW5kaW5nIHRvIGJlIEJhdG1hbi4KSGUgd2FzIGZvdW5kIGx5aW5nIGZhY2UgZG93bi4KSGUgc3VmZmVyZWQgaGVhZCBpbmp1cmllcyBhbmQgd2FzIHRyZWF0ZWQgaW4gaG9zcGl0YWwuCkhlIGRpZWQgYSBtb250aCBsYXRlciBpbiBBdWd1c3QgMjAwNCBhZnRlciBjb250cmFjdGluZyBhbiBNUlNBIHN0cmFpbiBvZiBwbmV1bW9uaWEuClRoZSBIZWFsdGggYW5kIFNhZmV0eSBFeGVjdXRpdmUgKEhTRSkgYnJvdWdodCB0aGUgcHJvc2VjdXRpb24gYWdhaW5zdCBNciBQb3J0ZXIgaW4gaGlzIHJvbGUgYXMgcHJvcHJpZXRvciBvZiB0aGUgc2Nob29sLCB3aGljaCBoZSBoYXMgcnVuIGZvciAzMCB5ZWFycy4KSGUgd2FzIGZpbmVkIMKjMTIsNTAwIGFuZCBvcmRlcmVkIHRvIHBheSBjb3N0cyBvZiDCozcsNTAwLgpEdXJpbmcgdGhlIHRyaWFsIHRoZSBqdXJ5IHdhcyB0b2xkIHRoYXQgb25seSBvbmUgbWVtYmVyIG9mIHN0YWZmIGhhZCBiZWVuIHN1cGVydmlzaW5nIDU5IHB1cGlscyBhZ2VkIGZyb20gMyB0byAxMSwgYSByYXRpbyB0aGF0IHdvdWxkIGhhdmUgYmVlbiB1bmFjY2VwdGFibGUgaW4gdGhlIHN0YXRlIHNlY3Rvci4KVGhlIHByb3NlY3V0aW9uIGhhZCBhcmd1ZWQgdGhhdCBLaWFuIGhhZCBiZWVuIGFsbG93ZWQgdW5zdXBlcnZpc2VkIGFjY2VzcyB0byB0aGUgc3RlcHMsIHdoaWNoIGV4cG9zZWQgaGltIGFuZCBvdGhlciBpbmZhbnQgcHVwaWxzIHRvIHJpc2suClRoZSBzdGVwcyB3ZXJlIGdhdGVkIGFmdGVyIHRoZSBhY2NpZGVudC4KSnVkZ2UgSm9obiBSb2dlcnMsIFFDLCB0b2xkIHRoZSBoZWFkbWFzdGVyIHRoYXQgaGUgaGFkIGRlZGljYXRlZCBoaXMgbGlmZSB0byB0ZWFjaGluZywgYW5kIHRoYXQgdGhlIHNjaG9vbCBoYWQgYW4gZXhlbXBsYXJ5IHJlY29yZCwgYnV0IHRoYXQgaGUgaGFkIGZhaWxlZCBpbiBoaXMgZHV0eSBvZiBjYXJlIHRvd2FyZHMgdGhlIGNoaWxkLgpJbiBoaXMgZXZpZGVuY2UgTXIgUG9ydGVyLCA2NiwgaGFkIG1haW50YWluZWQgdGhhdCB0aGUgbGV2ZWwgb2Ygc3VwZXJ2aXNpb24gYXQgdGhlIHNjaG9vbCBoYWQgYmVlbiBhZGVxdWF0ZSBiZWNhdXNlIHRoZSBwdXBpbHMgd2VyZSB3ZWxsIGJlaGF2ZWQgYW5kIGxvb2tlZCBhZnRlciBlYWNoIG90aGVyLgpIZSBzYWlkOiAiSWYgaXQgaXMgYSBtYXR0ZXIgb2YgbWFraW5nIHN1cmUgdGhhdCBhIGNoaWxkIGRvZXMgbm90IGp1bXAgb2ZmIHN0ZXBzIGJlc2lkZSB5b3UsIHlvdSB3b3VsZCBuZWVkIG9uZS10by1vbmUgc3VwZXJ2aXNpb24uCkNoaWxkcmVuIGFyZSBkZXNpZ25lZCB0byBwcm90ZWN0IHRoZW1zZWx2ZXMuCkNoaWxkcmVuLCBpZiB0aGV5IHN0dW1ibGUsIHdpbGwgcHJvdGVjdCB0aGVtc2VsdmVzLgpUaGV5IG5lZWQgdG8gbGVhcm4gaG93IHRvIG1vdmUgaW4gYW55IGdpdmVuIHNpdHVhdGlvbiBpbiBhIHdheSB0aGF0IHdpbGwgcHJvdGVjdCB0aGVtIGZyb20gaW5qdXJ5LgpJZiB0aGV5IGRvIG5vdCBoYXZlIHRoYXQgZmFjaWxpdHksIGlmIHdlIHdyYXAgdGhlbSB1cCBpbiBjb3R0b24gd29vbCwgdGhlbiB0aGV5IHdpbGwgbmV2ZXIgbGVhcm4uCkFmdGVyIHRoZSBoZWFyaW5nIFN0ZXZlIFNjb3R0LCBwcmluY2lwYWwgaW5zcGVjdG9yIGZvciB0aGUgSFNFLCBzYWlkIHRoYXQgdGhlIGNhc2Ugd2FzIG5vdCBhYm91dCByZXN0cmljdGluZyBjaGlsZHJlbidzIHBsYXkgaW4gc2Nob29scy4KSGVhZG1hc3RlcnMgc2hvdWxkIG5vdCBmZWFyIHRoYXQgdGhleSBjb3VsZCBub3cgZmFjZSBlbmZvcmNlbWVudCBhY3Rpb24gZm9yIHRoZSBvcmRpbmFyeSwgZXZlcnlkYXkgaW5jaWRlbnRzIHRoYXQgb2Z0ZW4gaGFwcGVuIHRvIGNoaWxkcmVuLgpCdXQgaGUgc2FpZCB0aGF0IGEgYmFsYW5jZSBuZWVkZWQgdG8gYmUgc3RydWNrIGJldHdlZW4gdGhlIHJpc2tzIGFuZCBiZW5lZml0cy4KVmVyeSBzbWFsbCBjaGlsZHJlbiBzaG91bGQgbm90IGJlIGxlZnQgZWZmZWN0aXZlbHkgdW5zdXBlcnZpc2VkLgpJdCB3YXMgbm90IHBvc3NpYmxlIGZvciB0aGUgdGVhY2hlciBvbiBkdXR5IHRoYXQgZGF5IHRvIHNlZSBhbGwgcGFydHMgb2YgdGhlIHNwbGl0LWxldmVsIHBsYXlncm91bmQuClNvbWUgYXJlYXMgd2VyZSBzaW1wbHkgb3V0IG9mIHNpZ2h0LgpTdGVmZmFuIEdyb2NoLCB0aGUgaGVhZG1hc3RlcidzIHNvbGljaXRvciwgc2FpZCB0aGF0IGhpcyBjbGllbnQgaW50ZW5kZWQgdG8gYXBwZWFsIGFnYWluc3QgdGhlIGNvbnZpY3Rpb24uCkhlIGRlc2NyaWJlZCB0aGUgc2Nob29sIGFzIGEgbGFib3VyIG9mIGxvdmUgZm9yIE1yIFBvcnRlciBhbmQgaGlzIHdpZmUsIFN5bHZpYS4KSGUgc2FpZDogIlRoaXMgdmVyZGljdCBtZWFucyB0aGF0IGEgaGlnaGx5IHJlc3BvbnNpYmxlIGFuZCBkZWRpY2F0ZWQgaGVhZG1hc3RlciBoYXMgYmVlbiBnaXZlbiBhIGNyaW1pbmFsIHJlY29yZCBvdmVyIGEgdHJhZ2VkeSwgZGVzY3JpYmVkIGluIGNvdXJ0IGFzIG9uZSBpbiBhIG1pbGxpb24uClRoZSBwZW5hbHR5IGlzIGEgaGFyc2ggb25lIGZvciBzb21lb25lIHdobyBoYXMgbm90IGJ1aWx0IHVwIGFueSBtZWFuaW5nZnVsIHNhdmluZ3MgYXMgYSByZXN1bHQgb2YgaGlzIGNob3NlbiBwcm9mZXNzaW9uIGFuZCBkZWRpY2F0aW9uIHRvIHRoZSBwdXBpbHMuCk1yIEdyb2NoIHNhaWQgdGhhdCBNciBQb3J0ZXIgaGFkIHJlY2VpdmVkIGxldHRlcnMgb2Ygc3VwcG9ydCBmcm9tIGFsbCBhcm91bmQgdGhlIHdvcmxkLCBpbmNsdWRpbmcgZnJvbSB0ZWFjaGVycyBhbmQgb3RoZXIgYWNhZGVtaWMgc3RhZmYgY29uY2VybmVkIGFib3V0IHRoZSAiZW5vcm1vdXMgYWZ0ZXItc2hvY2tzIiB0byBlZHVjYXRpb24gaW4gdGhpcyBjb3VudHJ5Lgo=, 'GPE')]
QW4gYW5hZXN0aGV0aWMgdGhhdCBjYW4gYmxvY2sgcGFpbiB3aXRob3V0IGltcGFpcmluZyBtb3ZlbWVudCwgdG91Y2ggb3IgbWVudGFsIGF3YXJlbmVzcyBoYXMgYmVlbiBkZXZlbG9wZWQgdXNpbmcgdGhlIGNoZW1pY2FsIHRoYXQgZ2l2ZXMgY2hpbGxpIHBlcHBlcnMgdGhlaXIga2ljay4KVGhlIGRydWcgY29ja3RhaWwsIGJhc2VkIG9uIGNhcHNhaWNpbiwgcHJvbWlzZXMgdG8gdHJhbnNmb3JtIHBhaW4gbWFuYWdlbWVudCBieSByZWxpZXZpbmcgdGhlIHBhaW4gaXRzZWxmIHdpdGhvdXQgZGlzcnVwdGluZyBvdGhlciBiaW9sb2dpY2FsIGZ1bmN0aW9ucy4KSXQgaXMgbGlrZWx5IHRvIHByb3ZlIHVzZWZ1bCBhcyBhbiBhbHRlcm5hdGl2ZSB0byBlcGlkdXJhbHMgZHVyaW5nIGNoaWxkYmlydGgsIGFzIGl0IHdvdWxkIG5vdCBjYXVzZSBudW1ibmVzcyBvciBwYXJhbHlzaXMsIGFsbG93aW5nIG1vdGhlcnMgdG8gcmVtYWluIHJlc3BvbnNpdmUgdG8gdGhlaXIgYm9kaWVzIGFuZCBtb3JlIGF3YXJlIG9mIHRoZSBleHBlcmllbmNlLgpPdGhlciBhcHBsaWNhdGlvbnMgY291bGQgaW5jbHVkZSBwb3N0b3BlcmF0aXZlIHBhaW4gcmVsaWVmIC0gcGFydGljdWxhcmx5IGFmdGVyIGpvaW50IHN1cmdlcnksIHdoZW4gc2Vuc2F0aW9uIGNhbiBoZWxwIHJlaGFiaWxpdGF0aW9uIC0gYXMgd2VsbCBhcyBpbiBkZW50aXN0cnkgYW5kIGluIGZpZ2h0aW5nIHRoZSBwYWluIGNhdXNlZCBieSBjaHJvbmljIGFuZCB0ZXJtaW5hbCBpbGxuZXNzLgpVbmxpa2Ugc3Ryb25nIHBhaW5raWxsZXJzIHN1Y2ggYXMgbW9ycGhpbmUsIHdoaWNoIGFyZSB1c2VkIGluIHRoZSBsYXRlciBzdGFnZXMgb2YgY2FuY2VyLCBpdCB3b3VsZCBub3QgYWZmZWN0IHBhdGllbnRzIiBtZW50YWwgZnVuY3Rpb24uCkl0IGNvdWxkIGFsc28gYmUgdXNlZnVsIGluIHNwb3J0cyBtZWRpY2luZSwgYWxsb3dpbmcgaW5qdXJlZCBwbGF5ZXJzIHRvIHRha2UgcGFydCBpbiBpbXBvcnRhbnQgbWF0Y2hlcy4KQXQgcHJlc2VudCwgbW9zdCBhbmFlc3RoZXRpY3MsIGluY2x1ZGluZyBsb2NhbCBhbmFlc3RoZXRpY3Mgc3VjaCBhcyBsaWRvY2FpbmUsIHdvcmsgYnkgc2h1dHRpbmcgZG93biBhY3Rpdml0eSBpbiBhbGwgdHlwZXMgb2YgbmV1cm9ucywgY2F1c2luZyBudW1ibmVzcyBhbmQgcGFyYWx5c2lzLgpUaGlzIGlzIG5vdCBub3JtYWxseSBhIHByb2JsZW0gZHVyaW5nIGdlbmVyYWwgYW5hZXN0aGVzaWEgZm9yIG1ham9yIHN1cmdlcnksIGluIHdoaWNoIG11c2NsZSByZWxheGFudHMgYXJlIG9mdGVuIGdpdmVuIHRvIHByZXZlbnQgc3VkZGVuIGludm9sdW50YXJ5IG1vdmVtZW50cy4KQnV0IGl0IGNhbiBiZSBwcm9ibGVtYXRpYyB3aGVuIHBhdGllbnRzIHJlbWFpbiBjb25zY2lvdXMgb3IgcmVxdWlyZSByZWxpZWYgZnJvbSBjaHJvbmljIHBhaW4uCk51bWJuZXNzIGNhbiBiZSB1bmNvbWZvcnRhYmxlIGluIGl0c2VsZiwgYW5kIHRoZSBsb3NzIG9mIHRvdWNoLCBtb3ZlbWVudCwgY28tb3JkaW5hdGlvbiBvciBtZW50YWwgYWxlcnRuZXNzIGNhbiBiZSBkaXN0cmVzc2luZyBvciBtZWRpY2FsbHkgZGFtYWdpbmcuClRoZSBuZXcgYW5hZXN0aGV0aWMsIGRldmVsb3BlZCBieSBzY2llbnRpc3RzIGF0IEhhcnZhcmQgTWVkaWNhbCBTY2hvb2wgaW4gQm9zdG9uLCBNYXNzYWNodXNldHRzLCB1c2VzIGEgY29tYmluYXRpb24gb2YgdHdvIGNoZW1pY2FscyB0byB0YXJnZXQgb25seSBwYWluLXNlbnNpbmcgbmV1cm9ucywgb3Igbm9jaXJlY2VwdG9ycywgd2hpbGUgbGVhdmluZyBvdGhlciB0eXBlcywgc3VjaCBhcyBtb3RvciBuZXVyb25zLCB1bnRvdWNoZWQuClRoZSBmaXJzdCBlbGVtZW50IG9mIHRoZSBjb2NrdGFpbCBpcyBRWC0zMTQsIGEgZGVyaXZhdGl2ZSBvZiBsaWRvY2FpbmUsIHdoaWNoIGJsb2NrcyBlbGVjdHJpY2FsIGFjdGl2aXR5IGluIG5ldXJvbnMuCk9uIGl0cyBvd24sIGhvd2V2ZXIsIGl0IGNhbm5vdCBnZXQgdGhyb3VnaCBjZWxsIG1lbWJyYW5lcyB0byBjYXVzZSB0aGlzIGFuYWVzdGhldGljIGVmZmVjdC4KVGhlIHNlY29uZCBlbGVtZW50LCBjYXBzYWljaW4sIHRhcmdldHMgcGFpbi1zZW5zaW5nIG5ldXJvbnMsIG9wZW5pbmcgcG9yZXMga25vd24gYXMgVFJQVjEgY2hhbm5lbHMgdGhhdCBhcmUgZm91bmQgaW4gdGhlc2UgbmVydmUgY2VsbHMgYnV0IG5vdCBpbiBvdGhlciBraW5kcy4KVGhpcyBtZWFucyB0aGF0IFFYLTMxNCBlbnRlcnMgb25seSBub2NpcmVjZXB0b3JzLCBibG9ja2luZyBwYWluIHdpdGhvdXQgYWZmZWN0aW5nIG1vdmVtZW50IG9yIHRvdWNoLgpJbiBhIHN0dWR5IHB1Ymxpc2hlZCBpbiB0aGUgam91cm5hbCBOYXR1cmUsIGEgdGVhbSBsZWQgYnkgUHJvZmVzc29yIENsaWZmb3JkIFdvb2xmIGFuZCBQcm9mZXNzb3IgQnJ1Y2UgQmVhbiBoYXMgc2hvd24gdGhhdCB0aGUgY29tYmluYXRpb24gdGhlcmFweSB3b3JrcyB3ZWxsIGluIHJhdHMuCldoZW4gaW5qZWN0ZWQgbmVhciB0aGUgc2NpYXRpYyBuZXJ2ZXMsIHdoaWNoIHJ1biBkb3duIHRoZSBoaW5kIGxpbWJzLCB0aGUgYW5hZXN0aGV0aWMgZWxpbWluYXRlZCBwYWluIGluIHRoZWlyIHBhd3MuCkZpdmUgb3V0IG9mIHRoZSBzaXggYW5pbWFscyBpbmplY3RlZCBjb250aW51ZWQgdG8gbW92ZSBhbmQgYmVoYXZlIG5vcm1hbGx5LCBpbmRpY2F0aW5nIHRoYXQgdGhlcmUgaGFkIGJlZW4gbm8gaW1wYWlybWVudCBvZiBvdGhlciBuZXVyb2xvZ2ljYWwgZnVuY3Rpb25zLgpQcm9mZXNzb3IgV29vbGYgc2FpZDogIlN1cmdpY2FsIHBhaW4gaXMgdGhlIG9idmlvdXMgZmlyc3QgYXBwbGljYXRpb24gZm9yIHRoaXMgdHJlYXRtZW50LgpXZSdyZSBvcHRpbWlzdGljIHRoYXQgdGhpcyBtZXRob2Qgd2lsbCBldmVudHVhbGx5IGJlIGFwcGxpZWQgdG8gaHVtYW5zIGFuZCBjaGFuZ2Ugb3VyIGV4cGVyaWVuY2UgZHVyaW5nIHByb2NlZHVyZXMgcmFuZ2luZyBmcm9tIGtuZWUgc3VyZ2VyeSB0byB0b290aCBleHRyYWN0aW9ucy4KUHJvZmVzc29yIEJlYW4gYWRkZWQ6ICJXZSd2ZSBpbnRyb2R1Y2VkIGEgbG9jYWwgYW5hZXN0aGV0aWMgc2VsZWN0aXZlbHkgaW50byBzcGVjaWZpYyBwb3B1bGF0aW9ucyBvZiBuZXVyb25zLgpOb3cgd2UgY2FuIGJsb2NrIHRoZSBhY3Rpdml0eSBvZiBwYWluLXNlbnNpbmcgbmV1cm9ucyB3aXRob3V0IGRpc3J1cHRpbmcgb3RoZXIga2luZHMgb2YgbmV1cm9ucyB0aGF0IGNvbnRyb2wgbW92ZW1lbnRzIG9yIG5vbi1wYWluZnVsIHNlbnNhdGlvbnMuClN0b3J5IExhbmRpcywgZGlyZWN0b3Igb2YgdGhlIFVTIE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBOZXVyb2xvZ2ljYWwgRGlzb3JkZXJzIGFuZCBTdHJva2UsIHdoaWNoIGZ1bmRlZCB0aGUgc3R1ZHksIHNhaWQ6ICJUaGUgaG9seSBncmFpbCBpbiBwYWluIHNjaWVuY2UgaXMgdG8gZWxpbWluYXRlIHBhdGhvbG9naWMgcGFpbiB3aXRob3V0IGltcGFpcmluZyB0aGlua2luZywgYWxlcnRuZXNzLCBjby1vcmRpbmF0aW9uLCBvciBvdGhlciB2aXRhbCBmdW5jdGlvbnMgb2YgdGhlIG5lcnZvdXMgc3lzdGVtLgpUaGlzIGZpbmRpbmcgc2hvd3MgdGhhdCBhIHNwZWNpZmljIGNvbWJpbmF0aW9uIG9mIHR3byBtb2xlY3VsZXMgY2FuIGJsb2NrIG9ubHkgcGFpbi1yZWxhdGVkIG5ldXJvbnMuCkl0IGhvbGRzIHRoZSBwcm9taXNlIG9mIG1ham9yIGZ1dHVyZSBicmVha3Rocm91Z2hzIGZvciB0aGUgbWlsbGlvbnMgb2YgcGVyc29ucyB3aG8gc3VmZmVyIHdpdGggZGlzYWJsaW5nIHBhaW4uClByb2Zlc3NvciBXb29sZiBzYWlkOiAiRXZlbnR1YWxseSB0aGlzIG1ldGhvZCBjb3VsZCBjb21wbGV0ZWx5IHRyYW5zZm9ybSBzdXJnaWNhbCBhbmQgcG9zdHN1cmdpY2FsIGFuYWxnZXNpYSwgYWxsb3dpbmcgcGF0aWVudHMgdG8gcmVtYWluIGZ1bGx5IGFsZXJ0IHdpdGhvdXQgZXhwZXJpZW5jaW5nIHBhaW4gb3IgcGFyYWx5c2lzLgpJbiBmYWN0LCB0aGUgcG9zc2liaWxpdGllcyBzZWVtIGVuZGxlc3MuCkkgY291bGQgZXZlbiBpbWFnaW5lIHVzaW5nIHRoaXMgbWV0aG9kIHRvIHRyZWF0IGl0Y2gsIGFzIGl0Y2gtc2Vuc2l0aXZlIG5ldXJvbnMgZmFsbCBpbnRvIHRoZSBzYW1lIGdyb3VwIGFzIHBhaW4tc2Vuc2luZyBvbmVzLgpEb2N0b3IgcGVwcGVyCkNhcHNhaWNpbiBpcyB0aGUgc3Vic3RhbmNlIHRoYXQgZ2l2ZXMgdGhlIGNoaWxsaSBpdHMgaGVhdCwgd2l0aCBob3R0ZXIgcGVwcGVycyBjb250YWluaW5nIG1vcmUgY2Fwc2FpY2luLgpJdCB3YXMgZmlyc3QgZGlzY292ZXJlZCBpbiAxODE2IGFuZCBmaXJzdCBleHRyYWN0ZWQgaW4gMTk2NC4KQ2hpbGxpIGhlYXQgaXMgbWVhc3VyZWQgaW4gU2NvdmlsbGUgSGVhdCBVbml0cyAoU0hVKS4KUHVyZSBjYXBzYWljaW4gc2NvcmVzIDE2IG1pbGxpb24gU0hVLCBoYWJhbmVybyAzMDAsMDAwIFNIVSBhbmQgamFsYXBlw7FvcyB0byAzLDAwMCB0byA2LDAwMCBTSFUuClRoZSBob3R0ZXN0IGNoaWxsaXMgc2NvcmUgMSBtaWxsaW9uIFNIVS4KVHJhZGl0aW9uYWxseSwgc3BpY2VzIHN1Y2ggYXMgY2hpbGxpIGhhdmUgYmVlbiB1c2VkIHRvIHJlZHVjZSBtaWNyb2JpYWwgY29udGFtaW5hdGlvbiBvZiBmb29kLgpDaGlsbGkgY2FuIGVhc2Ugc3ltcHRvbXMgb2YgY29sZHMgYnkgdGhpbm5pbmcgbmFzYWwgbXVjdXMuCkNhcHNhaWNpbiBjcmVhbXMgY2FuIHByb3ZpZGUgdG9waWNhbCBwYWluIHJlbGllZiBmb3IgY29uZGl0aW9ucyBzdWNoIGFzIGFydGhyaXRpcyBhbmQgc2hpbmdsZXMuCg==
[]
TWFyY3VzIExlcm91eCBhbmQgYWdlbmNpZXMKTWFkb25uYSBpcyB0byBsZWF2ZSBXYXJuZXIgTXVzaWMsIGhlciBsb25nLXRpbWUgcmVjb3JkIGxhYmVsLCB0byBzaWduIGEgJDEyMCBtaWxsaW9uICjCozYwIG1pbGxpb24pIGRlYWwgd2l0aCBMaXZlIE5hdGlvbiwgdGhlIGNvbmNlcnQgcHJvbW90ZXIgYmVoaW5kIHRoZSBMaXZlIDggZXZlbnRzLgpNYWRvbm5hJ3MgbWFuYWdlbWVudCB0b2xkIFdhcm5lciBsYXN0IHdlZWsgdGhhdCBzaGUgd291bGQgYWNjZXB0IExpdmUgTmF0aW9uJ3Mgb2ZmZXIgYWZ0ZXIgV2FybmVyIHJlZnVzZWQgdG8gbWF0Y2ggaXQuClRoZSBlbnRlcnRhaW5lciwgNDksIGhhcyByZWNvcmRlZCBmb3IgV2FybmVyIHNpbmNlIGhlciBlcG9ueW1vdXMgMTk4MyBkZWJ1dC4KVGhlIG1vdmUgaXMgc2VlbiBhcyBhIGxhbmRtYXJrIGRlYWwgaW4gdGhlIHJlY29yZGluZyBpbmR1c3RyeSBiZWNhdXNlIGl0IHdpbGwgY29tYmluZSB0b3VyaW5nIGFuZCByZWNvcmRpbmcgcmlnaHRzLCBhbiBhcnJhbmdlbWVudCByZWdhcmRlZCBhcyBpbmNyZWFzaW5nbHkgYXR0cmFjdGl2ZSBhcyByZWNvcmQgY29tcGFuaWVzIGFuZCBwcm9tb3RlcnMgZGl2ZXJzaWZ5IGluIHJlc3BvbnNlIHRvIHRoZSB0aHJlYXQgb2Ygb25saW5lIHBpcmFjeSBhbmQgZHdpbmRsaW5nIGFsYnVtcyBzYWxlcy4KVW5kZXIgdGhlIGRlYWwsIExpdmUgTmF0aW9uIHdpbGwgaGF2ZSB0aGUgZXhjbHVzaXZlIHJpZ2h0cyB0byBwcm9tb3RlIGhlciBsdWNyYXRpdmUgdG91cnMuCkhlciAyMDA2IENvbmZlc3Npb25zIHRvdXIgZ3Jvc3NlZCAkMjYwLjEgbWlsbGlvbiwgYWNjb3JkaW5nIHRvIEJpbGxib2FyZCwgaW5jbHVkaW5nIGVpZ2h0IHNlbGxvdXQgcGVyZm9ybWFuY2VzIGF0IFdlbWJsZXkgQXJlbmEsIHdoaWNoIGlzIG1hbmFnZWQgYnkgTGl2ZSBOYXRpb24uCk1hZG9ubmEgd2lsbCByZWNlaXZlIGEgc2lnbmluZyBib251cyBvZiBhYm91dCAkMTggbWlsbGlvbiBhbmQgYW4gYWR2YW5jZSBvZiByb3VnaGx5ICQxNyBtaWxsaW9uIGZvciBlYWNoIG9mIHRocmVlIGFsYnVtcyB1bmRlciBhIHRlbi15ZWFyIGRlYWwsIGEgc291cmNlIHRvbGQgQXNzb2NpYXRlZCBQcmVzcy4KQSBwb3J0aW9uIG9mIHRoZSBjb21wZW5zYXRpb24gd2lsbCBpbnZvbHZlIHN0b2NrLgpJdCBpcyBpbmNyZWFzaW5nbHkgY29tbW9uIGZvciBsYWJlbHMgdG8gc3RyaWtlIGRlYWxzIHRoYXQgZ2l2ZSB0aGVtIGFjY2VzcyB0byBhcnRpc3RzIiB0aWNrZXQgc2FsZXMuCkxpdmUgTmF0aW9uLCB3aGljaCBwcm9tb3RlcyBhbmQgcHJvZHVjZXMgbXVzaWMgc2hvd3MsIHRoZWF0cmljYWwgcGVyZm9ybWFuY2VzIGFuZCBvdGhlciBsaXZlIGV2ZW50cyB3b3JsZHdpZGUsIGhhcyBiZWVuIGxvb2tpbmcgdG8gZXhwYW5kIGJleW9uZCBpdHMgY29yZSBidXNpbmVzc2VzIHRvIG9mZmVyIGFydGlzdHMgc2VydmljZXMgc3VjaCBhcyBkaXJlY3QgbWVyY2hhbmRpc2luZyBhbmQgZXhjbHVzaXZlIHRpY2tldCBzYWxlcy4KSXRzIEFydGlzdCBOYXRpb24gZGl2aXNpb24gc2VsbHMgdGlja2V0cyBhbmQgYXJ0aXN0IG1lcmNoYW5kaXNlIG9ubGluZS4KV2FybmVyLCBob3dldmVyLCByZXRhaW5zIHRoZSByaWdodHMgdG8gc2VsbCBhbmQgbGljZW5zZSBoZXIgYmFjayBjYXRhbG9ndWUsIGluY2x1ZGluZyBoaXRzIHN1Y2ggYXMgTGlrZSBhIFZpcmdpbiBhbmQgTWF0ZXJpYWwgR2lybC4K
[(TWFyY3VzIExlcm91eCBhbmQgYWdlbmNpZXMKTWFkb25uYSBpcyB0byBsZWF2ZSBXYXJuZXIgTXVzaWMsIGhlciBsb25nLXRpbWUgcmVjb3JkIGxhYmVsLCB0byBzaWduIGEgJDEyMCBtaWxsaW9uICjCozYwIG1pbGxpb24pIGRlYWwgd2l0aCBMaXZlIE5hdGlvbiwgdGhlIGNvbmNlcnQgcHJvbW90ZXIgYmVoaW5kIHRoZSBMaXZlIDggZXZlbnRzLgpNYWRvbm5hJ3MgbWFuYWdlbWVudCB0b2xkIFdhcm5lciBsYXN0IHdlZWsgdGhhdCBzaGUgd291bGQgYWNjZXB0IExpdmUgTmF0aW9uJ3Mgb2ZmZXIgYWZ0ZXIgV2FybmVyIHJlZnVzZWQgdG8gbWF0Y2ggaXQuClRoZSBlbnRlcnRhaW5lciwgNDksIGhhcyByZWNvcmRlZCBmb3IgV2FybmVyIHNpbmNlIGhlciBlcG9ueW1vdXMgMTk4MyBkZWJ1dC4KVGhlIG1vdmUgaXMgc2VlbiBhcyBhIGxhbmRtYXJrIGRlYWwgaW4gdGhlIHJlY29yZGluZyBpbmR1c3RyeSBiZWNhdXNlIGl0IHdpbGwgY29tYmluZSB0b3VyaW5nIGFuZCByZWNvcmRpbmcgcmlnaHRzLCBhbiBhcnJhbmdlbWVudCByZWdhcmRlZCBhcyBpbmNyZWFzaW5nbHkgYXR0cmFjdGl2ZSBhcyByZWNvcmQgY29tcGFuaWVzIGFuZCBwcm9tb3RlcnMgZGl2ZXJzaWZ5IGluIHJlc3BvbnNlIHRvIHRoZSB0aHJlYXQgb2Ygb25saW5lIHBpcmFjeSBhbmQgZHdpbmRsaW5nIGFsYnVtcyBzYWxlcy4KVW5kZXIgdGhlIGRlYWwsIExpdmUgTmF0aW9uIHdpbGwgaGF2ZSB0aGUgZXhjbHVzaXZlIHJpZ2h0cyB0byBwcm9tb3RlIGhlciBsdWNyYXRpdmUgdG91cnMuCkhlciAyMDA2IENvbmZlc3Npb25zIHRvdXIgZ3Jvc3NlZCAkMjYwLjEgbWlsbGlvbiwgYWNjb3JkaW5nIHRvIEJpbGxib2FyZCwgaW5jbHVkaW5nIGVpZ2h0IHNlbGxvdXQgcGVyZm9ybWFuY2VzIGF0IFdlbWJsZXkgQXJlbmEsIHdoaWNoIGlzIG1hbmFnZWQgYnkgTGl2ZSBOYXRpb24uCk1hZG9ubmEgd2lsbCByZWNlaXZlIGEgc2lnbmluZyBib251cyBvZiBhYm91dCAkMTggbWlsbGlvbiBhbmQgYW4gYWR2YW5jZSBvZiByb3VnaGx5ICQxNyBtaWxsaW9uIGZvciBlYWNoIG9mIHRocmVlIGFsYnVtcyB1bmRlciBhIHRlbi15ZWFyIGRlYWwsIGEgc291cmNlIHRvbGQgQXNzb2NpYXRlZCBQcmVzcy4KQSBwb3J0aW9uIG9mIHRoZSBjb21wZW5zYXRpb24gd2lsbCBpbnZvbHZlIHN0b2NrLgpJdCBpcyBpbmNyZWFzaW5nbHkgY29tbW9uIGZvciBsYWJlbHMgdG8gc3RyaWtlIGRlYWxzIHRoYXQgZ2l2ZSB0aGVtIGFjY2VzcyB0byBhcnRpc3RzIiB0aWNrZXQgc2FsZXMuCkxpdmUgTmF0aW9uLCB3aGljaCBwcm9tb3RlcyBhbmQgcHJvZHVjZXMgbXVzaWMgc2hvd3MsIHRoZWF0cmljYWwgcGVyZm9ybWFuY2VzIGFuZCBvdGhlciBsaXZlIGV2ZW50cyB3b3JsZHdpZGUsIGhhcyBiZWVuIGxvb2tpbmcgdG8gZXhwYW5kIGJleW9uZCBpdHMgY29yZSBidXNpbmVzc2VzIHRvIG9mZmVyIGFydGlzdHMgc2VydmljZXMgc3VjaCBhcyBkaXJlY3QgbWVyY2hhbmRpc2luZyBhbmQgZXhjbHVzaXZlIHRpY2tldCBzYWxlcy4KSXRzIEFydGlzdCBOYXRpb24gZGl2aXNpb24gc2VsbHMgdGlja2V0cyBhbmQgYXJ0aXN0IG1lcmNoYW5kaXNlIG9ubGluZS4KV2FybmVyLCBob3dldmVyLCByZXRhaW5zIHRoZSByaWdodHMgdG8gc2VsbCBhbmQgbGljZW5zZSBoZXIgYmFjayBjYXRhbG9ndWUsIGluY2x1ZGluZyBoaXRzIHN1Y2ggYXMgTGlrZSBhIFZpcmdpbiBhbmQgTWF0ZXJpYWwgR2lybC4K, 'ORG')]
Q2xpY2sgaGVyZSB0byBzZWUgbmV3IGNvbW11dGluZyBhcmVhcyBhcm91bmQgRW5nbGFuZApUV0VOVFkgRklWRSBtaWxsaW9uIEJyaXRvbnMgY29tbXV0ZSBkYWlseSBiZXR3ZWVuIHRoZWlyIGhvbWVzIGFuZCB3b3JrLgpXaGVyZSB0aGUgY29tbXV0ZXIsIHRoYXQgbG9uZy1zdWZmZXJpbmcgY2xpY2jDqSBvZiBtb2Rlcm4gc29jaWV0eSwgY2hvb3NlcyB0byBidXkgaGlzIG9yIGhlciBob21lIGFmZmVjdHMgdXMgYWxsLgpJbiBhIHNwZWNpYWwgaXNzdWUgZGVkaWNhdGVkIHRvIHRoZSBjb21tdXRlciwgd2UgYnJpbmcgeW91IGVtZXJnaW5nIHByb3BlcnR5IHRyZW5kcywgaG90IHRpcHMgYW5kIHBlcnNvbmFsIGNvbW11dGluZyBleHBlcmllbmNlcy4KTWFua2luZCBoYXMgYWx3YXlzIHRyYXZlbGxlZCB0byBmaW5kIHBhaWQgZW1wbG95bWVudC4KWWV0IHRoZSBwcmFjdGljZSBvZiB0cmF2ZWxsaW5nIGZyb20gaG9tZSB0byB3b3JrIGFuZCBiYWNrIGFnYWluIGhhcyBmb3VuZCBpdHMgbW9zdCBleHRyZW1lIGV4cHJlc3Npb24gaW4gbW9kZXJuIEJyaXRhaW4sIHdoZXJlIHRoZSBwb3N0d2FyIGRyaWZ0IHRvIHRoZSBzdWJ1cmJzIGhhcyBiZWNvbWUgYSBmbG9vZCwgZHJpdmVuIGJ5IHJvY2tldGluZyBjaXR5LWNlbnRyZSBob3VzZSBwcmljZXMsIHJpc2luZyAicXVhbGl0eSBvZiBsaWZlIiBleHBlY3RhdGlvbnMgYW5kIHRoZSB0YWtlb3ZlciBvZiB0b3duIGNlbnRyZXMgYnkgY29tbWVyY2lhbCBpbnRlcmVzdHMuCk1vcmUgdGhhbiBlaWdodCBpbiB0ZW4gcGVvcGxlIGluIEVuZ2xhbmQgbm93IGxpdmUgaW4gYXJlYXMgY2xhc3NpZmllZCBhcyBzdWJ1cmJhbiwgYWNjb3JkaW5nIHRvIHRoZSBMb2NhbCBGdXR1cmVzIHRoaW5rLXRhbmssIHdoaWNoLCBpbiBhIHJlcG9ydCBsYXN0IHllYXIsIHNhaWQgdGhhdCBtb2JpbGUgImtub3dsZWRnZSB3b3JrZXJzIiBub3cgInNlZWsgdGhlaXIgZWNvbm9taWMgd2VsbC1iZWluZyBpbiBvbmUgcGxhY2UgYW5kIHRoZWlyIHNvY2lhbCB3ZWxsLWJlaW5nL3F1YWxpdHkgb2YgbGlmZSBlbHNld2hlcmUuIgpUaGUgdW5pbnRlbmRlZCBlZmZlY3QgaGFzIGJlZW4gdG8gInJlbmRlciBsYXJnZSBzd2F0aHMgb2YgdGhlIFNvdXRoIEVhc3QgdW5hZmZvcmRhYmxlLiIKQSByZWNlbnQgcmVwb3J0IGZyb20gdGhlIFJBQyBjYXB0dXJlcyB0aGUgc2NhbGUgb2YgdGhlIHBoZW5vbWVub24uClRoZSBhdmVyYWdlIGRhaWx5IGNvbW11dGUgdGFrZXMgNTQgbWludXRlcywgZXhjZXB0IGluIExvbmRvbiwgd2hlcmUgaXQgcmlzZXMgdG8gODYgbWludXRlcywgYW5kIHRoZSBhdmVyYWdlIGNvbW11dGVyIHRyYXZlbHMgZmFyIGVub3VnaCB0byBlbmNpcmNsZSB0aGUgZ2xvYmUgdHdvIGFuZCBhIGhhbGYgdGltZXMgZHVyaW5nIHRoZSBjb3Vyc2Ugb2YgaGlzIG9yIGhlciB3b3JraW5nIGxpZmUuClN0aWxsLCBpZiBjb21tdXRpbmcgaXMgb3VyIGxvdCwgd2UgbXVzdCBtYWtlIHRoZSBiZXN0IG9mIGl0LgpJbiB0aGUgZm9sbG93aW5nIHBhZ2VzLCB3ZSBzaG93IGhvdyBjb21tdXRlciB0b3ducyBzdWNoIGFzIFJlYWRpbmcgYXJlIGJlaW5nIHNwcnVjZWQgdXA7IGhvdyB0aGUgbW9uZXkgc3ByZWFkaW5nIG91dCBmcm9tIHRoZSBjaXRpZXMgKGFzIGZhbWlsaWVzIGFyZSBmb3JjZWQgb3V0IGJ5IHJpc2luZyBob3VzZSBwcmljZXMpIGlzIGluamVjdGluZyBuZXcgbGlmZSBpbnRvIG5lZ2xlY3RlZCB0b3ducyBzdWNoIGFzIEJhbmJ1cnksIEhlcm5lIEJheSBhbmQgTm9ydGggU2hpZWxkczsgaG93IG5ldyBzdWJ1cmJzLCBjb21wbGV0ZSB3aXRoIGFsbG90bWVudHMsIGFyZSBzcHJpbmdpbmcgdXAgcm91bmQgTGVlZHMsIGFuZCBob3cgV2VzdG9uLXN1cGVyLU1hcmUgaXMgYWJvdXQgdG8gYmVjb21lIHRoZSBuZXcgQnJpZ2h0b24uCllldCwgd2hpbGUgdGhlIHRyYWRpdGlvbmFsIGNvbW11dGVyIGJlbHRzIGFyZSB0aHJpdmluZywgdHdvIHRyZW5kcyBhcmUgZW1lcmdpbmcgdGhhdCBzaWduYWwgYSBzaGlmdCBhd2F5IGZyb20gdGhlIGRvbWluYW5jZSBvZiB0aGUgZGFpbHkgY29tbXV0ZS4KVGhlIGZpcnN0IGlzIHRoZSBpbmNyZWFzaW5nIHZpYWJpbGl0eSBvZiBmbGV4aWJsZSB3b3JraW5nLgpBcyB3ZSByZXBvcnQgb24gcGFnZSAxNiwgTHVjaWFuIENvb2ssIG9mIFNhdmlsbHMsIGNhbGN1bGF0ZXMgdGhhdCBldmVyeSBtaW51dGUgc3BlbnQgY29tbXV0aW5nIGJyaW5ncyB0aGUgYXZlcmFnZSBob3VzZSBwcmljZSBkb3duIGJ5IMKjMSwwMDAuClNvbWUgY29tbXV0ZXJzIGFyZSB0aGVyZWZvcmUgY2hvb3NpbmcgdG8gYnV5IGZhcnRoZXIgb3V0IGFuZCB3b3JrIGZyb20gaG9tZSBwYXJ0LXRpbWUuClRoZSBzZWNvbmQgaXMgdGhlIHZhc3Qgc3VtcyBvZiBtb25leSBiZWluZyBwb3VyZWQgaW50byB0b3duLWNlbnRyZSByZWdlbmVyYXRpb24uCk11Y2ggb2YgdGhpcyBpcyBkZWRpY2F0ZWQgdG8gcHJvdmlkaW5nIG5ldyBob3VzaW5nIGRldmVsb3BtZW50cyBmb3IgeW91bmcgcHJvZmVzc2lvbmFscyBpbiBjaXR5IGNlbnRyZXMsIHdobyB0aHVzIGhhdmUgbm8gbmVlZCB0byBjb21tdXRlLgpCcmlzdG9sIGFuZCBHbGFzZ293IGFyZSB0d28gZXhhbXBsZXMsIGFzIHdlIGlsbHVzdHJhdGUgaW4gdGhpcyBzcGVjaWFsIGlzc3VlLgpFdmVudHVhbGx5LCBob3dldmVyLCBtb3N0IHlvdW5nIHByb2Zlc3Npb25hbHMiIHRob3VnaHRzIHR1cm4gdG8gbmVzdGluZywgYW5kIGEgbW92ZSB0byBhIGNvbW11dGFibGUgcGFydCBvZiB0aGUgY291bnRyeSBpcyB0aGVuIG9ubHkgYSBtYXR0ZXIgb2YgdGltZS4KQnV0IHdoZXJlPwpPdXIgZ3JhcGhpYywgcmlnaHQsIHdpbGwgdGVsbCB5b3UgZXZlcnl0aGluZyB5b3UgbmVlZCB0byBrbm93IC0gZnJvbSBob3VzZSBwcmljZXMgdG8gdGhlIGNvc3Qgb2YgYW4gYW5udWFsIHNlYXNvbiB0aWNrZXQtIGFib3V0IHRoZSBuZXcgY29tbXV0ZXIgaG90IHNwb3RzLgo=
[(Q2xpY2sgaGVyZSB0byBzZWUgbmV3IGNvbW11dGluZyBhcmVhcyBhcm91bmQgRW5nbGFuZApUV0VOVFkgRklWRSBtaWxsaW9uIEJyaXRvbnMgY29tbXV0ZSBkYWlseSBiZXR3ZWVuIHRoZWlyIGhvbWVzIGFuZCB3b3JrLgpXaGVyZSB0aGUgY29tbXV0ZXIsIHRoYXQgbG9uZy1zdWZmZXJpbmcgY2xpY2jDqSBvZiBtb2Rlcm4gc29jaWV0eSwgY2hvb3NlcyB0byBidXkgaGlzIG9yIGhlciBob21lIGFmZmVjdHMgdXMgYWxsLgpJbiBhIHNwZWNpYWwgaXNzdWUgZGVkaWNhdGVkIHRvIHRoZSBjb21tdXRlciwgd2UgYnJpbmcgeW91IGVtZXJnaW5nIHByb3BlcnR5IHRyZW5kcywgaG90IHRpcHMgYW5kIHBlcnNvbmFsIGNvbW11dGluZyBleHBlcmllbmNlcy4KTWFua2luZCBoYXMgYWx3YXlzIHRyYXZlbGxlZCB0byBmaW5kIHBhaWQgZW1wbG95bWVudC4KWWV0IHRoZSBwcmFjdGljZSBvZiB0cmF2ZWxsaW5nIGZyb20gaG9tZSB0byB3b3JrIGFuZCBiYWNrIGFnYWluIGhhcyBmb3VuZCBpdHMgbW9zdCBleHRyZW1lIGV4cHJlc3Npb24gaW4gbW9kZXJuIEJyaXRhaW4sIHdoZXJlIHRoZSBwb3N0d2FyIGRyaWZ0IHRvIHRoZSBzdWJ1cmJzIGhhcyBiZWNvbWUgYSBmbG9vZCwgZHJpdmVuIGJ5IHJvY2tldGluZyBjaXR5LWNlbnRyZSBob3VzZSBwcmljZXMsIHJpc2luZyAicXVhbGl0eSBvZiBsaWZlIiBleHBlY3RhdGlvbnMgYW5kIHRoZSB0YWtlb3ZlciBvZiB0b3duIGNlbnRyZXMgYnkgY29tbWVyY2lhbCBpbnRlcmVzdHMuCk1vcmUgdGhhbiBlaWdodCBpbiB0ZW4gcGVvcGxlIGluIEVuZ2xhbmQgbm93IGxpdmUgaW4gYXJlYXMgY2xhc3NpZmllZCBhcyBzdWJ1cmJhbiwgYWNjb3JkaW5nIHRvIHRoZSBMb2NhbCBGdXR1cmVzIHRoaW5rLXRhbmssIHdoaWNoLCBpbiBhIHJlcG9ydCBsYXN0IHllYXIsIHNhaWQgdGhhdCBtb2JpbGUgImtub3dsZWRnZSB3b3JrZXJzIiBub3cgInNlZWsgdGhlaXIgZWNvbm9taWMgd2VsbC1iZWluZyBpbiBvbmUgcGxhY2UgYW5kIHRoZWlyIHNvY2lhbCB3ZWxsLWJlaW5nL3F1YWxpdHkgb2YgbGlmZSBlbHNld2hlcmUuIgpUaGUgdW5pbnRlbmRlZCBlZmZlY3QgaGFzIGJlZW4gdG8gInJlbmRlciBsYXJnZSBzd2F0aHMgb2YgdGhlIFNvdXRoIEVhc3QgdW5hZmZvcmRhYmxlLiIKQSByZWNlbnQgcmVwb3J0IGZyb20gdGhlIFJBQyBjYXB0dXJlcyB0aGUgc2NhbGUgb2YgdGhlIHBoZW5vbWVub24uClRoZSBhdmVyYWdlIGRhaWx5IGNvbW11dGUgdGFrZXMgNTQgbWludXRlcywgZXhjZXB0IGluIExvbmRvbiwgd2hlcmUgaXQgcmlzZXMgdG8gODYgbWludXRlcywgYW5kIHRoZSBhdmVyYWdlIGNvbW11dGVyIHRyYXZlbHMgZmFyIGVub3VnaCB0byBlbmNpcmNsZSB0aGUgZ2xvYmUgdHdvIGFuZCBhIGhhbGYgdGltZXMgZHVyaW5nIHRoZSBjb3Vyc2Ugb2YgaGlzIG9yIGhlciB3b3JraW5nIGxpZmUuClN0aWxsLCBpZiBjb21tdXRpbmcgaXMgb3VyIGxvdCwgd2UgbXVzdCBtYWtlIHRoZSBiZXN0IG9mIGl0LgpJbiB0aGUgZm9sbG93aW5nIHBhZ2VzLCB3ZSBzaG93IGhvdyBjb21tdXRlciB0b3ducyBzdWNoIGFzIFJlYWRpbmcgYXJlIGJlaW5nIHNwcnVjZWQgdXA7IGhvdyB0aGUgbW9uZXkgc3ByZWFkaW5nIG91dCBmcm9tIHRoZSBjaXRpZXMgKGFzIGZhbWlsaWVzIGFyZSBmb3JjZWQgb3V0IGJ5IHJpc2luZyBob3VzZSBwcmljZXMpIGlzIGluamVjdGluZyBuZXcgbGlmZSBpbnRvIG5lZ2xlY3RlZCB0b3ducyBzdWNoIGFzIEJhbmJ1cnksIEhlcm5lIEJheSBhbmQgTm9ydGggU2hpZWxkczsgaG93IG5ldyBzdWJ1cmJzLCBjb21wbGV0ZSB3aXRoIGFsbG90bWVudHMsIGFyZSBzcHJpbmdpbmcgdXAgcm91bmQgTGVlZHMsIGFuZCBob3cgV2VzdG9uLXN1cGVyLU1hcmUgaXMgYWJvdXQgdG8gYmVjb21lIHRoZSBuZXcgQnJpZ2h0b24uCllldCwgd2hpbGUgdGhlIHRyYWRpdGlvbmFsIGNvbW11dGVyIGJlbHRzIGFyZSB0aHJpdmluZywgdHdvIHRyZW5kcyBhcmUgZW1lcmdpbmcgdGhhdCBzaWduYWwgYSBzaGlmdCBhd2F5IGZyb20gdGhlIGRvbWluYW5jZSBvZiB0aGUgZGFpbHkgY29tbXV0ZS4KVGhlIGZpcnN0IGlzIHRoZSBpbmNyZWFzaW5nIHZpYWJpbGl0eSBvZiBmbGV4aWJsZSB3b3JraW5nLgpBcyB3ZSByZXBvcnQgb24gcGFnZSAxNiwgTHVjaWFuIENvb2ssIG9mIFNhdmlsbHMsIGNhbGN1bGF0ZXMgdGhhdCBldmVyeSBtaW51dGUgc3BlbnQgY29tbXV0aW5nIGJyaW5ncyB0aGUgYXZlcmFnZSBob3VzZSBwcmljZSBkb3duIGJ5IMKjMSwwMDAuClNvbWUgY29tbXV0ZXJzIGFyZSB0aGVyZWZvcmUgY2hvb3NpbmcgdG8gYnV5IGZhcnRoZXIgb3V0IGFuZCB3b3JrIGZyb20gaG9tZSBwYXJ0LXRpbWUuClRoZSBzZWNvbmQgaXMgdGhlIHZhc3Qgc3VtcyBvZiBtb25leSBiZWluZyBwb3VyZWQgaW50byB0b3duLWNlbnRyZSByZWdlbmVyYXRpb24uCk11Y2ggb2YgdGhpcyBpcyBkZWRpY2F0ZWQgdG8gcHJvdmlkaW5nIG5ldyBob3VzaW5nIGRldmVsb3BtZW50cyBmb3IgeW91bmcgcHJvZmVzc2lvbmFscyBpbiBjaXR5IGNlbnRyZXMsIHdobyB0aHVzIGhhdmUgbm8gbmVlZCB0byBjb21tdXRlLgpCcmlzdG9sIGFuZCBHbGFzZ293IGFyZSB0d28gZXhhbXBsZXMsIGFzIHdlIGlsbHVzdHJhdGUgaW4gdGhpcyBzcGVjaWFsIGlzc3VlLgpFdmVudHVhbGx5LCBob3dldmVyLCBtb3N0IHlvdW5nIHByb2Zlc3Npb25hbHMiIHRob3VnaHRzIHR1cm4gdG8gbmVzdGluZywgYW5kIGEgbW92ZSB0byBhIGNvbW11dGFibGUgcGFydCBvZiB0aGUgY291bnRyeSBpcyB0aGVuIG9ubHkgYSBtYXR0ZXIgb2YgdGltZS4KQnV0IHdoZXJlPwpPdXIgZ3JhcGhpYywgcmlnaHQsIHdpbGwgdGVsbCB5b3UgZXZlcnl0aGluZyB5b3UgbmVlZCB0byBrbm93IC0gZnJvbSBob3VzZSBwcmljZXMgdG8gdGhlIGNvc3Qgb2YgYW4gYW5udWFsIHNlYXNvbiB0aWNrZXQtIGFib3V0IHRoZSBuZXcgY29tbXV0ZXIgaG90IHNwb3RzLgo=, 'PERSON')]
QkVFUlNIRUJBIEF1c3RyYWxpYW4gaG9yc2VtZW4gYW5kIHdvbWVuIGluIEZpcnN0IFdvcmxkIFdhciB1bmlmb3JtcyBhbmQgd2l0aCBhdXRoZW50aWMgd2VhcG9ucnkgZnJvbSB0aGUgZXJhIHJvZGUgYWNyb3NzIHRoZSBJc3JhZWxpIGRlc2VydCB0byByZS1lbmFjdCB0aGUgQmF0dGxlIG9mIEJlZXJzaGViYSA5MCB5ZWFycyBhZ28uCkFib3V0IDUwIHJpZGVycyB0b29rIHBhcnQuCkh1bmRyZWRzIG9mIEF1c3RyYWxpYW5zIGFuZCBOZXcgWmVhbGFuZGVycyBhcmUgaW4gdGhlIHRvd24gaW4gdGhlIGNlbnRyZSBvZiB0aGUgTmVnZXYgRGVzZXJ0IHRvIGNvbW1lbW9yYXRlIHRoZSBBdXN0cmFsaWFuIDR0aCBMaWdodCBIb3JzZSBCcmlnYWRlIGNoYXJnZSBvZiBtb3JlIHRoYW4gZm91ciBtaWxlcywgd2hpY2ggb3ZlcnJhbiB0aGUgVHVya2lzaCB0cmVuY2hlcyBhbmQgY2FwdHVyZWQgaW1wb3J0YW50IHdlbGxzLgpUaGUgYmF0dGxlIGlzIG9mdGVuIHJlZmVycmVkIHRvIGFzIHRoZSBsYXN0IHN1Y2Nlc3NmdWwgY2F2YWxyeSBjaGFyZ2UgaW4gaGlzdG9yeS4K
[(QkVFUlNIRUJBIEF1c3RyYWxpYW4gaG9yc2VtZW4gYW5kIHdvbWVuIGluIEZpcnN0IFdvcmxkIFdhciB1bmlmb3JtcyBhbmQgd2l0aCBhdXRoZW50aWMgd2VhcG9ucnkgZnJvbSB0aGUgZXJhIHJvZGUgYWNyb3NzIHRoZSBJc3JhZWxpIGRlc2VydCB0byByZS1lbmFjdCB0aGUgQmF0dGxlIG9mIEJlZXJzaGViYSA5MCB5ZWFycyBhZ28uCkFib3V0IDUwIHJpZGVycyB0b29rIHBhcnQuCkh1bmRyZWRzIG9mIEF1c3RyYWxpYW5zIGFuZCBOZXcgWmVhbGFuZGVycyBhcmUgaW4gdGhlIHRvd24gaW4gdGhlIGNlbnRyZSBvZiB0aGUgTmVnZXYgRGVzZXJ0IHRvIGNvbW1lbW9yYXRlIHRoZSBBdXN0cmFsaWFuIDR0aCBMaWdodCBIb3JzZSBCcmlnYWRlIGNoYXJnZSBvZiBtb3JlIHRoYW4gZm91ciBtaWxlcywgd2hpY2ggb3ZlcnJhbiB0aGUgVHVya2lzaCB0cmVuY2hlcyBhbmQgY2FwdHVyZWQgaW1wb3J0YW50IHdlbGxzLgpUaGUgYmF0dGxlIGlzIG9mdGVuIHJlZmVycmVkIHRvIGFzIHRoZSBsYXN0IHN1Y2Nlc3NmdWwgY2F2YWxyeSBjaGFyZ2UgaW4gaGlzdG9yeS4K, 'ORG')]
QSAyMi15ZWFyLW9sZCB3b21hbiBkaWVkIHdpdGhpbiBhIGZldyBob3VycyBvZiBnaXZpbmcgYmlydGggdG8gdHdpbnMgYmVjYXVzZSwgYXMgYSBKZWhvdmFoJ3MgV2l0bmVzcywgc2hlIHdhcyBub3QgYWxsb3dlZCB0byBhY2NlcHQgYSBibG9vZCB0cmFuc2Z1c2lvbiwgVGhlIFN1biByZXBvcnRlZCB0b2RheS4KVGhlIG5ld3NwYXBlciBzYWlkIHRoYXQgRW1tYSBHb3VnaCBzdWZmZXJlZCBzZXZlcmUgYmxvb2QgbG9zcyBhZnRlciBnaXZpbmcgYmlydGggdG8gYSBib3kgYW5kIGdpcmwgYXQgdGhlIFJveWFsIEhvc3BpdGFsIGluIFNocmV3c2J1cnkgdGVuIGRheXMgYWdvLgpEb2N0b3JzIGFuZCBtZWRpY3MgYmVnZ2VkIGhlciAyNC15ZWFyLW9sZCBodXNiYW5kLCBBbnRob255LCBhbmQgb3RoZXIgcmVsYXRpdmVzIHRvIG92ZXJydWxlIGEgZm9ybSBzaGUgaGFkIHRpY2tlZCBpbnNpc3RpbmcgdGhhdCBzaGUgc2hvdWxkIG5vdCBiZSBnaXZlbiBibG9vZCBiZWNhdXNlIG9mIGhlciBmYWl0aC4KQnV0IHRoZSBmYW1pbHkgcmVmdXNlZCB0byBkbyBzby4KUGV0ZXIgV2Vsc2gsIHRoZSBiZXN0IG1hbiBhdCB0aGUgY291cGxlJ3Mgd2VkZGluZyBvbiBhIGJlYWNoIGluIEJhcmJhZG9zIHR3byB5ZWFycyBhZ28sIHNhaWQ6ICJFdmVyeW9uZSBpcyBkZXZhc3RhdGVkIGJ5IHdoYXQgaGFzIGhhcHBlbmVkLgpXZSBjYW4ndCBiZWxpZXZlIHRoYXQgc2hlIGRpZWQgYWZ0ZXIgY2hpbGRiaXJ0aCBpbiB0aGlzIGRheSBhbmQgYWdlLCB3aXRoIGFsbCB0aGUgdGVjaG5vbG9neSB0aGVyZSBpcy4KV2hhdCBtYWtlcyBpdCBldmVuIG1vcmUgc2FkIGlzIEVtbWEgaGFkIHRpbWUgdG8gaG9sZCBhbmQgc3RhcnQgdG8gYm9uZCB3aXRoIGhlciB0d2lucyBiZWZvcmUgdGhlIGNvbXBsaWNhdGlvbnMgc2V0IGluLgpUaGUgU3VuIHNhaWQgdGhhdCB0aGUgY29yb25lcidzIG9mZmljZSB3YXMgaW52ZXN0aWdhdGluZyB0aGUgd29tYW4ncyBkZWF0aCBhbmQgYW4gaW5xdWVzdCB3b3VsZCBiZSBoZWxkLgpKZWhvdmFoJ3MgV2l0bmVzc2VzLCB3aG8gZXNwb3VzZSBhbiBlYXJseSB2ZXJzaW9uIG9mIENocmlzdGlhbml0eSwgYXJlIGF1dG9tYXRpY2FsbHkgZGVjbGFyZWQgb3V0Y2FzdHMgZnJvbSB0aGVpciBmYWl0aCBpZiB0aGV5IHRha2UgYmxvb2QgaW50byB0aGUgYm9keSwgd2hldGhlciB0aHJvdWdoIHRoZSBtb3V0aCBvciB2ZWlucy4KVGhleSBjaXRlIHZlcnNlcyBmcm9tIHRoZSBPbGQgYW5kIE5ldyBUZXN0YW1lbnRzIG9mIHRoZSBCaWJsZSB0byBzdXBwb3J0IHRoZWlyIHBvc2l0aW9uLCBpbmNsdWRpbmcgR2VuZXNpcyA5IHZzIDMtNDogIkV2ZXJ5IG1vdmluZyBhbmltYWwgdGhhdCBpcyBhbGl2ZSBtYXkgc2VydmUgYXMgZm9vZCBmb3IgeW91LgpBcyBpbiB0aGUgY2FzZSBvZiBncmVlbiB2ZWdldGF0aW9uLCBJIGRvIGdpdmUgaXQgYWxsIHRvIHlvdS4KT25seSBmbGVzaCB3aXRoIGl0cyBzb3VsIC0gaXRzIGJsb29kIC0geW91IG11c3Qgbm90IGVhdC4KQWN0cyAxNToyOC0yOSBzYXlzOiAiRm9yIHRoZSBob2x5IHNwaXJpdCBhbmQgd2Ugb3Vyc2VsdmVzIGhhdmUgZmF2b3VyZWQgYWRkaW5nIG5vIGZ1cnRoZXIgYnVyZGVuIHRvIHlvdSwgZXhjZXB0IHRoZXNlIG5lY2Vzc2FyeSB0aGluZ3MsIHRvIGtlZXAgYWJzdGFpbmluZyBmcm9tIHRoaW5ncyBzYWNyaWZpY2VkIHRvIGlkb2xzIGFuZCBmcm9tIGJsb29kIGFuZCBmcm9tIHRoaW5ncyBzdHJhbmdsZWQgYW5kIGZyb20gZm9ybmljYXRpb24uCklmIHlvdSBjYXJlZnVsbHkga2VlcCB5b3Vyc2VsdmVzIGZyb20gdGhlc2UgdGhpbmdzLCB5b3Ugd2lsbCBwcm9zcGVyLgpHb29kIGhlYWx0aCB0byB5b3UhClRyYW5zZnVzaW9ucyBvZiByZWQgYmxvb2QgY2VsbHMsIHdoaXRlIGJsb29kIGNlbGxzLCBwbGF0ZWxldHMgYW5kIHBsYXNtYSBhcmUgZm9yYmlkZGVuLgpJbiAyMDA0IFRoZSBXYXRjaHRvd2VyIFNvY2lldHksIHRoZSBvZmZpY2lhbCBib2R5IHJlcHJlc2VudGluZyBKZWhvdmFoJ3MgV2l0bmVzc2VzLCBkaWQgaG93ZXZlciBub3RpZnkgaXRzIG1lbWJlcnMgdGhhdCBmcmFjdGlvbnMgZnJvbSBlYWNoIG9mIHRoZXNlLCBpbmNsdWRpbmcgcmVkIGJsb29kIGNlbGxzIHdpdGhvdXQgYSBtZW1icmFuZSwgY2FuIGJlIHVzZWQgaW4gbWVkaWNhbCBwcm9jZWR1cmVzIGFjY29yZGluZyB0byBhIFdpdG5lc3MncyBvd24gY29uc2NpZW5jZS4K
[(QSAyMi15ZWFyLW9sZCB3b21hbiBkaWVkIHdpdGhpbiBhIGZldyBob3VycyBvZiBnaXZpbmcgYmlydGggdG8gdHdpbnMgYmVjYXVzZSwgYXMgYSBKZWhvdmFoJ3MgV2l0bmVzcywgc2hlIHdhcyBub3QgYWxsb3dlZCB0byBhY2NlcHQgYSBibG9vZCB0cmFuc2Z1c2lvbiwgVGhlIFN1biByZXBvcnRlZCB0b2RheS4KVGhlIG5ld3NwYXBlciBzYWlkIHRoYXQgRW1tYSBHb3VnaCBzdWZmZXJlZCBzZXZlcmUgYmxvb2QgbG9zcyBhZnRlciBnaXZpbmcgYmlydGggdG8gYSBib3kgYW5kIGdpcmwgYXQgdGhlIFJveWFsIEhvc3BpdGFsIGluIFNocmV3c2J1cnkgdGVuIGRheXMgYWdvLgpEb2N0b3JzIGFuZCBtZWRpY3MgYmVnZ2VkIGhlciAyNC15ZWFyLW9sZCBodXNiYW5kLCBBbnRob255LCBhbmQgb3RoZXIgcmVsYXRpdmVzIHRvIG92ZXJydWxlIGEgZm9ybSBzaGUgaGFkIHRpY2tlZCBpbnNpc3RpbmcgdGhhdCBzaGUgc2hvdWxkIG5vdCBiZSBnaXZlbiBibG9vZCBiZWNhdXNlIG9mIGhlciBmYWl0aC4KQnV0IHRoZSBmYW1pbHkgcmVmdXNlZCB0byBkbyBzby4KUGV0ZXIgV2Vsc2gsIHRoZSBiZXN0IG1hbiBhdCB0aGUgY291cGxlJ3Mgd2VkZGluZyBvbiBhIGJlYWNoIGluIEJhcmJhZG9zIHR3byB5ZWFycyBhZ28sIHNhaWQ6ICJFdmVyeW9uZSBpcyBkZXZhc3RhdGVkIGJ5IHdoYXQgaGFzIGhhcHBlbmVkLgpXZSBjYW4ndCBiZWxpZXZlIHRoYXQgc2hlIGRpZWQgYWZ0ZXIgY2hpbGRiaXJ0aCBpbiB0aGlzIGRheSBhbmQgYWdlLCB3aXRoIGFsbCB0aGUgdGVjaG5vbG9neSB0aGVyZSBpcy4KV2hhdCBtYWtlcyBpdCBldmVuIG1vcmUgc2FkIGlzIEVtbWEgaGFkIHRpbWUgdG8gaG9sZCBhbmQgc3RhcnQgdG8gYm9uZCB3aXRoIGhlciB0d2lucyBiZWZvcmUgdGhlIGNvbXBsaWNhdGlvbnMgc2V0IGluLgpUaGUgU3VuIHNhaWQgdGhhdCB0aGUgY29yb25lcidzIG9mZmljZSB3YXMgaW52ZXN0aWdhdGluZyB0aGUgd29tYW4ncyBkZWF0aCBhbmQgYW4gaW5xdWVzdCB3b3VsZCBiZSBoZWxkLgpKZWhvdmFoJ3MgV2l0bmVzc2VzLCB3aG8gZXNwb3VzZSBhbiBlYXJseSB2ZXJzaW9uIG9mIENocmlzdGlhbml0eSwgYXJlIGF1dG9tYXRpY2FsbHkgZGVjbGFyZWQgb3V0Y2FzdHMgZnJvbSB0aGVpciBmYWl0aCBpZiB0aGV5IHRha2UgYmxvb2QgaW50byB0aGUgYm9keSwgd2hldGhlciB0aHJvdWdoIHRoZSBtb3V0aCBvciB2ZWlucy4KVGhleSBjaXRlIHZlcnNlcyBmcm9tIHRoZSBPbGQgYW5kIE5ldyBUZXN0YW1lbnRzIG9mIHRoZSBCaWJsZSB0byBzdXBwb3J0IHRoZWlyIHBvc2l0aW9uLCBpbmNsdWRpbmcgR2VuZXNpcyA5IHZzIDMtNDogIkV2ZXJ5IG1vdmluZyBhbmltYWwgdGhhdCBpcyBhbGl2ZSBtYXkgc2VydmUgYXMgZm9vZCBmb3IgeW91LgpBcyBpbiB0aGUgY2FzZSBvZiBncmVlbiB2ZWdldGF0aW9uLCBJIGRvIGdpdmUgaXQgYWxsIHRvIHlvdS4KT25seSBmbGVzaCB3aXRoIGl0cyBzb3VsIC0gaXRzIGJsb29kIC0geW91IG11c3Qgbm90IGVhdC4KQWN0cyAxNToyOC0yOSBzYXlzOiAiRm9yIHRoZSBob2x5IHNwaXJpdCBhbmQgd2Ugb3Vyc2VsdmVzIGhhdmUgZmF2b3VyZWQgYWRkaW5nIG5vIGZ1cnRoZXIgYnVyZGVuIHRvIHlvdSwgZXhjZXB0IHRoZXNlIG5lY2Vzc2FyeSB0aGluZ3MsIHRvIGtlZXAgYWJzdGFpbmluZyBmcm9tIHRoaW5ncyBzYWNyaWZpY2VkIHRvIGlkb2xzIGFuZCBmcm9tIGJsb29kIGFuZCBmcm9tIHRoaW5ncyBzdHJhbmdsZWQgYW5kIGZyb20gZm9ybmljYXRpb24uCklmIHlvdSBjYXJlZnVsbHkga2VlcCB5b3Vyc2VsdmVzIGZyb20gdGhlc2UgdGhpbmdzLCB5b3Ugd2lsbCBwcm9zcGVyLgpHb29kIGhlYWx0aCB0byB5b3UhClRyYW5zZnVzaW9ucyBvZiByZWQgYmxvb2QgY2VsbHMsIHdoaXRlIGJsb29kIGNlbGxzLCBwbGF0ZWxldHMgYW5kIHBsYXNtYSBhcmUgZm9yYmlkZGVuLgpJbiAyMDA0IFRoZSBXYXRjaHRvd2VyIFNvY2lldHksIHRoZSBvZmZpY2lhbCBib2R5IHJlcHJlc2VudGluZyBKZWhvdmFoJ3MgV2l0bmVzc2VzLCBkaWQgaG93ZXZlciBub3RpZnkgaXRzIG1lbWJlcnMgdGhhdCBmcmFjdGlvbnMgZnJvbSBlYWNoIG9mIHRoZXNlLCBpbmNsdWRpbmcgcmVkIGJsb29kIGNlbGxzIHdpdGhvdXQgYSBtZW1icmFuZSwgY2FuIGJlIHVzZWQgaW4gbWVkaWNhbCBwcm9jZWR1cmVzIGFjY29yZGluZyB0byBhIFdpdG5lc3MncyBvd24gY29uc2NpZW5jZS4K, 'PERSON')]
R2VvcmdlIFNvcm9zLCB0aGUgY3VycmVuY3kgaW52ZXN0b3Igd2hvIGFsbW9zdCBzaW5nbGUtaGFuZGVkbHkgZHJvdmUgdGhlIHBvdW5kIG91dCBvZiB0aGUgRXVyb3BlYW4gZXhjaGFuZ2UtcmF0ZSBtZWNoYW5pc20gb24gQmxhY2sgV2VkbmVzZGF5LCBoYXMgZ2l2ZW4gd2FybmluZyB0aGF0IHRoZSBVUyBpcyBvbiB0aGUgYnJpbmsgb2YgYSBzbG93ZG93biBmYXIgbW9yZSBzZXJpb3VzIHRoYW4gdGhlIEZlZGVyYWwgUmVzZXJ2ZSBpcyBleHBlY3RpbmcuCk1yIFNvcm9zIHNhaWQgdGhhdCB0aGUgVVMgZWNvbm9teSBpcyAib24gdGhlIHZlcmdlIG9mIGEgdmVyeSBzZXJpb3VzIGVjb25vbWljIGNvcnJlY3Rpb24iIGFmdGVyIGRlY2FkZXMgb2Ygb3ZlcnNwZW5kaW5nLgpIaXMgb3BpbmlvbiBjYXVzZWQgZGlzcXVpZXQgYW1vbmcgaW52ZXN0b3JzIGFuZCBjZW50cmFsIGJhbmtlcnMsIGFzIE1yIFNvcm9zIG1hZGUgwqMxIGJpbGxpb24gYmV0dGluZyBhZ2FpbnN0IHRoZSBCYW5rIG9mIEVuZ2xhbmQgaW4gMTk5Mi4KSGlzIGNvbW1lbnRzIGNhbWUgYXMgQWxhbiBHcmVlbnNwYW4sIEJlbiBCZXJuYW5rZSdzIHByZWRlY2Vzc29yIGFzIENoYWlybWFuIG9mIHRoZSBGZWRlcmFsIFJlc2VydmUsIHNhaWQgdGhhdCBhIGhvdXNpbmcgZG93bnR1cm4gY291bGQgZHJhZyB0aGUgVVMgZWNvbm9teSB0b3dhcmRzIGEgcmVjZXNzaW9uLgpNciBTb3JvcyB0b2xkIGFuIGF1ZGllbmNlIGF0IE5ldyBZb3JrIFVuaXZlcnNpdHk6ICJXZSBoYXZlIGJvcnJvd2VkIGFuIGF3ZnVsIGxvdCBvZiBtb25leSBhbmQgbm93IHRoZSBiaWxsIGlzIGNvbWluZyB0byB1cy4iCkFza2VkIHdoZXRoZXIgYSByZWNlc3Npb24gd2FzIGluZXZpdGFibGUsIE1yIFNvcm9zIHJlcGxpZWQ6ICJJIHRoaW5rIHdlIGFyZSBkZWZpbml0ZWx5IGluIGZvciBhIHNsb3dkb3duIHRoYXQgSSB0aGluayB3aWxsIGJlIGEgYmlnZ2VyIHNsb3dkb3duIHRoYW4gQmVybmFua2UgaXMgc2VlaW5nLiIKSXQgaXMgdGhlIGZpcnN0IHRpbWUgdGhhdCBNciBTb3JvcyBoYXMgc3Bva2VuIG91dCBhYm91dCBBbWVyaWNhJ3MgbWFjcm9lY29ub21pYyBzdGF0ZSBzaW5jZSBjcmVkaXQgbWFya2V0cyBzZWl6ZWQgdG8gYSBoYWx0IGFmdGVyIGEgc3VyZ2UgaW4gZm9yZWNsb3N1cmVzIG9uIHN1Yi1wcmltZSBtb3J0Z2FnZXMuCkhlIHNhaWQgdGhhdCBDaGluYSwgdGhlIGJpZ2dlc3QgVVMgY3JlZGl0b3IsIHdhcyB0aGUgImFic29sdXRlIHdpbm5lciIgYW5kIHNhaWQgdGhhdCBpdHMgZWNvbm9teSB3b3VsZCBzb2FyIGZvciB5ZWFycyB0byBjb21lLgpKaW0gUm9nZXJzLCB0aGUgaW52ZXN0b3Igd2l0aCB3aG9tIE1yIFNvcm9zIGZvdW5kZWQgaGlzIFF1YW50dW0gRnVuZCBpbiB0aGUgMTk3MHMsIHJlY2VudGx5IHJlY29tbWVuZGVkIHRoYXQgaW52ZXN0b3JzIGdldCBvdXQgb2YgdGhlIGRvbGxhciBhbmQgc2VsbCBzaGFyZXMgaW4gaW52ZXN0bWVudCBiYW5rcyBhbmQgQW1lcmljYW4gaG91c2luZyBjb21wYW5pZXMuCk1yIEdyZWVuc3Bhbiwgd2hvc2UgcHJvbm91bmNlbWVudHMgYXJlIHNjcnV0aW5pc2VkIGNhcmVmdWxseSBieSB0cmFkZXJzIGFyb3VuZCB0aGUgd29ybGQsIGFkZGVkIGhpcyB2b2ljZSB5ZXN0ZXJkYXkgdG8gdGhlIGNob3J1cyBvZiBkZXNwYWlyLgpIZSB0b2xkIGEgY29uZmVyZW5jZSBpbiBUb2t5byB0aGF0IGhpZ2ggaW52ZW50b3JpZXMgb2YgdW5zb2xkIGhvdXNpbmcgaW4gQW1lcmljYSBwcmVzZW50ZWQgYSByaXNrIHRvIHRoZSBVUyBlY29ub215LgpIZSBzYWlkOiAiV2Ugc3RpbGwgbmVlZCB0byBhY2NlbGVyYXRlIHRoZSByYXRlIG9mIGludmVudG9yeSBsaXF1aWRhdGlvbiwgYW5kIHRoYXQgd2lsbCBtZWFuIGJyaW5naW5nIGhvdXNpbmcgc3RhcnRzIGRvd24gYW5kIHNhbGVzIHVwLgpXZSBoYXZlIGEgbG9uZyB3YXkgdG8gZ28uCk1yIEdyZWVuc3BhbiBhZGRlZDogIlRoZSBjcml0aWNhbCBpc3N1ZSBvbiB0aGUgd2hvbGUgc3ViLXByaW1lLCBhbmQgYnkgZXh0ZW5zaW9uIHRoZSB3aG9sZSBmaW5hbmNpYWwgc3lzdGVtLCByZXN0cyB2ZXJ5IG5hcnJvd2x5IG9uIGdldHRpbmcgcmlkIG9mIHByb2JhYmx5IDIwMCwwMDAgdG8gMzAwLDAwMCBleGNlc3MgdW5pdHMgaW4gaW52ZW50b3JpZXMgaW4gdGhlIFVuaXRlZCBTdGF0ZXMuIgpNciBTb3JvcydzIGFuZCBNciBHcmVlbnNwYW4ncyBwZXNzaW1pc3RpYyBldmFsdWF0aW9ucyBvZiB0aGUgQW1lcmljYW4gZWNvbm9teSBjb21lIGFzIE1lcnZ5biBLaW5nLCB0aGUgR292ZXJub3Igb2YgdGhlIEJhbmsgb2YgRW5nbGFuZCwgc2FpZCBpbiBhIHJhcmUgYnJvYWRjYXN0IGludGVydmlldyB0aGF0IHVuY2VydGFpbnR5IG92ZXIgdGhlIGV4dGVudCBvZiBiYW5rcycgbG9zc2VzIGluIHRoZSBzdWJwcmltZSBjcmlzaXMgd291bGQgY29udGludWUgZm9yIG1vbnRocy4KSW4gcmVjZW50IGRheXMgQ2hhcmxlcyBQcmluY2UsIHRoZSBjaGllZiBleGVjdXRpdmUgb2YgQ2l0aWdyb3VwLCBhbmQgU3RhbiBPJ05lYWwsIHRoZSBjaGllZiBleGVjdXRpdmUgb2YgTWVycmlsbCBMeW5jaCwgaGF2ZSBzdGVwcGVkIGRvd24sIGJlY29taW5nIHRoZSBoaWdoZXN0LXByb2ZpbGUgdmljdGltcyBvZiB0aGUgbWFya2V0IHR1cmJ1bGVuY2UuCg==
[]
U29hcmluZyBvaWwgYW5kIGZvb2QgcHJpY2VzIGhhdmUgZHJpdmVuIGluZmxhdGlvbiBhYm92ZSB0aGUgQmFuayBvZiBFbmdsYW5kJ3MgMiBwZXIgY2VudCB0YXJnZXQsIGFsbCBidXQgcnVsaW5nIG91dCBhbiBpbnRlcmVzdCByYXRlIGN1dCB0aGlzIHllYXIuCkNvbnN1bWVyIHByaWNlIGluZmxhdGlvbiBoaXQgMi4xIHBlciBjZW50IGluIE9jdG9iZXIsIHRoZSBPZmZpY2UgZm9yIE5hdGlvbmFsIFN0YXRpc3RpY3Mgc2FpZCwgaGlnaGVyIHRoYW4gdGhlIDEuOSBwZXIgY2VudCBleHBlY3RlZCBieSBlY29ub21pc3RzLgpUaGUgcmlzZSBwdXRzIENQSSBpbmZsYXRpb24sIHRoZSBHb3Zlcm5tZW50J3MgcHJlZmVycmVkIG1lYXN1cmUsIGFib3ZlIHRoZSBCYW5rJ3MgdGFyZ2V0IGZvciB0aGUgZmlyc3QgdGltZSBzaW5jZSBKdW5lLgpJdCBmb2xsb3dzIG9mZmljaWFsIGRhdGEgcmVsZWFzZWQgeWVzdGVyZGF5IHRoYXQgc2hvd2VkIG1hbnVmYWN0dXJpbmcgb3V0cHV0IHByaWNlIGluZmxhdGlvbiByaXNpbmcgdG8gYSAxMi15ZWFyIGhpZ2guCkxhc3Qgd2VlayB0aGUgQmFuayBrZXB0IGludGVyZXN0IHJhdGVzIG9uIGhvbGQgYXQgNS43NSBwZXIgY2VudCwgb3B0aW5nIHRvIHdhaXQgYW5kIHNlZSB3aGV0aGVyIHRoZSB0dXJtb2lsIHN0ZW1taW5nIGZyb20gdGhlIFVTIHN1YnByaW1lIGNyaXNlcyBzcGlsbHMgb3ZlciB0byB3ZWlnaCBvbiBjb25zdW1lciBzcGVuZGluZyBhbmQgdGhlIFVLIGVjb25vbXkuCkFtaWQgc3VnZ2VzdGlvbnMgdGhhdCB0aGUgVUsgZWNvbm9teSByaXNrcyBmYWxsaW5nIGludG8gYSBtYWpvciBzbG93ZG93biwgZWNvbm9taXN0cyBoYWQgc3VnZ2VzdGVkIHRoYXQgdGhlIEJhbmsgd291bGQgbG9vayB0byB0cmltIHJhdGVzIHRvIHN0b2tlIGFjdGl2aXR5LgpUb2RheSwgdGhleSB3ZXJlIHJldmlzaXRpbmcgdGhvc2UgZm9yZWNhc3RzLgpIb3dhcmQgQXJjaGVyLCB0aGUgR2xvYmFsIEluc2lnaHQgZWNvbm9taXN0LCBzYWlkOiAiV2Ugc3VzcGVjdCB0aGF0IHRoZSBCYW5rIG9mIEVuZ2xhbmQgd2lsbCBub3QgdHJpbSBpbnRlcmVzdCByYXRlcyB1bnRpbCBGZWJydWFyeSB1bmxlc3MgdGhlcmUgYXJlIHZlcnkgY2xlYXIgc2lnbnMgb3ZlciB0aGUgbmV4dCBmZXcgd2Vla3MgdGhhdCB0aGUgZWNvbm9teSBpcyBzbG93aW5nIHNoYXJwbHkuIgpIb3dldmVyLCBNciBBcmNoZXIgYWRkZWQgdGhhdCB0aGVyZSB3YXMgc29tZSBtb3JlIGRvdmlzaCBuZXdzIGluIHN0YWJsZSBjb3JlIGluZmxhdGlvbiBmaWd1cmVzLCB3aGljaCBzdHJpcCBvdXQgdm9sYXRpbGUgZmFjdG9ycyBzdWNoIGFzIG9pbCBwcmljZXMsIGFuZCBzdWdnZXN0IHRoYXQgaGlnaCBzdHJlZXQgcmV0YWlsZXJzIGFyZSBiZWluZyBmb3JjZWQgdG8gY2FwIHByaWNlcyB0byB3aW4gY3VzdG9tZXJzLgpDb3JlIGluZmxhdGlvbiB3YXMgc3RhYmxlIGF0IGEgMjAwNy1sb3cgb2YgMS41IHBlciBjZW50LgpUaGlzIHN1Z2dlc3RzIHRoYXQgYSBudW1iZXIgb2YgcmV0YWlsZXJzIGZlZWwgdGhhdCB0aGV5IG5lZWQgdG8gY29udGFpbiB0aGVpciBwcmljZXMgaW4gb3JkZXIgdG8gZW5jb3VyYWdlIGluY3JlYXNpbmdseSBwcmVzc3VyaXNlZCBjb25zdW1lcnMgdG8gc3BlbmQsIiBNciBBcmNoZXIgc2FpZC4KSG93ZXZlciwgZWNvbm9taXN0cyBleHBlY3QgaW5mbGF0aW9uYXJ5IHByZXNzdXJlIHRvIHJpc2UgYmVmb3JlIGVhc2luZyBiYWNrIG5leHQgeWVhciwgcG9zc2libHkgZHJpdmluZyB0aGUgQmFuayBpbiBhIGNvcm5lciBvdmVyIHBvbGljeS4KSmFtZXMgS25pZ2h0bGV5LCBvZiBJTkcsIHNhaWQ6ICJXZSBzdXNwZWN0IGZvb2QgcHJpY2VzIHdpbGwgcmVtYWluIGFuIHVwd2FyZCByaXNrIGdpdmVuIHRoZSBlZmZlY3Qgb2YgYmFkIHdlYXRoZXIgb24gY3JvcCB5aWVsZHMgYW5kIGVuZXJneSBwcmljZXMgd2lsbCBhbHNvIGFkZCB0byBDUEkuIgpIZSBhZGRlZCB0aGF0IHBldHJvbCBwcmljZXMgaGF2ZSBzbyBmYXIgcmlzZW4gYnkgYWJvdXQgMyBwZXIgY2VudCBpbiBOb3ZlbWJlciwgd2hpbGUgdGhleSB3ZXJlIGZhbGxpbmcgYXQgdGhlIHNhbWUgcG9pbnQgbGFzdCB5ZWFyLgpDb25zZXF1ZW50bHksIHdlIHN1c3BlY3QgaGVhZGxpbmUgaW5mbGF0aW9uIHdpbGwgcmlzZSBmdXJ0aGVyIGluIHRoZSBuZWFyLXRlcm0uCg==
[(U29hcmluZyBvaWwgYW5kIGZvb2QgcHJpY2VzIGhhdmUgZHJpdmVuIGluZmxhdGlvbiBhYm92ZSB0aGUgQmFuayBvZiBFbmdsYW5kJ3MgMiBwZXIgY2VudCB0YXJnZXQsIGFsbCBidXQgcnVsaW5nIG91dCBhbiBpbnRlcmVzdCByYXRlIGN1dCB0aGlzIHllYXIuCkNvbnN1bWVyIHByaWNlIGluZmxhdGlvbiBoaXQgMi4xIHBlciBjZW50IGluIE9jdG9iZXIsIHRoZSBPZmZpY2UgZm9yIE5hdGlvbmFsIFN0YXRpc3RpY3Mgc2FpZCwgaGlnaGVyIHRoYW4gdGhlIDEuOSBwZXIgY2VudCBleHBlY3RlZCBieSBlY29ub21pc3RzLgpUaGUgcmlzZSBwdXRzIENQSSBpbmZsYXRpb24sIHRoZSBHb3Zlcm5tZW50J3MgcHJlZmVycmVkIG1lYXN1cmUsIGFib3ZlIHRoZSBCYW5rJ3MgdGFyZ2V0IGZvciB0aGUgZmlyc3QgdGltZSBzaW5jZSBKdW5lLgpJdCBmb2xsb3dzIG9mZmljaWFsIGRhdGEgcmVsZWFzZWQgeWVzdGVyZGF5IHRoYXQgc2hvd2VkIG1hbnVmYWN0dXJpbmcgb3V0cHV0IHByaWNlIGluZmxhdGlvbiByaXNpbmcgdG8gYSAxMi15ZWFyIGhpZ2guCkxhc3Qgd2VlayB0aGUgQmFuayBrZXB0IGludGVyZXN0IHJhdGVzIG9uIGhvbGQgYXQgNS43NSBwZXIgY2VudCwgb3B0aW5nIHRvIHdhaXQgYW5kIHNlZSB3aGV0aGVyIHRoZSB0dXJtb2lsIHN0ZW1taW5nIGZyb20gdGhlIFVTIHN1YnByaW1lIGNyaXNlcyBzcGlsbHMgb3ZlciB0byB3ZWlnaCBvbiBjb25zdW1lciBzcGVuZGluZyBhbmQgdGhlIFVLIGVjb25vbXkuCkFtaWQgc3VnZ2VzdGlvbnMgdGhhdCB0aGUgVUsgZWNvbm9teSByaXNrcyBmYWxsaW5nIGludG8gYSBtYWpvciBzbG93ZG93biwgZWNvbm9taXN0cyBoYWQgc3VnZ2VzdGVkIHRoYXQgdGhlIEJhbmsgd291bGQgbG9vayB0byB0cmltIHJhdGVzIHRvIHN0b2tlIGFjdGl2aXR5LgpUb2RheSwgdGhleSB3ZXJlIHJldmlzaXRpbmcgdGhvc2UgZm9yZWNhc3RzLgpIb3dhcmQgQXJjaGVyLCB0aGUgR2xvYmFsIEluc2lnaHQgZWNvbm9taXN0LCBzYWlkOiAiV2Ugc3VzcGVjdCB0aGF0IHRoZSBCYW5rIG9mIEVuZ2xhbmQgd2lsbCBub3QgdHJpbSBpbnRlcmVzdCByYXRlcyB1bnRpbCBGZWJydWFyeSB1bmxlc3MgdGhlcmUgYXJlIHZlcnkgY2xlYXIgc2lnbnMgb3ZlciB0aGUgbmV4dCBmZXcgd2Vla3MgdGhhdCB0aGUgZWNvbm9teSBpcyBzbG93aW5nIHNoYXJwbHkuIgpIb3dldmVyLCBNciBBcmNoZXIgYWRkZWQgdGhhdCB0aGVyZSB3YXMgc29tZSBtb3JlIGRvdmlzaCBuZXdzIGluIHN0YWJsZSBjb3JlIGluZmxhdGlvbiBmaWd1cmVzLCB3aGljaCBzdHJpcCBvdXQgdm9sYXRpbGUgZmFjdG9ycyBzdWNoIGFzIG9pbCBwcmljZXMsIGFuZCBzdWdnZXN0IHRoYXQgaGlnaCBzdHJlZXQgcmV0YWlsZXJzIGFyZSBiZWluZyBmb3JjZWQgdG8gY2FwIHByaWNlcyB0byB3aW4gY3VzdG9tZXJzLgpDb3JlIGluZmxhdGlvbiB3YXMgc3RhYmxlIGF0IGEgMjAwNy1sb3cgb2YgMS41IHBlciBjZW50LgpUaGlzIHN1Z2dlc3RzIHRoYXQgYSBudW1iZXIgb2YgcmV0YWlsZXJzIGZlZWwgdGhhdCB0aGV5IG5lZWQgdG8gY29udGFpbiB0aGVpciBwcmljZXMgaW4gb3JkZXIgdG8gZW5jb3VyYWdlIGluY3JlYXNpbmdseSBwcmVzc3VyaXNlZCBjb25zdW1lcnMgdG8gc3BlbmQsIiBNciBBcmNoZXIgc2FpZC4KSG93ZXZlciwgZWNvbm9taXN0cyBleHBlY3QgaW5mbGF0aW9uYXJ5IHByZXNzdXJlIHRvIHJpc2UgYmVmb3JlIGVhc2luZyBiYWNrIG5leHQgeWVhciwgcG9zc2libHkgZHJpdmluZyB0aGUgQmFuayBpbiBhIGNvcm5lciBvdmVyIHBvbGljeS4KSmFtZXMgS25pZ2h0bGV5LCBvZiBJTkcsIHNhaWQ6ICJXZSBzdXNwZWN0IGZvb2QgcHJpY2VzIHdpbGwgcmVtYWluIGFuIHVwd2FyZCByaXNrIGdpdmVuIHRoZSBlZmZlY3Qgb2YgYmFkIHdlYXRoZXIgb24gY3JvcCB5aWVsZHMgYW5kIGVuZXJneSBwcmljZXMgd2lsbCBhbHNvIGFkZCB0byBDUEkuIgpIZSBhZGRlZCB0aGF0IHBldHJvbCBwcmljZXMgaGF2ZSBzbyBmYXIgcmlzZW4gYnkgYWJvdXQgMyBwZXIgY2VudCBpbiBOb3ZlbWJlciwgd2hpbGUgdGhleSB3ZXJlIGZhbGxpbmcgYXQgdGhlIHNhbWUgcG9pbnQgbGFzdCB5ZWFyLgpDb25zZXF1ZW50bHksIHdlIHN1c3BlY3QgaGVhZGxpbmUgaW5mbGF0aW9uIHdpbGwgcmlzZSBmdXJ0aGVyIGluIHRoZSBuZWFyLXRlcm0uCg==, 'ORG')]
VGhlIHN1cnZpdmFsIG9mIHRoZSBiaXR0ZXJuLCBvbmUgb2YgdGhlIHJhcmVzdCBhbmQgbW9zdCBlbmRhbmdlcmVkIHNwZWNpZXMgb2YgYmlyZCBpbiBCcml0YWluLCBoYXMgYmVlbiB0aHJlYXRlbmVkIGFmdGVyIHRoZSB0aWRhbCBzdXJnZSBhbG9uZyB0aGUgZWFzdCBjb2FzdCBvZiBFbmdsYW5kIGxhc3Qgd2Vlay4KQXQgQ2xleSBNYXJzaGVzIGluIE5vcmZvbGsgbW9yZSB0aGFuIDEwMCBoZWN0YXJlcyBvZiByZWVkIGJlZHMsIGZyZXNoIHdhdGVyIHBvb2xzIGFuZCBncmF6aW5nIG1hcnNoZXMgd2VyZSBkYW1hZ2VkIGFmdGVyIHRoZSBzZWEgcm9zZSB0byBpdHMgaGlnaGVzdCBsZXZlbCBpbiA1MCB5ZWFycyBvbiBOb3ZlbWJlciA5LgpBbHRob3VnaCBtb3N0IG9mIHRoZSBiaXJkcyBhcmUgZXhwZWN0ZWQgdG8gcmV0dXJuLCB0aGUgbG9zcyBvZiB0aGVpciBtYWluIGZvb2Qgc291cmNlIGNvdWxkIGJlIGRldmFzdGF0aW5nIGZvciB0aGUgc2h5LCBzZWNyZXRpdmUgbWVtYmVyIG9mIHRoZSBoZXJvbiBmYW1pbHksIGFjY29yZGluZyB0byBCcmVuZGFuIEpveWNlLCB0aGUgZGlyZWN0b3Igb2YgdGhlIE5vcmZvbGsgV2lsZGxpZmUgVHJ1c3QuCiJUaGV5IGRvbid0IGhhdmUgZmFudGFzdGljIGJyZWVkaW5nIHNraWxsczsgdGhleSBhcmUgZnVzc3kgaW4gYnJlZWRpbmcgYW5kIGhhYml0YXQsIiBoZSBzYWlkLCBhZGRpbmcgdGhhdCBpZiB0aGUgYml0dGVybiBhdCBDbGV5IE1hcnNoZXMgd2VyZSBjdXQgb2ZmIGZyb20gdGhlIHJlZWQgYmVkcyBvbiB3aGljaCB0aGV5IGRlcGVuZGVkLCBhbmQgd2VyZSBkZXByaXZlZCBvZiBmb29kLCB0aGV5IHdvdWxkIGRpZS4KVGhlIHRpZGFsIHN1cmdlIGhhcyBjYXVzZWQgc2ltaWxhciBwcm9ibGVtcyBhdCByZXNlcnZlcyBhbG9uZyB0aGUgZWFzdCBjb2FzdCBhbmQgYXQgc2V2ZXJhbCBwbGFjZXMgaW5sYW5kLCBzdWNoIGFzIFN0cnVtcHNoYXcgRmVuIGluIE5vcmZvbGssIENpYXJhbiBOZWxzb24gb2YgdGhlIEVhc3Rlcm4gRW5nbGFuZCBSU1BCLCBzYWlkLgpPZiB0aGUgNTEgYnJlZWRpbmcgbWFsZSBiaXR0ZXJucyBpbiB0aGUgVW5pdGVkIEtpbmdkb20sIDM3IGFyZSBpbiBOb3Jmb2xrIGFuZCBTdWZmb2xrLgo=
[(VGhlIHN1cnZpdmFsIG9mIHRoZSBiaXR0ZXJuLCBvbmUgb2YgdGhlIHJhcmVzdCBhbmQgbW9zdCBlbmRhbmdlcmVkIHNwZWNpZXMgb2YgYmlyZCBpbiBCcml0YWluLCBoYXMgYmVlbiB0aHJlYXRlbmVkIGFmdGVyIHRoZSB0aWRhbCBzdXJnZSBhbG9uZyB0aGUgZWFzdCBjb2FzdCBvZiBFbmdsYW5kIGxhc3Qgd2Vlay4KQXQgQ2xleSBNYXJzaGVzIGluIE5vcmZvbGsgbW9yZSB0aGFuIDEwMCBoZWN0YXJlcyBvZiByZWVkIGJlZHMsIGZyZXNoIHdhdGVyIHBvb2xzIGFuZCBncmF6aW5nIG1hcnNoZXMgd2VyZSBkYW1hZ2VkIGFmdGVyIHRoZSBzZWEgcm9zZSB0byBpdHMgaGlnaGVzdCBsZXZlbCBpbiA1MCB5ZWFycyBvbiBOb3ZlbWJlciA5LgpBbHRob3VnaCBtb3N0IG9mIHRoZSBiaXJkcyBhcmUgZXhwZWN0ZWQgdG8gcmV0dXJuLCB0aGUgbG9zcyBvZiB0aGVpciBtYWluIGZvb2Qgc291cmNlIGNvdWxkIGJlIGRldmFzdGF0aW5nIGZvciB0aGUgc2h5LCBzZWNyZXRpdmUgbWVtYmVyIG9mIHRoZSBoZXJvbiBmYW1pbHksIGFjY29yZGluZyB0byBCcmVuZGFuIEpveWNlLCB0aGUgZGlyZWN0b3Igb2YgdGhlIE5vcmZvbGsgV2lsZGxpZmUgVHJ1c3QuCiJUaGV5IGRvbid0IGhhdmUgZmFudGFzdGljIGJyZWVkaW5nIHNraWxsczsgdGhleSBhcmUgZnVzc3kgaW4gYnJlZWRpbmcgYW5kIGhhYml0YXQsIiBoZSBzYWlkLCBhZGRpbmcgdGhhdCBpZiB0aGUgYml0dGVybiBhdCBDbGV5IE1hcnNoZXMgd2VyZSBjdXQgb2ZmIGZyb20gdGhlIHJlZWQgYmVkcyBvbiB3aGljaCB0aGV5IGRlcGVuZGVkLCBhbmQgd2VyZSBkZXByaXZlZCBvZiBmb29kLCB0aGV5IHdvdWxkIGRpZS4KVGhlIHRpZGFsIHN1cmdlIGhhcyBjYXVzZWQgc2ltaWxhciBwcm9ibGVtcyBhdCByZXNlcnZlcyBhbG9uZyB0aGUgZWFzdCBjb2FzdCBhbmQgYXQgc2V2ZXJhbCBwbGFjZXMgaW5sYW5kLCBzdWNoIGFzIFN0cnVtcHNoYXcgRmVuIGluIE5vcmZvbGssIENpYXJhbiBOZWxzb24gb2YgdGhlIEVhc3Rlcm4gRW5nbGFuZCBSU1BCLCBzYWlkLgpPZiB0aGUgNTEgYnJlZWRpbmcgbWFsZSBiaXR0ZXJucyBpbiB0aGUgVW5pdGVkIEtpbmdkb20sIDM3IGFyZSBpbiBOb3Jmb2xrIGFuZCBTdWZmb2xrLgo=, 'GPE')]
RXRhbiBSdXBwaW4gd2FzIG9uZSBvZiBhIGhhbmRmdWwgb2YgcGlvbmVlcnMgd2hvIGJ1aWx0IHVwIElzcmFlbCdzIGRpcGxvbWF0aWMgc2VydmljZSBmcm9tIHNjcmF0Y2ggYW5kIGdhdmUgaXQgaXRzIGVhcmx5IHByb2Zlc3Npb25hbGlzbS4KSGUgY2FtZSB0byB0aGlzIHRhc2sgd2l0aCBubyB1bml2ZXJzaXR5IGVkdWNhdGlvbiBvciBvdGhlciBzcGVjaWZpYyB0cmFpbmluZy4KQnV0IGhlIGJyb3VnaHQgdG8gaXQgbW9yZSB0aGFuIGEgZGVjYWRlIG9mIGV4cGVyaWVuY2UgaW4gdGhlIEJyaXRpc2ggYW5kIElzcmFlbGkgaW50ZWxsaWdlbmNlIHNlcnZpY2VzIHR3aW5uZWQgd2l0aCBhIG1hc3Rlcmx5IGdyYXNwIG9mIGhpc3RvcnkgYW5kIGEgcmVhZHkgcmFwcG9ydCB3aXRoIHBlb3BsZSBvZiBhbGwgcmFjZXMuCk9uZSBvZiBoaXMgZmlyc3QgYXNzaWdubWVudHMgd2FzIHRvIHRoZSBjb21wZW5zYXRpb24gbWlzc2lvbiB0aGF0IGVzdGFibGlzaGVkIHRoZSBlYXJsaWVzdCBmb3JtYWwgY29udGFjdHMgYmV0d2VlbiB0aGUgZmxlZGdlbGluZyBzdGF0ZXMgb2YgSXNyYWVsIGFuZCBXZXN0IEdlcm1hbnkgdGhhdCByb3NlIGZyb20gdGhlIE5hemkgcnVpbnMgdW5kZXIgS29ucmFkIEFkZW5hdWVyLgpUaGlzIHVsdGltYXRlbHkgbGVkIHRvIGEgZnJhbWV3b3JrIGZvciByZWd1bGFyIGNvbnRhY3QgYW5kIHJlcHJlc2VudGF0aW9uIHNob3J0IG9mIGZ1bGwgZGlwbG9tYXRpYyByZWxhdGlvbnMuClRoZXNlIHdlcmUgbm90IGZlbHQgdG8gYmUgcG9zc2libGUgc28gc29vbiBhZnRlciB0aGUgSG9sb2NhdXN0LgpBZnRlciBzZXJ2aWNlIGluIExvbmRvbiBpbiB0aGUgZWFybHkgbDk1MHMgLSBkdXJpbmcgd2hpY2ggaGUgbWV0IGhpcyB3aWZlLCBHaXNlbGEgLSBSdXBwaW4gZm91bmQgaGltc2VsZiBpbiBIZWxzaW5raSBhcyBjaGFyZ8OpIGQnYWZmYWlyZXMuCkhlIHdhcyB0aGVuIHN3aXRjaGVkIHRvIEFmcmljYSBhdCBhIHRpbWUgd2hlbiBJc3JhZWwgc2V0IG91dCB3aXRoIHNvbWUgdXJnZW5jeSB0byBmb3JnZSBjbG9zZSBsaW5rcyB3aXRoIHBvc3Rjb2xvbmlhbCBBZnJpY2FuIHN0YXRlcyBhbmQgc3VwcG9ydCB0aGVtIHdpdGggZmluYW5jaWFsIGFuZCwgYWJvdmUgYWxsLCB0ZWNobmljYWwsIGFpZC4KSGUgd2FzIEFtYmFzc2Fkb3IgaW4gTWFkYWdhc2NhciBmcm9tIGw5NjAgdG8gbDk2MywgYW5kIGluIFNlbmVnYWwgZnJvbSBsOTY3IHRvIGw5NjkuCkluIGJldHdlZW4gaGUgd2FzIHNlY29uZGVkIGZvciB0d28geWVhcnMgdG8gYmUgdGhlIGRlcHV0eSBkaXJlY3RvciBvZiB0aGUgSXNyYWVsIERlZmVuY2UgQ29sbGVnZS4KSGlzIEFmcmljYW4geWVhcnMgd2VyZSBmb2xsb3dlZCBieSBmb3VyIHllYXJzIGFzIG1pbmlzdGVyIGF0IHRoZSBMb25kb24gZW1iYXNzeSwgbW9zdGx5IHVuZGVyIHRoZSBTb3V0aCBBZnJpY2FuIE1pY2hhZWwgQ29tYXkgYXMgYW1iYXNzYWRvci4KQWZ0ZXIgYW5vdGhlciBzcGVsbCBhcyBoZWFkIG9mIHRoZSBBZnJpY2FuIGRlcGFydG1lbnQgYmFjayBpbiBKZXJ1c2FsZW0sIGhlIG1vdmVkIHRvIEJvbm4gYXMgbWluaXN0ZXIsIHdoZXJlIGhlIGNvbnRyaWJ1dGVkIHNpZ25pZmljYW50bHkgdG8gdGhlIHdvcmsgb2YgcmVjb25jaWxpYXRpb24gYmV0d2VlbiBKZXdzIGFuZCBHZXJtYW5zLgpFeGNlcHRpb25hbGx5LCB0aGUgV2VzdCBHZXJtYW4gR292ZXJubWVudCBkZWNvcmF0ZWQgaGltIHdpdGggYSBoaWdoIHJhbmtpbmcgaW4gdGhlIEJ1bmRlc3ZlcmRpZW5zdGtyZXV6LCB0aGUgQ3Jvc3Mgb2YgTWVyaXQuCkhvd2V2ZXIsIGhlIG5ldmVyIHdlbnQgYmFjayB0byBNYWdkZWJ1cmcsIHRoZSBjaXR5IG9mIGhpcyBiaXJ0aC4KUnVwcGluIHdhcyBib3JuIGluIDE5MTQgaW50byBhIG1pZGRsZS1jbGFzcyBmYW1pbHkgd2l0aCBsaXR0bGUgcmVsaWdpb3VzIG9ic2VydmFuY2UgYnV0IGEgc3Ryb25nIEpld2lzaCBpZGVudGl5LgpIaXMgZmF0aGVyJ3MgYnJvdGhlciwgQXJ0aHVyLCBiZWNhbWUgb25lIG9mIHRoZSBmaXJzdCBnZW5lcmF0aW9uIFppb25pc3QgbGVhZGVycyBhbmQgc2V0dGxlZCBpbiBQYWxlc3RpbmUgaW4gMTkwOC4KUnVwcGluJ3MgdW5pdmVyc2l0eSBlZHVjYXRpb24gd2FzIGN1dCBzaG9ydCBieSB0aGUgTmF6aSByaXNlIHRvIHBvd2VyIGluIGw5MzMuCkhlIGZvbGxvd2VkIGhpcyB1bmNsZSB0byBQYWxlc3RpbmUsIHdvcmtlZCBmb3IgYnJpZWYgcGVyaW9kcyBvbiB0aGUgbGFuZCwgdGhlbiByZXR1cm5lZCB0byB1cmJhbiBsaWZlIHRvIHdvcmsgaW4gYmFua3MgYW5kIHRyYXZlbCBhZ2VuY2llcy4KSGUgam9pbmVkIHRoZSBCcml0aXNoIEFybXkgaW4gbDkzOSwgYW5kIHdhcyBkcmFmdGVkIGludG8gbG9naXN0aWMgc2VydmljZXMgaW4gTm9ydGggQWZyaWNhIGFuZCBJdGFseSBiZWZvcmUgYmVpbmcgc3dpdGNoZWQgdG8gdGhlIGludGVsbGlnZW5jZSBzZXJ2aWNlcy4KVGhlcmUgaGUgc3BlbnQgbXVjaCB0aW1lIGludGVycm9nYXRpbmcgTmF6aSBwcmlzb25lcnMgb2Ygd2FyLgpCYWNrIGluIFBhbGVzdGluZSBhbmQgdGhlIG5ld2x5IGNyZWF0ZWQgc3RhdGUgb2YgSXNyYWVsIGhlIHdhcyByZWNydWl0ZWQgaW50byBNb3NzYWQgYmVmb3JlIHN3aXRjaGluZyB0byB0aGUgZGlwbG9tYXRpYyBzZXJ2aWNlLgpBZnRlciBoaXMgcmV0aXJlbWVudCBoZSBiZWNhbWUgaW5jcmVhc2luZ2x5IHVuaGFwcHkgYXQgdGhlIGRpcmVjdGlvbiB3aGljaCBJc3JhZWxpIHBvbGljeSB0b29rIHVuZGVyIE1lbmFjaGVtIEJlZ2luIGFuZCBZaXR6aGFrIFNoYW1pci4KSG93ZXZlciwgaGUgdG9vayBubyBwYXJ0IGluIHB1YmxpYyBjb250cm92ZXJzeSBhbmQgZm9yIHRoZSBwYXN0IDIwIHllYXJzIGhhZCBsaXZlZCBxdWlldGx5IGluIExvbmRvbi4KSGlzIHdpZmUgZGllZCBpbiAyMDAyIGFuZCBoZSBpcyBzdXJ2aXZlZCBieSB0d28gZGF1Z2h0ZXJzLgpFdGFuIFJ1cHBpbiwgZGlwbG9tYXQsIHdhcyBib3JuIGluIE1hZ2RlYnVyZywgR2VybWFueSwgb24gSnVseSAyOCwgMTkxNC4KSGUgZGllZCBvbiBPY3RvYmVyIDI0LCAyMDA3LCBhZ2VkIDkzCg==
[]
VHdvIGZvcm1lciBiYW5rZXJzIGZyb20gQmFyY2xheXMgaGF2ZSBiZWVuIGJhbm5lZCBmcm9tIGRvaW5nIGJ1c2luZXNzIGluIER1YmFpIGFmdGVyIGR1cGluZyB0aGVpciBjbGllbnRzIGludG8gaW52ZXN0aW5nIGluIGV4YWdnZXJhdGVkIHByb2R1Y3RzLgpUaGUgY2FzZSB1bmRlcmxpbmVzIHNvbWUgb2YgdGhlIHJpc2tzIG9mIGludmVzdGluZyBpbiB0aGUgZW1pcmF0ZXMiIGhpZ2hseSBjaGFyZ2VkIGZpbmFuY2lhbCBzZWN0b3IuClN3ZXRhIE5heWFyIGFuZCBWYW5pdGEgQ2hhdHRlcmJob2ogd2VyZSBkaXNtaXNzZWQgYnkgQmFyY2xheXMgYW5kIGV4cGVsbGVkIGZyb20gdGhlIER1YmFpIEludGVybmF0aW9uYWwgRmluYW5jaWFsIENlbnRyZSAoRElGQykgZm9yIGtub3dpbmdseSBwcm92aWRpbmcgdGhlaXIgY2xpZW50cyB3aXRoIGVtYmVsbGlzaGVkIHBvcnRmb2xpbyBzdGF0ZW1lbnRzLgpCYXJjbGF5cyBzYWlkIHRoYXQgdGVuIGNsaWVudHMgaGFkIGZhbGxlbiB2aWN0aW0gdG8gdGhlIHNjYW0sIGludmVzdGluZyBpbiAidW5sYXdmdWxseSIgbWFya2V0ZWQgcHJvZHVjdHMuClRoZSB0d28gYmFua2VycyB3ZXJlIGFsc28gYWNjdXNlZCBvZiBnaXZpbmcgdGhlaXIgY2xpZW50cyBmb3JnZWQgYmFuayBkb2N1bWVudHMgdGhhdCBoYWQgZmFsc2VseSBsaXN0ZWQgdGhlaXIgaW52ZXN0bWVudHMgYXMgcHJvdGVjdGVkLgpNcyBDaGF0dGVyYm9qIGhhcyBiZWVuIGJhbm5lZCBmcm9tIHRoZSBESUZDIGZvciB0aHJlZSB5ZWFycyBhbmQgTXMgTmF5YXIgZm9yIHNpeC4KRHViYWkncyBGaW5hbmNpYWwgU2VydmljZXMgQXV0aG9yaXR5IGhhcyBwdWJsaWNpc2VkIHRoZSBzdG9yeSBhcyBhIHdhcm5pbmcgdG8gb3RoZXIgYmFua2Vycy4KSXQgc2FpZCB0aGF0IE1zIE5heWFyIGhhZCBvYnN0cnVjdGVkIGl0cyBpbnZlc3RpZ2F0aW9uIGJ5IGtub3dpbmdseSBtYWtpbmcgZmFsc2UgYW5kIG1pc2xlYWRpbmcgc3RhdGVtZW50IGFuZCBpdCBoYWQgaW1wb3NlZCBhbiBhZG1pbmlzdHJhdGl2ZSBjZW5zdXJlIGFnYWluc3QgaGVyLgpCYXJjbGF5cyBzYWlkIGluIGEgYnJpZWYgc3RhdGVtZW50OiAiV2UgcmVtYWluIGRlZXBseSBjb21taXR0ZWQgdG8gZGVsaXZlcmluZyBmaXJzdC1jbGFzcyBjbGllbnQgc2VydmljZSBhbmQgcHJvZHVjdCBhbmQgYXJlIGNsZWFybHkgZGlzYXBwb2ludGVkIHdoZW4gaXNvbGF0ZWQgaW5kaXZpZHVhbCBhY3Rpb24gaW4gY29udHJhdmVudGlvbiBvZiBvdXIgdXN1YWwgaGlnaCBzdGFuZGFyZHMgZmFpbHMgdG8gbWVldCBvdXIgY2xpZW50cyIgZXhwZWN0YXRpb25zLiIK
[(VHdvIGZvcm1lciBiYW5rZXJzIGZyb20gQmFyY2xheXMgaGF2ZSBiZWVuIGJhbm5lZCBmcm9tIGRvaW5nIGJ1c2luZXNzIGluIER1YmFpIGFmdGVyIGR1cGluZyB0aGVpciBjbGllbnRzIGludG8gaW52ZXN0aW5nIGluIGV4YWdnZXJhdGVkIHByb2R1Y3RzLgpUaGUgY2FzZSB1bmRlcmxpbmVzIHNvbWUgb2YgdGhlIHJpc2tzIG9mIGludmVzdGluZyBpbiB0aGUgZW1pcmF0ZXMiIGhpZ2hseSBjaGFyZ2VkIGZpbmFuY2lhbCBzZWN0b3IuClN3ZXRhIE5heWFyIGFuZCBWYW5pdGEgQ2hhdHRlcmJob2ogd2VyZSBkaXNtaXNzZWQgYnkgQmFyY2xheXMgYW5kIGV4cGVsbGVkIGZyb20gdGhlIER1YmFpIEludGVybmF0aW9uYWwgRmluYW5jaWFsIENlbnRyZSAoRElGQykgZm9yIGtub3dpbmdseSBwcm92aWRpbmcgdGhlaXIgY2xpZW50cyB3aXRoIGVtYmVsbGlzaGVkIHBvcnRmb2xpbyBzdGF0ZW1lbnRzLgpCYXJjbGF5cyBzYWlkIHRoYXQgdGVuIGNsaWVudHMgaGFkIGZhbGxlbiB2aWN0aW0gdG8gdGhlIHNjYW0sIGludmVzdGluZyBpbiAidW5sYXdmdWxseSIgbWFya2V0ZWQgcHJvZHVjdHMuClRoZSB0d28gYmFua2VycyB3ZXJlIGFsc28gYWNjdXNlZCBvZiBnaXZpbmcgdGhlaXIgY2xpZW50cyBmb3JnZWQgYmFuayBkb2N1bWVudHMgdGhhdCBoYWQgZmFsc2VseSBsaXN0ZWQgdGhlaXIgaW52ZXN0bWVudHMgYXMgcHJvdGVjdGVkLgpNcyBDaGF0dGVyYm9qIGhhcyBiZWVuIGJhbm5lZCBmcm9tIHRoZSBESUZDIGZvciB0aHJlZSB5ZWFycyBhbmQgTXMgTmF5YXIgZm9yIHNpeC4KRHViYWkncyBGaW5hbmNpYWwgU2VydmljZXMgQXV0aG9yaXR5IGhhcyBwdWJsaWNpc2VkIHRoZSBzdG9yeSBhcyBhIHdhcm5pbmcgdG8gb3RoZXIgYmFua2Vycy4KSXQgc2FpZCB0aGF0IE1zIE5heWFyIGhhZCBvYnN0cnVjdGVkIGl0cyBpbnZlc3RpZ2F0aW9uIGJ5IGtub3dpbmdseSBtYWtpbmcgZmFsc2UgYW5kIG1pc2xlYWRpbmcgc3RhdGVtZW50IGFuZCBpdCBoYWQgaW1wb3NlZCBhbiBhZG1pbmlzdHJhdGl2ZSBjZW5zdXJlIGFnYWluc3QgaGVyLgpCYXJjbGF5cyBzYWlkIGluIGEgYnJpZWYgc3RhdGVtZW50OiAiV2UgcmVtYWluIGRlZXBseSBjb21taXR0ZWQgdG8gZGVsaXZlcmluZyBmaXJzdC1jbGFzcyBjbGllbnQgc2VydmljZSBhbmQgcHJvZHVjdCBhbmQgYXJlIGNsZWFybHkgZGlzYXBwb2ludGVkIHdoZW4gaXNvbGF0ZWQgaW5kaXZpZHVhbCBhY3Rpb24gaW4gY29udHJhdmVudGlvbiBvZiBvdXIgdXN1YWwgaGlnaCBzdGFuZGFyZHMgZmFpbHMgdG8gbWVldCBvdXIgY2xpZW50cyIgZXhwZWN0YXRpb25zLiIK, 'PERSON')]
Q2hlbHNlYSBoYXZlIGJlZW4gY2hhcmdlZCB3aXRoIGZhaWxpbmcgdG8gY29udHJvbCB0aGVpciBwbGF5ZXJzIGZvbGxvd2luZyBNaWNoYWVsIEVzc2llbidzIGRpc21pc3NhbCBhdCBEZXJieSBDb3VudHkgb24gU2F0dXJkYXkuCkFuZHJlIE1hcnJpbmVyLCB0aGUgbWF0Y2ggcmVmZXJlZSwgd2FzIGNvbmZyb250ZWQgYnkgYSBudW1iZXIgb2YgQ2hlbHNlYSBwbGF5ZXJzLCBpbmNsdWRpbmcgSm9obiBUZXJyeSwgYWZ0ZXIgRXNzaWVuJ3Mgc3RvcHBhZ2UgdGltZSBzZW5kaW5nLW9mZi4KVGhlIFJlZ3VsYXRvcnkgQ29tbWlzc2lvbiBhbHNvIHJlamVjdGVkIEVzc2llbidzIGFwcGVhbCBhZ2FpbnN0IGhpcyBzdHJhaWdodCByZWQgY2FyZCBmb3IgYSBwdXNoIG9uIEtlbm55IE1pbGxlci4KSGUgd2lsbCBzZXJ2ZSBhIHRocmVlLW1hdGNoIHN1c3BlbnNpb24sIGFuZCBtaXNzIGdhbWVzIGFnYWluc3QgU3VuZGVybGFuZCwgV2VzdCBIYW0gYW5kIEFyc2VuYWwuCkNoZWxzZWEgY291bGQgZmFjZSBmdXJ0aGVyIHB1bmlzaG1lbnQgYW5kIGhhdmUgdW50aWwgRGVjZW1iZXIgMTIgdG8gcmVzcG9uZC4KQXZyYW0gR3JhbnQsIHRoZSBDaGVsc2VhIG1hbmFnZXIsIHRvZGF5IHNhaWQgaGUgd291bGQgYmUgc2Vla2luZyB0YWxrcyB3aXRoIHRoZSBGb290YmFsbCBBc3NvY2lhdGlvbiBvdmVyIHRoZSB0cmVhdG1lbnQgbWV0ZWQgb3V0IHRvIGhpcyBwbGF5ZXJzIGJ5IG1hdGNoIG9mZmljaWFscy4KIkkgdGhpbmsgdGhlIGhhbmQgaXMgb24gd2hpc3RsZSB0b28gZWFzeSBhZ2FpbnN0IHVzLCIgaGUgc2FpZC4KQWxsIHRoZSByZWQgY2FyZHMgYXJlIHRvbyBlYXN5LCB0aGV5IGFyZSBub3QgcmVkIGNhcmRzLgpJIHNhdyB3aGF0IGhhcHBlbmVkIHdpdGggTWljaGFlbCBFc3NpZW4uClRoZXJlIGFyZSBubyBwb2NrZXRzLCBzbyB3aGF0IGNhbiBoZSBkbyB3aXRoIGhpcyBoYW5kcz8KSGUgZGlkbid0IGRvIGFueXRoaW5nIHdyb25nIGFuZCBpdCB3YXNuJ3QgYSByZWQgY2FyZC4KSSBqdXN0IGtub3cgdGhlIGZhY3RzLgpUaGUgcmVkIGNhcmQgYWdhaW5zdCBNYW4gVXRkIFtKb2huIE9iaSBNaWtlbF0gd2FzIG5vdCBhIHJlZCBjYXJkLCB0aGUgcmVkIGNhcmQgYWdhaW5zdCBGdWxoYW0gd2FzIG5vdCBhIHJlZCBjYXJkIGZvciBEaWRpZXIgRHJvZ2JhIGFuZCB0aGUgcmVkIGNhcmQgZm9yIE1pY2hhZWwgd2FzIG5vdCBhIHJlZCBjYXJkLgpJdCBjb3N0IHVzIHBvaW50cyBpbiB0d28gb2YgdGhvc2UgZ2FtZXMgYnV0IEkgZG9uJ3QgdGhpbmsgaXQgaXMgZmFpci4KSSBkb24ndCBrbm93IHdoYXQgdGhlIHJlYXNvbiBpcyBidXQgSSBzZWUgdGhlIGZhY3RzIC0gdGhlIHJlZCBjYXJkcyBhcmUgdG9vIGVhc2lseSBiZWluZyBnaXZlbiBhZ2FpbnN0IHVzLgpUaGUgc2FtZSB0aGluZ3MgaGFwcGVuIHdpdGggb3RoZXIgcGxheWVycyBhbmQgdGhlcmUgaXMgbm8gcmVkIGNhcmQuCkFzaGxleSBDb2xlLCB0aGUgQ2hlbHNlYSBmdWxsIGJhY2ssIHNhaWQ6ICJGcm9tIHdoYXQgSSBzYXcsIGl0IGRpZCBub3QgbG9vayBsaWtlIGhlIFtFc3NpZW5dIHJlYWxseSBnb3QgaGltLgpJdCBpcyBhIGJpZyBibG93IHRvIGxvc2UgaGltIGZvciBhIHN1c3BlbnNpb24gbm93LCBiZWNhdXNlIHdlIGhhdmUgZ290IGEgbG90IG9mIHRvdWdoIGdhbWVzIGNvbWluZyB1cCBhbmQgaXQgaXMgZ29pbmcgdG8gYmUgdG91Z2ggd2l0aG91dCBoaW0uCkVhcmxpZXIgdGhpcyBzZWFzb24gQ2hlbHNlYSB3ZXJlIGZpbmVkIMKjMzAsMDAwIGFuZCB3YXJuZWQgb3ZlciB0aGVpciBmdXR1cmUgY29uZHVjdCBhZnRlciBhZG1pdHRpbmcgdGhleSBmYWlsZWQgdG8gY29udHJvbCB0aGVpciBwbGF5ZXJzIGR1cmluZyB0aGUgMi0wIGxlYWd1ZSBkZWZlYXQgYXQgTWFuY2hlc3RlciBVbml0ZWQuClRoZXkgd2VyZSBjaGFyZ2VkIGZvciB0aGUgcGxheWVycycgcmVhY3Rpb24gdG8gTWlrZWwncyBzZW5kaW5nLW9mZiBmb3IgYSBjaGFsbGVuZ2Ugb24gUGF0cmljZSBFdnJhIGR1cmluZyB0aGUgbWF0Y2ggb24gU2VwdGVtYmVyIDIzLgo=
[]

[(, 'ORG')]
U1VQRVJCVUdTIHBvc2UgYSBmYXIgZ3JlYXRlciB0aHJlYXQgdG8gaHVtYW5pdHkgdGhhbiBiaW8tdGVycm9yaXNtLCBVUyBnZW5ldGljcyBwaW9uZWVyIENyYWlnIFZlbnRlciBoYXMgd2FybmVkLgpEciBWZW50ZXIsIHZpc2l0aW5nIHRoZSBVSyB0byBwcm9tb3RlIGhpcyBhdXRvYmlvZ3JhcGh5LCBpcyB3b3JraW5nIG9uIGEgcHJvamVjdCB0byBjcmVhdGUgdGhlIHdvcmxkJ3MgZmlyc3Qgc3ludGhldGljIGxpZmUgZm9ybSBmcm9tIEROQSBidWlsZGluZyBibG9ja3MuCkNyaXRpY3MgYXJndWUgdGhhdCBhcnRpZmljaWFsIG1pY3JvYmVzLi4uClRoZSBmdWxsIGFydGljbGUgY29udGFpbnMgMTg3IHdvcmRzIGFuZCBhcHBlYXJzIGluIFRoZSBTY290c21hbiBuZXdzcGFwZXIuCg==
[]
Qm9vdHMgYXJlIHdhbGtpbmc6IEh1bnRlciBwcm9kdWN0aW9uIGdvZXMgb3ZlcnNlYXMKSFVOVEVSLCB0aGUgbWFrZXIgb2Ygd2VsbGluZ3RvbiBib290cyB3b3JuIGJ5IHRoZSByb3lhbHMgYW5kIHN0YXJzIGluY2x1ZGluZyBLZWlyYSBLbmlnaHRsZXkgYW5kIEthdGUgTW9zcywgaXMgdG8gam9pbiB0aGUgZmxvdyBvZiBCcml0aXNoIGZpcm1zIG1vdmluZyBlYXN0LgpIdW50ZXIgQm9vdCwgYmFzZWQgaW4gRHVtZnJpZXMsIGlzIHRvIG1vdmUgdGhlIGJ1bGsgb2YgaXRzIHByb2R1Y3Rpb24gdG8gQ2hpbmEgYW5kIFNlcmJpYSwgaXQgd2FzIHJlcG9ydGVkIHllc3RlcmRheS4KVGhlIGNvbXBhbnkgd2VudCBpbnRvIGFkbWluaXN0cmF0aW9uIGxhc3QgeWVhciwgYnV0IG1vcmUgdGhhbiA3MCBqb2JzIHdlcmUgc2F2ZWQgaW4gYSBidXlvdXQgaGVhZGVkIGJ5IHRoZSBDb25zZXJ2YXRpdmUgcGFydHkgdHJlYXN1cmVyLCBKb25hdGhhbiBNYXJsYW5kLgpIb3dldmVyLCAxOCBqb2JzIHdlbnQgaW4gSmFudWFyeSwgYW5kIDE2IG1vcmUgYXJlIHNldCB0byBnby4KQSBzcG9rZXN3b21hbiBzYWlkIGl0IHdhcyAibm8gbG9uZ2VyIGVjb25vbWljYWxseSB2aWFibGUiIHRvIG1ha2UgdGhlIGVudGlyZSByYW5nZSBpbiBTY290bGFuZC4KIkl0IGlzIHdpdGggZ3JlYXQgcmVncmV0IHRoYXQgd2UgaGF2ZSB0byBzY2FsZSBkb3duIGluIER1bWZyaWVzLCIgc2hlIHNhaWQuClJ1c3NlbGwgQnJvd24sIHRoZSBMYWJvdXIgTVAgZm9yIER1bWZyaWVzIGFuZCBHYWxsb3dheSwgc2FpZDogIlRoZXkndmUgYmVlbiBvdXRzb3VyY2luZyBmcm9tIGJvdGggQ2hpbmEgYW5kIFNlcmJpYSBmb3Igc29tZSBjb25zaWRlcmFibGUgdGltZS4KUmVhbGx5LCBpdCdzIHRoZSBjb21wYW55IG5hbWUgdGhleSBhcmUgbW9yZSBpbnRlcmVzdGVkIGluLgpJZiB5b3Ugd2FudCBhIGdlbnVpbmUgU2NvdHRpc2ggcHJvZHVjdCwgbWFkZSBpbiBTY290bGFuZCwgeW91IHNob3VsZCBwdXJjaGFzZSB0aGF0IGFzIGEgZ2VudWluZSBwcm9kdWN0IG1hbnVmYWN0dXJlZCBpbiBTY290bGFuZC4KVGhpcyBhcnRpY2xlOiBodHRwOi8vdGhlc2NvdHNtYW4uc2NvdHNtYW4uY29tL2luZGV4LmNmbT9pZD0xNzIzMjUyMDA3Cg==
[]
U2NvdHNtYW4uY29tIE1lbWJlciBDZW50cmUgLSBQcmVtaXVtIENvbnRlbnQgLSBDb21taXR0ZWUgZ2l2ZXMgbm8gc2ltcGxlIFdlc3QgTG90aGlhbiBhbnN3ZXIKQ0FOIHRoZXJlIGJlIGEgc29sdXRpb24gdG8gdGhlICJXZXN0IExvdGhpYW4gUXVlc3Rpb24iIHRoYXQgZG9lcyBub3QgZGVzdHJveSB0aGUgV2VzdG1pbnN0ZXIgcGFybGlhbWVudCBhcyB3ZSBrbm93IGl0PwpUaGVyZSBpcyBncm93aW5nIHJlc2VudG1lbnQgaW4gRW5nbGFuZCBvdmVyIHRoZSBhc3ltbWV0cmljIGdlb21ldHJ5IG9mIGRldm9sdXRpb24gYnkgd2hpY2ggU2NvdHMgTVBzIGNhbiBjb250aW51ZSB0byB2b3RlIG9uIGRldm9sdmVkIG1hdHRlcnMgYXQgV2VzdG1pbnN0ZXIgd2hpY2ggYWZmZWN0IEVuZ2xhbmQgZXhjbHVzaXZlbHkuCldoZW4gV2VzdG1pbnN0ZXIgYW5kIEhvbHlyb29kIHdlcmUuLi4KVGhlIGZ1bGwgYXJ0aWNsZSBjb250YWlucyA0ODIgd29yZHMgYW5kIGFwcGVhcnMgaW4gVGhlIFNjb3RzbWFuIG5ld3NwYXBlci4K
[(U2NvdHNtYW4uY29tIE1lbWJlciBDZW50cmUgLSBQcmVtaXVtIENvbnRlbnQgLSBDb21taXR0ZWUgZ2l2ZXMgbm8gc2ltcGxlIFdlc3QgTG90aGlhbiBhbnN3ZXIKQ0FOIHRoZXJlIGJlIGEgc29sdXRpb24gdG8gdGhlICJXZXN0IExvdGhpYW4gUXVlc3Rpb24iIHRoYXQgZG9lcyBub3QgZGVzdHJveSB0aGUgV2VzdG1pbnN0ZXIgcGFybGlhbWVudCBhcyB3ZSBrbm93IGl0PwpUaGVyZSBpcyBncm93aW5nIHJlc2VudG1lbnQgaW4gRW5nbGFuZCBvdmVyIHRoZSBhc3ltbWV0cmljIGdlb21ldHJ5IG9mIGRldm9sdXRpb24gYnkgd2hpY2ggU2NvdHMgTVBzIGNhbiBjb250aW51ZSB0byB2b3RlIG9uIGRldm9sdmVkIG1hdHRlcnMgYXQgV2VzdG1pbnN0ZXIgd2hpY2ggYWZmZWN0IEVuZ2xhbmQgZXhjbHVzaXZlbHkuCldoZW4gV2VzdG1pbnN0ZXIgYW5kIEhvbHlyb29kIHdlcmUuLi4KVGhlIGZ1bGwgYXJ0aWNsZSBjb250YWlucyA0ODIgd29yZHMgYW5kIGFwcGVhcnMgaW4gVGhlIFNjb3RzbWFuIG5ld3NwYXBlci4K, 'ORG')]
VHVya2lzaCBzb2xkaWVycyBmcmVlZCBieSBLdXJkcwpFSUdIVCBUdXJraXNoIHNvbGRpZXJzIGNhcHR1cmVkIGxhc3QgbW9udGggYnkgS3VyZGlzaCBndWVycmlsbGFzIHdlcmUgcmVsZWFzZWQgaW4gbm9ydGhlcm4gSXJhcSB5ZXN0ZXJkYXksIGEgbW92ZSB0aGF0IGNvdWxkIGVhc2UgcHVibGljIHByZXNzdXJlIG9uIFR1cmtleSdzIGdvdmVybm1lbnQgdG8gbGF1bmNoIGEgbWFqb3IgY3Jvc3MtYm9yZGVyIGluY3Vyc2lvbi4KVGhlIHJlbGVhc2UgY2FtZSBhIGRheSBhZnRlciBJcmFxJ3MgZ292ZXJubWVudCB2b3dlZCB0byBodW50IGRvd24gS3VyZGlzaCBQS0sgbWlsaXRhbnRzIHJlc3BvbnNpYmxlIGZvciByYWlkcyBpbnRvIFR1cmtleS4KVGhpcyBhcnRpY2xlOiBodHRwOi8vdGhlc2NvdHNtYW4uc2NvdHNtYW4uY29tL2luZGV4LmNmbT9pZD0xNzU3NTQyMDA3Cg==
[]
UGVuc2lvbmVyIGRpZXMgYWZ0ZXIgY2FyIGlzIGhpdCBieSBwb2xpY2Ugb24gOTk5IGNhbGwKQU4gODYtWUVBUi1PTEQgbWFuIGRpZWQgYWZ0ZXIgdGhlIHZlaGljbGUgaGUgd2FzIGluIHdhcyBoaXQgYnkgYSBwb2xpY2UgY2FyIHJlc3BvbmRpbmcgdG8gYW4gZW1lcmdlbmN5IGNhbGwuClRoZSBwb2xpY2UgY2FyIHdhcyB0cmF2ZWxsaW5nIGFsb25nIENhcm11bm5vY2sgUm9hZCwgaW4gdGhlIEtpbmdzIFBhcmsgYXJlYSBvZiBHbGFzZ293IG9uIEZyaWRheSBldmVuaW5nLgpJdCBjb2xsaWRlZCB3aXRoIGEgVm9sa3N3YWdlbiBQb2xvIHdoaWNoIGNyb3NzZWQgaXRzIHBhdGggZnJvbSBhIHNpZGUgc3RyZWV0LgpUaGUgNTUteWVhci1vbGQgd29tYW4gZHJpdmluZyB0aGUgUG9sbyB3YXMgdW5pbmp1cmVkIGJ1dCB0aGUgODYteWVhci1vbGQgbWFsZSBwYXNzZW5nZXIgZGllZCBvbiBUdWVzZGF5IG1vcm5pbmcuClRoZSAzNS15ZWFyLW9sZCBmZW1hbGUgb2ZmaWNlciB3aG8gd2FzIGRyaXZpbmcgdGhlIHBvbGljZSB2ZWhpY2xlIHdhcyB0cmVhdGVkIGF0IHRoZSBWaWN0b3JpYSBJbmZpcm1hcnkgZm9yIGEgbWlub3IgaW5qdXJ5IGFuZCBsYXRlciByZWxlYXNlZC4KSGVyIDI5LXllYXItb2xkIG1hbGUgY29sbGVhZ3VlIHdhcyB1bmluanVyZWQgYW5kIGRpZCBub3QgcmVxdWlyZSBtZWRpY2FsIHRyZWF0bWVudC4KTWVhbndoaWxlIGFuIGludmVzdGlnYXRpb24gd2FzIGxhdW5jaGVkIGFtaWQgY2xhaW1zIGEgcG9saWNlIGNoYXNlIGVuZGVkIGluIGNyYXNoIHdoaWNoIGluanVyZWQgdGhyZWUgcGVvcGxlLgpUd28gbWVuLCBhZ2VkIDI3IGFuZCAxOCwgd2VyZSB0cmFwcGVkIGluIGEgSG9uZGEgUHJlbHVkZSB3aGljaCB3YXMgaW52b2x2ZWQgaW4gYSBjb2xsaXNpb24gd2l0aCBhIFZhdXhoYWxsIENvcnNhIG9uIExhbmcgU3RyYWNodCwgQWJlcmRlZW4sIG9uIFR1ZXNkYXkgbmlnaHQuClRoaXMgYXJ0aWNsZTogaHR0cDovL3RoZXNjb3RzbWFuLnNjb3RzbWFuLmNvbS9pbmRleC5jZm0/aWQ9MTgwNjAyMjAwNwo=
[]
QmFieSBidXNpbmVzc2VzIHdhbnRlZCBmb3IgaW5jdWJhdG9yClRIRSBodW50IGlzIG9uIGZvciBrZWVuIGZsZWRnbGluZyBlbnRyZXByZW5ldXJzIHRvIGpvaW4gYSBzY2hlbWUgdG8gZ2l2ZSB0aGVpciBidXNpbmVzcyBhIGJvb3N0LgpUaGUgRWRpbmJ1cmdoIFByZS1JbmN1YmF0b3IgU2NoZW1lIChFUElTKSBpcyBjb25kdWN0aW5nIGEgd29ybGR3aWRlIHNlYXJjaCBmb3IgMzEgbGVhZGVycyBvZiBrbm93bGVkZ2UtYmFzZWQgc3RhcnQtdXAgYnVzaW5lc3NlcyB0byB0YWtlIHBhcnQgaW4gdGhlIHNlY29uZCByb3VuZCBvZiB0aGUgcHJvamVjdC4KU3VjY2Vzc2Z1bCBlbnRyZXByZW5ldXJzIHdpbGwgcG9ja2V0IGFuIGludGVyZXN0LWZyZWUgbG9hbiBvZiDCozEwLDAwMCwgYXMgd2VsbCBhcyBhIHN1cHBvcnQgcGFja2FnZSB2YWx1ZWQgYXQgwqM3MCwwMDAsIHdoaWNoIGluY2x1ZGVzIGV4cGVydCBidXNpbmVzcyBhbmQgYWNhZGVtaWMgbWVudG9yaW5nLCBhY2NvbW1vZGF0aW9uIGluIEVkaW5idXJnaCBhbmQgYWNjZXNzIHRvIHRoZSBVbml2ZXJzaXR5IG9mIEVkaW5idXJnaCdzIHJlc291cmNlcy4KVGhlIGZpcnN0IHJvdW5kIG9mIHRoZSBzY2hlbWUsIGZ1bmRlZCBieSBTY290dGlzaCBFbnRlcnByaXNlIEVkaW5idXJnaCBhbmQgTG90aGlhbiBhbmQgdGhlIFVuaXZlcnNpdHkgb2YgRWRpbmJ1cmdoLCBzYXcgODAgcGVyIGNlbnQgb2YgdGhlIGJ1c2luZXNzZXMgdHJhbnNmb3JtIGludG8gdmlhYmxlIGVudGVycHJpc2VzLgpGaXZlIGVhcmx5LXN0YWdlIGJ1c2luZXNzZXMgaGF2ZSBhbHJlYWR5IGJlZW4gc2VsZWN0ZWQgZm9yIHRoZSBzY2hlbWUsIHdoaWNoIHJlcXVpcmVzIHRoYXQgYXBwbGljYW50cyBoYXZlIGEgZ29vZCBpZGVhIGFuZCBhIGRlZ3JlZSBhbmQgbXVzdCBiZSB3aWxsaW5nIHRvIHdvcmsgaW4gRWRpbmJ1cmdoLgpBZHJpYW4gU21pdGgsIGhlYWQgb2YgRVBJUywgc2F5czogIlRoZSBFUElTIHByb2dyYW1tZSBpc24ndCBqdXN0IGFib3V0IHRocm93aW5nIG1vbmV5IGF0IGdvb2QgaWRlYXMuCkFtb25nIHNlYXNvbmVkIGVudHJlcHJlbmV1cnMsIHdlIGFyZSBxdWlja2x5IGJlY29taW5nIHRoZSBzdGFydC11cCByb3V0ZSBvZiBjaG9pY2UuCiQxMmJuCkVRVUFUT1JJQUwgR3VpbmVhIHdpbGwgaW52ZXN0IHRoZSBzdW0sIGVxdWl2YWxlbnQgdG8gwqM1Ljlibiwgb3ZlciBmaXZlIHllYXJzIGluIGluZnJhc3RydWN0dXJlIHByb2dyYW1tZXMgdG8gZGl2ZXJzaWZ5IGl0cyBlY29ub215IGF3YXkgZnJvbSBpdHMgcmVsaWFuY2Ugb24gb2lsIGFuZCBnYXMuClRoZSBhbWJpdGlvdXMgYmx1ZXByaW50IGluY2x1ZGVzIHBsYW5zIGZvciBhIHJlZmluZXJ5LCBuZXcgbW90b3J3YXlzIHRvIHBlbmV0cmF0ZSB0aGUgY291bnRyeSdzIGhlYXZpbHkgZm9yZXN0ZWQgaW50ZXJpb3IsIGFuIGFpcnBvcnQsIGEgaHlkcm9lbGVjdHJpYyBwb3dlciBwbGFudCwgYSBnYXMgcG93ZXIgc3RhdGlvbiwgaG9zcGl0YWxzIGFuZCB0cmFpbmluZyBmYWNpbGl0aWVzLgpUSEVSRSB3ZXJlIG5vIHBvc2l0aXZlcyBhdHRhY2hlZCB0byBpdCB3aGF0c29ldmVyLgpJdCB3YXMgYSBjYW1wYWlnbiB0aGF0IG1lcmVseSBhdHRhY2tlZCB0aGUgb3Bwb3NpdGlvbi4KU3RhbmRhcmQgTGlmZSBjaGllZiBleGVjdXRpdmUgU2FuZHkgQ3JvbWJpZSBvbiBQZWFybCdzIGFnZ3Jlc3NpdmUgYmlkIGNhbXBhaWduIGZvciBjbG9zZWQtZnVuZHMgc3BlY2lhbGlzdCBSZXNvbHV0aW9uLgpSZW5hdWx0ClRIRSBGcmVuY2ggY2FyLW1ha2VyIHN0YXJ0ZWQgcHJvZHVjdGlvbiBvZiBpdHMgZmlyc3Qgc3BvcnRzIHV0aWxpdHkgdmVoaWNsZSAoU1VWKSBpbiBTb3V0aCBLb3JlYSB5ZXN0ZXJkYXksIHdpdGggdGhlIGFpbSBvZiB0dXJuaW5nIG91dCAxMDAsMDAwIGEgeWVhci4KUmVuYXVsdCBTYW1zdW5nIHBsYW5zIHRvIHNlbGwgdGhlIFNVViBtb3N0bHkgaW4gRXVyb3BlIGZyb20gTWF5IHVuZGVyIHRoZSBSZW5hdWx0IGJyYW5kLgpQdWJsaWNhbnMKQkVFUiBzYWxlcyBpbiBwdWJzIGFyZSBhdCB0aGVpciBsb3dlc3QgbGV2ZWwgc2luY2UgdGhlIDE5MzBzLCBhY2NvcmRpbmcgdG8gdGhlIEJyaXRpc2ggQmVlciBhbmQgUHViIEFzc29jaWF0aW9uLgpTZXZlbiBtaWxsaW9uIGZld2VyIHBpbnRzIGEgZGF5IGFyZSBub3cgYmVpbmcgc29sZCBpbiBCcml0YWluIHRoYW4gZHVyaW5nIHRoZSBiZWVyIG1hcmtldCdzIDE5NzkgcGVhayAtIGEgMjIgcGVyIGNlbnQgZHJvcC4KSG93ZXZlciwgc3VwZXJtYXJrZXQgYmVlciBzYWxlcyBoYXZlIGluY3JlYXNlZC4KVGhpcyBhcnRpY2xlOiBodHRwOi8vdGhlc2NvdHNtYW4uc2NvdHNtYW4uY29tL2J1c2luZXNzLmNmbT9pZD0xODI2NzEyMDA3Cg==
[]
VGhlIFNjb3RzbWFuIC0gRmVhdHVyZXMgLSBCZXN0IGNlaWxpZGggYmFuZApWZXJ5IHdlc3QgY29hc3QsIHZlcnkgY2xhc3N5LgpBbGFzZGFpciBNYWNDdWlzaCBhbmQgdGhlIEJsYWNrIFJvc2UgQ2VpbGlkaCBCYW5kIHdlcmUgZm9ybWVkIGluIHRoZSBlYXJseSAxOTkwcyBhdCB0aGUgaGVpZ2h0IG9mIHRoZSBjZWlsaWRoIGRhbmNlIHJldml2YWwgaW4gR2xhc2dvdyBhbmQgaGF2ZSBsb25nIGJlZW4gcmVjb2duaXNlZCBhcyB0aGUgImxlYWRpbmcgbGlnaHRzIiBvZiB0aGUgY2VpbGlkaCBiYW5kIHdvcmxkLgpUaGVpciBzdHlsZSBpcyBmb2N1c2VkIG9uIHRoZSBkZW1hbmRzIG9mIHRoZSBkYW5jZXIgYnV0LCBtdXNpY2FsbHksIHRoZXkgZHJhdyBvbiBpbmZsdWVuY2VzIGZyb20gdGhlIHdpZGVyIFNjb3R0aXNoIGFuZCBJcmlzaCBjb250ZW1wb3JhcnkgZm9sayBzY2VuZXMuCkluIGdyZWF0IGRlbWFuZCBmb3IgcmFkaW8gYW5kIFRWLCB0aGV5IGhhdmUgcHJvZHVjZWQgZm91ciBzdHVkaW8gYWxidW1zLgpUaGVpciBsYXRlc3QgcmVsZWFzZSwgU3RlcHBpbmcgT3V0LCBnb3QgcmF2ZSByZXZpZXdzLgpHcmVhdCBjYWxsaW5nLCB3aXRoIGEgbmljZSBob21lc3B1biBmZWVsLgpUaGV5J3JlIG9uIHRoZSBiaWxsIGZvciBFZGluYnVyZ2gncyBTdCBBbmRyZXcncyBEYXkgY2VsZWJyYXRpb24uClRoZWlyIGRyaXZpbmcgYW5kIGluc2lzdGVudCByaHl0aG1zIGFyZSBpbXBvc3NpYmxlIHRvIHN0YW5kIHN0aWxsIHRvIC0geW91J3ZlIGp1c3QgZ290IHRvIGRhbmNlLgpUaGUgY2xvc2VzdCB0byBzdHJpY3QgdGVtcG8gLSB2ZXJ5IHRpZ2h0LgpUaGUgT2NjYXNpb25hbHMgYXJlIHdpZGVseSByZWdhcmRlZCBhcyBvbmUgb2YgdGhlIGZvcmVtb3N0IGNlaWxpZGggYmFuZHMgYW5kIGhhdmUgYmVlbiBwbGF5aW5nIHRoZSBsZW5ndGggYW5kIGJyZWFkdGggb2YgRXVyb3BlIHNpbmNlIDE5ODYuCkFjY29yZGlvbmlzdCBGcmVlbGFuZCBCYXJib3VyIGpvaW5lZCBmb3JjZXMgd2l0aCBmZWxsb3cgZXgtV2FsbG9jaG1vciBkcnVtbWVyIEd1cyBNaWxsYXIgdG8gIm9jY2FzaW9uYWxseSIgcGxheSBmb3IgZGFuY2VzIGF0IGZlc3RpdmFscyBhbmQsIHdoZW4gRnJlZWxhbmQgaW52aXRlZCBiYW5qby9tYW5kb2xpbiBwbGF5ZXIgS2V2aW4gTWFjbGVvZCB0byBqb2luLCB0aGUgYmFzaXMgb2YgdGhlIGxpbmUtdXAgd2FzIHNlY3VyZWQuClNpbmNlIHRoZW4sIG1hbnkgZmluZSBtdXNpY2lhbnMgaGF2ZSBvY2Nhc2lvbmFsbHkgcGVyZm9ybWVkIHdpdGggdGhlIGJhbmQuCkhpZ2gtZW5lcmd5IHZpcnR1b3NpdHkgYW5kIHNob3dtYW5zaGlwIGZyb20gYSB0cnVlIG51dHRlci4KQWxzbyBwZXJmb3JtaW5nIG9uIFN0IEFuZHJldydzIERheSwgdGhlIFNlbnNhdGlvbmFsIEppbWkgU2hhbmRyaXggRXhwZXJpZW5jZSBoYXZlIGVzdGFibGlzaGVkIGEgcmVwdXRhdGlvbiBhcyBvbmUgb2YgdG9wIGNlaWxpZGggYmFuZHMgaW4gdGhlIHdvcmxkLCBwbGF5aW5nIGZvciBoaWdoLWVuZXJneSBkYW5jZXMgZnJvbSBCYW5na29rIHRvIEJvZ290w6EsIE1lbGJvdXJuZSB0byBNb3Njb3cuCkZlcmdpZSBNYWNkb25hbGQgaXMgYSBidXR0b24gYWNjb3JkaW9uIHBsYXllciBhbmQgaGFzIGJlZW4gYW4gZXh0cmFvcmRpbmFyeSBjZWlsaWRoIGJhbmQgbGVhZGVyIGZvciBtb3JlIHRoYW4gNDAgeWVhcnMuCkhlIGlzIGEgcmVndWxhciBwZXJmb3JtZXIgb24gQkJDIFNjb3R0aXNoIGRhbmNlIG11c2ljIHByb2dyYW1tZXMgYW5kIHdhcyB0aGUgZmlyc3QgU2NvdHRpc2ggYmFuZCBsZWFkZXIgdG8gYnJvYWRjYXN0IGNlaWxpZGggbXVzaWMuClN0dWFydCBOaXNiZXQgaXMgdGhlIG11c2ljYWwgZGlyZWN0b3Igb2YgRWRpbmJ1cmdoJ3MgU3QgQW5kcmV3J3MgRGF5IGFuZCBIb2dtYW5heS4KVGhpcyBhcnRpY2xlOiBodHRwOi8vdGhlc2NvdHNtYW4uc2NvdHNtYW4uY29tL2ZlYXR1cmVzLmNmbT9pZD0xODYxMzQyMDA3Cg==
[(VGhlIFNjb3RzbWFuIC0gRmVhdHVyZXMgLSBCZXN0IGNlaWxpZGggYmFuZApWZXJ5IHdlc3QgY29hc3QsIHZlcnkgY2xhc3N5LgpBbGFzZGFpciBNYWNDdWlzaCBhbmQgdGhlIEJsYWNrIFJvc2UgQ2VpbGlkaCBCYW5kIHdlcmUgZm9ybWVkIGluIHRoZSBlYXJseSAxOTkwcyBhdCB0aGUgaGVpZ2h0IG9mIHRoZSBjZWlsaWRoIGRhbmNlIHJldml2YWwgaW4gR2xhc2dvdyBhbmQgaGF2ZSBsb25nIGJlZW4gcmVjb2duaXNlZCBhcyB0aGUgImxlYWRpbmcgbGlnaHRzIiBvZiB0aGUgY2VpbGlkaCBiYW5kIHdvcmxkLgpUaGVpciBzdHlsZSBpcyBmb2N1c2VkIG9uIHRoZSBkZW1hbmRzIG9mIHRoZSBkYW5jZXIgYnV0LCBtdXNpY2FsbHksIHRoZXkgZHJhdyBvbiBpbmZsdWVuY2VzIGZyb20gdGhlIHdpZGVyIFNjb3R0aXNoIGFuZCBJcmlzaCBjb250ZW1wb3JhcnkgZm9sayBzY2VuZXMuCkluIGdyZWF0IGRlbWFuZCBmb3IgcmFkaW8gYW5kIFRWLCB0aGV5IGhhdmUgcHJvZHVjZWQgZm91ciBzdHVkaW8gYWxidW1zLgpUaGVpciBsYXRlc3QgcmVsZWFzZSwgU3RlcHBpbmcgT3V0LCBnb3QgcmF2ZSByZXZpZXdzLgpHcmVhdCBjYWxsaW5nLCB3aXRoIGEgbmljZSBob21lc3B1biBmZWVsLgpUaGV5J3JlIG9uIHRoZSBiaWxsIGZvciBFZGluYnVyZ2gncyBTdCBBbmRyZXcncyBEYXkgY2VsZWJyYXRpb24uClRoZWlyIGRyaXZpbmcgYW5kIGluc2lzdGVudCByaHl0aG1zIGFyZSBpbXBvc3NpYmxlIHRvIHN0YW5kIHN0aWxsIHRvIC0geW91J3ZlIGp1c3QgZ290IHRvIGRhbmNlLgpUaGUgY2xvc2VzdCB0byBzdHJpY3QgdGVtcG8gLSB2ZXJ5IHRpZ2h0LgpUaGUgT2NjYXNpb25hbHMgYXJlIHdpZGVseSByZWdhcmRlZCBhcyBvbmUgb2YgdGhlIGZvcmVtb3N0IGNlaWxpZGggYmFuZHMgYW5kIGhhdmUgYmVlbiBwbGF5aW5nIHRoZSBsZW5ndGggYW5kIGJyZWFkdGggb2YgRXVyb3BlIHNpbmNlIDE5ODYuCkFjY29yZGlvbmlzdCBGcmVlbGFuZCBCYXJib3VyIGpvaW5lZCBmb3JjZXMgd2l0aCBmZWxsb3cgZXgtV2FsbG9jaG1vciBkcnVtbWVyIEd1cyBNaWxsYXIgdG8gIm9jY2FzaW9uYWxseSIgcGxheSBmb3IgZGFuY2VzIGF0IGZlc3RpdmFscyBhbmQsIHdoZW4gRnJlZWxhbmQgaW52aXRlZCBiYW5qby9tYW5kb2xpbiBwbGF5ZXIgS2V2aW4gTWFjbGVvZCB0byBqb2luLCB0aGUgYmFzaXMgb2YgdGhlIGxpbmUtdXAgd2FzIHNlY3VyZWQuClNpbmNlIHRoZW4sIG1hbnkgZmluZSBtdXNpY2lhbnMgaGF2ZSBvY2Nhc2lvbmFsbHkgcGVyZm9ybWVkIHdpdGggdGhlIGJhbmQuCkhpZ2gtZW5lcmd5IHZpcnR1b3NpdHkgYW5kIHNob3dtYW5zaGlwIGZyb20gYSB0cnVlIG51dHRlci4KQWxzbyBwZXJmb3JtaW5nIG9uIFN0IEFuZHJldydzIERheSwgdGhlIFNlbnNhdGlvbmFsIEppbWkgU2hhbmRyaXggRXhwZXJpZW5jZSBoYXZlIGVzdGFibGlzaGVkIGEgcmVwdXRhdGlvbiBhcyBvbmUgb2YgdG9wIGNlaWxpZGggYmFuZHMgaW4gdGhlIHdvcmxkLCBwbGF5aW5nIGZvciBoaWdoLWVuZXJneSBkYW5jZXMgZnJvbSBCYW5na29rIHRvIEJvZ290w6EsIE1lbGJvdXJuZSB0byBNb3Njb3cuCkZlcmdpZSBNYWNkb25hbGQgaXMgYSBidXR0b24gYWNjb3JkaW9uIHBsYXllciBhbmQgaGFzIGJlZW4gYW4gZXh0cmFvcmRpbmFyeSBjZWlsaWRoIGJhbmQgbGVhZGVyIGZvciBtb3JlIHRoYW4gNDAgeWVhcnMuCkhlIGlzIGEgcmVndWxhciBwZXJmb3JtZXIgb24gQkJDIFNjb3R0aXNoIGRhbmNlIG11c2ljIHByb2dyYW1tZXMgYW5kIHdhcyB0aGUgZmlyc3QgU2NvdHRpc2ggYmFuZCBsZWFkZXIgdG8gYnJvYWRjYXN0IGNlaWxpZGggbXVzaWMuClN0dWFydCBOaXNiZXQgaXMgdGhlIG11c2ljYWwgZGlyZWN0b3Igb2YgRWRpbmJ1cmdoJ3MgU3QgQW5kcmV3J3MgRGF5IGFuZCBIb2dtYW5heS4KVGhpcyBhcnRpY2xlOiBodHRwOi8vdGhlc2NvdHNtYW4uc2NvdHNtYW4uY29tL2ZlYXR1cmVzLmNmbT9pZD0xODYxMzQyMDA3Cg==, 'ORG')]
