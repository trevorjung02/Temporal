#!/bin/bash
#SBATCH --job-name=data-proc
#SBATCH --partition=gpu-a40
#SBATCH --account=cse
#SBATCH --nodes=1
#SBATCH --cpus-per-task=8
#SBATCH --mem=32G
#SBATCH --gres=gpu:1
#SBATCH --time=11:00:00
#SBATCH --mail-type=ALL
#SBATCH --mail-user=tjung2@uw.edu

# I use source to initialize conda into the right environment.
cat $0
echo "--------------------"

source ~/.bashrc
conda activate ckl

python run.py --config configs/templama/training/t5_kadapters_2010_prefixed.json
--------------------
/mmfs1/gscratch/ark/tjung2/miniconda3/envs/ckl/lib/python3.8/site-packages/pytorch_lightning/callbacks/model_checkpoint.py:360: UserWarning: Checkpoint directory outputs/T5_small_templama(2010)_lr.001_adapters_prefixed exists and is not empty.
  rank_zero_warn(f"Checkpoint directory {dirpath} exists and is not empty.")
/mmfs1/gscratch/ark/tjung2/miniconda3/envs/ckl/lib/python3.8/site-packages/pytorch_lightning/callbacks/model_checkpoint.py:396: LightningDeprecationWarning: Argument `period` in `ModelCheckpoint` is deprecated in v1.3 and will be removed in v1.5. Please use `every_n_val_epochs` instead.
  rank_zero_deprecation(
Some weights of T5ForConditionalGeneration were not initialized from the model checkpoint at google/t5-small-ssm and are newly initialized: ['kadapter.adapter.0.encoder.layer.0.SelfAttention.relative_attention_bias.weight', 'kadapter.adapter.1.up_project.weight', 'kadapter.adapter.0.up_project.weight', 'kadapter.adapter.0.up_project.bias', 'kadapter.adapter.1.encoder.layer.0.SelfAttention.relative_attention_bias.weight', 'kadapter.adapter.2.encoder.layer.1.DenseReluDense.wi_1.weight', 'kadapter.adapter.2.up_project.weight', 'kadapter.adapter.1.encoder.layer.0.layer_norm.weight', 'kadapter.adapter.1.up_project.bias', 'kadapter.adapter.1.encoder.layer.0.SelfAttention.q.weight', 'kadapter.adapter.1.encoder.layer.1.DenseReluDense.wi_1.weight', 'kadapter.adapter.2.encoder.layer.0.SelfAttention.q.weight', 'kadapter.adapter.1.encoder.layer.1.layer_norm.weight', 'kadapter.adapter.0.encoder.layer.1.DenseReluDense.wi_1.weight', 'kadapter.pool.weight', 'kadapter.adapter.0.encoder.layer.0.SelfAttention.k.weight', 'kadapter.adapter.2.encoder.layer.0.SelfAttention.o.weight', 'kadapter.adapter.2.encoder.layer.1.DenseReluDense.wo.weight', 'kadapter.adapter.2.up_project.bias', 'kadapter.adapter.1.encoder.layer.0.SelfAttention.o.weight', 'kadapter.adapter.1.down_project.weight', 'kadapter.adapter.2.encoder.layer.0.SelfAttention.k.weight', 'kadapter.adapter.0.encoder.layer.0.SelfAttention.o.weight', 'kadapter.adapter.2.encoder.layer.0.layer_norm.weight', 'kadapter.adapter.2.encoder.layer.0.SelfAttention.v.weight', 'kadapter.layer_norm.weight', 'kadapter.adapter.2.encoder.layer.1.layer_norm.weight', 'kadapter.adapter.0.down_project.bias', 'kadapter.pool.bias', 'kadapter.adapter.2.down_project.bias', 'kadapter.adapter.0.encoder.layer.0.SelfAttention.q.weight', 'kadapter.adapter.0.encoder.layer.1.layer_norm.weight', 'kadapter.adapter.0.encoder.layer.0.layer_norm.weight', 'kadapter.adapter.1.encoder.layer.0.SelfAttention.v.weight', 'kadapter.adapter.1.encoder.layer.1.DenseReluDense.wi_0.weight', 'kadapter.adapter.0.encoder.layer.0.SelfAttention.v.weight', 'kadapter.adapter.2.down_project.weight', 'kadapter.adapter.0.encoder.layer.1.DenseReluDense.wo.weight', 'kadapter.adapter.0.down_project.weight', 'kadapter.adapter.0.encoder.layer.1.DenseReluDense.wi_0.weight', 'kadapter.adapter.1.down_project.bias', 'kadapter.adapter.2.encoder.layer.0.SelfAttention.relative_attention_bias.weight', 'kadapter.adapter.2.encoder.layer.1.DenseReluDense.wi_0.weight', 'kadapter.adapter.1.encoder.layer.1.DenseReluDense.wo.weight', 'kadapter.adapter.1.encoder.layer.0.SelfAttention.k.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
GPU available: True, used: True
TPU available: False, using: 0 TPU cores
initializing ddp: GLOBAL_RANK: 0, MEMBER: 1/1
----------------------------------------------------------------------------------------------------
distributed_backend=nccl
All DDP processes registered. Starting ddp with 1 processes
----------------------------------------------------------------------------------------------------

LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]
Set SLURM handle signals.

  | Name  | Type                       | Params
-----------------------------------------------------
0 | model | T5ForConditionalGeneration | 79.1 M
-----------------------------------------------------
43.8 M    Trainable params
35.3 M    Non-trainable params
79.1 M    Total params
316.510   Total estimated model params size (MB)
Namespace(accelerator='ddp', adam_epsilon=1e-08, adapter_config={'adapter_hidden_size': 128, 'adapter_list': [1, 5, 8]}, check_validation_only=False, checkpoint_path='', dataset='templama', dataset_version='2010', early_stop_callback=False, eval_batch_size=32, freeze_embeds=False, freeze_encoder=False, freeze_level=1, learning_rate=0.001, max_grad_norm=0.5, max_input_length=50, max_output_length=25, method='kadapter', mode='pretrain', model_name_or_path='google/t5-small-ssm', n_gpu=1, n_test=-1, n_train=-1, n_val=-1, num_train_epochs=50, num_workers=4, opt_level='O1', output_dir='outputs/T5_small_templama(2010)_lr.001_adapters_prefixed', output_log=None, prefix=True, resume_from_checkpoint='outputs/T5_small_templama(2010)_lr.001_adapters_prefixed/epoch=21-f1_score=0.22-em_score=0.08.ckpt', seed=42, split=0, split_num=1, t5_learning_rate=0.0001, tokenizer_name_or_path='google/t5-small-ssm', train_batch_size=32, use_deepspeed=False, use_lr_scheduling=True, val_check_interval=1.0, wandb_log=False, warmup_steps=0, weight_decay=0.0)
T5Config {
  "_name_or_path": "google/t5-small-ssm",
  "adapter_hidden_size": 128,
  "adapter_list": [
    1,
    5,
    8
  ],
  "architectures": [
    "T5ForConditionalGeneration"
  ],
  "d_ff": 1024,
  "d_kv": 64,
  "d_model": 512,
  "decoder_start_token_id": 0,
  "dropout_rate": 0.1,
  "eos_token_id": 1,
  "feed_forward_proj": "gated-gelu",
  "initializer_factor": 1.0,
  "is_encoder_decoder": true,
  "layer_norm_epsilon": 1e-06,
  "model_type": "t5",
  "num_decoder_layers": 8,
  "num_heads": 6,
  "num_layers": 8,
  "output_past": true,
  "pad_token_id": 0,
  "relative_attention_num_buckets": 32,
  "tie_word_embeddings": false,
  "transformers_version": "4.12.3",
  "use_cache": false,
  "vocab_size": 32128
}

split is 0
Length of dataset retrieving is.. 2866
[{'params': [Parameter containing:
tensor([0.9323, 0.9362, 0.9955, 0.8532, 0.9504, 0.9876, 0.9419, 0.9519, 0.9263,
        0.9347, 0.9134, 0.9721, 0.9434, 0.8960, 0.9484, 0.9410, 1.0547, 0.9730,
        0.9155, 0.8770, 0.9505, 1.0310, 0.9755, 1.0356, 1.0300, 1.0081, 0.9552,
        1.0425, 0.9704, 0.9689, 0.9495, 0.9483, 1.2443, 0.9017, 0.9506, 1.0303,
        1.0248, 0.8973, 0.9476, 1.1072, 0.9333, 0.9122, 0.9963, 1.0282, 0.9173,
        0.9491, 0.9765, 0.9601, 0.8850, 0.8980, 0.9763, 0.8857, 0.8885, 0.8939,
        0.8832, 0.9383, 0.9823, 0.8677, 0.8688, 0.8273, 0.9131, 1.0460, 0.9916,
        0.9779, 1.1381, 0.9144, 0.8711, 0.9867, 0.9074, 0.8889, 0.8381, 0.8624,
        0.9344, 0.9344, 0.9186, 0.9377, 0.9454, 0.8995, 0.8999, 0.9341, 0.9410,
        0.9591, 0.9199, 0.9325, 1.0113, 0.9133, 0.9626, 0.9099, 0.9398, 0.9345,
        0.8510, 0.9543, 0.9675, 0.8960, 0.9719, 0.9364, 0.9671, 0.9021, 0.9193,
        0.9225, 0.9529, 1.0393, 0.8637, 0.8791, 0.9548, 1.0692, 0.9132, 0.8991,
        0.9001, 0.9098, 0.8092, 0.9938, 0.8660, 0.8210, 0.9384, 0.8317, 0.8685,
        0.9502, 0.9359, 0.9464, 1.0097, 0.7903, 0.7803, 0.8661, 0.9519, 0.8770,
        0.9588, 1.0720, 0.8986, 0.8914, 0.9542, 0.9477, 0.9622, 0.8397, 0.9141,
        0.8273, 0.9157, 1.0469, 0.9142, 1.0175, 0.9037, 0.9648, 0.8549, 0.9285,
        0.9633, 1.0313, 0.9253, 0.9476, 0.9907, 0.9372, 0.8879, 0.9206, 1.0220,
        0.9195, 0.9067, 0.8024, 0.9780, 0.9591, 0.9785, 0.8693, 0.8913, 0.9966,
        0.9183, 0.9789, 0.9516, 0.9484, 0.9254, 1.0034, 0.9907, 0.9575, 0.8895,
        0.8520, 1.0207, 0.9296, 0.9499, 0.9664, 0.9725, 0.8749, 0.8531, 0.9340,
        0.9654, 0.9073, 0.8929, 0.9991, 1.0031, 1.0015, 0.9946, 0.9405, 0.9213,
        0.8995, 0.9164, 0.9107, 0.9996, 0.8850, 1.0253, 0.8175, 0.8778, 0.9254,
        0.9810, 0.9552, 1.1565, 0.9469, 0.9360, 0.8886, 0.8334, 1.0152, 0.8971,
        1.0165, 1.0052, 0.8848, 0.9697, 0.9008, 1.0028, 0.7726, 0.9775, 1.0126,
        1.0610, 0.9106, 0.9404, 1.0423, 0.9351, 0.9563, 0.9231, 0.9491, 0.8584,
        0.8712, 0.9165, 0.9806, 0.9281, 0.9185, 0.8655, 0.9631, 0.8955, 0.9733,
        0.9128, 0.8423, 0.9497, 0.9152, 0.9423, 0.9806, 1.0899, 1.0437, 0.9205,
        0.9942, 0.9827, 1.0027, 1.0098, 0.9180, 0.9259, 0.8660, 0.9031, 0.9362,
        0.9395, 1.0186, 0.9965, 0.9662, 0.8518, 0.8834, 0.9179, 1.0219, 1.0881,
        0.9306, 0.8413, 0.9130, 0.9691, 0.8672, 0.9515, 0.9302, 0.9150, 0.9044,
        0.9411, 0.9454, 0.9720, 0.9853, 0.9100, 0.9163, 0.9870, 0.8834, 0.9462,
        1.0618, 1.0544, 0.8951, 0.9684, 0.9475, 0.9777, 0.8499, 0.9997, 0.9332,
        0.9015, 0.8699, 1.0667, 0.8495, 0.9189, 0.8857, 0.9747, 0.9707, 0.9098,
        0.8833, 0.8491, 0.8912, 0.9648, 0.9217, 0.8080, 0.9062, 0.9633, 0.9004,
        0.8753, 0.8933, 0.9043, 0.9460, 1.0137, 0.8935, 0.9432, 0.9145, 0.8848,
        1.1398, 0.9446, 0.9085, 0.9728, 0.9675, 0.9084, 1.0031, 0.9288, 0.9059,
        0.9989, 0.8806, 0.8701, 0.7575, 0.9804, 0.9940, 1.0014, 0.9542, 0.8706,
        0.9929, 1.0631, 0.8692, 0.9342, 0.9318, 0.9388, 0.9311, 1.0270, 0.9775,
        0.9807, 0.8957, 0.9782, 0.9412, 1.0221, 0.8698, 0.9975, 0.9739, 0.9131,
        0.9846, 0.8819, 0.9116, 0.9231, 0.8988, 0.9755, 1.1015, 0.9167, 0.9409,
        0.9271, 0.9017, 1.0176, 0.9636, 0.8292, 1.0460, 0.9434, 1.0183, 0.8841,
        0.9135, 0.9799, 0.8944, 1.0052, 0.9889, 0.8963, 0.9362, 0.9619, 0.9202,
        1.0110, 0.9883, 0.9839, 1.0031, 0.8536, 0.9288, 1.0320, 0.9427, 0.9255,
        0.8973, 0.9300, 0.9986, 0.9472, 0.9263, 0.9645, 0.9297, 0.9987, 0.9678,
        0.8411, 0.8908, 0.8731, 0.9498, 0.8480, 0.9534, 0.7967, 0.9945, 0.8825,
        0.9361, 0.9067, 0.9636, 0.8912, 1.0221, 0.9243, 0.8982, 1.0062, 0.9448,
        0.9166, 0.9012, 0.9470, 0.9351, 0.8368, 0.8894, 1.0104, 0.9840, 1.0154,
        0.9250, 0.8943, 0.9872, 0.9141, 0.8582, 0.8906, 0.7994, 0.9488, 1.0007,
        0.9466, 0.9995, 0.9805, 0.8835, 0.9735, 0.8219, 0.9629, 0.9566, 0.9139,
        1.0506, 0.9680, 0.9493, 0.8153, 0.9821, 0.9911, 0.9706, 0.8557, 0.9829,
        0.8491, 0.8619, 0.8525, 0.8595, 1.0132, 0.9517, 1.0101, 0.9361, 0.9131,
        0.9865, 0.9237, 0.9121, 0.8292, 1.0497, 0.9209, 0.9493, 0.8536, 0.9006,
        1.0697, 1.0467, 0.9739, 1.0034, 0.8834, 1.0194, 1.0447, 1.0099, 0.9441,
        0.8091, 0.9953, 0.8067, 1.0108, 0.9744, 0.9636, 0.9383, 0.8802, 0.9405,
        0.9392, 1.0232, 0.9496, 0.9502, 1.0441, 0.9696, 0.9873, 0.9824, 0.8951,
        0.8545, 1.0015, 0.9650, 1.0056, 0.9764, 0.8565, 0.9540, 0.8978, 1.0085,
        0.9054, 1.0236, 0.9463, 0.9471, 0.8928, 0.9614, 0.9150, 0.9506],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.0215, -0.0571,  0.0037,  ...,  0.0568, -0.0425,  0.0512],
        [ 0.0246,  0.0376, -0.0915,  ...,  0.0360,  0.0514,  0.0195],
        [-0.0319, -0.0085,  0.0027,  ...,  0.0496,  0.0676,  0.0921],
        ...,
        [-0.0025, -0.0222,  0.0208,  ...,  0.0548, -0.0061, -0.0205],
        [ 0.0949,  0.0338, -0.0144,  ...,  0.0186,  0.0529, -0.0134],
        [ 0.0578,  0.0639, -0.0689,  ..., -0.1832, -0.0298, -0.0293]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.0234, -0.0581, -0.1161,  ...,  0.0548, -0.0073,  0.0124],
        [-0.1297,  0.0700, -0.1289,  ...,  0.0244, -0.0364,  0.0856],
        [-0.1774, -0.0241, -0.0188,  ..., -0.1402,  0.0413, -0.0476],
        ...,
        [-0.0202,  0.0567,  0.1073,  ...,  0.0034,  0.1394, -0.1931],
        [ 0.0015, -0.0216, -0.1723,  ...,  0.0653, -0.0855,  0.0396],
        [ 0.1607, -0.0174,  0.0654,  ..., -0.0920, -0.0840, -0.0172]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.0756,  0.0313,  0.0365,  ..., -0.1188, -0.0952,  0.0106],
        [ 0.1895,  0.0267, -0.1402,  ..., -0.0365, -0.0378,  0.0373],
        [ 0.0179, -0.0304, -0.1535,  ..., -0.0441,  0.0793, -0.0262],
        ...,
        [ 0.0043, -0.0588, -0.0171,  ..., -0.0487, -0.0873, -0.0184],
        [-0.0263,  0.1001, -0.0205,  ..., -0.0320,  0.0025,  0.0890],
        [ 0.0772,  0.0571,  0.0028,  ...,  0.0092,  0.0048, -0.0027]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.0636,  0.0354, -0.0379,  ..., -0.0146, -0.0840,  0.0648],
        [-0.0230, -0.0746,  0.0273,  ...,  0.0147,  0.0655, -0.0715],
        [-0.0460, -0.0545, -0.0180,  ..., -0.0789, -0.0674,  0.1020],
        ...,
        [-0.0576, -0.0619, -0.0396,  ...,  0.0818, -0.0884, -0.0178],
        [-0.0513,  0.0567, -0.0504,  ...,  0.0907, -0.0872, -0.0819],
        [-0.0005, -0.0684, -0.0009,  ...,  0.0274, -0.1273,  0.0136]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 5.6570e-02,  8.9000e-03,  6.8886e-02,  ..., -5.0532e-03,
         -3.8846e-02,  2.5554e-02],
        [ 4.3169e-02,  1.1403e-02, -3.0474e-02,  ..., -9.7411e-03,
         -8.6894e-02,  7.2254e-02],
        [-3.6183e-02, -3.1768e-02, -2.5991e-02,  ..., -1.1860e-02,
         -2.9544e-02,  4.3072e-04],
        ...,
        [-2.8235e-02, -9.7243e-05, -5.5787e-02,  ...,  2.1449e-02,
          4.9481e-02,  3.3566e-02],
        [-1.6369e-02, -2.4801e-02, -1.2587e-01,  ..., -1.3620e-03,
         -6.3674e-03, -4.3943e-02],
        [-5.0431e-02, -1.8002e-03, -4.3438e-02,  ...,  2.8387e-02,
          2.7177e-02,  6.5571e-02]], device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.8515, 0.7410, 0.6231, 0.9951, 0.6841, 0.8313, 0.8338, 0.8440, 1.0045,
        0.8093, 0.6513, 0.8232, 0.9464, 0.8193, 0.7639, 0.8952, 1.0896, 0.7588,
        0.7567, 0.8811, 0.9518, 1.0604, 0.6027, 1.1048, 1.0557, 0.9677, 1.1827,
        0.7688, 0.9352, 1.0267, 0.8492, 0.9369, 0.8330, 0.8264, 0.7382, 0.7767,
        0.9507, 1.0354, 0.7078, 0.9027, 0.8124, 1.0232, 0.7233, 1.0092, 0.5502,
        1.0293, 0.7118, 1.0095, 1.2036, 1.0111, 0.8818, 0.8780, 0.7448, 0.8758,
        0.8831, 0.9383, 0.9095, 0.7873, 0.8788, 0.9846, 0.8455, 0.8066, 0.9113,
        0.6989, 0.9609, 0.8070, 0.9254, 1.0882, 1.0356, 0.7482, 0.8756, 1.0275,
        0.8206, 0.8040, 1.1771, 0.7526, 0.6303, 0.6517, 0.7893, 0.8196, 0.6092,
        1.0327, 0.8470, 1.0465, 0.9639, 0.8158, 0.6897, 0.8210, 1.0357, 0.9018,
        0.8792, 0.8365, 0.6645, 0.8925, 0.7662, 0.9788, 0.8231, 0.9772, 0.6708,
        0.8629, 0.8221, 0.9335, 0.8187, 0.9421, 0.8751, 0.8729, 0.9147, 0.7052,
        1.0372, 1.0284, 0.6818, 1.1345, 0.7978, 0.8906, 0.8097, 0.8279, 0.8989,
        0.9169, 0.8478, 0.8932, 0.8846, 0.9646, 0.8471, 0.8584, 0.9408, 0.8519,
        0.8188, 0.5655], device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.1169, -0.0092, -0.0145,  ...,  0.0594, -0.0941,  0.0753],
        [-0.0120, -0.0703, -0.0007,  ..., -0.0361,  0.0411, -0.0695],
        [-0.1623,  0.0033,  0.0279,  ...,  0.0355,  0.0924,  0.0974],
        ...,
        [-0.1119,  0.2410,  0.0262,  ..., -0.1003,  0.0143,  0.1108],
        [-0.0727,  0.1152, -0.0869,  ...,  0.0391,  0.0511, -0.0097],
        [ 0.0068, -0.0370, -0.0213,  ...,  0.0437,  0.0618,  0.0262]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.0244,  0.0563,  0.1182,  ...,  0.0598,  0.0022,  0.0488],
        [-0.0814, -0.0456, -0.0814,  ...,  0.0114,  0.0122, -0.1082],
        [-0.0411,  0.0058,  0.0181,  ..., -0.0895,  0.0791, -0.0762],
        ...,
        [ 0.0204,  0.3008, -0.0642,  ...,  0.0156,  0.0541, -0.0740],
        [ 0.0299,  0.0234,  0.0152,  ..., -0.0320,  0.0621,  0.0294],
        [-0.0675, -0.0905, -0.0080,  ...,  0.0390, -0.0567, -0.0271]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.0241,  0.0370,  0.0460,  ..., -0.0925,  0.0069, -0.0015],
        [-0.0128,  0.0630,  0.1156,  ..., -0.0643,  0.0134,  0.0380],
        [-0.0319,  0.0644,  0.0830,  ..., -0.0771, -0.0054,  0.0101],
        ...,
        [ 0.0194, -0.0552, -0.0132,  ..., -0.0961,  0.0283,  0.0129],
        [ 0.0691, -0.0133, -0.0218,  ...,  0.0529, -0.0203, -0.0075],
        [-0.0352,  0.0602,  0.0803,  ..., -0.1371,  0.0759, -0.0215]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.7568, 0.7476, 0.6035, 0.6171, 0.5693, 0.7975, 0.8156, 0.7843, 0.7397,
        0.6716, 0.5918, 0.6416, 0.8770, 0.6793, 0.7546, 0.7963, 0.5836, 0.8058,
        0.4079, 0.8562, 0.7752, 0.7640, 0.7816, 0.6479, 0.7867, 0.7608, 0.5697,
        0.7668, 0.7039, 0.7315, 0.7756, 0.8230, 0.6639, 0.7130, 0.7680, 0.6979,
        0.5413, 0.5760, 0.7403, 0.6585, 0.5274, 0.7534, 0.7701, 0.4980, 0.6902,
        0.4874, 0.5901, 0.8472, 0.6405, 0.5347, 0.8838, 0.6710, 0.7595, 0.6307,
        0.6023, 0.6194, 0.6671, 0.5969, 0.7660, 0.7275, 0.7823, 0.6399, 0.7524,
        0.7028, 0.5266, 0.6816, 0.6721, 0.6699, 0.6769, 0.5938, 0.8174, 0.7210,
        0.6720, 0.6298, 0.8200, 0.7263, 0.7311, 0.6108, 0.7523, 0.5485, 0.7742,
        0.7418, 0.6836, 0.3430, 0.6110, 0.7586, 0.6975, 0.7647, 0.7782, 0.7603,
        0.6631, 0.6769, 0.5663, 0.7977, 0.7212, 0.5967, 0.5483, 0.7758, 0.6966,
        0.6177, 0.5451, 0.7390, 0.5162, 0.7877, 0.7625, 0.7511, 0.7111, 0.7314,
        0.6197, 0.6628, 0.7484, 0.6703, 0.8361, 0.7229, 0.6264, 0.6873, 0.8630,
        0.7713, 0.6584, 0.8087, 0.6300, 0.6362, 0.6941, 0.6388, 0.7270, 0.6171,
        0.6864, 0.7993], device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.0730,  0.0899, -0.0446,  ...,  0.0706,  0.0338,  0.0207],
        [ 0.0754, -0.0749,  0.1021,  ...,  0.0101,  0.0513,  0.0168],
        [-0.0475,  0.0031, -0.0184,  ...,  0.0725,  0.0368, -0.0532],
        ...,
        [-0.0777,  0.0002,  0.0134,  ..., -0.0462, -0.0005, -0.0149],
        [ 0.0770, -0.0122,  0.0185,  ...,  0.0782,  0.0176, -0.0290],
        [-0.0816,  0.0036, -0.0778,  ..., -0.0062,  0.1249,  0.0948]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.0133,  0.0233,  0.0403,  ..., -0.1180, -0.0770,  0.0225],
        [ 0.0167, -0.0708,  0.0051,  ...,  0.0173,  0.0347,  0.0152],
        [-0.0823,  0.0507, -0.0005,  ...,  0.1113, -0.0189, -0.0400],
        ...,
        [ 0.0575,  0.0676,  0.0377,  ...,  0.0323, -0.0449, -0.0650],
        [-0.0244,  0.0324, -0.0322,  ...,  0.0315, -0.0100, -0.0374],
        [ 0.0861,  0.0472, -0.0508,  ...,  0.0009, -0.0456, -0.0298]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.0489, -0.1068, -0.0735,  ...,  0.0237, -0.0077, -0.1154],
        [-0.0374,  0.3079, -0.0059,  ..., -0.0292, -0.0964,  0.0788],
        [-0.0069, -0.0011,  0.1038,  ...,  0.0578, -0.1185,  0.1881],
        ...,
        [-0.0392, -0.1625, -0.1711,  ..., -0.0207,  0.0692,  0.0746],
        [-0.0061,  0.0224, -0.0293,  ...,  0.0240, -0.0147,  0.0618],
        [-0.1537, -0.2796, -0.1304,  ..., -0.0170, -0.0569, -0.1840]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.1255,  0.2420, -0.0459,  ..., -0.0362,  0.0371,  0.0214],
        [-0.0525, -0.1363, -0.0822,  ..., -0.1158, -0.1145, -0.1138],
        [-0.0672, -0.1597,  0.1307,  ..., -0.0111, -0.0907,  0.0667],
        ...,
        [ 0.0944, -0.0159, -0.2414,  ...,  0.0405,  0.1603,  0.0886],
        [ 0.0378,  0.0340,  0.0027,  ...,  0.0285, -0.0011,  0.0218],
        [-0.0225, -0.1844, -0.1344,  ..., -0.0619, -0.0939, -0.0800]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.1072,  0.0145,  0.1093,  ...,  0.0985,  0.1027, -0.0321],
        [-0.1140, -0.0364, -0.0492,  ..., -0.0382,  0.0312,  0.0066],
        [ 0.0563,  0.0821,  0.0117,  ...,  0.0173, -0.0002, -0.0926],
        ...,
        [-0.0618,  0.0468,  0.0673,  ..., -0.0411,  0.0126,  0.0646],
        [ 0.1171,  0.0770,  0.0297,  ..., -0.0455, -0.0475, -0.1021],
        [-0.0591,  0.0064,  0.0204,  ...,  0.0375,  0.0722,  0.0121]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.0093, -0.0257, -0.0036,  ...,  0.0035, -0.0112, -0.0130],
        [-0.0326, -0.0296,  0.0193,  ..., -0.0078,  0.0322, -0.0085],
        [-0.0210, -0.0753,  0.0301,  ..., -0.0519, -0.0479, -0.0400],
        ...,
        [-0.0229,  0.0387,  0.0189,  ...,  0.0111,  0.0384, -0.0244],
        [ 0.0276,  0.0094, -0.0501,  ...,  0.0077,  0.0140, -0.0741],
        [-0.0133,  0.0185, -0.0422,  ..., -0.0460,  0.0899, -0.0016]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.8250, 1.3275, 0.8138, 1.0766, 0.8794, 0.9723, 0.9604, 0.9108, 0.8560,
        0.9939, 0.8944, 0.9664, 1.0335, 0.9401, 0.9077, 1.0204, 1.0324, 1.0980,
        0.8562, 1.0657, 0.6714, 0.9762, 1.0329, 1.0693, 0.8766, 0.8387, 1.0422,
        1.0127, 0.8788, 0.9058, 0.9187, 1.0515, 0.8867, 1.0025, 0.8794, 1.2577,
        0.9340, 0.9732, 0.9305, 0.8953, 1.1379, 1.0277, 0.8404, 0.9815, 1.1283,
        0.9774, 0.9671, 0.9965, 0.9891, 0.9260, 1.0860, 1.0442, 0.9999, 1.0664,
        0.9162, 0.9259, 1.0511, 1.0531, 1.0791, 0.8941, 1.0316, 1.0096, 1.2108,
        0.9800, 0.9958, 1.0914, 1.0436, 1.0333, 0.8575, 0.9887, 0.9101, 0.9469,
        0.9198, 0.7697, 0.8631, 0.9692, 0.9979, 0.9603, 0.8811, 0.8627, 1.1311,
        0.8870, 0.9764, 0.9457, 1.2995, 1.0920, 0.9553, 0.9592, 0.9857, 0.8959,
        0.8809, 1.1025, 1.1960, 1.0113, 0.6849, 1.0229, 0.9318, 1.0421, 1.0242,
        0.9068, 0.9059, 1.1945, 1.1844, 0.7087, 0.8070, 0.9313, 0.7869, 0.8316,
        0.8760, 0.8799, 0.8655, 0.8880, 0.9679, 0.9585, 1.0469, 1.1488, 0.9760,
        1.0394, 1.0248, 0.9164, 1.0098, 0.7971, 0.9294, 1.0887, 0.9802, 0.9316,
        0.6945, 0.8086], device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.0013, -0.0136, -0.0790,  ...,  0.0119, -0.1233,  0.0479],
        [ 0.0221, -0.0651, -0.0272,  ..., -0.0008, -0.0029,  0.0673],
        [ 0.0144,  0.1062,  0.1075,  ..., -0.1516,  0.1281, -0.0321],
        ...,
        [-0.0657,  0.0754,  0.0184,  ..., -0.1182,  0.0187, -0.0389],
        [ 0.1301, -0.0205, -0.0920,  ...,  0.1259, -0.1929, -0.0182],
        [ 0.0411, -0.0177,  0.0283,  ...,  0.1281,  0.1554, -0.0880]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.0390,  0.0695, -0.0485,  ..., -0.0315, -0.0377,  0.0042],
        [-0.0318,  0.0560, -0.0738,  ..., -0.0645,  0.0398, -0.0416],
        [ 0.0450, -0.1228,  0.1143,  ..., -0.0360,  0.0427, -0.0177],
        ...,
        [-0.0979, -0.0815, -0.0212,  ...,  0.0339,  0.0046,  0.0182],
        [ 0.1774,  0.1632, -0.0365,  ..., -0.0091, -0.0582,  0.0599],
        [ 0.0858, -0.0069,  0.0566,  ..., -0.0101, -0.0965,  0.0988]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.0528,  0.0105, -0.0212,  ..., -0.0176, -0.0504, -0.0773],
        [ 0.0927,  0.0343, -0.0488,  ..., -0.0268,  0.1042, -0.0502],
        [ 0.0166,  0.0107, -0.0837,  ..., -0.0041, -0.0293,  0.0217],
        ...,
        [-0.0680,  0.0545, -0.0518,  ..., -0.0006,  0.0687,  0.0372],
        [-0.0451, -0.0441,  0.0279,  ...,  0.0002,  0.0085,  0.0394],
        [ 0.0414, -0.0132, -0.0131,  ..., -0.0372,  0.0225,  0.0503]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([1.1094, 0.8414, 0.9689, 1.0130, 1.0728, 1.0195, 0.9109, 1.0502, 0.9697,
        0.7707, 0.8978, 1.0096, 0.8497, 0.9484, 1.0158, 1.1033, 0.9532, 0.7409,
        1.0102, 0.9055, 1.0196, 0.9249, 0.9727, 0.9404, 0.8378, 0.9777, 0.7650,
        0.9551, 1.0293, 0.9047, 1.1101, 1.0660, 0.8670, 1.0061, 0.9523, 1.0670,
        0.9275, 0.7730, 0.9242, 0.9684, 1.0032, 0.9376, 0.8663, 0.7021, 1.0226,
        0.8715, 0.9980, 0.9048, 1.1052, 0.8471, 0.9423, 0.7399, 0.9815, 1.0284,
        0.9732, 1.0438, 0.7452, 0.9640, 1.0667, 1.2789, 1.1737, 0.7539, 0.9307,
        0.9070, 0.8924, 0.8994, 1.1820, 0.9095, 1.1036, 0.9325, 0.8923, 1.0099,
        1.1019, 1.1955, 0.9230, 0.9885, 0.9997, 1.0778, 1.1532, 1.0913, 1.0163,
        0.8517, 0.9762, 1.0652, 0.8780, 0.9656, 1.0331, 0.9938, 1.0530, 1.0827,
        0.9599, 0.9228, 1.0124, 0.7274, 0.8315, 0.9888, 0.9904, 0.9278, 0.8453,
        0.9177, 1.0905, 0.8869, 1.0593, 0.8765, 1.0464, 0.7591, 0.9256, 1.0651,
        0.9849, 0.9328, 0.9736, 1.0856, 1.0070, 0.9592, 0.8894, 0.9405, 1.0061,
        1.0599, 0.9381, 1.0824, 0.8077, 1.0099, 0.8740, 0.9021, 0.9522, 1.0229,
        0.9525, 1.0189], device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.0565,  0.0054,  0.0447,  ..., -0.0293, -0.0499,  0.0502],
        [-0.0081,  0.0496,  0.0143,  ...,  0.0370, -0.0654, -0.0304],
        [-0.0516, -0.0975,  0.0766,  ...,  0.0082,  0.0284,  0.0912],
        ...,
        [ 0.0321,  0.0386,  0.0139,  ..., -0.0338,  0.0208, -0.0715],
        [-0.0223, -0.0166,  0.0697,  ..., -0.0415,  0.0012,  0.0488],
        [ 0.0290,  0.0766, -0.0979,  ..., -0.0846, -0.0633,  0.0578]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.0151,  0.0116, -0.0009,  ...,  0.0241, -0.0351,  0.0153],
        [-0.0111,  0.0463,  0.0282,  ..., -0.0694,  0.0556, -0.0758],
        [-0.0201, -0.0411, -0.0118,  ...,  0.0277, -0.0113, -0.0085],
        ...,
        [ 0.0267,  0.0391,  0.0233,  ...,  0.0538, -0.0650, -0.0103],
        [-0.0469,  0.0543, -0.0224,  ..., -0.0190, -0.0060, -0.0126],
        [-0.0228, -0.0474,  0.0223,  ...,  0.0112, -0.0123, -0.0347]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.0750,  0.0113, -0.0846,  ...,  0.0131, -0.0198, -0.0560],
        [-0.0709, -0.0777, -0.0210,  ..., -0.0410,  0.0298, -0.0687],
        [ 0.0055,  0.0331, -0.0144,  ...,  0.0343,  0.0438,  0.0330],
        ...,
        [ 0.0504,  0.1003,  0.0030,  ..., -0.1684, -0.0471,  0.0095],
        [ 0.0094,  0.0073, -0.0704,  ..., -0.0164,  0.0710, -0.0747],
        [ 0.0587,  0.1451,  0.0075,  ..., -0.0663,  0.0118,  0.1855]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.0139,  0.0545,  0.0747,  ..., -0.0468,  0.0268,  0.0862],
        [ 0.0146,  0.0701,  0.0667,  ..., -0.0014,  0.0475,  0.0634],
        [-0.0366,  0.0854,  0.0149,  ..., -0.1352,  0.0174,  0.0284],
        ...,
        [ 0.1529, -0.0215,  0.0265,  ..., -0.0602,  0.0933,  0.1220],
        [ 0.0331,  0.0277, -0.0519,  ..., -0.0176, -0.0378,  0.0024],
        [ 0.0225,  0.0265,  0.0255,  ..., -0.0200,  0.1333,  0.0503]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 6.0569e-05,  2.1501e-02, -8.5125e-03,  ..., -6.1293e-02,
         -8.2493e-02,  5.2453e-02],
        [ 3.3180e-02, -2.5418e-02, -5.3437e-02,  ...,  6.8827e-02,
         -1.3087e-02, -5.1168e-02],
        [-7.2589e-02,  2.5038e-02,  1.0103e-02,  ..., -3.5398e-02,
         -1.1957e-01, -9.3074e-02],
        ...,
        [-5.8766e-02, -5.6699e-02, -9.1689e-02,  ...,  9.4316e-03,
          3.2512e-02, -5.7893e-02],
        [ 3.3159e-02,  2.4263e-02, -6.6591e-02,  ...,  7.5203e-02,
         -6.7030e-02,  7.0041e-03],
        [ 2.9880e-02, -4.8000e-03,  7.5678e-02,  ...,  5.8861e-02,
         -7.3052e-03,  1.2216e-02]], device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.0005, -0.0264, -0.0439,  ...,  0.0161,  0.0365, -0.0624],
        [-0.0410,  0.0483, -0.0328,  ...,  0.0276,  0.0175,  0.0019],
        [ 0.0011, -0.0364, -0.0523,  ..., -0.0476, -0.0243, -0.0262],
        ...,
        [-0.0514,  0.0336, -0.0175,  ...,  0.0379, -0.0456, -0.1025],
        [-0.0364, -0.0087, -0.0153,  ...,  0.0374, -0.0641, -0.0015],
        [-0.0038,  0.0113,  0.0055,  ...,  0.0208,  0.0436,  0.0247]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([0.9533, 0.8878, 1.0524, 0.8008, 0.8654, 0.9531, 0.9111, 0.9883, 0.9914,
        0.9825, 0.9535, 0.8181, 0.9591, 0.9380, 0.8978, 0.9842, 1.0289, 1.1171,
        0.8756, 0.9520, 0.9441, 0.9207, 0.9907, 0.8979, 0.9586, 0.9429, 0.9390,
        0.9511, 0.8456, 1.0627, 0.8295, 1.0776, 0.9699, 0.8786, 0.9461, 1.0202,
        1.0601, 0.9379, 1.0518, 1.1060, 0.7613, 0.9490, 1.0421, 0.9492, 0.9942,
        0.9533, 1.0123, 1.1400, 1.0275, 0.9241, 0.8426, 1.0166, 0.9935, 0.8569,
        0.9549, 0.9758, 1.1397, 0.8501, 1.0229, 1.0598, 1.0662, 0.9254, 0.8880,
        0.9117, 0.8118, 0.9858, 0.9543, 0.9022, 0.8417, 0.8905, 0.9032, 0.9851,
        0.9409, 0.8649, 0.9917, 0.9736, 0.8377, 0.9880, 1.0263, 0.9933, 1.0472,
        1.0225, 0.9604, 0.7709, 0.9981, 0.9869, 0.9064, 0.9796, 0.9102, 0.9390,
        1.0236, 0.8288, 0.9038, 0.9994, 0.9353, 0.9435, 0.8540, 0.8393, 1.0871,
        1.0423, 1.0249, 1.0451, 1.0155, 0.8740, 0.9097, 0.9344, 0.9428, 0.9393,
        0.9300, 1.0344, 0.9151, 0.9175, 0.9563, 1.0196, 1.0561, 0.9376, 0.9734,
        1.0161, 0.9809, 1.0279, 1.1912, 0.9909, 0.9870, 1.0163, 1.0157, 0.9461,
        0.7869, 1.0751], device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.0468,  0.0868, -0.0650,  ..., -0.0401, -0.0018, -0.0809],
        [ 0.0025,  0.0032,  0.0164,  ...,  0.1039, -0.0580,  0.0787],
        [ 0.0426, -0.0037, -0.0136,  ..., -0.0919,  0.0812,  0.1340],
        ...,
        [ 0.0534,  0.0374, -0.0058,  ..., -0.0418, -0.0726, -0.0756],
        [ 0.0018, -0.0509,  0.0198,  ...,  0.0724,  0.0330, -0.0777],
        [ 0.0428,  0.0697, -0.0632,  ..., -0.0072, -0.0445, -0.0240]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.0400,  0.0534,  0.0350,  ...,  0.0755,  0.0321, -0.0670],
        [ 0.0637,  0.0854, -0.0250,  ...,  0.0126, -0.0174, -0.0245],
        [ 0.0641,  0.0192,  0.0205,  ..., -0.0186,  0.0500, -0.0696],
        ...,
        [ 0.0099,  0.0200, -0.0347,  ..., -0.0937,  0.0260,  0.0798],
        [ 0.0465, -0.0429,  0.0196,  ...,  0.0088, -0.0150,  0.0170],
        [ 0.0257, -0.0305, -0.0020,  ..., -0.0882,  0.0005, -0.1037]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.0062, -0.0033,  0.0345,  ...,  0.0385,  0.0160, -0.0482],
        [ 0.0237, -0.0230,  0.1013,  ..., -0.0317,  0.0164, -0.0017],
        [-0.0229,  0.0528, -0.0032,  ..., -0.0395, -0.0125,  0.0242],
        ...,
        [ 0.0144,  0.0108, -0.0566,  ..., -0.0119,  0.0073, -0.0940],
        [-0.0227, -0.0140,  0.0732,  ..., -0.0018, -0.0137, -0.0706],
        [-0.0089,  0.0155,  0.0846,  ...,  0.0083, -0.0090,  0.0651]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([1.2031, 0.9357, 1.1929, 1.3282, 1.1387, 1.2540, 1.0687, 1.2798, 1.2733,
        1.2005, 1.2158, 1.2572, 1.3253, 1.2840, 1.2267, 1.1104, 1.1553, 1.3117,
        1.1701, 1.1185, 0.9599, 1.1596, 1.4630, 1.2764, 1.1635, 1.1776, 1.2336,
        1.1805, 1.2754, 1.2911, 1.1878, 1.2496, 1.2723, 1.0544, 1.1724, 1.2601,
        1.2498, 1.3141, 1.1958, 1.1638, 1.3658, 1.2635, 1.2826, 1.2056, 1.2041,
        1.4258, 1.2272, 1.2687, 1.1980, 1.3383, 1.1612, 1.2780, 1.3109, 1.3733,
        1.1959, 1.2911, 1.2774, 1.1599, 1.1346, 1.0391, 1.3530, 1.2428, 1.2902,
        1.1629, 1.4761, 1.2861, 1.1737, 1.2845, 1.2016, 1.1959, 1.1493, 1.2237,
        1.2312, 1.1683, 1.3084, 1.3760, 1.2951, 1.0586, 1.2121, 1.3988, 1.1315,
        1.2010, 1.2501, 1.1814, 1.1098, 1.2174, 1.3297, 1.1235, 1.1837, 1.0766,
        1.4213, 1.2283, 1.0188, 1.3287, 1.4002, 1.1537, 1.3469, 1.3239, 1.1275,
        1.1434, 1.1817, 1.1433, 1.1323, 1.4181, 1.0429, 1.0683, 1.2470, 1.2319,
        1.3100, 1.1760, 1.1323, 1.1837, 1.2289, 1.1872, 1.2365, 1.1450, 1.1597,
        1.2177, 1.2454, 1.2556, 1.1615, 1.1769, 1.4620, 1.1339, 1.0350, 1.2992,
        1.5656, 1.1049], device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 3.5227e-02, -4.3527e-02, -3.4046e-02,  ..., -1.1744e-01,
         -2.0787e-02, -3.5792e-02],
        [ 4.3529e-02,  3.4922e-02, -6.9114e-02,  ..., -4.8133e-02,
          5.5864e-02, -2.1637e-02],
        [ 1.2872e-01,  2.8624e-02,  5.7347e-03,  ...,  5.4174e-02,
         -6.0188e-04, -1.2823e-02],
        ...,
        [ 2.8784e-02,  1.3861e-02, -6.7433e-02,  ...,  8.0274e-02,
          3.6963e-02, -3.8661e-02],
        [ 1.0892e-01,  2.1535e-02, -6.2000e-02,  ..., -6.6730e-02,
         -3.4421e-03, -9.4276e-02],
        [-2.9520e-02,  3.3120e-02, -3.0643e-02,  ..., -8.9692e-02,
         -2.9765e-05, -2.0592e-02]], device='cuda:0', requires_grad=True), Parameter containing:
tensor([[-0.0919,  0.2945]], device='cuda:0', requires_grad=True)], 'weight_decay': 0.0, 'lr': 3.9999999999999996e-05, 'betas': (0.95, 0.999), 'eps': 1e-08, 'amsgrad': False, 'initial_lr': 4e-05, 'max_lr': 0.001, 'min_lr': 4e-09, 'max_momentum': 0.95, 'base_momentum': 0.85}, {'params': [Parameter containing:
tensor([ 4.7616e-02, -2.9057e-02,  8.6130e-03, -3.6015e-03,  2.2455e-02,
        -3.4775e-02,  9.0756e-02,  2.9371e-02,  2.2923e-04,  1.6587e-02,
        -1.6551e-02, -1.4469e-02,  7.1755e-02, -4.7308e-02,  2.5222e-03,
         6.7283e-02, -1.2158e-01, -3.3539e-02, -4.7782e-02,  2.5625e-03,
        -4.9895e-03,  5.7589e-02, -4.6490e-02,  6.0532e-03,  1.0584e-01,
         6.3994e-02,  6.0638e-02,  2.5339e-02,  3.6324e-02,  5.7215e-02,
         1.6662e-02,  7.2214e-04,  4.6001e-02,  2.0633e-02, -9.0031e-03,
         5.3344e-02, -1.1313e-04, -1.3120e-02,  2.6600e-02,  3.5004e-02,
         1.0353e-01, -1.1178e-01,  3.9706e-02,  8.8008e-03,  2.1123e-02,
         1.1348e-02,  7.3240e-02,  7.9823e-03,  5.1782e-02, -1.8540e-02,
        -8.3137e-02,  2.6331e-02, -7.4805e-03,  5.7151e-02, -4.2515e-02,
         6.1780e-02,  3.3134e-02,  1.2737e-02, -2.8341e-02,  3.7264e-02,
         1.1083e-01, -3.2827e-02, -2.3447e-02,  2.0707e-02,  2.5895e-02,
        -9.4424e-02, -6.9237e-02,  5.9774e-02, -2.7829e-03,  4.1929e-02,
        -1.0282e-02, -7.0311e-02,  3.1096e-02, -1.3591e-02,  2.4889e-02,
        -2.2507e-02, -7.7679e-02,  3.8178e-02,  9.1377e-02, -2.1429e-02,
        -2.6388e-02, -3.3456e-03,  3.6414e-03, -4.5485e-02, -5.0497e-02,
        -3.9103e-02,  4.9934e-02, -1.6842e-02,  1.0973e-01, -1.3759e-02,
         3.6728e-02, -3.3597e-02, -9.3826e-04, -5.9280e-02,  3.6845e-02,
        -1.4533e-02,  1.8213e-02,  2.4976e-02,  5.1628e-02,  3.5750e-02,
        -8.3442e-03,  7.0715e-03, -5.7239e-02,  4.3463e-02,  7.3510e-02,
         2.8744e-02, -8.5621e-03, -2.4494e-02, -3.9023e-02,  7.5365e-02,
         3.6013e-02,  1.1079e-01,  3.3422e-02,  4.2643e-02,  3.2687e-02,
        -3.5799e-02,  9.9591e-02,  1.5117e-02, -3.0381e-02, -3.3458e-02,
         9.6594e-02, -4.1956e-02,  1.0077e-02, -5.4714e-03, -1.1578e-01,
        -4.8785e-02, -3.1585e-02, -6.1833e-02], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([[-2.4018,  1.7479,  0.3079,  2.0340, -1.3682,  0.8659],
        [ 0.6469,  2.0106, -0.2175, -0.0571,  1.5944,  1.8348],
        [ 0.3502, -0.7049,  0.0333,  0.0887, -1.0491, -0.9098],
        [ 0.8537,  1.9549, -1.9347, -2.7450,  0.1880,  0.1452],
        [-1.3519, -0.9138, -0.7667,  0.5341, -0.6736,  0.2491],
        [-1.2318,  0.9427, -0.5212,  0.4126, -1.3387, -0.7594],
        [-1.4008, -0.0327, -0.1034, -0.2976,  0.7880,  0.6586],
        [-0.2484, -0.4185, -1.0809,  0.5163,  1.2606,  0.2806],
        [-0.2404,  1.1196, -1.1016,  1.4267, -0.0866,  0.6799],
        [ 0.5926, -0.5048,  0.1205,  0.2020, -1.0535,  0.3332],
        [-0.0382,  0.3407, -0.6640, -0.7312,  0.9442, -1.0363],
        [-0.0913,  0.6803, -0.7690,  0.9885,  0.5427,  1.9717],
        [-0.3875,  0.6499,  1.0081, -0.9537,  0.6726, -0.7767],
        [ 1.0396, -0.4798,  0.4896, -0.9636, -1.0318,  0.0152],
        [-1.1522, -0.1601, -1.4503, -0.8957, -0.4893, -0.1853],
        [-0.3886, -1.4844, -0.3218, -1.8092,  0.7259,  0.7631],
        [ 0.3508,  1.2250, -1.4779,  0.4362,  0.2837, -1.5979],
        [ 0.4759,  0.5128, -0.5278, -0.6106,  1.4056,  1.0961],
        [-0.2948,  0.4713,  0.0580,  0.0612,  1.0577,  0.0582],
        [-0.0661, -0.1169, -1.0082,  0.5881, -1.2362, -0.2430],
        [-0.7959,  0.8610, -0.7953, -0.8331,  1.2912, -2.3214],
        [ 0.4701,  0.8930,  0.8756, -0.5378,  0.0175, -0.0587],
        [-0.6467, -2.0382,  0.6181, -0.5329,  0.0307, -1.3915],
        [ 0.2894, -0.2322, -0.4188, -0.0803, -0.3657,  0.3000],
        [-1.3625, -0.2764, -0.3660,  0.7542, -0.0656,  1.4852],
        [ 0.3627,  0.9162, -0.9723,  0.3565,  0.1787,  0.4477],
        [ 0.4351,  0.2355,  1.1132,  0.6185,  0.1626,  0.6209],
        [-1.1958, -0.2311, -1.2899,  1.3726,  1.1176, -0.4054],
        [ 0.7648,  1.2878,  0.6969, -0.0659, -1.7480, -0.0835],
        [ 0.5268,  1.3148,  0.2463, -1.0975, -0.8918,  1.3261],
        [-2.6022, -1.6214,  1.4982,  0.2639,  0.2653, -0.3555],
        [ 0.4716,  0.2087,  0.6275, -0.4929,  2.2813,  0.2706]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([ 3.2654e-02,  7.4789e-02,  4.5228e-03,  1.4998e-01,  2.5342e-02,
        -1.3769e-04,  7.9746e-03, -1.5645e-02,  1.2107e-01,  1.7437e-02,
         9.0267e-02, -6.1538e-02, -6.5331e-02, -1.4716e-01, -8.9811e-02,
         1.8509e-01, -5.9187e-02, -7.8809e-02, -4.3544e-02,  3.2554e-02,
         2.7901e-03,  2.7148e-03,  1.0836e-01,  3.2904e-02,  8.1183e-02,
        -2.4339e-02, -9.6000e-02, -5.4950e-02,  1.9211e-02, -1.4885e-03,
        -2.7972e-02,  1.9957e-02,  3.4468e-02, -9.5636e-02,  2.3823e-02,
        -5.4300e-02, -1.9896e-02,  4.6399e-02,  1.4038e-02, -1.7866e-02,
         5.0271e-02,  1.1650e-02,  1.2831e-02, -9.4245e-02,  6.6844e-03,
        -2.9501e-02,  6.5447e-02, -7.1693e-02, -9.3995e-02,  8.6487e-02,
         2.8258e-02,  2.2472e-02, -3.6048e-02,  6.6074e-02,  1.1613e-02,
         2.8780e-02, -7.8452e-02, -1.3068e-02, -5.1203e-02,  2.6940e-02,
        -1.1920e-02, -1.1720e-01,  5.5829e-02, -9.3216e-03, -8.2979e-02,
        -8.3608e-03, -1.2909e-01, -7.9657e-02, -7.7145e-02,  4.5065e-02,
         5.7844e-02, -4.0845e-02, -4.0835e-02, -4.4600e-02, -1.0375e-01,
        -8.7896e-02,  7.2197e-02, -6.3760e-03, -2.0487e-02, -1.0699e-01,
        -6.6833e-02, -3.1574e-02, -2.7337e-02, -7.6953e-02,  3.4542e-02,
         1.0062e-01, -7.1147e-02,  8.7054e-02, -2.8316e-02,  4.5329e-02,
        -6.2852e-02, -1.8583e-03,  2.3013e-02,  1.3741e-02,  7.0054e-02,
        -3.9602e-02,  9.0319e-03, -6.6391e-03,  1.2673e-01, -1.1464e-01,
         2.2175e-02, -6.4645e-02, -6.6159e-02, -7.8603e-02,  2.4607e-02,
         8.7546e-04,  9.5940e-04,  2.0733e-02,  1.6635e-02, -1.5095e-01,
         3.8761e-02,  5.8581e-02,  4.4544e-02,  6.2415e-02, -7.4089e-02,
        -2.0715e-02,  2.0759e-02,  1.1396e-02, -1.3072e-01, -1.2041e-01,
        -6.9912e-03,  1.1152e-01,  1.0246e-02,  7.7078e-02,  1.0793e-02,
        -1.2201e-02, -2.0636e-02,  4.2949e-02,  3.2560e-04, -5.6083e-03,
        -3.9729e-02, -7.2930e-02, -7.5819e-02,  9.7091e-02,  1.1008e-01,
         6.9157e-02,  6.2286e-03,  1.5025e-02,  2.3821e-02, -3.2164e-02,
        -5.2175e-02, -2.4218e-02,  2.9436e-02,  7.1701e-02,  7.3069e-03,
        -2.4700e-02,  6.7569e-02,  2.8288e-02, -2.1947e-02, -1.0620e-01,
         3.8233e-02,  7.9214e-02,  2.4034e-02, -7.9238e-02, -3.7813e-02,
         3.7391e-02, -3.8698e-02, -1.0928e-01,  1.0633e-02, -1.4227e-01,
        -1.0690e-02, -1.1450e-01,  7.7646e-02,  6.8074e-02, -2.0111e-01,
        -4.9526e-02,  1.0938e-01,  3.8963e-02,  6.8072e-02,  7.3382e-02,
         8.8100e-02, -1.5021e-02,  6.0627e-03, -1.3716e-02,  1.1073e-01,
        -2.9051e-02,  8.9809e-02, -1.3567e-01, -5.3365e-02, -7.9959e-02,
         6.1228e-02, -1.5219e-02, -7.4563e-02, -8.8409e-02, -2.1458e-02,
        -3.3694e-02, -4.2283e-02,  6.5058e-03, -5.1912e-02, -3.7961e-02,
         3.0237e-03,  8.3665e-02,  4.3369e-02, -5.9482e-02,  4.6046e-02,
         7.6935e-02,  5.0926e-02,  2.9239e-02,  5.0248e-02, -7.7720e-03,
        -9.3398e-02, -8.7565e-03,  1.9249e-02,  1.1855e-01, -8.9232e-02,
         3.9877e-02, -1.0504e-01,  5.3351e-02, -3.9704e-04,  6.8226e-02,
         1.0233e-01,  4.8231e-02,  6.9572e-03, -2.1182e-02, -3.5982e-02,
         1.3670e-01, -5.8737e-02,  7.2893e-02,  3.5153e-02,  7.7883e-02,
         8.4375e-02,  1.1591e-01,  9.0451e-02, -3.3201e-03, -1.8033e-03,
         1.1111e-01,  8.8630e-02,  3.9972e-02, -2.1422e-02, -1.5130e-01,
         1.2253e-02,  3.8495e-02, -1.1437e-01,  5.7117e-03, -9.2329e-02,
         8.1252e-02,  4.2373e-02, -9.1120e-02, -3.7906e-03,  8.0841e-02,
        -8.0700e-02,  8.9017e-03, -4.6440e-03,  4.3702e-02,  3.4447e-02,
         2.5902e-02,  7.8546e-02, -2.7259e-02, -1.7262e-02,  1.6534e-02,
         1.1595e-01, -8.6592e-02, -2.7736e-02, -9.3938e-02,  8.7087e-02,
        -1.1468e-02,  1.0031e-01, -1.2890e-01,  3.5792e-03,  3.1867e-02,
         9.8202e-02,  3.6160e-03, -1.4685e-02,  1.0825e-01, -4.5242e-02,
        -7.0614e-02,  1.0202e-01,  9.9149e-02,  4.3331e-02,  3.1422e-02,
         2.5817e-02, -7.9442e-02, -3.7553e-02,  1.1668e-01,  3.1321e-02,
         4.8907e-02,  7.2735e-02,  3.2606e-02,  1.0846e-01, -8.2393e-02,
        -1.6415e-02, -1.0426e-01,  4.2160e-02,  5.2422e-02,  2.6310e-02,
         4.7794e-02, -1.6563e-02,  8.8993e-02, -6.7708e-02,  5.6732e-02,
         6.5281e-02,  4.2335e-02, -3.9796e-02, -1.2830e-01, -3.1990e-02,
        -5.9057e-02,  6.5335e-03, -1.1528e-01, -8.8546e-02,  3.3226e-03,
         1.6968e-02, -2.7501e-02,  3.6894e-02,  6.4573e-02,  3.3138e-02,
        -3.6568e-02,  1.2141e-01, -6.9908e-02, -1.3601e-02, -2.0595e-02,
         3.6799e-02,  8.7289e-02,  2.0445e-02, -7.8025e-02, -9.2597e-02,
         3.5642e-02, -5.3359e-02, -5.7002e-03, -3.2961e-02,  2.6728e-02,
         1.4598e-01, -3.7617e-02,  5.0250e-02,  7.9841e-03, -3.7818e-02,
        -3.1682e-02, -3.5387e-02,  2.4230e-02,  5.9705e-02,  4.7862e-02,
        -8.1615e-02,  6.5805e-02,  6.5485e-02, -5.1993e-02,  6.7333e-02,
        -4.6272e-02,  4.5269e-02, -7.4566e-02, -7.1342e-02, -6.3545e-02,
        -7.1540e-02, -5.9548e-02, -4.1005e-02,  3.7088e-02, -5.1034e-03,
        -1.1112e-01,  5.3369e-02,  1.0647e-01,  8.5972e-03, -3.6921e-02,
         9.7723e-02,  1.2598e-02,  1.6314e-02, -7.4543e-02,  9.0790e-02,
         5.8345e-02,  7.9451e-03, -7.9833e-02,  1.9458e-02, -3.2261e-02,
        -5.2621e-02,  6.8132e-02,  3.4106e-02,  1.0361e-01, -1.1423e-02,
        -1.8624e-02,  7.1699e-03, -3.2149e-02,  8.9054e-02, -2.4548e-02,
        -1.6147e-02, -9.2167e-02,  2.6516e-02,  4.2423e-02, -9.3158e-03,
        -1.5881e-02, -1.1303e-01, -1.8015e-03,  1.0310e-02, -1.6887e-02,
        -9.9784e-02, -4.3045e-02,  3.8724e-02,  1.1833e-02, -6.0654e-02,
        -1.3319e-01, -9.4660e-02,  7.9102e-02, -4.3305e-02,  9.8449e-02,
        -7.4421e-02, -8.5092e-03,  5.1040e-02,  5.0763e-02,  6.6364e-02,
        -7.7191e-02,  8.5228e-02,  3.0556e-02, -1.2208e-01,  1.2931e-01,
        -4.8796e-02,  9.3370e-02,  3.0758e-02, -5.8308e-02,  9.1258e-02,
        -4.8571e-02,  2.6635e-02,  2.6919e-02,  9.5757e-02,  1.0109e-02,
         9.1420e-02,  9.4257e-02, -9.0337e-02, -9.0181e-02, -6.1580e-02,
        -8.7941e-02,  4.8430e-02,  3.6832e-02, -7.0087e-02, -8.0116e-02,
        -1.5261e-02, -3.4733e-02, -2.9741e-02, -4.5100e-02,  5.2825e-02,
         2.6430e-02,  9.0956e-02, -1.3385e-02, -1.3490e-02, -3.6575e-02,
         3.1670e-02,  7.3890e-03,  3.0411e-02, -6.1996e-03,  7.5065e-02,
        -3.7775e-02,  4.0749e-02,  9.7142e-02,  2.3135e-02,  1.1496e-01,
        -3.3160e-02, -1.3544e-02,  2.7836e-02, -9.4798e-02, -5.7123e-02,
        -2.6527e-02,  5.7561e-02,  2.7953e-02,  8.8360e-02, -1.3455e-01,
        -3.6835e-02,  7.7381e-02, -1.1219e-02, -3.6812e-02,  6.8364e-02,
         8.9601e-02,  7.1290e-02,  5.6319e-02,  7.2378e-02,  1.5972e-02,
         2.0821e-02, -7.5285e-02, -4.7027e-02, -1.6124e-02,  5.7178e-02,
         8.9151e-03, -9.9788e-02,  3.4764e-02, -3.4476e-02, -1.7215e-02,
        -1.1820e-01,  1.0094e-01,  9.1498e-02, -3.0219e-02, -1.0784e-01,
        -6.7906e-02, -9.2448e-02,  2.0456e-02, -3.5937e-02, -3.8671e-02,
         3.5981e-02,  3.3594e-03,  1.8514e-02,  7.1933e-03,  8.4016e-02,
         2.1541e-04, -4.6531e-02,  4.1786e-02,  9.7820e-02, -9.0744e-02,
         2.4014e-02,  5.4846e-02,  4.8688e-02, -6.1591e-02, -9.0783e-02,
        -1.5121e-02,  1.5985e-01, -2.9958e-02, -6.6853e-03,  6.5463e-02,
         6.2823e-02, -1.5454e-02, -1.4145e-02,  3.3677e-02,  1.0425e-01,
         8.4663e-04,  5.9675e-02,  1.2754e-01,  5.0125e-02,  8.1729e-03,
         1.2800e-01, -1.4239e-01], device='cuda:0', requires_grad=True), Parameter containing:
tensor([ 0.0642, -0.0170, -0.0283, -0.0191, -0.0059, -0.0207,  0.0149, -0.0177,
        -0.0410, -0.0444, -0.0274, -0.0304, -0.0307, -0.0193,  0.0502,  0.0090,
         0.0233,  0.0022,  0.0337, -0.0567,  0.0337,  0.0553, -0.0322, -0.0217,
         0.0284, -0.0534,  0.0457, -0.0118, -0.0055,  0.0462, -0.0339, -0.0062,
        -0.0371, -0.0410,  0.0105, -0.0058, -0.0219, -0.0328,  0.0474,  0.0203,
         0.0079, -0.0267, -0.0426, -0.0124, -0.0505,  0.0343,  0.0521,  0.0096,
        -0.0383, -0.0617,  0.0432,  0.0359,  0.0089, -0.0048, -0.0179,  0.0095,
        -0.0242, -0.0050,  0.0154, -0.0218,  0.0028,  0.0508, -0.0071, -0.0129,
         0.0238,  0.0332, -0.0433,  0.0077, -0.0603,  0.0442, -0.0184, -0.0188,
        -0.0097,  0.0401, -0.0231,  0.0365,  0.0357,  0.0058, -0.0635, -0.0036,
        -0.0181, -0.0294,  0.0036, -0.0133, -0.0266, -0.0252,  0.0382, -0.0524,
        -0.0089,  0.0314,  0.0491,  0.0220,  0.0372, -0.0280,  0.0408,  0.0289,
        -0.0278, -0.0120, -0.0286, -0.0049,  0.0107, -0.0242, -0.0004, -0.0326,
        -0.0080, -0.0347, -0.0095, -0.0320, -0.0235,  0.0270,  0.0330,  0.0354,
        -0.0019, -0.0297, -0.0382, -0.0195, -0.0223, -0.0288,  0.0184,  0.0434,
        -0.0197, -0.0232, -0.0225, -0.0275,  0.0077, -0.0251, -0.0538, -0.0278],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([[ 0.1420,  1.6036, -0.5792, -0.2852,  0.5326, -1.4667],
        [ 1.0616, -0.6926, -0.1129, -1.4251, -2.0414,  0.3080],
        [ 0.9190,  0.0224, -1.9402, -1.0101,  0.3656,  1.0493],
        [-1.3361, -0.9840,  2.4171,  0.2870,  0.2330, -0.1312],
        [ 0.8222, -0.1408, -0.6833,  0.2099, -0.1541,  0.6885],
        [ 0.1530, -0.1387, -0.1706, -2.1067, -0.4245,  0.8395],
        [-0.9795,  0.5616, -0.5828, -0.3459, -0.6521,  1.3338],
        [-0.4342, -0.4774,  0.0190, -0.3289, -0.7861, -0.8714],
        [ 0.8049,  1.0269,  0.8598, -0.2229,  0.2715, -0.2548],
        [-0.2015,  0.0888,  0.7232,  0.7044,  0.1351,  0.1480],
        [-1.5708,  0.9976, -0.0630, -0.4250, -1.3931, -0.2905],
        [-0.6132, -0.5543,  1.2968,  1.0320,  0.4935,  0.0075],
        [-1.0860, -1.1109,  0.4093,  0.6307, -0.6846, -0.4062],
        [-0.3337, -0.2078, -0.1374, -0.1109, -0.1027, -0.2395],
        [-1.1002,  0.5091, -1.1471,  0.2205, -0.4674, -0.6026],
        [-0.2537, -1.2552, -0.3323, -0.7904, -0.7957,  1.2212],
        [ 0.6553,  0.9675,  0.5578,  0.2580, -0.1906,  0.7211],
        [-0.2950, -0.4560,  0.6270, -0.2320,  0.4664, -0.7376],
        [ 1.0156,  0.2916,  0.2670,  0.1705, -0.5255,  1.2183],
        [ 1.1904, -1.2128,  0.0743,  0.3882, -1.4121,  0.8153],
        [-0.7414, -0.0071,  1.2782,  0.9105, -0.9786,  0.0233],
        [ 1.0700,  0.6041,  0.2440, -0.6722, -0.1285,  0.5245],
        [-0.3387, -0.4772,  0.0460,  1.3361, -0.2121, -0.7511],
        [ 2.2903,  0.5178, -0.3363,  2.4305, -1.8816, -0.1928],
        [-0.0202,  0.0836,  0.8209, -0.3959,  0.4358,  1.4634],
        [ 1.1363,  0.1055, -0.6654, -0.6494,  0.2193, -1.0157],
        [ 1.5546,  1.7951, -0.0697, -0.7329, -0.3675, -0.3682],
        [-0.9050, -0.4521,  0.3994,  1.7157, -0.1731, -0.6739],
        [ 0.9127, -0.4805, -0.3024, -1.7100,  1.1266,  0.3640],
        [-0.5681,  0.3044,  0.9777,  0.4335,  0.5623, -0.7565],
        [ 0.1921, -0.2588,  1.9714, -0.3405, -1.1087, -0.8188],
        [-0.3590,  0.0049,  1.3680, -0.2792,  1.9580,  0.3078]],
       device='cuda:0', requires_grad=True), Parameter containing:
tensor([-4.6733e-02, -7.6237e-02,  7.6271e-04, -4.9724e-02,  3.8051e-02,
        -2.1520e-02,  4.3936e-02,  2.9670e-03,  4.2903e-02, -6.4502e-02,
        -5.0398e-02, -2.0995e-02,  2.4275e-02, -2.3923e-03,  6.8934e-02,
         1.2788e-02, -3.8999e-02,  9.5631e-02,  1.7427e-02, -5.9342e-02,
        -8.0438e-02,  3.0013e-02, -1.1214e-01,  6.8900e-03,  1.3804e-01,
         6.5300e-02,  1.6586e-02, -3.5294e-03,  3.1845e-02, -6.5344e-02,
         4.0546e-03,  5.2935e-02, -8.3739e-02, -5.7626e-02,  8.8003e-02,
         4.8742e-02,  1.8387e-02,  8.4946e-02, -5.5959e-02,  3.7686e-02,
         6.6957e-02, -7.2232e-02, -2.4751e-02, -7.8638e-02,  7.8745e-02,
        -2.1394e-02, -1.3312e-02, -6.3726e-02, -2.2700e-02, -1.0342e-02,
         1.0499e-01, -2.8326e-03,  1.0753e-02, -3.5113e-02, -1.9670e-02,
        -5.0251e-03, -7.6670e-02, -1.0995e-01,  1.9734e-02, -1.0939e-02,
        -4.4070e-02,  1.3176e-02, -7.1130e-03, -5.4630e-02, -4.0725e-02,
        -5.5004e-02,  2.7137e-02, -5.8037e-02,  4.9870e-03,  9.7810e-02,
         6.7374e-02, -3.0020e-03,  2.5046e-02,  5.2167e-02,  5.9050e-03,
         4.2919e-02, -2.6218e-02, -5.6397e-03, -1.0929e-01, -2.6532e-02,
        -3.0881e-02,  2.5579e-02, -6.0338e-02, -4.2943e-02, -5.7549e-03,
         4.4293e-02,  1.8220e-02, -1.5679e-02, -8.6540e-03,  1.2609e-02,
         4.0079e-02,  1.6237e-02, -1.7827e-02, -7.9562e-02,  8.9055e-02,
         6.2035e-02,  1.6618e-02,  7.2145e-02,  1.8079e-02, -2.7010e-02,
        -4.5327e-03, -7.0297e-02,  4.5900e-02, -4.0734e-02, -7.3609e-02,
         5.6368e-02,  3.3662e-03,  1.5383e-02,  8.0837e-02, -8.2647e-02,
        -6.8500e-03,  3.6617e-02, -2.4243e-02, -6.4018e-02, -1.6885e-02,
         3.8701e-04,  4.6908e-02,  1.2009e-02,  1.7566e-02,  5.7771e-02,
         3.7704e-02,  5.1457e-02,  4.6160e-02,  5.6034e-02, -2.0804e-02,
        -5.9369e-02,  2.5211e-02, -1.0320e-01,  5.5060e-02, -1.1592e-01,
         2.9792e-02, -1.0461e-01,  4.4201e-02,  1.2330e-02, -3.8100e-03,
         7.4628e-03,  6.1596e-02, -3.8917e-02, -6.1714e-04,  3.9461e-02,
         4.9888e-02,  1.8249e-02, -3.5660e-04, -8.9710e-02, -4.2982e-03,
        -4.1732e-02,  4.4508e-02,  8.8230e-02, -6.9337e-02,  2.5055e-02,
         7.6310e-03, -1.9371e-02, -8.1478e-02,  2.2636e-02, -2.9845e-02,
        -4.6957e-03, -8.8046e-02, -5.3096e-02, -7.3845e-02, -7.1622e-02,
         2.1965e-02,  2.7753e-02,  2.0707e-02, -8.4153e-02,  6.3652e-03,
        -3.2580e-03, -5.6966e-03, -5.5984e-02,  2.1032e-02, -5.9735e-02,
        -2.6158e-02, -3.5484e-02, -3.4218e-02,  1.5184e-02,  7.7178e-02,
        -6.5757e-02,  7.8866e-02, -1.8945e-02,  1.1615e-02, -6.6085e-02,
         4.4986e-02, -6.2564e-02, -2.9115e-02,  2.8518e-02,  3.9099e-02,
        -3.7891e-02,  6.7226e-02, -1.4835e-02,  7.5904e-03,  3.8261e-02,
        -5.8555e-02,  2.7810e-02, -7.3865e-02, -7.6776e-02, -7.1234e-02,
        -8.5194e-02,  2.8637e-02, -6.8073e-02, -3.5271e-02, -1.0137e-01,
        -3.7466e-02,  2.5027e-03,  8.2076e-02,  6.6862e-02,  4.1012e-02,
         4.1893e-03,  1.0440e-01,  3.4670e-02, -7.1757e-02, -8.3632e-02,
        -7.9669e-05,  8.8806e-02, -6.6546e-02,  1.2095e-02, -4.4427e-02,
         9.0081e-02, -8.2956e-02, -2.3530e-02,  6.5687e-02, -4.3195e-02,
         8.4415e-02,  8.1852e-02, -3.8235e-02,  2.5313e-03,  4.4225e-02,
         6.7357e-03, -8.3966e-02,  1.3234e-02, -4.0136e-02,  1.1152e-02,
        -7.8252e-02,  3.2849e-02,  5.7703e-03,  9.7298e-02,  6.4262e-02,
        -2.0859e-02, -5.5151e-02,  8.9210e-02, -4.4885e-02,  2.5798e-02,
        -4.1946e-02, -2.9951e-02,  5.6950e-02, -5.1036e-02, -4.2641e-02,
        -2.7572e-02, -3.8104e-02, -3.2409e-03, -4.6428e-02,  8.9113e-03,
         3.9350e-02,  7.2176e-02,  7.1614e-02, -4.5858e-04,  3.1279e-02,
         5.0100e-02, -3.6580e-02, -3.6437e-02, -2.6791e-02,  2.0246e-02,
         5.1995e-02,  9.6057e-02,  9.2238e-03, -4.1781e-02, -4.0935e-02,
        -5.0557e-02,  5.7766e-02, -1.0372e-01, -6.2771e-03,  9.4310e-03,
        -4.7212e-02, -4.2782e-02,  2.6018e-02,  1.3226e-02,  4.8622e-02,
        -4.3663e-02, -1.3983e-02,  5.4411e-02, -8.5144e-02, -3.9761e-02,
         9.1257e-02, -8.6442e-02,  8.5872e-02,  8.8317e-02, -2.3245e-03,
         2.2907e-02,  1.9538e-03, -7.6873e-02,  3.3316e-02, -5.9786e-02,
        -2.5088e-02, -3.2807e-02,  7.5837e-02,  4.0418e-02,  4.2572e-02,
         6.8304e-02, -3.5168e-02, -1.0081e-01,  3.4571e-02, -6.3879e-03,
         3.3213e-02, -2.1065e-02,  5.6040e-02,  7.3653e-02, -1.6802e-02,
         8.9913e-03, -4.9348e-02, -5.2937e-02,  1.1662e-01, -6.3478e-03,
        -3.9324e-03,  7.1043e-02,  2.2502e-02, -6.3461e-02, -3.1309e-02,
        -1.0383e-01, -2.2085e-02,  7.3674e-02, -3.8088e-02,  2.4501e-02,
         2.9942e-02, -5.1544e-02, -8.9638e-03,  5.1013e-02,  2.3233e-02,
        -6.1465e-02,  5.4592e-02,  6.3009e-02,  8.7914e-02,  3.9284e-02,
        -8.9231e-02,  4.0726e-02,  1.1255e-01, -7.2838e-02,  9.8135e-03,
         2.4970e-02, -4.3750e-02,  8.4048e-02,  7.6796e-02,  2.4776e-02,
         1.2716e-02, -3.1751e-02,  4.6796e-02,  8.0105e-02, -7.4507e-03,
         2.7254e-02,  7.2829e-02,  3.9937e-02, -4.7835e-02, -7.5366e-02,
         2.7995e-02, -1.4158e-03, -1.1945e-02,  7.1532e-02,  1.0873e-01,
         5.2242e-02, -6.1646e-02,  9.6368e-04, -7.5584e-02, -7.0406e-02,
        -1.1391e-01,  9.3109e-02, -5.1390e-02,  8.4682e-02, -4.3081e-03,
         6.1702e-03,  7.4531e-02,  8.2816e-02,  7.2571e-02,  7.9034e-02,
        -1.8061e-02, -5.7200e-02,  6.8668e-02, -1.2382e-02, -6.0172e-03,
        -1.0814e-02,  1.0960e-02, -3.6172e-02,  8.1126e-02,  3.3996e-02,
        -5.5426e-02, -7.7444e-03, -7.1364e-02, -5.1126e-02, -2.8768e-02,
        -8.6102e-02,  3.2197e-02,  6.3397e-02, -2.1948e-02, -1.0171e-02,
         3.2156e-02, -1.2238e-02, -2.2399e-02, -1.3599e-03,  9.2069e-03,
        -3.9328e-02,  4.2327e-02, -2.5010e-02, -7.1343e-02,  1.0878e-01,
        -1.3137e-02, -1.1503e-04, -7.2753e-02, -1.0595e-01, -5.0682e-02,
         4.2860e-02,  8.3662e-03, -9.7600e-03,  4.8891e-02, -5.3473e-02,
         8.6715e-02, -1.5898e-03,  2.0446e-02,  2.0364e-02,  5.6387e-02,
         9.2348e-02,  9.7566e-02, -8.1997e-02,  2.2926e-02,  1.1408e-01,
         3.6286e-02, -6.0180e-02,  6.8061e-03, -7.2703e-02,  1.8369e-03,
         4.2374e-02,  7.1488e-02, -2.5930e-02, -6.1426e-02, -2.9976e-02,
         3.2879e-02,  8.8336e-02, -6.7129e-02,  2.9143e-02,  1.1699e-02,
         6.7338e-02, -5.4161e-02, -4.6232e-02, -2.6753e-02,  7.9726e-02,
        -5.6692e-02,  8.1891e-02,  3.6928e-02, -4.8696e-02,  4.8788e-02,
        -2.2406e-02, -5.9689e-02,  5.9728e-02,  8.4361e-02, -1.1073e-01,
        -5.9652e-02,  7.6972e-03,  4.3455e-02,  4.6826e-02, -1.3226e-01,
         2.3943e-02,  3.2925e-02, -2.1489e-02,  8.0741e-02,  2.8890e-02,
        -6.8981e-02,  5.7758e-02,  3.4214e-02, -1.0559e-03,  7.7641e-02,
         3.3791e-02, -8.0161e-02, -2.4021e-02, -8.6615e-02, -3.8207e-02,
        -4.2841e-02,  2.2110e-03, -2.0711e-02, -1.7266e-02,  5.0351e-02,
        -4.2493e-02, -5.9654e-02, -8.5415e-02,  2.5124e-02,  6.0313e-02,
         6.0889e-02, -2.3586e-02,  5.8342e-02, -2.7534e-03,  2.3977e-02,
         7.6932e-02,  3.7529e-02,  6.7701e-02,  6.3191e-02, -6.0457e-02,
        -7.5372e-03,  2.0862e-02, -4.4879e-02,  5.0340e-03,  4.3349e-02,
        -1.5984e-02,  5.8195e-03,  3.6079e-02, -1.3859e-02,  6.0852e-02,
         9.2073e-02,  8.4225e-02, -3.7251e-02, -3.1478e-02, -1.4415e-02,
        -4.6794e-02,  4.4002e-02,  3.0014e-02,  4.4853e-02,  9.8198e-02,
        -3.5231e-02,  1.0049e-02], device='cuda:0', requires_grad=True), Parameter containing:
tensor([ 6.6263e-02,  9.2158e-04,  2.9810e-02,  4.1197e-02,  2.7730e-02,
        -2.4237e-02,  2.1609e-02,  4.2637e-02,  5.8317e-04,  2.4301e-02,
        -5.9426e-02,  3.9393e-05, -5.9753e-02,  7.5279e-02,  3.9804e-02,
         1.4741e-02,  8.5590e-02, -4.4747e-02, -5.6063e-03, -1.8488e-02,
        -1.0543e-03, -2.3659e-02,  3.3756e-02, -1.3228e-02, -3.3053e-02,
        -3.2085e-02, -3.6728e-02,  4.6828e-02,  1.2202e-02,  8.0460e-02,
         3.5459e-02,  3.6428e-02, -3.8268e-02, -6.0895e-02,  3.0512e-02,
         7.1795e-02, -3.1335e-02,  6.4831e-02, -2.8333e-02, -2.1926e-02,
        -6.8619e-02, -7.1075e-02,  3.8685e-03, -3.7945e-02, -1.3219e-02,
         5.2905e-02,  5.7683e-02,  6.5721e-02, -9.6635e-03, -5.6342e-03,
         8.9341e-03, -1.2067e-03, -6.7282e-02,  9.8110e-03, -3.8312e-02,
         6.3405e-02, -3.4427e-03, -3.7687e-02,  7.4502e-02, -4.0463e-02,
         9.6851e-02,  6.3107e-02, -8.5032e-02,  7.1823e-03,  4.8923e-02,
        -1.6799e-02,  2.6087e-02,  1.2812e-02, -6.4022e-03,  3.7094e-02,
         5.1343e-02, -2.9516e-02, -2.2022e-02,  1.0748e-02,  2.5281e-03,
        -6.4318e-02, -4.7187e-02, -2.4931e-02,  3.9198e-03, -2.3616e-02,
        -9.2754e-02, -1.8640e-03,  4.8444e-02,  5.3025e-02, -4.3982e-03,
        -5.3088e-02, -6.3054e-03, -4.9191e-02,  4.2947e-02,  5.2847e-02,
         5.2826e-02,  1.5099e-02, -9.7835e-03, -2.5038e-02, -6.8842e-03,
        -3.0115e-02,  1.1187e-03, -6.0232e-02, -4.1036e-02, -1.9571e-02,
        -1.6675e-02, -7.9442e-02,  8.9924e-02,  2.5155e-02, -6.0936e-02,
         6.4269e-02, -7.4288e-02, -2.7964e-02, -1.3135e-01, -1.5421e-02,
        -1.8320e-02, -2.1455e-02, -8.5560e-02,  1.6019e-02, -6.0602e-02,
         5.0665e-02,  3.3202e-02, -2.7810e-02,  6.0498e-02,  3.7190e-02,
        -4.0997e-02,  1.7887e-02, -2.5232e-02,  1.3133e-02, -2.6030e-02,
         4.0165e-02,  1.3766e-02, -1.6610e-02], device='cuda:0',
       requires_grad=True), Parameter containing:
tensor([[ 1.0753e+00, -3.1566e-01,  2.7332e-01, -3.6884e-01, -1.4784e+00,
         -2.5129e+00],
        [ 1.0888e+00, -6.9565e-01,  1.4071e+00,  1.0135e+00, -8.0997e-02,
         -1.6116e+00],
        [-9.9689e-01, -1.0719e+00, -2.3173e-01,  7.3538e-01,  7.9581e-01,
         -8.2588e-02],
        [-7.3994e-01,  5.9966e-01,  5.9911e-01,  3.7337e-01,  9.0292e-01,
          1.3649e+00],
        [ 1.0229e-01, -1.9358e-01, -1.1823e-01, -1.5020e+00,  1.8561e+00,
          1.7109e-01],
        [-6.3895e-02,  3.5711e-01, -9.8566e-02, -3.8246e-01,  7.6564e-01,
          7.7124e-01],
        [ 8.7827e-01,  7.9515e-01,  2.6868e-01, -1.6535e+00,  7.7775e-01,
          4.5617e-01],
        [-8.9070e-01, -5.1309e-01,  7.7350e-01,  9.9240e-01,  7.0246e-01,
         -1.1507e+00],
        [ 6.8247e-01, -1.1884e+00,  6.8056e-02,  5.5878e-01, -2.8006e-01,
         -3.9952e-01],
        [ 1.7968e+00,  8.1415e-01,  5.1115e-01, -9.2203e-01,  1.1920e+00,
          9.6545e-01],
        [-5.3523e-01, -3.7206e-01, -2.7190e-02,  1.6274e+00,  8.1399e-01,
         -8.1833e-01],
        [ 1.4001e+00,  1.8458e+00,  1.5074e-02,  1.0687e+00, -1.5429e+00,
         -4.3257e-03],
        [-8.5649e-01,  7.1154e-01, -2.5422e+00, -3.6347e-01,  4.2901e-01,
         -4.4888e-01],
        [-1.9882e-01, -1.0733e+00, -2.0329e-01, -1.3197e+00, -7.9442e-04,
          2.0012e-01],
        [ 1.2135e+00, -1.2063e+00,  1.1295e+00, -9.6881e-01,  1.3504e-01,
         -2.2823e-01],
        [-1.1097e-01, -1.8744e+00,  1.1176e-01, -3.1860e-01,  2.9294e-01,
          1.6068e-01],
        [-1.1145e+00,  1.1204e-01, -2.4472e-01,  1.4496e+00,  9.4291e-01,
         -1.0384e+00],
        [-9.1527e-01, -1.7527e+00,  3.4777e-01, -2.6329e+00,  5.3894e-01,
          1.9386e-01],
        [-1.1234e+00, -1.2087e+00, -1.3527e+00,  1.0717e+00, -2.8199e-01,
          6.3744e-01],
        [ 1.5056e+00, -4.4208e-01,  9.0433e-01, -8.8994e-01, -2.1166e+00,
         -1.5055e+00],
        [-7.6897e-01,  1.2313e+00,  1.5222e-01, -6.5218e-01,  2.4406e-01,
          1.4885e-01],
        [ 4.8671e-01, -8.6348e-01, -1.6738e-01, -5.1628e-01, -2.2873e-02,
         -7.9942e-01],
        [ 8.3451e-01,  1.4569e+00,  1.3153e-01,  1.7498e+00,  6.3505e-02,
         -1.9272e+00],
        [ 8.2517e-02,  1.3002e-01,  1.0930e+00,  5.1930e-01,  6.6121e-01,
         -7.2089e-03],
        [ 5.0309e-01, -5.8460e-01,  1.3388e+00,  8.6968e-01, -1.0410e+00,
          2.8710e-01],
        [-5.0538e-01,  7.8920e-01,  5.2087e-02, -5.4113e-01,  4.9968e-01,
         -5.0359e-01],
        [ 5.7430e-01, -8.0565e-01,  1.4938e-01,  1.2506e+00, -7.5086e-01,
          1.3374e+00],
        [ 6.4124e-03,  2.4836e-01, -1.2701e+00,  1.5460e+00, -9.6931e-01,
         -9.3589e-01],
        [-1.7843e-01, -1.3250e+00,  2.5753e-02,  1.7632e+00, -3.7163e-02,
         -1.2280e+00],
        [-1.8937e+00,  3.5263e-01, -2.4904e-01, -6.8521e-01,  5.1288e-01,
          8.7893e-01],
        [ 1.2725e+00, -5.4193e-01,  1.6062e+00, -1.2125e+00,  9.6444e-02,
         -4.6631e-01],
        [-1.6633e-01,  1.4021e+00,  1.1710e+00,  1.0774e+00, -5.5794e-01,
          1.1029e+00]], device='cuda:0', requires_grad=True), Parameter containing:
tensor([-7.9344e-02,  7.6623e-03,  2.3018e-02, -6.5828e-02,  3.5812e-02,
         1.0701e-01,  8.2833e-02, -3.5870e-02,  2.9582e-02,  2.5923e-02,
         1.9337e-02, -8.4748e-02, -7.7131e-02, -3.3109e-02, -9.0618e-03,
        -4.2239e-02,  4.3101e-02,  6.6724e-02, -6.5265e-03,  6.8209e-03,
         4.5173e-02,  7.3351e-02, -9.0724e-02,  1.3003e-02,  6.5122e-02,
         7.5503e-02,  6.3625e-02,  9.8153e-02, -2.7631e-02, -5.9719e-02,
         1.2805e-05, -6.6113e-02, -1.3483e-01,  2.2107e-02,  3.1229e-02,
        -1.0029e-02, -9.9355e-02, -2.3268e-02, -4.0559e-03, -9.8383e-02,
        -5.2669e-02,  5.7564e-02, -1.1186e-01,  4.2329e-03,  2.3684e-02,
         6.2330e-02,  9.8382e-04, -2.0534e-02, -3.7083e-02, -5.2037e-02,
        -4.0369e-02, -6.1482e-02,  1.1391e-02,  2.3349e-02, -8.3458e-02,
        -3.7941e-02, -6.6882e-02,  3.9821e-02, -5.0055e-03,  3.9296e-02,
         6.5447e-02,  3.2114e-02,  8.7981e-02, -3.5846e-02,  6.5278e-02,
        -2.7466e-02, -3.4622e-02, -1.4092e-02,  7.9224e-02,  6.6043e-02,
         2.6825e-02, -4.4273e-02, -4.3424e-02, -3.2905e-02, -6.1347e-02,
        -4.4739e-02,  1.1044e-01,  7.4811e-02, -4.7812e-02, -7.6000e-02,
         2.8123e-02, -1.6750e-02,  1.1455e-01, -8.3580e-02, -9.3584e-02,
         1.2391e-01, -8.6720e-02,  8.6841e-02,  2.1973e-02, -9.9395e-02,
        -4.1443e-02, -1.8127e-02, -1.6485e-02, -5.8669e-02,  2.1557e-02,
        -7.1479e-03, -4.7399e-02,  3.8403e-03, -2.3757e-02,  1.3695e-02,
        -3.4899e-02, -5.0441e-03,  1.6103e-02,  6.8666e-02, -2.3609e-02,
        -2.9819e-02, -8.8408e-02, -2.1568e-02, -4.5700e-02, -8.4144e-02,
         3.6651e-02,  7.1340e-03,  3.8909e-02, -3.6875e-02,  1.7732e-02,
        -4.7764e-02, -4.2365e-03,  5.7493e-02, -7.0563e-02,  1.3255e-02,
        -5.1057e-02, -3.1696e-03,  8.1303e-02, -7.0102e-02, -7.2231e-02,
         8.7667e-02, -3.6647e-02, -5.3307e-02,  1.9297e-04,  4.5517e-02,
         5.9683e-02, -7.6033e-02, -7.1052e-02, -4.5406e-02,  5.5205e-02,
         6.1901e-02,  4.0206e-02,  6.4232e-03, -8.5668e-02, -4.4313e-02,
        -9.7507e-02,  7.8665e-02, -1.9294e-02,  5.6826e-02,  1.2393e-01,
         4.1547e-02,  7.1525e-03,  7.2592e-02, -1.5317e-02, -8.4276e-02,
        -4.8866e-02, -9.1069e-02, -1.0246e-01, -3.6180e-02,  6.2871e-02,
        -6.0530e-02, -4.0533e-02,  5.6826e-03, -3.5986e-03,  4.5286e-02,
         6.6442e-02, -6.9879e-02, -1.2643e-02, -2.1172e-02,  7.0337e-04,
        -3.6920e-02,  1.1738e-01, -2.5965e-02, -9.0621e-03,  4.5630e-02,
         1.1834e-02,  6.8867e-02,  5.5177e-02, -1.2346e-01,  2.2555e-02,
        -7.7163e-02,  6.7167e-02,  1.4015e-02, -3.5781e-02, -2.7878e-02,
        -5.8358e-02,  9.6586e-04,  5.6982e-02,  3.7778e-02, -6.8538e-02,
         6.4539e-02,  9.8332e-02,  6.3330e-02, -7.2341e-02,  4.1138e-02,
        -6.4808e-02, -1.3835e-02,  2.8544e-02,  3.9593e-02, -5.8491e-02,
        -9.5042e-02,  8.7762e-03, -1.2166e-01, -1.8971e-02, -8.1305e-03,
         3.4422e-02, -3.9993e-02,  7.4250e-02,  9.6490e-02,  4.4228e-02,
        -3.1462e-02,  6.3396e-02, -7.0614e-02,  2.6682e-03, -5.1827e-02,
        -1.4091e-02, -2.0854e-02,  5.1702e-02,  6.7509e-02,  4.5180e-02,
        -1.3742e-02,  3.9200e-02,  8.6527e-03, -5.5501e-02,  9.2866e-02,
        -3.5071e-02,  4.1910e-02, -7.5250e-02,  5.0795e-02,  2.2094e-02,
         4.5775e-02,  4.7230e-02, -6.3941e-02, -7.1610e-03, -9.6337e-03,
         3.7260e-02,  5.4114e-02, -8.2430e-02,  3.5162e-02,  7.1506e-02,
        -8.1865e-02,  5.1342e-02,  1.7878e-03,  3.6326e-02, -8.5083e-02,
        -7.5922e-02,  2.1779e-02, -4.1896e-02,  1.3836e-02, -3.3251e-02,
        -4.5154e-02, -3.2978e-02,  7.0796e-02, -6.5045e-02,  3.1805e-02,
         1.6922e-02, -6.1428e-02, -3.7650e-02,  1.6537e-02,  1.5021e-02,
         6.6556e-02, -6.7389e-02, -1.3159e-02,  2.6070e-02,  6.1909e-02,
        -5.9790e-02, -3.3516e-02, -4.9996e-02, -1.1904e-02,  6.3317e-03,
        -1.5607e-02,  9.6450e-02, -4.2993e-02, -1.2563e-02,  4.8719e-02,
        -5.3446e-02,  1.1055e-02, -1.1398e-02,  1.0314e-01, -2.6648e-02,
         2.5968e-03, -5.1526e-02, -2.2849e-02,  9.8302e-02,  7.6192e-02,
         3.5421e-02, -8.2189e-02,  7.8270e-02, -4.7841e-02, -3.2212e-02,
         5.8895e-02,  7.6792e-02,  4.3224e-02, -2.5657e-03,  3.0698e-02,
        -1.3573e-02,  1.0925e-01, -5.6065e-02, -1.0066e-01, -1.4368e-02,
         7.7634e-02, -8.2713e-02,  3.5645e-02, -9.2792e-02, -8.4912e-03,
         4.5316e-02,  8.8889e-02, -3.6539e-02,  6.5004e-02, -4.4203e-02,
        -1.4927e-02, -1.6874e-02, -6.5534e-03,  5.1955e-02,  1.4497e-02,
         2.3559e-02, -4.7945e-03,  2.1518e-03,  1.2998e-02, -2.3502e-02,
        -8.3662e-02, -6.0245e-02, -5.4359e-02, -4.3923e-02, -4.1126e-02,
        -6.5764e-02, -3.3822e-02, -5.3528e-03,  6.3527e-02, -3.8016e-02,
         4.7802e-02, -1.9788e-02, -1.3818e-02,  2.8078e-02,  7.9279e-03,
        -1.1951e-01,  3.4036e-02,  1.8817e-02, -4.1604e-02,  6.4626e-02,
         5.4616e-02, -4.4305e-02,  1.9953e-02,  3.1852e-02, -1.8440e-02,
         1.3149e-03,  2.0871e-02,  7.9747e-02,  1.0520e-01, -9.1388e-03,
        -5.9464e-02, -1.2054e-02,  3.1128e-02,  9.7524e-02, -3.5619e-02,
        -1.3313e-02,  4.7816e-02, -5.2014e-02, -8.2458e-02,  1.3380e-02,
         5.8884e-02,  1.3698e-02, -5.1499e-03,  5.6570e-03,  4.4914e-02,
        -5.3213e-02, -3.3007e-03, -1.1842e-01,  2.9361e-02, -6.1508e-02,
         9.3185e-03, -9.4053e-02,  5.2054e-02, -4.6373e-02,  4.3533e-02,
        -1.7567e-02, -3.3605e-02,  7.6068e-03, -3.4603e-02,  4.6818e-02,
        -1.0302e-01, -3.8089e-02,  7.5894e-02,  1.0778e-01,  4.5935e-02,
         3.2491e-03, -6.2586e-03,  6.5512e-04,  5.3333e-02,  4.5165e-03,
        -4.3854e-02, -4.5326e-03, -5.7089e-03, -1.1296e-02,  2.3460e-02,
        -2.1092e-02, -2.6679e-02, -2.3500e-02,  4.7375e-02,  1.0730e-01,
        -7.2129e-02, -8.0742e-02,  1.1116e-02,  3.7328e-02, -2.8666e-02,
         5.2539e-02,  1.0520e-01, -7.8568e-02,  4.8841e-02,  6.4017e-02,
        -2.5986e-02, -7.9400e-02, -9.3389e-02, -3.8847e-02,  1.0878e-02,
        -4.6885e-03, -2.1038e-02, -1.4703e-02, -9.7613e-02,  4.7756e-02,
         8.9215e-02,  1.1139e-01, -1.6157e-02,  1.1028e-02,  1.7578e-03,
         9.5160e-03, -3.2007e-02, -4.1861e-02, -2.6826e-02,  3.8718e-02,
         5.4462e-02,  8.2830e-02, -8.0623e-03,  4.2443e-02,  7.9080e-02,
        -3.8378e-02,  8.2419e-02, -9.8338e-02,  6.7675e-02,  3.5630e-03,
         2.6947e-02,  2.9209e-03,  3.0980e-03, -3.6916e-02,  8.3501e-02,
         8.1066e-02,  1.6889e-02,  2.7837e-02, -8.4417e-02,  5.9268e-02,
         1.3061e-03,  1.7914e-02, -6.0311e-02,  1.9166e-02, -1.0532e-02,
         5.2920e-02,  7.4535e-02, -4.9843e-02,  6.0093e-02,  2.9858e-02,
        -6.1412e-02, -1.5221e-02, -8.9207e-02, -2.6171e-02,  3.3921e-02,
         3.9383e-02,  2.8116e-02,  3.1748e-02,  9.7808e-02,  1.1379e-01,
        -5.1405e-03, -5.3341e-03, -5.4751e-02,  3.1732e-02,  6.5407e-02,
        -3.8746e-02, -2.4832e-02,  7.1953e-02, -9.9229e-02, -4.4176e-02,
        -2.2630e-02,  2.5301e-02, -8.2392e-02, -1.0320e-02, -9.9986e-02,
         9.7460e-02, -5.9607e-02, -9.5682e-03,  7.9595e-02,  1.4978e-02,
        -1.8212e-02,  4.1424e-02,  2.8000e-02,  2.3549e-02, -4.7790e-02,
         1.8987e-02, -1.7992e-03, -6.5220e-02, -1.6145e-04,  3.2233e-02,
         3.7027e-03,  9.2440e-02,  3.9342e-02, -1.9255e-02, -2.6526e-02,
         8.0158e-02,  6.5410e-02,  4.1576e-02, -8.8599e-02, -5.8304e-02,
        -5.8168e-02, -3.6046e-02,  4.8388e-02, -1.3761e-02,  7.4672e-02,
        -5.2418e-02, -5.4743e-03], device='cuda:0', requires_grad=True), Parameter containing:
tensor([-0.0055], device='cuda:0', requires_grad=True)], 'weight_decay': 0.0, 'lr': 4.000000000000002e-06, 'betas': (0.95, 0.999), 'eps': 1e-08, 'amsgrad': False, 'initial_lr': 4e-06, 'max_lr': 0.0001, 'min_lr': 3.9999999999999996e-10, 'max_momentum': 0.95, 'base_momentum': 0.85}]
[{'lr': 0.0027126368192699588, 'betas': (0.8595788110062453, 0.999), 'eps': 1e-08, 'weight_decay': 0.01, 'amsgrad': False, 'initial_lr': 0.00012, 'max_lr': 0.003, 'min_lr': 1.2e-08, 'max_momentum': 0.95, 'base_momentum': 0.85, 'params': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44]}, {'lr': 9.042122730899863e-05, 'betas': (0.8595788110062453, 0.999), 'eps': 1e-08, 'weight_decay': 0.01, 'amsgrad': False, 'initial_lr': 4e-06, 'max_lr': 0.0001, 'min_lr': 3.9999999999999996e-10, 'max_momentum': 0.95, 'base_momentum': 0.85, 'params': [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234]}]
Traceback (most recent call last):
  File "run.py", line 160, in <module>
    trainer.fit(model)
  File "/mmfs1/gscratch/ark/tjung2/miniconda3/envs/ckl/lib/python3.8/site-packages/pytorch_lightning/trainer/trainer.py", line 460, in fit
    self._run(model)
  File "/mmfs1/gscratch/ark/tjung2/miniconda3/envs/ckl/lib/python3.8/site-packages/pytorch_lightning/trainer/trainer.py", line 758, in _run
    self.dispatch()
  File "/mmfs1/gscratch/ark/tjung2/miniconda3/envs/ckl/lib/python3.8/site-packages/pytorch_lightning/trainer/trainer.py", line 799, in dispatch
    self.accelerator.start_training(self)
  File "/mmfs1/gscratch/ark/tjung2/miniconda3/envs/ckl/lib/python3.8/site-packages/pytorch_lightning/accelerators/accelerator.py", line 96, in start_training
    self.training_type_plugin.start_training(trainer)
  File "/mmfs1/gscratch/ark/tjung2/miniconda3/envs/ckl/lib/python3.8/site-packages/pytorch_lightning/plugins/training_type/training_type_plugin.py", line 144, in start_training
    self._results = trainer.run_stage()
  File "/mmfs1/gscratch/ark/tjung2/miniconda3/envs/ckl/lib/python3.8/site-packages/pytorch_lightning/trainer/trainer.py", line 809, in run_stage
    return self.run_train()
  File "/mmfs1/gscratch/ark/tjung2/miniconda3/envs/ckl/lib/python3.8/site-packages/pytorch_lightning/trainer/trainer.py", line 839, in run_train
    self._pre_training_routine()
  File "/mmfs1/gscratch/ark/tjung2/miniconda3/envs/ckl/lib/python3.8/site-packages/pytorch_lightning/trainer/trainer.py", line 832, in _pre_training_routine
    self.checkpoint_connector.restore_weights()
  File "/mmfs1/gscratch/ark/tjung2/miniconda3/envs/ckl/lib/python3.8/site-packages/pytorch_lightning/trainer/connectors/checkpoint_connector.py", line 73, in restore_weights
    self.restore(self.trainer.resume_from_checkpoint, on_gpu=self.trainer._device_type == DeviceType.GPU)
  File "/mmfs1/gscratch/ark/tjung2/miniconda3/envs/ckl/lib/python3.8/site-packages/pytorch_lightning/trainer/connectors/checkpoint_connector.py", line 102, in restore
    self.restore_training_state(checkpoint, load_optimizer_states)
  File "/mmfs1/gscratch/ark/tjung2/miniconda3/envs/ckl/lib/python3.8/site-packages/pytorch_lightning/trainer/connectors/checkpoint_connector.py", line 182, in restore_training_state
    optimizer.load_state_dict(opt_state)
  File "/mmfs1/gscratch/ark/tjung2/miniconda3/envs/ckl/lib/python3.8/site-packages/torch/optim/optimizer.py", line 147, in load_state_dict
    raise ValueError("loaded state dict contains a parameter group "
ValueError: loaded state dict contains a parameter group that doesn't match the size of optimizer's group
